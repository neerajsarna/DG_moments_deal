(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    944867,      20668]
NotebookOptionsPosition[    933092,      20307]
NotebookOutlinePosition[    933576,      20326]
CellTagsIndexPosition[    933533,      20323]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Differential Operators in Cylindrical Coordinates", "Section"],

Cell[TextData[{
 "In tables last index corresponds to inner loop: ",
 StyleBox["Table[Table[a[[i, j]], {j,}], {i,}]", "Input"],
 " "
}], "Text",
 FontFamily->"Adobe Sans MM",
 FontSize->14,
 Background->RGBColor[0, 1, 1]],

Cell["Actual V is covariant (indices are superscripts)", "Text",
 FontFamily->"Adobe Sans MM",
 FontSize->14,
 Background->RGBColor[0, 1, 1]],

Cell[TextData[{
 "Physical coordinates require scaling with ",
 Cell[BoxData[
  FormBox[
   SqrtBox[
    RowBox[{"g", "\[LeftDoubleBracket]", 
     RowBox[{"i", ",", "i"}], "\[RightDoubleBracket]"}]], TraditionalForm]]],
 StyleBox[" ", "Input"]
}], "Text",
 FontFamily->"Adobe Sans MM",
 FontSize->14,
 Background->RGBColor[0, 1, 1]],

Cell["\<\
Attention with signs of Christoffels when calculating double gradients\
\>", "Text",
 FontFamily->"Adobe Sans MM",
 FontSize->14,
 Background->RGBColor[0, 1, 1]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"General", "::", "spell1"}], "]"}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell["Assumptions, coordinates and parametrization:", "Subsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ass", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", ">", "0"}], ",", 
     RowBox[{"0", "<", "\[Theta]", "<", "\[Pi]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "\[CurlyPhi]", "<", 
      RowBox[{"2", "*", "\[Pi]"}]}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "\[CurlyPhi]", ",", "r", ",", "z"}], "}"}], 
      "\[Element]", "Reals"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"$Assumptions", "=", "Ass"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xx", "=", 
   RowBox[{"{", 
    RowBox[{"r", ",", "\[Theta]", ",", "z"}], "}"}]}], ";", " ", 
  RowBox[{"n", "=", "3"}], ";", " ", 
  RowBox[{
   SubscriptBox["n", "0"], "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", "*", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
     RowBox[{"r", "*", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "z"}], "}"}]}], 
  ";"}]}], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Coordinate basis (Jacobian), inverse Jacobian, metric, inverse metric, \
Christoffel symbols und volume measure:\
\>", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"e", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Simplify", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"xx", "[", 
            RowBox[{"[", "\[Mu]", "]"}], "]"}]], " ", 
          RowBox[{"P", "[", 
           RowBox[{"[", "\[Nu]", "]"}], "]"}]}], ",", "Ass"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Mu]", ",", 
         SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Nu]", ",", 
       SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"J", "=", "e"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ji", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Inverse", "[", "J", "]"}], ",", "Ass"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", "J", "]"}], ".", "J"}], ",", "Ass"}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gi", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Inverse", "[", "g", "]"}], ",", "Ass"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sdetg", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     SqrtBox[
      RowBox[{"Abs", "[", 
       RowBox[{"Det", "[", "g", "]"}], "]"}]], ",", "Ass"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalGamma]", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            FractionBox["1", "2"], "*", 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"\[Sigma]", "=", 
               SubscriptBox["n", "0"]}], "n"], 
             RowBox[{
              RowBox[{"gi", "[", 
               RowBox[{"[", 
                RowBox[{"\[Lambda]", ",", "\[Sigma]"}], "]"}], "]"}], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SubscriptBox["\[PartialD]", 
                  RowBox[{
                  "xx", "\[LeftDoubleBracket]", "\[Mu]", 
                   "\[RightDoubleBracket]"}]], " ", 
                 RowBox[{"g", "[", 
                  RowBox[{"[", 
                   RowBox[{"\[Sigma]", ",", "\[Nu]"}], "]"}], "]"}]}], "+", 
                RowBox[{
                 SubscriptBox["\[PartialD]", 
                  RowBox[{
                  "xx", "\[LeftDoubleBracket]", "\[Nu]", 
                   "\[RightDoubleBracket]"}]], " ", 
                 RowBox[{"g", "[", 
                  RowBox[{"[", 
                   RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], "]"}]}], "-", 
                RowBox[{
                 SubscriptBox["\[PartialD]", 
                  RowBox[{
                  "xx", "\[LeftDoubleBracket]", "\[Sigma]", 
                   "\[RightDoubleBracket]"}]], " ", 
                 RowBox[{"g", "\[LeftDoubleBracket]", 
                  RowBox[{"\[Mu]", ",", "\[Nu]"}], 
                  "\[RightDoubleBracket]"}]}]}], ")"}]}]}]}], ",", "Ass"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Nu]", ",", 
           SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Mu]", ",", 
         SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Lambda]", ",", 
       SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", "g"}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     SuperscriptBox["r", "2"], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6710136814776*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["gi"], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", 
      SuperscriptBox["r", "2"]], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.671013681512162*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["\[CapitalGamma]"], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "r"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       FractionBox["1", "r"], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "r"], ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.671013681544519*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"\[CapitalGamma]", "\[LeftDoubleBracket]", 
    RowBox[{"i", ",", "2", ",", "l"}], "\[RightDoubleBracket]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"l", ",", "1", ",", "3"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "r"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "r"], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.671013681577836*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Gradient and Laplacian of a scalar function:", "Subsection"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"V", "=", 
   RowBox[{"A", "[", "x1", "]"}]}], "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"GradV", "[", "V_", "]"}], "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Simplify", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[PartialD]", 
          RowBox[{"x", "[", 
           RowBox[{"[", "i", "]"}], "]"}]], " ", "V"}], ",", "Ass"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}]}], ";"}], 
  "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Grad0", "[", "S_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"temp", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Simplify", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"xx", "[", 
            RowBox[{"[", "i", "]"}], "]"}]], " ", "S"}], ",", "Ass"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}]}], ";", 
    RowBox[{"Expand", "[", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          SqrtBox[
           RowBox[{"gi", "\[LeftDoubleBracket]", 
            RowBox[{"i", ",", "i"}], "\[RightDoubleBracket]"}]], 
          RowBox[{
          "temp", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", "Ass"}], 
      "]"}], "]"}]}], ")"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grad0", "[", 
  RowBox[{"S", "[", 
   RowBox[{"r", ",", "\[Theta]", ",", "z"}], "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["S", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"r", ",", "\[Theta]", ",", "z"}], "]"}], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["S", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"r", ",", "\[Theta]", ",", "z"}], "]"}], "r"], ",", 
   RowBox[{
    SuperscriptBox["S", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"r", ",", "\[Theta]", ",", "z"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.67101368168187*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Laplace0", "[", "S_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"temp1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Simplify", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"xx", "[", 
            RowBox[{"[", "i", "]"}], "]"}]], " ", "S"}], ",", "Ass"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}]}], ";", 
    RowBox[{"temp2", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             SubscriptBox["\[PartialD]", 
              RowBox[{"xx", "[", 
               RowBox[{"[", "k", "]"}], "]"}]], " ", 
             RowBox[{"temp1", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "-", 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"\[Sigma]", "=", 
               SubscriptBox["n", "0"]}], "n"], 
             RowBox[{
              RowBox[{"\[CapitalGamma]", "[", 
               RowBox[{"[", 
                RowBox[{"\[Sigma]", ",", "i", ",", "k"}], "]"}], "]"}], "*", 
              RowBox[{"temp1", "[", 
               RowBox[{"[", "\[Sigma]", "]"}], "]"}]}]}]}], ",", "Ass"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", 
           SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}]}], ";", 
    RowBox[{"Expand", "[", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"gi", "\[LeftDoubleBracket]", 
          RowBox[{"k", ",", "k"}], "\[RightDoubleBracket]"}], 
         RowBox[{"temp2", "\[LeftDoubleBracket]", 
          RowBox[{"k", ",", "k"}], "\[RightDoubleBracket]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}]}], 
   ")"}]}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Gradient, Divergence and Laplacian of a vector field :", "Subsection"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"V", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         SqrtBox[
          RowBox[{"g", "\[LeftDoubleBracket]", 
           RowBox[{"i", ",", "i"}], "\[RightDoubleBracket]"}]], ")"}], 
        RowBox[{"-", "1"}]], 
       RowBox[{
        SubscriptBox["A", "i"], "[", "x1", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], "]"}]}], 
  "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"GradV", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Simplify", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["\[PartialD]", 
             RowBox[{"x", "[", 
              RowBox[{"[", "k", "]"}], "]"}]], " ", 
            RowBox[{"V", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "+", 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"\[Sigma]", "=", 
              SubscriptBox["n", "0"]}], "n"], 
            RowBox[{
             RowBox[{"\[CapitalGamma]", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "\[Sigma]", ",", "k"}], "]"}], "]"}], "*", 
             RowBox[{"V", "[", 
              RowBox[{"[", "\[Sigma]", "]"}], "]"}]}]}]}], ",", "Ass"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}]}], ";"}], 
  "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Expand", "[", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          SqrtBox[
           RowBox[{"g", "\[LeftDoubleBracket]", 
            RowBox[{"i", ",", "i"}], "\[RightDoubleBracket]"}]], 
          SqrtBox[
           RowBox[{"gi", "\[LeftDoubleBracket]", 
            RowBox[{"k", ",", "k"}], "\[RightDoubleBracket]"}]], 
          RowBox[{"GradV", "\[LeftDoubleBracket]", 
           RowBox[{"i", ",", "k"}], "\[RightDoubleBracket]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", "Ass"}], 
    "]"}], "]"}], "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Grad1", "[", "V_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"temp", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           SqrtBox[
            RowBox[{"g", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "i"}], "\[RightDoubleBracket]"}]], ")"}], 
          RowBox[{"-", "1"}]], 
         RowBox[{
         "V", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], "]"}]}], ";", 
    RowBox[{"temp1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             SubscriptBox["\[PartialD]", 
              RowBox[{"xx", "[", 
               RowBox[{"[", "k", "]"}], "]"}]], " ", 
             RowBox[{"temp", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "+", 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"\[Sigma]", "=", 
               SubscriptBox["n", "0"]}], "n"], 
             RowBox[{
              RowBox[{"\[CapitalGamma]", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "\[Sigma]", ",", "k"}], "]"}], "]"}], "*", 
              RowBox[{"temp", "[", 
               RowBox[{"[", "\[Sigma]", "]"}], "]"}]}]}]}], ",", "Ass"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", 
           SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}]}], ";", 
    RowBox[{"Expand", "[", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            SqrtBox[
             RowBox[{"g", "\[LeftDoubleBracket]", 
              RowBox[{"i", ",", "i"}], "\[RightDoubleBracket]"}]], 
            SqrtBox[
             RowBox[{"gi", "\[LeftDoubleBracket]", 
              RowBox[{"k", ",", "k"}], "\[RightDoubleBracket]"}]], 
            RowBox[{"temp1", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "k"}], "\[RightDoubleBracket]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", "Ass"}], 
      "]"}], "]"}]}], ")"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Div1", "[", "V_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"temp", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           SqrtBox[
            RowBox[{"g", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "i"}], "\[RightDoubleBracket]"}]], ")"}], 
          RowBox[{"-", "1"}]], 
         RowBox[{
         "V", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], "]"}]}], ";", 
    RowBox[{"temp1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             SubscriptBox["\[PartialD]", 
              RowBox[{"xx", "[", 
               RowBox[{"[", "k", "]"}], "]"}]], " ", 
             RowBox[{"temp", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "+", 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"\[Sigma]", "=", 
               SubscriptBox["n", "0"]}], "n"], 
             RowBox[{
              RowBox[{"\[CapitalGamma]", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "\[Sigma]", ",", "k"}], "]"}], "]"}], "*", 
              RowBox[{"temp", "[", 
               RowBox[{"[", "\[Sigma]", "]"}], "]"}]}]}]}], ",", "Ass"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", 
           SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}]}], ";", 
    RowBox[{"Expand", "[", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"temp1", "\[LeftDoubleBracket]", 
         RowBox[{"k", ",", "k"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}]}], 
   ")"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Laplace1", "[", "V_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"temp", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           SqrtBox[
            RowBox[{"g", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "i"}], "\[RightDoubleBracket]"}]], ")"}], 
          RowBox[{"-", "1"}]], 
         RowBox[{
         "V", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], "]"}]}], ";", 
    RowBox[{"temp1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             SubscriptBox["\[PartialD]", 
              RowBox[{"xx", "[", 
               RowBox[{"[", "k", "]"}], "]"}]], " ", 
             RowBox[{"temp", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "+", 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"\[Sigma]", "=", 
               SubscriptBox["n", "0"]}], "n"], 
             RowBox[{
              RowBox[{"\[CapitalGamma]", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "\[Sigma]", ",", "k"}], "]"}], "]"}], "*", 
              RowBox[{"temp", "[", 
               RowBox[{"[", "\[Sigma]", "]"}], "]"}]}]}]}], ",", "Ass"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", 
           SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}]}], ";", 
    RowBox[{"temp2", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Simplify", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               SubscriptBox["\[PartialD]", 
                RowBox[{"xx", "[", 
                 RowBox[{"[", "k", "]"}], "]"}]], " ", 
               RowBox[{"temp1", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "+", 
              RowBox[{
               UnderoverscriptBox["\[Sum]", 
                RowBox[{"\[Sigma]", "=", 
                 SubscriptBox["n", "0"]}], "n"], 
               RowBox[{
                RowBox[{"\[CapitalGamma]", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "\[Sigma]", ",", "k"}], "]"}], "]"}], "*", 
                RowBox[{"temp1", "[", 
                 RowBox[{"[", 
                  RowBox[{"\[Sigma]", ",", "j"}], "]"}], "]"}]}]}], "-", 
              RowBox[{
               UnderoverscriptBox["\[Sum]", 
                RowBox[{"\[Sigma]", "=", 
                 SubscriptBox["n", "0"]}], "n"], 
               RowBox[{
                RowBox[{"\[CapitalGamma]", "[", 
                 RowBox[{"[", 
                  RowBox[{"\[Sigma]", ",", "j", ",", "k"}], "]"}], "]"}], "*", 
                RowBox[{"temp1", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "\[Sigma]"}], "]"}], "]"}]}]}]}], ",", 
             "Ass"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", 
             SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}]}], ";", 
    RowBox[{"Expand", "[", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         SqrtBox[
          RowBox[{"g", "\[LeftDoubleBracket]", 
           RowBox[{"i", ",", "i"}], "\[RightDoubleBracket]"}]], 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"gi", "\[LeftDoubleBracket]", 
             RowBox[{"k", ",", "k"}], "\[RightDoubleBracket]"}], 
            RowBox[{"temp2", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "k", ",", "k"}], "\[RightDoubleBracket]"}]}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}]}], 
   ")"}]}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Divergence and Laplace of rank 2 tensor :", "Subsection"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"V", "=", 
    RowBox[{"Simplify", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            SqrtBox[
             RowBox[{
              RowBox[{"g", "\[LeftDoubleBracket]", 
               RowBox[{"i", ",", "i"}], "\[RightDoubleBracket]"}], 
              RowBox[{"g", "\[LeftDoubleBracket]", 
               RowBox[{"j", ",", "j"}], "\[RightDoubleBracket]"}]}]], ")"}], 
           RowBox[{"-", "1"}]], 
          RowBox[{
           SubscriptBox["A", 
            RowBox[{"i", ",", "j"}]], "[", "x", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], "]"}]}], ";"}], 
  "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"GradV", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Simplify", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              SubscriptBox["\[PartialD]", 
               RowBox[{"x", "[", 
                RowBox[{"[", "k", "]"}], "]"}]], " ", 
              RowBox[{"V", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "+", 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"\[Sigma]", "=", 
                SubscriptBox["n", "0"]}], "n"], 
              RowBox[{
               RowBox[{"\[CapitalGamma]", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "\[Sigma]", ",", "k"}], "]"}], "]"}], "*", 
               
               RowBox[{"V", "[", 
                RowBox[{"[", 
                 RowBox[{"\[Sigma]", ",", "j"}], "]"}], "]"}]}]}], "+", 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"\[Sigma]", "=", 
                SubscriptBox["n", "0"]}], "n"], 
              RowBox[{
               RowBox[{"\[CapitalGamma]", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", "\[Sigma]", ",", "k"}], "]"}], "]"}], "*", 
               
               RowBox[{"V", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "\[Sigma]"}], "]"}], "]"}]}]}]}], ",", 
            "Ass"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", 
            SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", 
          SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}]}], ";"}], 
  "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Expand", "[", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           SqrtBox[
            RowBox[{
             RowBox[{"g", "\[LeftDoubleBracket]", 
              RowBox[{"i", ",", "i"}], "\[RightDoubleBracket]"}], 
             RowBox[{"g", "\[LeftDoubleBracket]", 
              RowBox[{"j", ",", "j"}], "\[RightDoubleBracket]"}], 
             RowBox[{"gi", "\[LeftDoubleBracket]", 
              RowBox[{"k", ",", "k"}], "\[RightDoubleBracket]"}]}]], 
           RowBox[{"GradV", "\[LeftDoubleBracket]", 
            RowBox[{"i", ",", "j", ",", "k"}], "\[RightDoubleBracket]"}]}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}], 
  "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"DivV", "=", 
   RowBox[{"Expand", "[", 
    RowBox[{"Simplify", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SqrtBox[
         RowBox[{"g", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "i"}], "\[RightDoubleBracket]"}]], 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"GradV", "\[LeftDoubleBracket]", 
           RowBox[{"i", ",", "k", ",", "k"}], "\[RightDoubleBracket]"}], ",", 
          
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}]}], 
  "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"GradGradV", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Simplify", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                SubscriptBox["\[PartialD]", 
                 RowBox[{
                 "x", "\[LeftDoubleBracket]", "l", "\[RightDoubleBracket]"}]],
                 " ", 
                RowBox[{"GradV", "\[LeftDoubleBracket]", 
                 RowBox[{"i", ",", "j", ",", "k"}], 
                 "\[RightDoubleBracket]"}]}], "+", 
               RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"\[Sigma]", "=", 
                  SubscriptBox["n", "0"]}], "n"], 
                RowBox[{
                 RowBox[{"\[CapitalGamma]", "\[LeftDoubleBracket]", 
                  RowBox[{"i", ",", "\[Sigma]", ",", "l"}], 
                  "\[RightDoubleBracket]"}], 
                 RowBox[{"GradV", "\[LeftDoubleBracket]", 
                  RowBox[{"\[Sigma]", ",", "j", ",", "k"}], 
                  "\[RightDoubleBracket]"}]}]}], "+", 
               RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"\[Sigma]", "=", 
                  SubscriptBox["n", "0"]}], "n"], 
                RowBox[{
                 RowBox[{"\[CapitalGamma]", "\[LeftDoubleBracket]", 
                  RowBox[{"j", ",", "\[Sigma]", ",", "l"}], 
                  "\[RightDoubleBracket]"}], 
                 RowBox[{"GradV", "\[LeftDoubleBracket]", 
                  RowBox[{"i", ",", "\[Sigma]", ",", "k"}], 
                  "\[RightDoubleBracket]"}]}]}], "-", 
               RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"\[Sigma]", "=", 
                  SubscriptBox["n", "0"]}], "n"], 
                RowBox[{
                 RowBox[{"\[CapitalGamma]", "\[LeftDoubleBracket]", 
                  RowBox[{"\[Sigma]", ",", "k", ",", "l"}], 
                  "\[RightDoubleBracket]"}], 
                 RowBox[{"GradV", "\[LeftDoubleBracket]", 
                  RowBox[{"i", ",", "j", ",", "\[Sigma]"}], 
                  "\[RightDoubleBracket]"}]}]}]}], ",", "Ass"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"l", ",", 
              SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", 
            SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", 
          SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}]}], ";"}], 
  "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"LaplaceV", "=", 
   RowBox[{"Expand", "[", 
    RowBox[{"Simplify", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          SqrtBox[
           RowBox[{
            RowBox[{"g", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "i"}], "\[RightDoubleBracket]"}], 
            RowBox[{"g", "\[LeftDoubleBracket]", 
             RowBox[{"j", ",", "j"}], "\[RightDoubleBracket]"}]}]], 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"gi", "\[LeftDoubleBracket]", 
              RowBox[{"k", ",", "k"}], "\[RightDoubleBracket]"}], 
             RowBox[{"GradGradV", "\[LeftDoubleBracket]", 
              RowBox[{"i", ",", "j", ",", "k", ",", "k"}], 
              "\[RightDoubleBracket]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}]}], 
  "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Div2", "[", "V_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"temp", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             SqrtBox[
              RowBox[{
               RowBox[{"g", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "i"}], "\[RightDoubleBracket]"}], 
               RowBox[{"g", "\[LeftDoubleBracket]", 
                RowBox[{"j", ",", "j"}], "\[RightDoubleBracket]"}]}]], ")"}], 
            
            RowBox[{"-", "1"}]], 
           RowBox[{"V", "\[LeftDoubleBracket]", 
            RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], "]"}]}], ";", 
    RowBox[{"temp1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Simplify", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               SubscriptBox["\[PartialD]", 
                RowBox[{
                "xx", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]],
                " ", 
               RowBox[{"temp", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}]}], "+", 
              RowBox[{
               UnderoverscriptBox["\[Sum]", 
                RowBox[{"\[Sigma]", "=", 
                 SubscriptBox["n", "0"]}], "n"], 
               RowBox[{
                RowBox[{"\[CapitalGamma]", "\[LeftDoubleBracket]", 
                 RowBox[{"i", ",", "\[Sigma]", ",", "k"}], 
                 "\[RightDoubleBracket]"}], 
                RowBox[{"temp", "\[LeftDoubleBracket]", 
                 RowBox[{"\[Sigma]", ",", "j"}], 
                 "\[RightDoubleBracket]"}]}]}], "+", 
              RowBox[{
               UnderoverscriptBox["\[Sum]", 
                RowBox[{"\[Sigma]", "=", 
                 SubscriptBox["n", "0"]}], "n"], 
               RowBox[{
                RowBox[{"\[CapitalGamma]", "\[LeftDoubleBracket]", 
                 RowBox[{"j", ",", "\[Sigma]", ",", "k"}], 
                 "\[RightDoubleBracket]"}], 
                RowBox[{"temp", "\[LeftDoubleBracket]", 
                 RowBox[{"i", ",", "\[Sigma]"}], 
                 "\[RightDoubleBracket]"}]}]}]}], ",", "Ass"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", 
             SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}]}], ";", 
    RowBox[{"Expand", "[", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         SqrtBox[
          RowBox[{"g", "\[LeftDoubleBracket]", 
           RowBox[{"i", ",", "i"}], "\[RightDoubleBracket]"}]], 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"temp1", "\[LeftDoubleBracket]", 
            RowBox[{"i", ",", "k", ",", "k"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}]}], 
   ")"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"S", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"i", ",", "j"}], "]"}], "[", 
      RowBox[{"r", ",", "z"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "3"}], "}"}]}], "]"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"1", ",", "1"}], "]"}], "[", 
      RowBox[{"r", ",", "z"}], "]"}], ",", 
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"1", ",", "2"}], "]"}], "[", 
      RowBox[{"r", ",", "z"}], "]"}], ",", 
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"1", ",", "3"}], "]"}], "[", 
      RowBox[{"r", ",", "z"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"2", ",", "1"}], "]"}], "[", 
      RowBox[{"r", ",", "z"}], "]"}], ",", 
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"2", ",", "2"}], "]"}], "[", 
      RowBox[{"r", ",", "z"}], "]"}], ",", 
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"2", ",", "3"}], "]"}], "[", 
      RowBox[{"r", ",", "z"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"3", ",", "1"}], "]"}], "[", 
      RowBox[{"r", ",", "z"}], "]"}], ",", 
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"3", ",", "2"}], "]"}], "[", 
      RowBox[{"r", ",", "z"}], "]"}], ",", 
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"3", ",", "3"}], "]"}], "[", 
      RowBox[{"r", ",", "z"}], "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.671013682361911*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Div2", "[", "S", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"1", ",", "1"}], "]"}], "[", 
      RowBox[{"r", ",", "z"}], "]"}], "r"], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"2", ",", "2"}], "]"}], "[", 
      RowBox[{"r", ",", "z"}], "]"}], "r"], "+", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"s", "[", 
       RowBox[{"1", ",", "3"}], "]"}], 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"r", ",", "z"}], "]"}], "+", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"s", "[", 
       RowBox[{"1", ",", "1"}], "]"}], 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"r", ",", "z"}], "]"}]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"1", ",", "2"}], "]"}], "[", 
      RowBox[{"r", ",", "z"}], "]"}], "r"], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"2", ",", "1"}], "]"}], "[", 
      RowBox[{"r", ",", "z"}], "]"}], "r"], "+", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"s", "[", 
       RowBox[{"2", ",", "3"}], "]"}], 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"r", ",", "z"}], "]"}], "+", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"s", "[", 
       RowBox[{"2", ",", "1"}], "]"}], 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"r", ",", "z"}], "]"}]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"3", ",", "1"}], "]"}], "[", 
      RowBox[{"r", ",", "z"}], "]"}], "r"], "+", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"s", "[", 
       RowBox[{"3", ",", "3"}], "]"}], 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"r", ",", "z"}], "]"}], "+", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"s", "[", 
       RowBox[{"3", ",", "1"}], "]"}], 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"r", ",", "z"}], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.671013682414905*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Grad2", "[", "V_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"temp", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             SqrtBox[
              RowBox[{
               RowBox[{"g", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "i"}], "\[RightDoubleBracket]"}], 
               RowBox[{"g", "\[LeftDoubleBracket]", 
                RowBox[{"j", ",", "j"}], "\[RightDoubleBracket]"}]}]], ")"}], 
            
            RowBox[{"-", "1"}]], 
           RowBox[{"V", "\[LeftDoubleBracket]", 
            RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], "]"}]}], ";", 
    RowBox[{"temp1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Simplify", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               SubscriptBox["\[PartialD]", 
                RowBox[{
                "xx", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]],
                " ", 
               RowBox[{"temp", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}]}], "+", 
              RowBox[{
               UnderoverscriptBox["\[Sum]", 
                RowBox[{"\[Sigma]", "=", 
                 SubscriptBox["n", "0"]}], "n"], 
               RowBox[{
                RowBox[{"\[CapitalGamma]", "\[LeftDoubleBracket]", 
                 RowBox[{"i", ",", "\[Sigma]", ",", "k"}], 
                 "\[RightDoubleBracket]"}], 
                RowBox[{"temp", "\[LeftDoubleBracket]", 
                 RowBox[{"\[Sigma]", ",", "j"}], 
                 "\[RightDoubleBracket]"}]}]}], "+", 
              RowBox[{
               UnderoverscriptBox["\[Sum]", 
                RowBox[{"\[Sigma]", "=", 
                 SubscriptBox["n", "0"]}], "n"], 
               RowBox[{
                RowBox[{"\[CapitalGamma]", "\[LeftDoubleBracket]", 
                 RowBox[{"j", ",", "\[Sigma]", ",", "k"}], 
                 "\[RightDoubleBracket]"}], 
                RowBox[{"temp", "\[LeftDoubleBracket]", 
                 RowBox[{"i", ",", "\[Sigma]"}], 
                 "\[RightDoubleBracket]"}]}]}]}], ",", "Ass"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", 
             SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}]}], ";", 
    RowBox[{"Expand", "[", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             SqrtBox[
              RowBox[{"g", "\[LeftDoubleBracket]", 
               RowBox[{"i", ",", "i"}], "\[RightDoubleBracket]"}]], 
             SqrtBox[
              RowBox[{"g", "\[LeftDoubleBracket]", 
               RowBox[{"j", ",", "j"}], "\[RightDoubleBracket]"}]], 
             SqrtBox[
              RowBox[{"gi", "\[LeftDoubleBracket]", 
               RowBox[{"k", ",", "k"}], "\[RightDoubleBracket]"}]], 
             RowBox[{"temp1", "\[LeftDoubleBracket]", 
              RowBox[{"i", ",", "j", ",", "k"}], "\[RightDoubleBracket]"}]}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}]}], 
   ")"}]}]], "Input"],

Cell[BoxData["\[IndentingNewLine]"], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Laplace2", "[", "V_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"temp", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             SqrtBox[
              RowBox[{
               RowBox[{"g", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "i"}], "\[RightDoubleBracket]"}], 
               RowBox[{"g", "\[LeftDoubleBracket]", 
                RowBox[{"j", ",", "j"}], "\[RightDoubleBracket]"}]}]], ")"}], 
            
            RowBox[{"-", "1"}]], 
           RowBox[{"V", "\[LeftDoubleBracket]", 
            RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], "]"}]}], ";", 
    RowBox[{"temp1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Simplify", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               SubscriptBox["\[PartialD]", 
                RowBox[{
                "xx", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]],
                " ", 
               RowBox[{"temp", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}]}], "+", 
              RowBox[{
               UnderoverscriptBox["\[Sum]", 
                RowBox[{"\[Sigma]", "=", 
                 SubscriptBox["n", "0"]}], "n"], 
               RowBox[{
                RowBox[{"\[CapitalGamma]", "\[LeftDoubleBracket]", 
                 RowBox[{"i", ",", "\[Sigma]", ",", "k"}], 
                 "\[RightDoubleBracket]"}], 
                RowBox[{"temp", "\[LeftDoubleBracket]", 
                 RowBox[{"\[Sigma]", ",", "j"}], 
                 "\[RightDoubleBracket]"}]}]}], "+", 
              RowBox[{
               UnderoverscriptBox["\[Sum]", 
                RowBox[{"\[Sigma]", "=", 
                 SubscriptBox["n", "0"]}], "n"], 
               RowBox[{
                RowBox[{"\[CapitalGamma]", "\[LeftDoubleBracket]", 
                 RowBox[{"j", ",", "\[Sigma]", ",", "k"}], 
                 "\[RightDoubleBracket]"}], 
                RowBox[{"temp", "\[LeftDoubleBracket]", 
                 RowBox[{"i", ",", "\[Sigma]"}], 
                 "\[RightDoubleBracket]"}]}]}]}], ",", "Ass"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", 
             SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}]}], ";", 
    RowBox[{"temp2", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Simplify", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 SubscriptBox["\[PartialD]", 
                  RowBox[{
                  "xx", "\[LeftDoubleBracket]", "l", 
                   "\[RightDoubleBracket]"}]], " ", 
                 RowBox[{"temp1", "\[LeftDoubleBracket]", 
                  RowBox[{"i", ",", "j", ",", "k"}], 
                  "\[RightDoubleBracket]"}]}], "+", 
                RowBox[{
                 UnderoverscriptBox["\[Sum]", 
                  RowBox[{"\[Sigma]", "=", 
                   SubscriptBox["n", "0"]}], "n"], 
                 RowBox[{
                  RowBox[{"\[CapitalGamma]", "\[LeftDoubleBracket]", 
                   RowBox[{"i", ",", "\[Sigma]", ",", "l"}], 
                   "\[RightDoubleBracket]"}], 
                  RowBox[{"temp1", "\[LeftDoubleBracket]", 
                   RowBox[{"\[Sigma]", ",", "j", ",", "k"}], 
                   "\[RightDoubleBracket]"}]}]}], "+", 
                RowBox[{
                 UnderoverscriptBox["\[Sum]", 
                  RowBox[{"\[Sigma]", "=", 
                   SubscriptBox["n", "0"]}], "n"], 
                 RowBox[{
                  RowBox[{"\[CapitalGamma]", "\[LeftDoubleBracket]", 
                   RowBox[{"j", ",", "\[Sigma]", ",", "l"}], 
                   "\[RightDoubleBracket]"}], 
                  RowBox[{"temp1", "\[LeftDoubleBracket]", 
                   RowBox[{"i", ",", "\[Sigma]", ",", "k"}], 
                   "\[RightDoubleBracket]"}]}]}], "-", 
                RowBox[{
                 UnderoverscriptBox["\[Sum]", 
                  RowBox[{"\[Sigma]", "=", 
                   SubscriptBox["n", "0"]}], "n"], 
                 RowBox[{
                  RowBox[{"\[CapitalGamma]", "\[LeftDoubleBracket]", 
                   RowBox[{"\[Sigma]", ",", "k", ",", "l"}], 
                   "\[RightDoubleBracket]"}], 
                  RowBox[{"temp1", "\[LeftDoubleBracket]", 
                   RowBox[{"i", ",", "j", ",", "\[Sigma]"}], 
                   "\[RightDoubleBracket]"}]}]}]}], ",", "Ass"}], "]"}], ",", 
             
             RowBox[{"{", 
              RowBox[{"l", ",", 
               SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", 
             SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}]}], ";", 
    RowBox[{"Expand", "[", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           SqrtBox[
            RowBox[{"g", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "i"}], "\[RightDoubleBracket]"}]], " ", 
           SqrtBox[
            RowBox[{"g", "\[LeftDoubleBracket]", 
             RowBox[{"j", ",", "j"}], "\[RightDoubleBracket]"}]], 
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"gi", "\[LeftDoubleBracket]", 
               RowBox[{"k", ",", "k"}], "\[RightDoubleBracket]"}], 
              RowBox[{"temp2", "\[LeftDoubleBracket]", 
               RowBox[{"i", ",", "j", ",", "k", ",", "k"}], 
               "\[RightDoubleBracket]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}]}], 
   ")"}]}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Divergence and Laplace of rank 3 tensor :", "Subsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Div3", "[", "V_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"temp", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               SqrtBox[
                RowBox[{
                 RowBox[{"g", "\[LeftDoubleBracket]", 
                  RowBox[{"i", ",", "i"}], "\[RightDoubleBracket]"}], 
                 RowBox[{"g", "\[LeftDoubleBracket]", 
                  RowBox[{"j", ",", "j"}], "\[RightDoubleBracket]"}], 
                 RowBox[{"g", "\[LeftDoubleBracket]", 
                  RowBox[{"k", ",", "k"}], "\[RightDoubleBracket]"}]}]], 
               ")"}], 
              RowBox[{"-", "1"}]], 
             RowBox[{"V", "\[LeftDoubleBracket]", 
              RowBox[{"i", ",", "j", ",", "k"}], "\[RightDoubleBracket]"}]}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], "]"}]}], ";", 
    RowBox[{"temp1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Simplify", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 SubscriptBox["\[PartialD]", 
                  RowBox[{
                  "xx", "\[LeftDoubleBracket]", "l", 
                   "\[RightDoubleBracket]"}]], " ", 
                 RowBox[{"temp", "\[LeftDoubleBracket]", 
                  RowBox[{"i", ",", "j", ",", "k"}], 
                  "\[RightDoubleBracket]"}]}], "+", 
                RowBox[{
                 UnderoverscriptBox["\[Sum]", 
                  RowBox[{"\[Sigma]", "=", 
                   SubscriptBox["n", "0"]}], "n"], 
                 RowBox[{
                  RowBox[{"\[CapitalGamma]", "\[LeftDoubleBracket]", 
                   RowBox[{"i", ",", "\[Sigma]", ",", "l"}], 
                   "\[RightDoubleBracket]"}], 
                  RowBox[{"temp", "\[LeftDoubleBracket]", 
                   RowBox[{"\[Sigma]", ",", "j", ",", "k"}], 
                   "\[RightDoubleBracket]"}]}]}], "+", 
                RowBox[{
                 UnderoverscriptBox["\[Sum]", 
                  RowBox[{"\[Sigma]", "=", 
                   SubscriptBox["n", "0"]}], "n"], 
                 RowBox[{
                  RowBox[{"\[CapitalGamma]", "\[LeftDoubleBracket]", 
                   RowBox[{"j", ",", "\[Sigma]", ",", "l"}], 
                   "\[RightDoubleBracket]"}], 
                  RowBox[{"temp", "\[LeftDoubleBracket]", 
                   RowBox[{"i", ",", "\[Sigma]", ",", "k"}], 
                   "\[RightDoubleBracket]"}]}]}], "+", 
                RowBox[{
                 UnderoverscriptBox["\[Sum]", 
                  RowBox[{"\[Sigma]", "=", 
                   SubscriptBox["n", "0"]}], "n"], 
                 RowBox[{
                  RowBox[{"\[CapitalGamma]", "\[LeftDoubleBracket]", 
                   RowBox[{"k", ",", "\[Sigma]", ",", "l"}], 
                   "\[RightDoubleBracket]"}], 
                  RowBox[{"temp", "\[LeftDoubleBracket]", 
                   RowBox[{"i", ",", "j", ",", "\[Sigma]"}], 
                   "\[RightDoubleBracket]"}]}]}]}], ",", "Ass"}], "]"}], ",", 
             
             RowBox[{"{", 
              RowBox[{"l", ",", 
               SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", 
             SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}]}], ";", 
    RowBox[{"Expand", "[", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           SqrtBox[
            RowBox[{
             RowBox[{"g", "\[LeftDoubleBracket]", 
              RowBox[{"i", ",", "i"}], "\[RightDoubleBracket]"}], 
             RowBox[{"g", "\[LeftDoubleBracket]", 
              RowBox[{"j", ",", "j"}], "\[RightDoubleBracket]"}]}]], 
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{"temp1", "\[LeftDoubleBracket]", 
              RowBox[{"i", ",", "j", ",", "k", ",", "k"}], 
              "\[RightDoubleBracket]"}], ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}]}], 
   ")"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"S", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"s", "[", 
      RowBox[{"i", ",", "j", ",", "k"}], "]"}], "[", "r", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "1", ",", "1"}], "]"}], "[", "r", "]"}], ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "1", ",", "2"}], "]"}], "[", "r", "]"}], ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "1", ",", "3"}], "]"}], "[", "r", "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "2", ",", "1"}], "]"}], "[", "r", "]"}], ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "2", ",", "2"}], "]"}], "[", "r", "]"}], ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "2", ",", "3"}], "]"}], "[", "r", "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "3", ",", "1"}], "]"}], "[", "r", "]"}], ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "3", ",", "2"}], "]"}], "[", "r", "]"}], ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "3", ",", "3"}], "]"}], "[", "r", "]"}]}], "}"}]}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "1", ",", "1"}], "]"}], "[", "r", "]"}], ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "1", ",", "2"}], "]"}], "[", "r", "]"}], ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "1", ",", "3"}], "]"}], "[", "r", "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "2", ",", "1"}], "]"}], "[", "r", "]"}], ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "2", ",", "2"}], "]"}], "[", "r", "]"}], ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "2", ",", "3"}], "]"}], "[", "r", "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "3", ",", "1"}], "]"}], "[", "r", "]"}], ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "3", ",", "2"}], "]"}], "[", "r", "]"}], ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "3", ",", "3"}], "]"}], "[", "r", "]"}]}], "}"}]}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"3", ",", "1", ",", "1"}], "]"}], "[", "r", "]"}], ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"3", ",", "1", ",", "2"}], "]"}], "[", "r", "]"}], ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"3", ",", "1", ",", "3"}], "]"}], "[", "r", "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"3", ",", "2", ",", "1"}], "]"}], "[", "r", "]"}], ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"3", ",", "2", ",", "2"}], "]"}], "[", "r", "]"}], ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"3", ",", "2", ",", "3"}], "]"}], "[", "r", "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"3", ",", "3", ",", "1"}], "]"}], "[", "r", "]"}], ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"3", ",", "3", ",", "2"}], "]"}], "[", "r", "]"}], ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"3", ",", "3", ",", "3"}], "]"}], "[", "r", "]"}]}], "}"}]}],
     "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.671013682852336*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Div3", "[", "S", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "1", ",", "1"}], "]"}], "[", "r", "]"}], "r"], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "2", ",", "2"}], "]"}], "[", "r", "]"}], "r"], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "1", ",", "2"}], "]"}], "[", "r", "]"}], "r"], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "1", ",", "1"}], "]"}], "\[Prime]",
        MultilineFunction->None], "[", "r", "]"}]}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "1", ",", "2"}], "]"}], "[", "r", "]"}], "r"], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "2", ",", "1"}], "]"}], "[", "r", "]"}], "r"], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "2", ",", "2"}], "]"}], "[", "r", "]"}], "r"], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "2", ",", "1"}], "]"}], "\[Prime]",
        MultilineFunction->None], "[", "r", "]"}]}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "3", ",", "1"}], "]"}], "[", "r", "]"}], "r"], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "3", ",", "2"}], "]"}], "[", "r", "]"}], "r"], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "3", ",", "1"}], "]"}], "\[Prime]",
        MultilineFunction->None], "[", "r", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "1", ",", "2"}], "]"}], "[", "r", "]"}], "r"], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "1", ",", "1"}], "]"}], "[", "r", "]"}], "r"], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "2", ",", "2"}], "]"}], "[", "r", "]"}], "r"], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "1", ",", "1"}], "]"}], "\[Prime]",
        MultilineFunction->None], "[", "r", "]"}]}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "2", ",", "2"}], "]"}], "[", "r", "]"}], "r"], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "1", ",", "2"}], "]"}], "[", "r", "]"}], "r"], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "2", ",", "1"}], "]"}], "[", "r", "]"}], "r"], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "2", ",", "1"}], "]"}], "\[Prime]",
        MultilineFunction->None], "[", "r", "]"}]}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "3", ",", "2"}], "]"}], "[", "r", "]"}], "r"], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "3", ",", "1"}], "]"}], "[", "r", "]"}], "r"], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "3", ",", "1"}], "]"}], "\[Prime]",
        MultilineFunction->None], "[", "r", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"3", ",", "1", ",", "1"}], "]"}], "[", "r", "]"}], "r"], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"3", ",", "2", ",", "2"}], "]"}], "[", "r", "]"}], "r"], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"s", "[", 
         RowBox[{"3", ",", "1", ",", "1"}], "]"}], "\[Prime]",
        MultilineFunction->None], "[", "r", "]"}]}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"3", ",", "1", ",", "2"}], "]"}], "[", "r", "]"}], "r"], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"3", ",", "2", ",", "1"}], "]"}], "[", "r", "]"}], "r"], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"s", "[", 
         RowBox[{"3", ",", "2", ",", "1"}], "]"}], "\[Prime]",
        MultilineFunction->None], "[", "r", "]"}]}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"3", ",", "3", ",", "1"}], "]"}], "[", "r", "]"}], "r"], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"s", "[", 
         RowBox[{"3", ",", "3", ",", "1"}], "]"}], "\[Prime]",
        MultilineFunction->None], "[", "r", "]"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6710136829480333`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"s", "[", 
     RowBox[{"1", ",", "1", ",", "1"}], "]"}], "[", "r", "]"}], "r"], "-", 
  RowBox[{"2", 
   FractionBox[
    RowBox[{
     RowBox[{"s", "[", 
      RowBox[{"1", ",", "2", ",", "2"}], "]"}], "[", "r", "]"}], "r"]}], "+", 
  
  RowBox[{
   SuperscriptBox[
    RowBox[{"s", "[", 
     RowBox[{"1", ",", "1", ",", "1"}], "]"}], "\[Prime]",
    MultilineFunction->None], "[", "r", "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"s", "[", 
     RowBox[{"1", ",", "1", ",", "1"}], "]"}], "[", "r", "]"}], "r"], "-", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{
     RowBox[{"s", "[", 
      RowBox[{"1", ",", "2", ",", "2"}], "]"}], "[", "r", "]"}]}], "r"], "+", 
  
  RowBox[{
   SuperscriptBox[
    RowBox[{"s", "[", 
     RowBox[{"1", ",", "1", ",", "1"}], "]"}], "\[Prime]",
    MultilineFunction->None], "[", "r", "]"}]}]], "Output",
 CellChangeTimes->{3.67101368297211*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Grad3", "[", "V_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"temp", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               SqrtBox[
                RowBox[{
                 RowBox[{"g", "\[LeftDoubleBracket]", 
                  RowBox[{"i", ",", "i"}], "\[RightDoubleBracket]"}], 
                 RowBox[{"g", "\[LeftDoubleBracket]", 
                  RowBox[{"j", ",", "j"}], "\[RightDoubleBracket]"}], 
                 RowBox[{"g", "\[LeftDoubleBracket]", 
                  RowBox[{"k", ",", "k"}], "\[RightDoubleBracket]"}]}]], 
               ")"}], 
              RowBox[{"-", "1"}]], 
             RowBox[{"V", "\[LeftDoubleBracket]", 
              RowBox[{"i", ",", "j", ",", "k"}], "\[RightDoubleBracket]"}]}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], "]"}]}], ";", 
    RowBox[{"temp1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Simplify", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 SubscriptBox["\[PartialD]", 
                  RowBox[{
                  "x", "\[LeftDoubleBracket]", "l", 
                   "\[RightDoubleBracket]"}]], " ", 
                 RowBox[{"temp", "\[LeftDoubleBracket]", 
                  RowBox[{"i", ",", "j", ",", "k"}], 
                  "\[RightDoubleBracket]"}]}], "+", 
                RowBox[{
                 UnderoverscriptBox["\[Sum]", 
                  RowBox[{"\[Sigma]", "=", 
                   SubscriptBox["n", "0"]}], "n"], 
                 RowBox[{
                  RowBox[{"\[CapitalGamma]", "\[LeftDoubleBracket]", 
                   RowBox[{"i", ",", "\[Sigma]", ",", "l"}], 
                   "\[RightDoubleBracket]"}], 
                  RowBox[{"temp", "\[LeftDoubleBracket]", 
                   RowBox[{"\[Sigma]", ",", "j", ",", "k"}], 
                   "\[RightDoubleBracket]"}]}]}], "+", 
                RowBox[{
                 UnderoverscriptBox["\[Sum]", 
                  RowBox[{"\[Sigma]", "=", 
                   SubscriptBox["n", "0"]}], "n"], 
                 RowBox[{
                  RowBox[{"\[CapitalGamma]", "\[LeftDoubleBracket]", 
                   RowBox[{"j", ",", "\[Sigma]", ",", "l"}], 
                   "\[RightDoubleBracket]"}], 
                  RowBox[{"temp", "\[LeftDoubleBracket]", 
                   RowBox[{"i", ",", "\[Sigma]", ",", "k"}], 
                   "\[RightDoubleBracket]"}]}]}], "+", 
                RowBox[{
                 UnderoverscriptBox["\[Sum]", 
                  RowBox[{"\[Sigma]", "=", 
                   SubscriptBox["n", "0"]}], "n"], 
                 RowBox[{
                  RowBox[{"\[CapitalGamma]", "\[LeftDoubleBracket]", 
                   RowBox[{"k", ",", "\[Sigma]", ",", "l"}], 
                   "\[RightDoubleBracket]"}], 
                  RowBox[{"temp", "\[LeftDoubleBracket]", 
                   RowBox[{"i", ",", "j", ",", "\[Sigma]"}], 
                   "\[RightDoubleBracket]"}]}]}]}], ",", "Ass"}], "]"}], ",", 
             
             RowBox[{"{", 
              RowBox[{"l", ",", 
               SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", 
             SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Expand", "[", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               SqrtBox[
                RowBox[{"g", "\[LeftDoubleBracket]", 
                 RowBox[{"i", ",", "i"}], "\[RightDoubleBracket]"}]], 
               SqrtBox[
                RowBox[{"g", "\[LeftDoubleBracket]", 
                 RowBox[{"j", ",", "j"}], "\[RightDoubleBracket]"}]], 
               SqrtBox[
                RowBox[{"g", "\[LeftDoubleBracket]", 
                 RowBox[{"k", ",", "k"}], "\[RightDoubleBracket]"}]], 
               SqrtBox[
                RowBox[{"gi", "\[LeftDoubleBracket]", 
                 RowBox[{"l", ",", "l"}], "\[RightDoubleBracket]"}]], 
               RowBox[{"temp1", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "j", ",", "k", ",", "l"}], 
                "\[RightDoubleBracket]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"l", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}]}], 
   ")"}]}]], "Input"],

Cell[BoxData["\[IndentingNewLine]"], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Laplace3", "[", "V_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"temp", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               SqrtBox[
                RowBox[{
                 RowBox[{"g", "\[LeftDoubleBracket]", 
                  RowBox[{"i", ",", "i"}], "\[RightDoubleBracket]"}], 
                 RowBox[{"g", "\[LeftDoubleBracket]", 
                  RowBox[{"j", ",", "j"}], "\[RightDoubleBracket]"}], 
                 RowBox[{"g", "\[LeftDoubleBracket]", 
                  RowBox[{"k", ",", "k"}], "\[RightDoubleBracket]"}]}]], 
               ")"}], 
              RowBox[{"-", "1"}]], 
             RowBox[{"V", "\[LeftDoubleBracket]", 
              RowBox[{"i", ",", "j", ",", "k"}], "\[RightDoubleBracket]"}]}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], "]"}]}], ";", 
    RowBox[{"temp1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Simplify", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 SubscriptBox["\[PartialD]", 
                  RowBox[{
                  "x", "\[LeftDoubleBracket]", "l", 
                   "\[RightDoubleBracket]"}]], " ", 
                 RowBox[{"temp", "\[LeftDoubleBracket]", 
                  RowBox[{"i", ",", "j", ",", "k"}], 
                  "\[RightDoubleBracket]"}]}], "+", 
                RowBox[{
                 UnderoverscriptBox["\[Sum]", 
                  RowBox[{"\[Sigma]", "=", 
                   SubscriptBox["n", "0"]}], "n"], 
                 RowBox[{
                  RowBox[{"\[CapitalGamma]", "\[LeftDoubleBracket]", 
                   RowBox[{"i", ",", "\[Sigma]", ",", "l"}], 
                   "\[RightDoubleBracket]"}], 
                  RowBox[{"temp", "\[LeftDoubleBracket]", 
                   RowBox[{"\[Sigma]", ",", "j", ",", "k"}], 
                   "\[RightDoubleBracket]"}]}]}], "+", 
                RowBox[{
                 UnderoverscriptBox["\[Sum]", 
                  RowBox[{"\[Sigma]", "=", 
                   SubscriptBox["n", "0"]}], "n"], 
                 RowBox[{
                  RowBox[{"\[CapitalGamma]", "\[LeftDoubleBracket]", 
                   RowBox[{"j", ",", "\[Sigma]", ",", "l"}], 
                   "\[RightDoubleBracket]"}], 
                  RowBox[{"temp", "\[LeftDoubleBracket]", 
                   RowBox[{"i", ",", "\[Sigma]", ",", "k"}], 
                   "\[RightDoubleBracket]"}]}]}], "+", 
                RowBox[{
                 UnderoverscriptBox["\[Sum]", 
                  RowBox[{"\[Sigma]", "=", 
                   SubscriptBox["n", "0"]}], "n"], 
                 RowBox[{
                  RowBox[{"\[CapitalGamma]", "\[LeftDoubleBracket]", 
                   RowBox[{"k", ",", "\[Sigma]", ",", "l"}], 
                   "\[RightDoubleBracket]"}], 
                  RowBox[{"temp", "\[LeftDoubleBracket]", 
                   RowBox[{"i", ",", "j", ",", "\[Sigma]"}], 
                   "\[RightDoubleBracket]"}]}]}]}], ",", "Ass"}], "]"}], ",", 
             
             RowBox[{"{", 
              RowBox[{"l", ",", 
               SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", 
             SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}]}], ";", 
    RowBox[{"temp2", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Simplify", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   SubscriptBox["\[PartialD]", 
                    RowBox[{
                    "x", "\[LeftDoubleBracket]", "m", 
                    "\[RightDoubleBracket]"}]], " ", 
                   RowBox[{"temp1", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "j", ",", "k", ",", "l"}], 
                    "\[RightDoubleBracket]"}]}], "+", 
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", 
                    RowBox[{"\[Sigma]", "=", 
                    SubscriptBox["n", "0"]}], "n"], 
                   RowBox[{
                    RowBox[{"\[CapitalGamma]", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "\[Sigma]", ",", "m"}], 
                    "\[RightDoubleBracket]"}], 
                    RowBox[{"temp1", "\[LeftDoubleBracket]", 
                    RowBox[{"\[Sigma]", ",", "j", ",", "k", ",", "l"}], 
                    "\[RightDoubleBracket]"}]}]}], "+", 
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", 
                    RowBox[{"\[Sigma]", "=", 
                    SubscriptBox["n", "0"]}], "n"], 
                   RowBox[{
                    RowBox[{"\[CapitalGamma]", "\[LeftDoubleBracket]", 
                    RowBox[{"j", ",", "\[Sigma]", ",", "m"}], 
                    "\[RightDoubleBracket]"}], 
                    RowBox[{"temp1", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "\[Sigma]", ",", "k", ",", "l"}], 
                    "\[RightDoubleBracket]"}]}]}], "+", 
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", 
                    RowBox[{"\[Sigma]", "=", 
                    SubscriptBox["n", "0"]}], "n"], 
                   RowBox[{
                    RowBox[{"\[CapitalGamma]", "\[LeftDoubleBracket]", 
                    RowBox[{"k", ",", "\[Sigma]", ",", "m"}], 
                    "\[RightDoubleBracket]"}], 
                    RowBox[{"temp1", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "j", ",", "\[Sigma]", ",", "l"}], 
                    "\[RightDoubleBracket]"}]}]}], "-", 
                  RowBox[{
                   UnderoverscriptBox["\[Sum]", 
                    RowBox[{"\[Sigma]", "=", 
                    SubscriptBox["n", "0"]}], "n"], 
                   RowBox[{
                    RowBox[{"\[CapitalGamma]", "\[LeftDoubleBracket]", 
                    RowBox[{"\[Sigma]", ",", "l", ",", "m"}], 
                    "\[RightDoubleBracket]"}], 
                    RowBox[{"temp1", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "j", ",", "k", ",", "\[Sigma]"}], 
                    "\[RightDoubleBracket]"}]}]}]}], ",", "Ass"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"m", ",", 
                 SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"l", ",", 
               SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", 
             SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         SubscriptBox["n", "0"], ",", "n"}], "}"}]}], "]"}]}], ";", 
    RowBox[{"Expand", "[", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             SqrtBox[
              RowBox[{"g", "\[LeftDoubleBracket]", 
               RowBox[{"i", ",", "i"}], "\[RightDoubleBracket]"}]], " ", 
             SqrtBox[
              RowBox[{"g", "\[LeftDoubleBracket]", 
               RowBox[{"j", ",", "j"}], "\[RightDoubleBracket]"}]], 
             SqrtBox[
              RowBox[{"g", "\[LeftDoubleBracket]", 
               RowBox[{"k", ",", "k"}], "\[RightDoubleBracket]"}]], 
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"gi", "\[LeftDoubleBracket]", 
                 RowBox[{"l", ",", "l"}], "\[RightDoubleBracket]"}], 
                RowBox[{"temp2", "\[LeftDoubleBracket]", 
                 RowBox[{"i", ",", "j", ",", "k", ",", "l", ",", "l"}], 
                 "\[RightDoubleBracket]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"l", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}]}], 
   ")"}]}]], "Input"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["0-1-2-3 system (Type B)", "Subchapter"],

Cell[CellGroupData[{

Cell["first order 0-1-2-3-system with 1-2-3-relaxation", "Section"],

Cell[CellGroupData[{

Cell["Final Result", "Subsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"coef", "[", 
     RowBox[{"expr_", ",", "var_"}], "]"}], ":=", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Normal", "[", 
      RowBox[{"CoefficientArrays", "[", 
       RowBox[{"expr", ",", "var"}], "]"}], "]"}], "]"}]}], ";", 
   RowBox[{"Clear", "[", 
    RowBox[{
    "A0", ",", "A1", ",", "A2", ",", "\[Tau]", ",", "\[Lambda]1", ",", 
     "\[Lambda]2", ",", "\[Lambda]3", ",", "a0", ",", "b0", ",", "d0", ",", 
     "\[Kappa]0", ",", "\[Gamma]0", ",", "\[Omega]0", ",", "a", ",", "b", ",",
      "d", ",", "\[Gamma]", ",", "\[Kappa]", ",", "\[Omega]", ",", "C0", ",", 
     "C1", ",", "C2", ",", "C3", ",", "C4", ",", "C5", ",", "C6", ",", "C7", 
     ",", "C8", ",", "C9", ",", "C11", ",", "C12", ",", "K1", ",", "K2", ",", 
     "K3", ",", "K4", ",", "K5", ",", "K6", ",", "K7", ",", "K8", ",", "K9", 
     ",", "K10", ",", "K11", ",", "K12"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"p", "[", 
     RowBox[{"r_", ",", "\[Theta]_"}], "]"}], "=", 
    RowBox[{
     RowBox[{"d0", "[", "r", "]"}], "+", 
     RowBox[{
      RowBox[{"d", "[", "r", "]"}], 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ur", "[", 
    RowBox[{"r_", ",", "\[Theta]_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"a0", "[", "r", "]"}], "+", 
    RowBox[{
     RowBox[{"a", "[", "r", "]"}], 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"u\[Theta]", "[", 
    RowBox[{"r_", ",", "\[Theta]_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"b0", "[", "r", "]"}], "-", 
    RowBox[{
     RowBox[{"b", "[", "r", "]"}], 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"u", "[", 
     RowBox[{"r_", ",", "\[Theta]_"}], "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ur", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
      RowBox[{"u\[Theta]", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", "0"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]rr", "[", 
    RowBox[{"r_", ",", "\[Theta]_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"\[Gamma]0", "[", "r", "]"}], "+", 
    RowBox[{
     RowBox[{"\[Gamma]", "[", "r", "]"}], 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]\[Theta]\[Theta]", "[", 
    RowBox[{"r_", ",", "\[Theta]_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"\[Omega]0", "[", "r", "]"}], "-", 
    RowBox[{
     RowBox[{"\[Omega]", "[", "r", "]"}], 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]r\[Theta]", "[", 
    RowBox[{"r_", ",", "\[Theta]_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"\[Kappa]0", "[", "r", "]"}], "+", 
    RowBox[{
     RowBox[{"\[Kappa]", "[", "r", "]"}], 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Sigma]", "[", 
     RowBox[{"r_", ",", "\[Theta]_"}], "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Sigma]rr", "[", 
         RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
        RowBox[{"\[Sigma]r\[Theta]", "[", 
         RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Sigma]r\[Theta]", "[", 
         RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
        RowBox[{"\[Sigma]\[Theta]\[Theta]", "[", 
         RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"\[Sigma]rr", "[", 
           RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "-", 
         RowBox[{"\[Sigma]\[Theta]\[Theta]", "[", 
          RowBox[{"r", ",", "\[Theta]"}], "]"}]}]}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"mrrr", "[", 
       RowBox[{"r_", ",", "\[Theta]_"}], "]"}], ",", 
      RowBox[{"mrr\[Theta]", "[", 
       RowBox[{"r_", ",", "\[Theta]_"}], "]"}], ",", 
      RowBox[{"mr\[Theta]\[Theta]", "[", 
       RowBox[{"r_", ",", "\[Theta]_"}], "]"}], ",", 
      RowBox[{"m\[Theta]\[Theta]\[Theta]", "[", 
       RowBox[{"r_", ",", "\[Theta]_"}], "]"}]}], "}"}], "=", " ", 
    RowBox[{"\[Tau]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"\[Gamma]0", "[", "r", "]"}]}], 
         RowBox[{"5", " ", "r"}]], "-", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"\[Omega]0", "[", "r", "]"}]}], 
         RowBox[{"5", " ", "r"}]], "-", 
        FractionBox[
         RowBox[{"3", " ", 
          RowBox[{
           SuperscriptBox["\[Gamma]0", "\[Prime]",
            MultilineFunction->None], "[", "r", "]"}]}], "5"], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"\[Gamma]", "[", "r", "]"}]}], 
            RowBox[{"5", " ", "r"}]], "+", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"\[Kappa]", "[", "r", "]"}]}], 
            RowBox[{"5", " ", "r"}]], "+", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"\[Omega]", "[", "r", "]"}]}], 
            RowBox[{"5", " ", "r"}]], "-", 
           FractionBox[
            RowBox[{"3", " ", 
             RowBox[{
              SuperscriptBox["\[Gamma]", "\[Prime]",
               MultilineFunction->None], "[", "r", "]"}]}], "5"]}], ")"}], 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ",", 
       RowBox[{
        FractionBox[
         RowBox[{"14", " ", 
          RowBox[{"\[Kappa]0", "[", "r", "]"}]}], 
         RowBox[{"15", " ", "r"}]], "-", 
        FractionBox[
         RowBox[{"8", " ", 
          RowBox[{
           SuperscriptBox["\[Kappa]0", "\[Prime]",
            MultilineFunction->None], "[", "r", "]"}]}], "15"], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"\[Gamma]", "[", "r", "]"}], 
            RowBox[{"3", " ", "r"}]], "+", 
           FractionBox[
            RowBox[{"14", " ", 
             RowBox[{"\[Kappa]", "[", "r", "]"}]}], 
            RowBox[{"15", " ", "r"}]], "+", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"\[Omega]", "[", "r", "]"}]}], 
            RowBox[{"15", " ", "r"}]], "-", 
           FractionBox[
            RowBox[{"8", " ", 
             RowBox[{
              SuperscriptBox["\[Kappa]", "\[Prime]",
               MultilineFunction->None], "[", "r", "]"}]}], "15"]}], ")"}], 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"8", " ", 
           RowBox[{"\[Gamma]0", "[", "r", "]"}]}], 
          RowBox[{"15", " ", "r"}]]}], "+", 
        FractionBox[
         RowBox[{"8", " ", 
          RowBox[{"\[Omega]0", "[", "r", "]"}]}], 
         RowBox[{"15", " ", "r"}]], "+", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{
           SuperscriptBox["\[Gamma]0", "\[Prime]",
            MultilineFunction->None], "[", "r", "]"}]}], "15"], "-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[Omega]0", "\[Prime]",
           MultilineFunction->None], "[", "r", "]"}], "3"], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"8", " ", 
              RowBox[{"\[Gamma]", "[", "r", "]"}]}], 
             RowBox[{"15", " ", "r"}]]}], "-", 
           FractionBox[
            RowBox[{"8", " ", 
             RowBox[{"\[Kappa]", "[", "r", "]"}]}], 
            RowBox[{"15", " ", "r"}]], "-", 
           FractionBox[
            RowBox[{"8", " ", 
             RowBox[{"\[Omega]", "[", "r", "]"}]}], 
            RowBox[{"15", " ", "r"}]], "+", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{
              SuperscriptBox["\[Gamma]", "\[Prime]",
               MultilineFunction->None], "[", "r", "]"}]}], "15"], "+", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[Omega]", "\[Prime]",
              MultilineFunction->None], "[", "r", "]"}], "3"]}], ")"}], 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"6", " ", 
           RowBox[{"\[Kappa]0", "[", "r", "]"}]}], 
          RowBox[{"5", " ", "r"}]]}], "+", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{
           SuperscriptBox["\[Kappa]0", "\[Prime]",
            MultilineFunction->None], "[", "r", "]"}]}], "5"], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"6", " ", 
              RowBox[{"\[Kappa]", "[", "r", "]"}]}], 
             RowBox[{"5", " ", "r"}]]}], "-", 
           FractionBox[
            RowBox[{"3", " ", 
             RowBox[{"\[Omega]", "[", "r", "]"}]}], 
            RowBox[{"5", " ", "r"}]], "+", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{
              SuperscriptBox["\[Kappa]", "\[Prime]",
               MultilineFunction->None], "[", "r", "]"}]}], "5"]}], ")"}], 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], "}"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F", "[", 
    RowBox[{"r_", ",", "\[Theta]_"}], "]"}], "=", 
   RowBox[{"A0", "+", 
    RowBox[{"A2", " ", 
     SuperscriptBox["r", "2"]}], "+", 
    RowBox[{"A1", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"5", 
         SuperscriptBox["r", "2"]}], 
        RowBox[{"18", " ", 
         SuperscriptBox["\[Tau]", "2"]}]]}], ")"}], 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]3", "=", 
   SqrtBox[
    FractionBox["3", "2"]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]2", "=", 
   SqrtBox[
    FractionBox["5", "6"]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]1", "=", 
   SqrtBox[
    FractionBox["15", "31"]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BI", "[", 
    RowBox[{"i_", ",", "x_"}], "]"}], "=", 
   RowBox[{"BesselI", "[", 
    RowBox[{"i", ",", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BK", "[", 
     RowBox[{"i_", ",", "x_"}], "]"}], "=", 
    RowBox[{"BesselK", "[", 
     RowBox[{"i", ",", "x"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"with\[Tau]", "=", 
    RowBox[{"{", 
     RowBox[{"r", "\[Rule]", 
      RowBox[{"r", "/", "\[Tau]"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d0", "[", "r_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Tau]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"6", " ", "A0"}], "5"]}], "+", 
        FractionBox[
         RowBox[{"32", 
          SuperscriptBox["\[Tau]", "2"], " ", "A2"}], "5"], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["A0", "4"], "-", 
           FractionBox[
            RowBox[{"4", " ", 
             SuperscriptBox["\[Tau]", "2"], "A2"}], "3"]}], ")"}], " ", 
         SuperscriptBox["r", "2"]}], "-", 
        RowBox[{
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Tau]", "2"], "A2"}], "16"], " ", 
         SuperscriptBox["r", "4"]}]}], ")"}]}], "+", "C0", "+", 
     RowBox[{"C3", " ", 
      RowBox[{"Log", "[", "r", "]"}]}], "+", 
     RowBox[{"K3", " ", 
      RowBox[{"BK", "[", 
       RowBox[{"0", ",", 
        RowBox[{"\[Lambda]2", " ", "r"}]}], "]"}]}], "+", 
     RowBox[{"K4", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"BI", "[", 
         RowBox[{"0", ",", 
          RowBox[{"\[Lambda]2", " ", "r"}]}], "]"}], "-", "1"}], ")"}]}]}], "/.",
     "with\[Tau]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"d", "[", "r_", "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Tau]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"19", " ", "A1", " ", 
            SuperscriptBox["r", "2"]}], "27"]}], "+", 
         FractionBox[
          RowBox[{"A1", " ", 
           SuperscriptBox["r", "4"]}], "54"]}], ")"}]}], "+", 
      FractionBox["C1", "r"], "+", 
      RowBox[{"C2", " ", "r"}], "+", 
      RowBox[{"K1", " ", 
       RowBox[{"BI", "[", 
        RowBox[{"1", ",", 
         RowBox[{"\[Lambda]2", " ", "r"}]}], "]"}]}], "+", 
      RowBox[{"K2", " ", 
       RowBox[{"BK", "[", 
        RowBox[{"1", ",", 
         RowBox[{"\[Lambda]2", " ", "r"}]}], "]"}]}]}], "/.", 
     "with\[Tau]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a0", "[", "r_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Tau]", 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"A0", " ", "r"}], "2"], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[Tau]", "2"], "A2", " ", 
          SuperscriptBox["r", "3"]}], "4"]}], ")"}]}], "-", 
     FractionBox["C3", "r"]}], "/.", "with\[Tau]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a", "[", "r_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Tau]", 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"2", " ", "A1", " ", "r"}], "3"], "-", 
        FractionBox[
         RowBox[{"2", " ", "A1", " ", 
          SuperscriptBox["r", "3"]}], "27"]}], ")"}]}], "-", "C2", "+", 
     FractionBox["C1", 
      SuperscriptBox["r", "2"]], "+", 
     RowBox[{"K7", " ", 
      FractionBox[
       RowBox[{"BI", "[", 
        RowBox[{"1", ",", 
         RowBox[{"\[Lambda]1", " ", "r"}]}], "]"}], "r"]}], "+", 
     RowBox[{"K8", " ", 
      FractionBox[
       RowBox[{"BK", "[", 
        RowBox[{"1", ",", 
         RowBox[{"\[Lambda]1", " ", "r"}]}], "]"}], "r"]}]}], "/.", 
    "with\[Tau]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"b0", "[", "r_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"K5", " ", 
      RowBox[{"BI", "[", 
       RowBox[{"1", ",", 
        RowBox[{"\[Lambda]1", " ", "r"}]}], "]"}]}], "+", 
     RowBox[{"K6", " ", 
      RowBox[{"BK", "[", 
       RowBox[{"1", ",", 
        RowBox[{"\[Lambda]1", " ", "r"}]}], "]"}]}]}], "/.", "with\[Tau]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"b", "[", "r_", "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Tau]", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"A1", " ", "r"}], "3"], "-", 
         FractionBox[
          RowBox[{"A1", " ", 
           SuperscriptBox["r", "3"]}], "54"]}], ")"}]}], "-", "C2", "-", 
      FractionBox["C1", 
       SuperscriptBox["r", "2"]], "+", 
      RowBox[{"K7", 
       FractionBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"r", " ", "\[Lambda]1", " ", 
           RowBox[{"BI", "[", 
            RowBox[{"0", ",", 
             RowBox[{"r", " ", "\[Lambda]1"}]}], "]"}]}], "-", 
          RowBox[{"BI", "[", 
           RowBox[{"1", ",", 
            RowBox[{"r", " ", "\[Lambda]1"}]}], "]"}]}], ")"}], "r"]}], "-", 
      RowBox[{"K8", 
       FractionBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"r", " ", "\[Lambda]1", " ", 
           RowBox[{"BK", "[", 
            RowBox[{"0", ",", 
             RowBox[{"r", " ", "\[Lambda]1"}]}], "]"}]}], "+", 
          RowBox[{"BK", "[", 
           RowBox[{"1", ",", 
            RowBox[{"r", " ", "\[Lambda]1"}]}], "]"}]}], ")"}], "r"]}]}], "/.",
      "with\[Tau]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Kappa]0", "[", "r_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "K5"}], " ", 
      RowBox[{
       RowBox[{"BI", "[", 
        RowBox[{"2", ",", 
         RowBox[{"\[Lambda]1", " ", "r"}]}], "]"}], "/", "\[Lambda]1"}]}], 
     "+", 
     RowBox[{"K6", " ", 
      RowBox[{
       RowBox[{"BK", "[", 
        RowBox[{"2", ",", 
         RowBox[{"\[Lambda]1", " ", "r"}]}], "]"}], "/", "\[Lambda]1"}]}]}], "/.",
     "with\[Tau]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Kappa]", "[", "r_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Tau]", 
      RowBox[{"(", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"A1", " ", 
          SuperscriptBox["r", "2"]}], "9"]}], ")"}]}], "+", 
     FractionBox[
      RowBox[{"4", " ", "C1"}], 
      SuperscriptBox["r", "3"]], "+", 
     FractionBox[
      RowBox[{"3", " ", "K1", " ", 
       RowBox[{"BI", "[", 
        RowBox[{"2", ",", 
         RowBox[{"r", " ", "\[Lambda]2"}]}], "]"}]}], 
      RowBox[{"2", " ", "r", " ", "\[Lambda]2"}]], "+", 
     FractionBox[
      RowBox[{"2", " ", "K11", " ", 
       RowBox[{"BI", "[", 
        RowBox[{"2", ",", 
         RowBox[{"r", " ", "\[Lambda]3"}]}], "]"}]}], 
      RowBox[{"r", " ", "\[Lambda]3"}]], "+", 
     RowBox[{"K7", " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"BI", "[", 
           RowBox[{"2", ",", 
            RowBox[{"r", " ", "\[Lambda]1"}]}], "]"}]}], 
         RowBox[{"r", " ", "\[Lambda]1"}]], "+", 
        RowBox[{"BI", "[", 
         RowBox[{"3", ",", 
          RowBox[{"r", " ", "\[Lambda]1"}]}], "]"}]}], ")"}]}], "-", 
     FractionBox[
      RowBox[{"3", " ", "K2", " ", 
       RowBox[{"BK", "[", 
        RowBox[{"2", ",", 
         RowBox[{"r", " ", "\[Lambda]2"}]}], "]"}]}], 
      RowBox[{"2", " ", "r", " ", "\[Lambda]2"}]], "-", 
     FractionBox[
      RowBox[{"2", " ", "K12", " ", 
       RowBox[{"BK", "[", 
        RowBox[{"2", ",", 
         RowBox[{"r", " ", "\[Lambda]3"}]}], "]"}]}], 
      RowBox[{"r", " ", "\[Lambda]3"}]], "+", 
     RowBox[{"K8", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"BK", "[", 
            RowBox[{"2", ",", 
             RowBox[{"r", " ", "\[Lambda]1"}]}], "]"}]}], 
          RowBox[{"r", " ", "\[Lambda]1"}]]}], "+", 
        RowBox[{"BK", "[", 
         RowBox[{"3", ",", 
          RowBox[{"r", " ", "\[Lambda]1"}]}], "]"}]}], ")"}]}]}], "/.", 
    "with\[Tau]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Gamma]0", "[", "r_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Tau]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["A0", "3"]}], "-", 
        FractionBox[
         RowBox[{"8", " ", 
          SuperscriptBox["\[Tau]", "2"], "A2"}], "5"], "-", 
        RowBox[{
         FractionBox[
          RowBox[{"5", " ", 
           SuperscriptBox["\[Tau]", "2"], "A2"}], "6"], " ", 
         SuperscriptBox["r", "2"]}]}], ")"}]}], "-", 
     FractionBox[
      RowBox[{"2", " ", "C3"}], 
      SuperscriptBox["r", "2"]], "+", 
     FractionBox[
      RowBox[{"K9", " ", 
       RowBox[{"BI", "[", 
        RowBox[{"1", ",", 
         RowBox[{"r", " ", "\[Lambda]3"}]}], "]"}]}], 
      RowBox[{"r", " ", "\[Lambda]3"}]], "+", 
     RowBox[{"K4", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"BI", "[", 
           RowBox[{"1", ",", 
            RowBox[{"r", " ", "\[Lambda]2"}]}], "]"}], 
          RowBox[{"2", " ", "r", " ", "\[Lambda]2"}]]}], "-", 
        RowBox[{"BI", "[", 
         RowBox[{"2", ",", 
          RowBox[{"r", " ", "\[Lambda]2"}]}], "]"}]}], ")"}]}], "+", 
     FractionBox[
      RowBox[{"K10", " ", 
       RowBox[{"BK", "[", 
        RowBox[{"1", ",", 
         RowBox[{"r", " ", "\[Lambda]3"}]}], "]"}]}], 
      RowBox[{"r", " ", "\[Lambda]3"}]], "+", 
     RowBox[{"K3", " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"BK", "[", 
          RowBox[{"1", ",", 
           RowBox[{"r", " ", "\[Lambda]2"}]}], "]"}], 
         RowBox[{"2", " ", "r", " ", "\[Lambda]2"}]], "-", 
        RowBox[{"BK", "[", 
         RowBox[{"2", ",", 
          RowBox[{"r", " ", "\[Lambda]2"}]}], "]"}]}], ")"}]}]}], "/.", 
    "with\[Tau]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Gamma]", "[", "r_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Tau]", 
      RowBox[{"(", 
       FractionBox[
        RowBox[{"7", " ", "A1", " ", 
         SuperscriptBox["r", "2"]}], "27"], ")"}]}], "+", 
     FractionBox[
      RowBox[{"4", " ", "C1"}], 
      SuperscriptBox["r", "3"]], "-", 
     FractionBox[
      RowBox[{"2", " ", "K7", " ", 
       RowBox[{"BI", "[", 
        RowBox[{"2", ",", 
         RowBox[{"r", " ", "\[Lambda]1"}]}], "]"}]}], 
      RowBox[{"r", " ", "\[Lambda]1"}]], "+", 
     RowBox[{"K1", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"BI", "[", 
          RowBox[{"1", ",", 
           RowBox[{"r", " ", "\[Lambda]2"}]}], "]"}]}], "+", 
        FractionBox[
         RowBox[{"3", " ", 
          RowBox[{"BI", "[", 
           RowBox[{"2", ",", 
            RowBox[{"r", " ", "\[Lambda]2"}]}], "]"}]}], 
         RowBox[{"2", " ", "r", " ", "\[Lambda]2"}]]}], ")"}]}], "+", 
     FractionBox[
      RowBox[{"2", " ", "K11", " ", 
       RowBox[{"BI", "[", 
        RowBox[{"2", ",", 
         RowBox[{"r", " ", "\[Lambda]3"}]}], "]"}]}], 
      RowBox[{"r", " ", "\[Lambda]3"}]], "+", 
     FractionBox[
      RowBox[{"2", " ", "K8", " ", 
       RowBox[{"BK", "[", 
        RowBox[{"2", ",", 
         RowBox[{"r", " ", "\[Lambda]1"}]}], "]"}]}], 
      RowBox[{"r", " ", "\[Lambda]1"}]], "+", 
     RowBox[{"K2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"BK", "[", 
          RowBox[{"1", ",", 
           RowBox[{"r", " ", "\[Lambda]2"}]}], "]"}]}], "-", 
        FractionBox[
         RowBox[{"3", " ", 
          RowBox[{"BK", "[", 
           RowBox[{"2", ",", 
            RowBox[{"r", " ", "\[Lambda]2"}]}], "]"}]}], 
         RowBox[{"2", " ", "r", " ", "\[Lambda]2"}]]}], ")"}]}], "-", 
     FractionBox[
      RowBox[{"2", " ", "K12", " ", 
       RowBox[{"BK", "[", 
        RowBox[{"2", ",", 
         RowBox[{"r", " ", "\[Lambda]3"}]}], "]"}]}], 
      RowBox[{"r", " ", "\[Lambda]3"}]]}], "/.", "with\[Tau]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Omega]0", "[", "r_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Tau]", 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[Tau]", "2"], "A2", " ", 
          SuperscriptBox["r", "2"]}], "6"], "-", 
        FractionBox["A0", "3"], "-", 
        FractionBox[
         RowBox[{"8", " ", 
          SuperscriptBox["\[Tau]", "2"], "A2"}], "5"]}], ")"}]}], "+", 
     FractionBox[
      RowBox[{"2", " ", "C3"}], 
      SuperscriptBox["r", "2"]], "+", 
     RowBox[{"K4", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"BI", "[", 
          RowBox[{"0", ",", 
           RowBox[{"r", " ", "\[Lambda]2"}]}], "]"}]}], "-", 
        FractionBox[
         RowBox[{"3", " ", 
          RowBox[{"BI", "[", 
           RowBox[{"1", ",", 
            RowBox[{"r", " ", "\[Lambda]2"}]}], "]"}]}], 
         RowBox[{"2", " ", "r", " ", "\[Lambda]2"}]]}], ")"}]}], "+", 
     RowBox[{"K9", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"BI", "[", 
         RowBox[{"0", ",", 
          RowBox[{"r", " ", "\[Lambda]3"}]}], "]"}], "-", 
        FractionBox[
         RowBox[{"BI", "[", 
          RowBox[{"1", ",", 
           RowBox[{"r", " ", "\[Lambda]3"}]}], "]"}], 
         RowBox[{"r", " ", "\[Lambda]3"}]]}], ")"}]}], "+", 
     RowBox[{"K3", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"BK", "[", 
          RowBox[{"0", ",", 
           RowBox[{"r", " ", "\[Lambda]2"}]}], "]"}]}], "+", 
        FractionBox[
         RowBox[{"3", " ", 
          RowBox[{"BK", "[", 
           RowBox[{"1", ",", 
            RowBox[{"r", " ", "\[Lambda]2"}]}], "]"}]}], 
         RowBox[{"2", " ", "r", " ", "\[Lambda]2"}]]}], ")"}]}], "+", 
     RowBox[{"K10", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"BK", "[", 
          RowBox[{"0", ",", 
           RowBox[{"r", " ", "\[Lambda]3"}]}], "]"}]}], "-", 
        FractionBox[
         RowBox[{"BK", "[", 
          RowBox[{"1", ",", 
           RowBox[{"r", " ", "\[Lambda]3"}]}], "]"}], 
         RowBox[{"r", " ", "\[Lambda]3"}]]}], ")"}]}]}], "/.", 
    "with\[Tau]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Omega]", "[", "r_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Tau]", 
      RowBox[{"(", 
       FractionBox[
        RowBox[{"2", " ", "A1", " ", 
         SuperscriptBox["r", "2"]}], "27"], ")"}]}], "+", 
     FractionBox[
      RowBox[{"4", " ", "C1"}], 
      SuperscriptBox["r", "3"]], "-", 
     FractionBox[
      RowBox[{"2", " ", "K7", " ", 
       RowBox[{"BI", "[", 
        RowBox[{"2", ",", 
         RowBox[{"r", " ", "\[Lambda]1"}]}], "]"}]}], 
      RowBox[{"r", " ", "\[Lambda]1"}]], "+", 
     RowBox[{"K1", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", 
         RowBox[{"BI", "[", 
          RowBox[{"1", ",", 
           RowBox[{"r", " ", "\[Lambda]2"}]}], "]"}]}], "+", 
        FractionBox[
         RowBox[{"3", " ", 
          RowBox[{"BI", "[", 
           RowBox[{"2", ",", 
            RowBox[{"r", " ", "\[Lambda]2"}]}], "]"}]}], 
         RowBox[{"2", " ", "r", " ", "\[Lambda]2"}]]}], ")"}]}], "+", 
     RowBox[{"K11", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"BI", "[", 
          RowBox[{"1", ",", 
           RowBox[{"r", " ", "\[Lambda]3"}]}], "]"}]}], "+", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"BI", "[", 
           RowBox[{"2", ",", 
            RowBox[{"r", " ", "\[Lambda]3"}]}], "]"}]}], 
         RowBox[{"r", " ", "\[Lambda]3"}]]}], ")"}]}], "+", 
     FractionBox[
      RowBox[{"2", " ", "K8", " ", 
       RowBox[{"BK", "[", 
        RowBox[{"2", ",", 
         RowBox[{"r", " ", "\[Lambda]1"}]}], "]"}]}], 
      RowBox[{"r", " ", "\[Lambda]1"}]], "+", 
     RowBox[{"K2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", 
         RowBox[{"BK", "[", 
          RowBox[{"1", ",", 
           RowBox[{"r", " ", "\[Lambda]2"}]}], "]"}]}], "-", 
        FractionBox[
         RowBox[{"3", " ", 
          RowBox[{"BK", "[", 
           RowBox[{"2", ",", 
            RowBox[{"r", " ", "\[Lambda]2"}]}], "]"}]}], 
         RowBox[{"2", " ", "r", " ", "\[Lambda]2"}]]}], ")"}]}], "+", 
     RowBox[{"K12", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"BK", "[", 
          RowBox[{"1", ",", 
           RowBox[{"r", " ", "\[Lambda]3"}]}], "]"}]}], "-", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"BK", "[", 
           RowBox[{"2", ",", 
            RowBox[{"r", " ", "\[Lambda]3"}]}], "]"}]}], 
         RowBox[{"r", " ", "\[Lambda]3"}]]}], ")"}]}]}], "/.", 
    "with\[Tau]"}]}], ";"}]}], "Input"],

Cell[BoxData["\[IndentingNewLine]"], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TraceFreeSym2", "[", "mat_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"(", 
      RowBox[{"mat", "+", 
       RowBox[{"Transpose", "[", "mat", "]"}]}], ")"}]}], "-", 
    RowBox[{
     FractionBox["1", "3"], 
     RowBox[{"Tr", "[", "mat", "]"}], 
     RowBox[{"IdentityMatrix", "[", "3", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TraceFreeSym3", "[", "mat_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"perm", ",", "sym1", ",", "trace"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"perm", "=", 
      RowBox[{"Permutations", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"sym1", "=", 
      RowBox[{"Expand", "[", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"Length", "[", "perm", "]"}]], 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"mat", ",", "idx"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"idx", ",", "perm"}], "}"}]}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"trace", "=", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"sym1", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "jj", ",", "jj"}], "\[RightDoubleBracket]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"jj", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Expand", "[", 
      RowBox[{"sym1", "-", 
       RowBox[{
        FractionBox["1", "5"], 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
            "trace", "\[LeftDoubleBracket]", "ii", "\[RightDoubleBracket]"}], 
            
            RowBox[{"KroneckerDelta", "[", 
             RowBox[{"jj", ",", "kk"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{
            "trace", "\[LeftDoubleBracket]", "jj", "\[RightDoubleBracket]"}], 
            
            RowBox[{"KroneckerDelta", "[", 
             RowBox[{"ii", ",", "kk"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{
            "trace", "\[LeftDoubleBracket]", "kk", "\[RightDoubleBracket]"}], 
            
            RowBox[{"KroneckerDelta", "[", 
             RowBox[{"ii", ",", "jj"}], "]"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"ii", ",", "1", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"jj", ",", "1", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"kk", ",", "1", ",", "3"}], "}"}]}], "]"}]}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"Simplify", "[", "\[IndentingNewLine]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"coef", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Div1", "[", 
        RowBox[{"u", "[", 
         RowBox[{"r", ",", "\[Theta]"}], "]"}], "]"}], "-", 
       RowBox[{"F", "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"coef", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Grad0", "[", 
        RowBox[{"p", "[", 
         RowBox[{"r", ",", "\[Theta]"}], "]"}], "]"}], "+", 
       RowBox[{"Div2", "[", 
        RowBox[{"\[Sigma]", "[", 
         RowBox[{"r", ",", "\[Theta]"}], "]"}], "]"}], "+", 
       RowBox[{
        FractionBox["1", "\[Tau]"], 
        RowBox[{"u", "[", 
         RowBox[{"r", ",", "\[Theta]"}], "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"coef", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"2", 
        RowBox[{"TraceFreeSym2", "[", 
         RowBox[{"Grad1", "[", 
          RowBox[{"u", "[", 
           RowBox[{"r", ",", "\[Theta]"}], "]"}], "]"}], "]"}]}], "+", 
       RowBox[{
        FractionBox["1", "\[Tau]"], 
        RowBox[{"\[Sigma]", "[", 
         RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "-", 
       RowBox[{"2", "\[Tau]", " ", 
        RowBox[{"Div3", "[", 
         RowBox[{"TraceFreeSym3", "[", 
          RowBox[{"Grad2", "[", 
           RowBox[{"\[Sigma]", "[", 
            RowBox[{"r", ",", "\[Theta]"}], "]"}], "]"}], "]"}], "]"}]}]}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"coef", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["1", "\[Tau]"], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"mrrr", "[", 
           RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
          RowBox[{"mrr\[Theta]", "[", 
           RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
          RowBox[{"mr\[Theta]\[Theta]", "[", 
           RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
          RowBox[{"m\[Theta]\[Theta]\[Theta]", "[", 
           RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "}"}]}], "+", 
       RowBox[{"Extract", "[", 
        RowBox[{
         RowBox[{"TraceFreeSym3", "[", 
          RowBox[{"Grad2", "[", 
           RowBox[{"\[Sigma]", "[", 
            RowBox[{"r", ",", "\[Theta]"}], "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "2", ",", "2"}], "}"}]}], "}"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "}"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3"}], 
  "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"coef", "[", 
  RowBox[{
   RowBox[{"Expand", "[", 
    RowBox[{
     RowBox[{"ur", "[", 
      RowBox[{"R", ",", "\[Theta]"}], "]"}], "-", 
     RowBox[{"p", "[", 
      RowBox[{"R", ",", "\[Theta]"}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"coef", "[", 
  RowBox[{
   RowBox[{"Expand", "[", 
    RowBox[{
     RowBox[{"mrrr", "[", 
      RowBox[{"R", ",", "\[Theta]"}], "]"}], "-", 
     RowBox[{"\[Sigma]rr", "[", 
      RowBox[{"R", ",", "\[Theta]"}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"coef", "[", 
  RowBox[{
   RowBox[{"Expand", "[", 
    RowBox[{
     RowBox[{"\[Sigma]r\[Theta]", "[", 
      RowBox[{"R", ",", "\[Theta]"}], "]"}], "-", 
     RowBox[{"u\[Theta]", "[", 
      RowBox[{"R", ",", "\[Theta]"}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"coef", "[", 
  RowBox[{
   RowBox[{"Expand", "[", 
    RowBox[{
     RowBox[{"mr\[Theta]\[Theta]", "[", 
      RowBox[{"R", ",", "\[Theta]"}], "]"}], "-", 
     RowBox[{"\[Sigma]\[Theta]\[Theta]", "[", 
      RowBox[{"R", ",", "\[Theta]"}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "C0"}], "-", 
    FractionBox["C3", "R"], "-", 
    RowBox[{"K4", " ", 
     RowBox[{"BesselI", "[", 
      RowBox[{"0", ",", 
       RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], "-", 
    RowBox[{"K3", " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"0", ",", 
       RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], "-", 
    RowBox[{"C3", " ", 
     RowBox[{"Log", "[", "R", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"-", "C2"}], "+", 
    FractionBox["C1", 
     SuperscriptBox["R", "2"]], "-", 
    FractionBox["C1", "R"], "-", 
    RowBox[{"C2", " ", "R"}], "+", 
    FractionBox[
     RowBox[{"K7", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"1", ",", 
        RowBox[{"R", " ", "\[Lambda]1"}]}], "]"}]}], "R"], "-", 
    RowBox[{"K1", " ", 
     RowBox[{"BesselI", "[", 
      RowBox[{"1", ",", 
       RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], "+", 
    FractionBox[
     RowBox[{"K8", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"1", ",", 
        RowBox[{"R", " ", "\[Lambda]1"}]}], "]"}]}], "R"], "-", 
    RowBox[{"K2", " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"1", ",", 
       RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}]}], ",", "0"}], 
  "}"}]], "Output"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"4", " ", "C3"}], 
      SuperscriptBox["R", "3"]]}], "+", 
    FractionBox[
     RowBox[{"2", " ", "C3"}], 
     SuperscriptBox["R", "2"]], "-", 
    FractionBox[
     RowBox[{"K4", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"0", ",", 
        RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], 
     RowBox[{"20", " ", "R"}]], "-", 
    FractionBox[
     RowBox[{"7", " ", "K9", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"0", ",", 
        RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], 
     RowBox[{"10", " ", "R"}]], "+", 
    FractionBox[
     RowBox[{"K4", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"1", ",", 
        RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], 
     RowBox[{"10", " ", 
      SuperscriptBox["R", "2"], " ", "\[Lambda]2"}]], "+", 
    FractionBox[
     RowBox[{"K4", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"1", ",", 
        RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], 
     RowBox[{"2", " ", "R", " ", "\[Lambda]2"}]], "+", 
    RowBox[{
     FractionBox["3", "10"], " ", "K4", " ", "\[Lambda]2", " ", 
     RowBox[{"BesselI", "[", 
      RowBox[{"1", ",", 
       RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], "+", 
    FractionBox[
     RowBox[{"7", " ", "K9", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"1", ",", 
        RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], 
     RowBox[{"5", " ", 
      SuperscriptBox["R", "2"], " ", "\[Lambda]3"}]], "-", 
    FractionBox[
     RowBox[{"K9", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"1", ",", 
        RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], 
     RowBox[{"R", " ", "\[Lambda]3"}]], "+", 
    RowBox[{"K4", " ", 
     RowBox[{"BesselI", "[", 
      RowBox[{"2", ",", 
       RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], "-", 
    FractionBox[
     RowBox[{"K4", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"2", ",", 
        RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], 
     RowBox[{"4", " ", "R"}]], "-", 
    FractionBox[
     RowBox[{"3", " ", "K9", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"2", ",", 
        RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], 
     RowBox[{"10", " ", "R"}]], "+", 
    RowBox[{
     FractionBox["3", "10"], " ", "K4", " ", "\[Lambda]2", " ", 
     RowBox[{"BesselI", "[", 
      RowBox[{"3", ",", 
       RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], "-", 
    FractionBox[
     RowBox[{"K3", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"0", ",", 
        RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], 
     RowBox[{"20", " ", "R"}]], "+", 
    FractionBox[
     RowBox[{"7", " ", "K10", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"0", ",", 
        RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], 
     RowBox[{"10", " ", "R"}]], "-", 
    FractionBox[
     RowBox[{"K3", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"1", ",", 
        RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], 
     RowBox[{"10", " ", 
      SuperscriptBox["R", "2"], " ", "\[Lambda]2"}]], "-", 
    FractionBox[
     RowBox[{"K3", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"1", ",", 
        RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], 
     RowBox[{"2", " ", "R", " ", "\[Lambda]2"}]], "-", 
    RowBox[{
     FractionBox["3", "10"], " ", "K3", " ", "\[Lambda]2", " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"1", ",", 
       RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], "+", 
    FractionBox[
     RowBox[{"7", " ", "K10", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"1", ",", 
        RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], 
     RowBox[{"5", " ", 
      SuperscriptBox["R", "2"], " ", "\[Lambda]3"}]], "-", 
    FractionBox[
     RowBox[{"K10", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"1", ",", 
        RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], 
     RowBox[{"R", " ", "\[Lambda]3"}]], "+", 
    RowBox[{"K3", " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"2", ",", 
       RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], "-", 
    FractionBox[
     RowBox[{"K3", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"2", ",", 
        RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], 
     RowBox[{"4", " ", "R"}]], "+", 
    FractionBox[
     RowBox[{"3", " ", "K10", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"2", ",", 
        RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], 
     RowBox[{"10", " ", "R"}]], "-", 
    RowBox[{
     FractionBox["3", "10"], " ", "K3", " ", "\[Lambda]2", " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"3", ",", 
       RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"12", " ", "C1"}], 
     SuperscriptBox["R", "4"]], "-", 
    FractionBox[
     RowBox[{"4", " ", "C1"}], 
     SuperscriptBox["R", "3"]], "+", 
    RowBox[{
     FractionBox["3", "10"], " ", "K1", " ", "\[Lambda]2", " ", 
     RowBox[{"BesselI", "[", 
      RowBox[{"0", ",", 
       RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], "+", 
    FractionBox[
     RowBox[{"3", " ", "K7", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"1", ",", 
        RowBox[{"R", " ", "\[Lambda]1"}]}], "]"}]}], 
     RowBox[{"5", " ", "R"}]], "+", 
    RowBox[{"K1", " ", 
     RowBox[{"BesselI", "[", 
      RowBox[{"1", ",", 
       RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], "-", 
    FractionBox[
     RowBox[{"21", " ", "K1", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"1", ",", 
        RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], 
     RowBox[{"20", " ", "R"}]], "-", 
    FractionBox[
     RowBox[{"7", " ", "K11", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"1", ",", 
        RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], 
     RowBox[{"5", " ", "R"}]], "-", 
    FractionBox[
     RowBox[{"2", " ", "K7", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"2", ",", 
        RowBox[{"R", " ", "\[Lambda]1"}]}], "]"}]}], 
     RowBox[{
      SuperscriptBox["R", "2"], " ", "\[Lambda]1"}]], "+", 
    FractionBox[
     RowBox[{"2", " ", "K7", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"2", ",", 
        RowBox[{"R", " ", "\[Lambda]1"}]}], "]"}]}], 
     RowBox[{"R", " ", "\[Lambda]1"}]], "+", 
    FractionBox[
     RowBox[{"27", " ", "K1", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"2", ",", 
        RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], 
     RowBox[{"10", " ", 
      SuperscriptBox["R", "2"], " ", "\[Lambda]2"}]], "-", 
    FractionBox[
     RowBox[{"3", " ", "K1", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"2", ",", 
        RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], 
     RowBox[{"2", " ", "R", " ", "\[Lambda]2"}]], "+", 
    RowBox[{
     FractionBox["3", "10"], " ", "K1", " ", "\[Lambda]2", " ", 
     RowBox[{"BesselI", "[", 
      RowBox[{"2", ",", 
       RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], "+", 
    FractionBox[
     RowBox[{"18", " ", "K11", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"2", ",", 
        RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], 
     RowBox[{"5", " ", 
      SuperscriptBox["R", "2"], " ", "\[Lambda]3"}]], "-", 
    FractionBox[
     RowBox[{"2", " ", "K11", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"2", ",", 
        RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], 
     RowBox[{"R", " ", "\[Lambda]3"}]], "+", 
    FractionBox[
     RowBox[{"K7", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"3", ",", 
        RowBox[{"R", " ", "\[Lambda]1"}]}], "]"}]}], "R"], "-", 
    FractionBox[
     RowBox[{"9", " ", "K1", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"3", ",", 
        RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], 
     RowBox[{"20", " ", "R"}]], "-", 
    FractionBox[
     RowBox[{"3", " ", "K11", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"3", ",", 
        RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], 
     RowBox[{"5", " ", "R"}]], "-", 
    RowBox[{
     FractionBox["3", "10"], " ", "K2", " ", "\[Lambda]2", " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"0", ",", 
       RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], "+", 
    FractionBox[
     RowBox[{"3", " ", "K8", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"1", ",", 
        RowBox[{"R", " ", "\[Lambda]1"}]}], "]"}]}], 
     RowBox[{"5", " ", "R"}]], "+", 
    RowBox[{"K2", " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"1", ",", 
       RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], "-", 
    FractionBox[
     RowBox[{"21", " ", "K2", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"1", ",", 
        RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], 
     RowBox[{"20", " ", "R"}]], "-", 
    FractionBox[
     RowBox[{"7", " ", "K12", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"1", ",", 
        RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], 
     RowBox[{"5", " ", "R"}]], "+", 
    FractionBox[
     RowBox[{"2", " ", "K8", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"2", ",", 
        RowBox[{"R", " ", "\[Lambda]1"}]}], "]"}]}], 
     RowBox[{
      SuperscriptBox["R", "2"], " ", "\[Lambda]1"}]], "-", 
    FractionBox[
     RowBox[{"2", " ", "K8", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"2", ",", 
        RowBox[{"R", " ", "\[Lambda]1"}]}], "]"}]}], 
     RowBox[{"R", " ", "\[Lambda]1"}]], "-", 
    FractionBox[
     RowBox[{"27", " ", "K2", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"2", ",", 
        RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], 
     RowBox[{"10", " ", 
      SuperscriptBox["R", "2"], " ", "\[Lambda]2"}]], "+", 
    FractionBox[
     RowBox[{"3", " ", "K2", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"2", ",", 
        RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], 
     RowBox[{"2", " ", "R", " ", "\[Lambda]2"}]], "-", 
    RowBox[{
     FractionBox["3", "10"], " ", "K2", " ", "\[Lambda]2", " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"2", ",", 
       RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], "-", 
    FractionBox[
     RowBox[{"18", " ", "K12", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"2", ",", 
        RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], 
     RowBox[{"5", " ", 
      SuperscriptBox["R", "2"], " ", "\[Lambda]3"}]], "+", 
    FractionBox[
     RowBox[{"2", " ", "K12", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"2", ",", 
        RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], 
     RowBox[{"R", " ", "\[Lambda]3"}]], "+", 
    FractionBox[
     RowBox[{"K8", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"3", ",", 
        RowBox[{"R", " ", "\[Lambda]1"}]}], "]"}]}], "R"], "-", 
    FractionBox[
     RowBox[{"9", " ", "K2", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"3", ",", 
        RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], 
     RowBox[{"20", " ", "R"}]], "-", 
    FractionBox[
     RowBox[{"3", " ", "K12", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"3", ",", 
        RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], 
     RowBox[{"5", " ", "R"}]]}], ",", "0"}], "}"}]], "Output"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "K5"}], " ", 
     RowBox[{"BesselI", "[", 
      RowBox[{"1", ",", 
       RowBox[{"R", " ", "\[Lambda]1"}]}], "]"}]}], "-", 
    FractionBox[
     RowBox[{"K5", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"2", ",", 
        RowBox[{"R", " ", "\[Lambda]1"}]}], "]"}]}], "\[Lambda]1"], "-", 
    RowBox[{"K6", " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"1", ",", 
       RowBox[{"R", " ", "\[Lambda]1"}]}], "]"}]}], "+", 
    FractionBox[
     RowBox[{"K6", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"2", ",", 
        RowBox[{"R", " ", "\[Lambda]1"}]}], "]"}]}], "\[Lambda]1"]}], ",", 
   "0", ",", 
   RowBox[{
    RowBox[{"-", "C2"}], "+", 
    FractionBox[
     RowBox[{"4", " ", "C1"}], 
     SuperscriptBox["R", "3"]], "-", 
    FractionBox["C1", 
     SuperscriptBox["R", "2"]], "+", 
    RowBox[{"K7", " ", "\[Lambda]1", " ", 
     RowBox[{"BesselI", "[", 
      RowBox[{"0", ",", 
       RowBox[{"R", " ", "\[Lambda]1"}]}], "]"}]}], "-", 
    FractionBox[
     RowBox[{"K7", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"1", ",", 
        RowBox[{"R", " ", "\[Lambda]1"}]}], "]"}]}], "R"], "+", 
    FractionBox[
     RowBox[{"2", " ", "K7", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"2", ",", 
        RowBox[{"R", " ", "\[Lambda]1"}]}], "]"}]}], 
     RowBox[{"R", " ", "\[Lambda]1"}]], "+", 
    FractionBox[
     RowBox[{"3", " ", "K1", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"2", ",", 
        RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], 
     RowBox[{"2", " ", "R", " ", "\[Lambda]2"}]], "+", 
    FractionBox[
     RowBox[{"2", " ", "K11", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"2", ",", 
        RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], 
     RowBox[{"R", " ", "\[Lambda]3"}]], "+", 
    RowBox[{"K7", " ", 
     RowBox[{"BesselI", "[", 
      RowBox[{"3", ",", 
       RowBox[{"R", " ", "\[Lambda]1"}]}], "]"}]}], "-", 
    RowBox[{"K8", " ", "\[Lambda]1", " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"0", ",", 
       RowBox[{"R", " ", "\[Lambda]1"}]}], "]"}]}], "-", 
    FractionBox[
     RowBox[{"K8", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"1", ",", 
        RowBox[{"R", " ", "\[Lambda]1"}]}], "]"}]}], "R"], "-", 
    FractionBox[
     RowBox[{"2", " ", "K8", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"2", ",", 
        RowBox[{"R", " ", "\[Lambda]1"}]}], "]"}]}], 
     RowBox[{"R", " ", "\[Lambda]1"}]], "-", 
    FractionBox[
     RowBox[{"3", " ", "K2", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"2", ",", 
        RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], 
     RowBox[{"2", " ", "R", " ", "\[Lambda]2"}]], "-", 
    FractionBox[
     RowBox[{"2", " ", "K12", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"2", ",", 
        RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], 
     RowBox[{"R", " ", "\[Lambda]3"}]], "+", 
    RowBox[{"K8", " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"3", ",", 
       RowBox[{"R", " ", "\[Lambda]1"}]}], "]"}]}]}]}], "}"}]], "Output"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"4", " ", "C3"}], 
     SuperscriptBox["R", "3"]], "-", 
    FractionBox[
     RowBox[{"2", " ", "C3"}], 
     SuperscriptBox["R", "2"]], "-", 
    RowBox[{
     FractionBox["1", "2"], " ", "K4", " ", 
     RowBox[{"BesselI", "[", 
      RowBox[{"0", ",", 
       RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], "+", 
    FractionBox[
     RowBox[{"29", " ", "K4", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"0", ",", 
        RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], 
     RowBox[{"60", " ", "R"}]], "-", 
    RowBox[{"K9", " ", 
     RowBox[{"BesselI", "[", 
      RowBox[{"0", ",", 
       RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], "+", 
    FractionBox[
     RowBox[{"23", " ", "K9", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"0", ",", 
        RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], 
     RowBox[{"30", " ", "R"}]], "-", 
    FractionBox[
     RowBox[{"29", " ", "K4", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"1", ",", 
        RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], 
     RowBox[{"30", " ", 
      SuperscriptBox["R", "2"], " ", "\[Lambda]2"}]], "+", 
    FractionBox[
     RowBox[{"3", " ", "K4", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"1", ",", 
        RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], 
     RowBox[{"2", " ", "R", " ", "\[Lambda]2"}]], "-", 
    RowBox[{
     FractionBox["7", "30"], " ", "K4", " ", "\[Lambda]2", " ", 
     RowBox[{"BesselI", "[", 
      RowBox[{"1", ",", 
       RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], "-", 
    FractionBox[
     RowBox[{"23", " ", "K9", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"1", ",", 
        RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], 
     RowBox[{"15", " ", 
      SuperscriptBox["R", "2"], " ", "\[Lambda]3"}]], "+", 
    FractionBox[
     RowBox[{"K9", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"1", ",", 
        RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], 
     RowBox[{"R", " ", "\[Lambda]3"}]], "-", 
    RowBox[{
     FractionBox["1", "3"], " ", "K9", " ", "\[Lambda]3", " ", 
     RowBox[{"BesselI", "[", 
      RowBox[{"1", ",", 
       RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], "+", 
    FractionBox[
     RowBox[{"3", " ", "K4", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"2", ",", 
        RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], 
     RowBox[{"4", " ", "R"}]], "+", 
    FractionBox[
     RowBox[{"7", " ", "K9", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"2", ",", 
        RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], 
     RowBox[{"30", " ", "R"}]], "-", 
    RowBox[{
     FractionBox["1", "15"], " ", "K4", " ", "\[Lambda]2", " ", 
     RowBox[{"BesselI", "[", 
      RowBox[{"3", ",", 
       RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], "-", 
    RowBox[{
     FractionBox["1", "2"], " ", "K3", " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"0", ",", 
       RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], "+", 
    FractionBox[
     RowBox[{"29", " ", "K3", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"0", ",", 
        RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], 
     RowBox[{"60", " ", "R"}]], "+", 
    RowBox[{"K10", " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"0", ",", 
       RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], "-", 
    FractionBox[
     RowBox[{"23", " ", "K10", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"0", ",", 
        RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], 
     RowBox[{"30", " ", "R"}]], "+", 
    FractionBox[
     RowBox[{"29", " ", "K3", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"1", ",", 
        RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], 
     RowBox[{"30", " ", 
      SuperscriptBox["R", "2"], " ", "\[Lambda]2"}]], "-", 
    FractionBox[
     RowBox[{"3", " ", "K3", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"1", ",", 
        RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], 
     RowBox[{"2", " ", "R", " ", "\[Lambda]2"}]], "+", 
    RowBox[{
     FractionBox["7", "30"], " ", "K3", " ", "\[Lambda]2", " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"1", ",", 
       RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], "-", 
    FractionBox[
     RowBox[{"23", " ", "K10", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"1", ",", 
        RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], 
     RowBox[{"15", " ", 
      SuperscriptBox["R", "2"], " ", "\[Lambda]3"}]], "+", 
    FractionBox[
     RowBox[{"K10", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"1", ",", 
        RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], 
     RowBox[{"R", " ", "\[Lambda]3"}]], "-", 
    RowBox[{
     FractionBox["1", "3"], " ", "K10", " ", "\[Lambda]3", " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"1", ",", 
       RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], "+", 
    FractionBox[
     RowBox[{"3", " ", "K3", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"2", ",", 
        RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], 
     RowBox[{"4", " ", "R"}]], "-", 
    FractionBox[
     RowBox[{"7", " ", "K10", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"2", ",", 
        RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], 
     RowBox[{"30", " ", "R"}]], "+", 
    RowBox[{
     FractionBox["1", "15"], " ", "K3", " ", "\[Lambda]2", " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"3", ",", 
       RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"12", " ", "C1"}], 
      SuperscriptBox["R", "4"]]}], "+", 
    FractionBox[
     RowBox[{"4", " ", "C1"}], 
     SuperscriptBox["R", "3"]], "-", 
    RowBox[{
     FractionBox["3", "20"], " ", "K1", " ", "\[Lambda]2", " ", 
     RowBox[{"BesselI", "[", 
      RowBox[{"0", ",", 
       RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], "-", 
    RowBox[{
     FractionBox["1", "3"], " ", "K11", " ", "\[Lambda]3", " ", 
     RowBox[{"BesselI", "[", 
      RowBox[{"0", ",", 
       RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], "-", 
    FractionBox[
     RowBox[{"7", " ", "K7", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"1", ",", 
        RowBox[{"R", " ", "\[Lambda]1"}]}], "]"}]}], 
     RowBox[{"15", " ", "R"}]], "-", 
    RowBox[{
     FractionBox["1", "2"], " ", "K1", " ", 
     RowBox[{"BesselI", "[", 
      RowBox[{"1", ",", 
       RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], "+", 
    FractionBox[
     RowBox[{"23", " ", "K1", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"1", ",", 
        RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], 
     RowBox[{"20", " ", "R"}]], "-", 
    RowBox[{"2", " ", "K11", " ", 
     RowBox[{"BesselI", "[", 
      RowBox[{"1", ",", 
       RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], "+", 
    FractionBox[
     RowBox[{"23", " ", "K11", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"1", ",", 
        RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], 
     RowBox[{"15", " ", "R"}]], "+", 
    FractionBox[
     RowBox[{"2", " ", "K7", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"2", ",", 
        RowBox[{"R", " ", "\[Lambda]1"}]}], "]"}]}], 
     RowBox[{
      SuperscriptBox["R", "2"], " ", "\[Lambda]1"}]], "-", 
    FractionBox[
     RowBox[{"2", " ", "K7", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"2", ",", 
        RowBox[{"R", " ", "\[Lambda]1"}]}], "]"}]}], 
     RowBox[{"R", " ", "\[Lambda]1"}]], "-", 
    FractionBox[
     RowBox[{"31", " ", "K1", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"2", ",", 
        RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], 
     RowBox[{"10", " ", 
      SuperscriptBox["R", "2"], " ", "\[Lambda]2"}]], "+", 
    FractionBox[
     RowBox[{"3", " ", "K1", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"2", ",", 
        RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], 
     RowBox[{"2", " ", "R", " ", "\[Lambda]2"}]], "-", 
    RowBox[{
     FractionBox["3", "20"], " ", "K1", " ", "\[Lambda]2", " ", 
     RowBox[{"BesselI", "[", 
      RowBox[{"2", ",", 
       RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], "-", 
    FractionBox[
     RowBox[{"62", " ", "K11", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"2", ",", 
        RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], 
     RowBox[{"15", " ", 
      SuperscriptBox["R", "2"], " ", "\[Lambda]3"}]], "+", 
    FractionBox[
     RowBox[{"2", " ", "K11", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"2", ",", 
        RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], 
     RowBox[{"R", " ", "\[Lambda]3"}]], "-", 
    RowBox[{
     FractionBox["1", "3"], " ", "K11", " ", "\[Lambda]3", " ", 
     RowBox[{"BesselI", "[", 
      RowBox[{"2", ",", 
       RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], "-", 
    FractionBox[
     RowBox[{"K7", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"3", ",", 
        RowBox[{"R", " ", "\[Lambda]1"}]}], "]"}]}], "R"], "+", 
    FractionBox[
     RowBox[{"7", " ", "K1", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"3", ",", 
        RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], 
     RowBox[{"20", " ", "R"}]], "+", 
    FractionBox[
     RowBox[{"7", " ", "K11", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"3", ",", 
        RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], 
     RowBox[{"15", " ", "R"}]], "+", 
    RowBox[{
     FractionBox["3", "20"], " ", "K2", " ", "\[Lambda]2", " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"0", ",", 
       RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], "+", 
    RowBox[{
     FractionBox["1", "3"], " ", "K12", " ", "\[Lambda]3", " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"0", ",", 
       RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], "-", 
    FractionBox[
     RowBox[{"7", " ", "K8", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"1", ",", 
        RowBox[{"R", " ", "\[Lambda]1"}]}], "]"}]}], 
     RowBox[{"15", " ", "R"}]], "-", 
    RowBox[{
     FractionBox["1", "2"], " ", "K2", " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"1", ",", 
       RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], "+", 
    FractionBox[
     RowBox[{"23", " ", "K2", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"1", ",", 
        RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], 
     RowBox[{"20", " ", "R"}]], "-", 
    RowBox[{"2", " ", "K12", " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"1", ",", 
       RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], "+", 
    FractionBox[
     RowBox[{"23", " ", "K12", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"1", ",", 
        RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], 
     RowBox[{"15", " ", "R"}]], "-", 
    FractionBox[
     RowBox[{"2", " ", "K8", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"2", ",", 
        RowBox[{"R", " ", "\[Lambda]1"}]}], "]"}]}], 
     RowBox[{
      SuperscriptBox["R", "2"], " ", "\[Lambda]1"}]], "+", 
    FractionBox[
     RowBox[{"2", " ", "K8", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"2", ",", 
        RowBox[{"R", " ", "\[Lambda]1"}]}], "]"}]}], 
     RowBox[{"R", " ", "\[Lambda]1"}]], "+", 
    FractionBox[
     RowBox[{"31", " ", "K2", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"2", ",", 
        RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], 
     RowBox[{"10", " ", 
      SuperscriptBox["R", "2"], " ", "\[Lambda]2"}]], "-", 
    FractionBox[
     RowBox[{"3", " ", "K2", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"2", ",", 
        RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], 
     RowBox[{"2", " ", "R", " ", "\[Lambda]2"}]], "+", 
    RowBox[{
     FractionBox["3", "20"], " ", "K2", " ", "\[Lambda]2", " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"2", ",", 
       RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], "+", 
    FractionBox[
     RowBox[{"62", " ", "K12", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"2", ",", 
        RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], 
     RowBox[{"15", " ", 
      SuperscriptBox["R", "2"], " ", "\[Lambda]3"}]], "-", 
    FractionBox[
     RowBox[{"2", " ", "K12", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"2", ",", 
        RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], 
     RowBox[{"R", " ", "\[Lambda]3"}]], "+", 
    RowBox[{
     FractionBox["1", "3"], " ", "K12", " ", "\[Lambda]3", " ", 
     RowBox[{"BesselK", "[", 
      RowBox[{"2", ",", 
       RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], "-", 
    FractionBox[
     RowBox[{"K8", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"3", ",", 
        RowBox[{"R", " ", "\[Lambda]1"}]}], "]"}]}], "R"], "+", 
    FractionBox[
     RowBox[{"7", " ", "K2", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"3", ",", 
        RowBox[{"R", " ", "\[Lambda]2"}]}], "]"}]}], 
     RowBox[{"20", " ", "R"}]], "+", 
    FractionBox[
     RowBox[{"7", " ", "K12", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"3", ",", 
        RowBox[{"R", " ", "\[Lambda]3"}]}], "]"}]}], 
     RowBox[{"15", " ", "R"}]]}], ",", "0"}], "}"}]], "Output"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["With Boundary Conditions (large radius)", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Chi]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"BCrhs", ",", "BC"}], "}"}], "=", 
  RowBox[{"Normal", "[", 
   RowBox[{"CoefficientArrays", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "sn"}], "+", 
        RowBox[{"\[Chi]", 
         RowBox[{"(", 
          RowBox[{"(", 
           RowBox[{"\[Theta]", "-", "\[Theta]W"}], ")"}], ")"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"-", "Rnt"}], "+", 
        RowBox[{"\[Chi]", 
         RowBox[{"(", 
          RowBox[{"st", "+", 
           RowBox[{"2", "mnnt"}], "-", "uW"}], ")"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"-", "mnnn"}], "+", 
        RowBox[{"\[Chi]", 
         RowBox[{"(", "Rnn", ")"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"-", "mntt"}], "+", 
        RowBox[{"\[Chi]", 
         RowBox[{"(", "Rtt", ")"}]}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\[Theta]", ",", "sn", ",", "st", ",", "Rnn", ",", "Rnt", ",", "Rtt", 
       ",", "mnnn", ",", "mnnt", ",", "mntt", ",", "mttt"}], "}"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[Theta]W"}], " ", "\[Chi]"}], ",", 
     RowBox[{
      RowBox[{"-", "uW"}], " ", "\[Chi]"}], ",", "0", ",", "0"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Chi]", ",", 
       RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
       ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\[Chi]", ",", "0", ",", 
       RowBox[{"-", "1"}], ",", "0", ",", "0", ",", 
       RowBox[{"2", " ", "\[Chi]"}], ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "\[Chi]", ",", "0", ",", "0", ",", 
       RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "\[Chi]", ",", "0", 
       ",", "0", ",", 
       RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"vars", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"u", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"BC1rhs", ",", "BC1"}], "}"}], "=", 
   RowBox[{"Normal", "[", 
    RowBox[{"CoefficientArrays", "[", 
     RowBox[{
      RowBox[{"vars", "/.", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"BC", ".", "vars"}], "+", "BCrhs"}], "\[Equal]", "0"}], 
          ",", 
          RowBox[{"vars", "\[LeftDoubleBracket]", 
           RowBox[{"{", 
            RowBox[{"2", ",", "5", ",", "7", ",", "9"}], "}"}], 
           "\[RightDoubleBracket]"}]}], "]"}], "\[LeftDoubleBracket]", "1", 
        "\[RightDoubleBracket]"}]}], ",", "vars"}], "]"}], "]"}]}], 
  ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"BC1", ".", "vars"}], "+", "BC1rhs"}], ")"}], "-", 
   RowBox[{
    RowBox[{"IdentityMatrix", "[", "10", "]"}], ".", "vars"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Expand", "[", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"BC", ".", "vars"}], "+", "BCrhs"}], ")"}], "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", "\[Theta]W", " ", "\[Chi]"}], "+", 
    RowBox[{"2", " ", "\[Chi]", " ", 
     RowBox[{"u", "[", "1", "]"}]}], "-", 
    RowBox[{"u", "[", "2", "]"}], "+", 
    RowBox[{
     FractionBox["5", "28"], " ", "\[Chi]", " ", 
     RowBox[{"u", "[", "4", "]"}]}]}], ",", "0", ",", "0", ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"11", " ", "uW", " ", "\[Chi]"}], "5"]}], "+", 
    RowBox[{
     FractionBox["11", "5"], " ", "\[Chi]", " ", 
     RowBox[{"u", "[", "3", "]"}]}], "-", 
    RowBox[{"u", "[", "5", "]"}], "+", 
    RowBox[{
     FractionBox["22", "5"], " ", "\[Chi]", " ", 
     RowBox[{"u", "[", "8", "]"}]}]}], ",", "0", ",", 
   RowBox[{
    FractionBox[
     RowBox[{"6", " ", "\[Theta]W", " ", "\[Chi]"}], "5"], "-", 
    RowBox[{
     FractionBox["6", "5"], " ", "\[Chi]", " ", 
     RowBox[{"u", "[", "1", "]"}]}], "+", 
    RowBox[{
     FractionBox["93", "70"], " ", "\[Chi]", " ", 
     RowBox[{"u", "[", "4", "]"}]}], "-", 
    RowBox[{"u", "[", "7", "]"}]}], ",", "0", ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"3", " ", "\[Theta]W", " ", "\[Chi]"}], "5"]}], "+", 
    RowBox[{
     FractionBox["3", "5"], " ", "\[Chi]", " ", 
     RowBox[{"u", "[", "1", "]"}]}], "-", 
    RowBox[{
     FractionBox["111", "280"], " ", "\[Chi]", " ", 
     RowBox[{"u", "[", "4", "]"}]}], "+", 
    RowBox[{
     FractionBox["15", "28"], " ", "\[Chi]", " ", 
     RowBox[{"u", "[", "6", "]"}]}], "-", 
    RowBox[{"u", "[", "9", "]"}]}], ",", "0"}], "}"}]], "Output"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[Theta]W"}], " ", "\[Chi]"}], "+", 
    RowBox[{"\[Chi]", " ", 
     RowBox[{"u", "[", "1", "]"}]}], "-", 
    FractionBox[
     RowBox[{"u", "[", "2", "]"}], "2"], "+", 
    RowBox[{
     FractionBox["5", "56"], " ", "\[Chi]", " ", 
     RowBox[{"u", "[", "4", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "uW"}], " ", "\[Chi]"}], "+", 
    RowBox[{"\[Chi]", " ", 
     RowBox[{"u", "[", "3", "]"}]}], "-", 
    FractionBox[
     RowBox[{"5", " ", 
      RowBox[{"u", "[", "5", "]"}]}], "11"], "+", 
    RowBox[{"2", " ", "\[Chi]", " ", 
     RowBox[{"u", "[", "8", "]"}]}]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"28", " ", "\[Theta]W", " ", "\[Chi]"}], "31"], "-", 
    RowBox[{
     FractionBox["28", "31"], " ", "\[Chi]", " ", 
     RowBox[{"u", "[", "1", "]"}]}], "+", 
    RowBox[{"\[Chi]", " ", 
     RowBox[{"u", "[", "4", "]"}]}], "-", 
    FractionBox[
     RowBox[{"70", " ", 
      RowBox[{"u", "[", "7", "]"}]}], "93"]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"28", " ", "\[Theta]W", " ", "\[Chi]"}], "25"]}], "+", 
    RowBox[{
     FractionBox["28", "25"], " ", "\[Chi]", " ", 
     RowBox[{"u", "[", "1", "]"}]}], "-", 
    RowBox[{
     FractionBox["37", "50"], " ", "\[Chi]", " ", 
     RowBox[{"u", "[", "4", "]"}]}], "+", 
    RowBox[{"\[Chi]", " ", 
     RowBox[{"u", "[", "6", "]"}]}], "-", 
    FractionBox[
     RowBox[{"28", " ", 
      RowBox[{"u", "[", "9", "]"}]}], "15"]}]}], "}"}]], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
       "-", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], ",", 
      RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
     "}"}], "&"}], ",", 
   RowBox[{"Drop", "[", 
    RowBox[{
     RowBox[{"ArrayRules", "[", 
      RowBox[{"SparseArray", "[", "BC1", "]"}], "]"}], ",", 
     RowBox[{"-", "1"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
       "-", 
       RowBox[{"{", "1", "}"}]}], ",", 
      RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
     "}"}], "&"}], ",", 
   RowBox[{"Drop", "[", 
    RowBox[{
     RowBox[{"ArrayRules", "[", 
      RowBox[{"SparseArray", "[", "BC1rhs", "]"}], "]"}], ",", 
     RowBox[{"-", "1"}]}], "]"}]}], "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"2", " ", "\[Chi]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     FractionBox[
      RowBox[{"5", " ", "\[Chi]"}], "28"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"4", ",", "2"}], "}"}], ",", 
     FractionBox[
      RowBox[{"11", " ", "\[Chi]"}], "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"4", ",", "7"}], "}"}], ",", 
     FractionBox[
      RowBox[{"22", " ", "\[Chi]"}], "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5", ",", "5"}], "}"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"6", ",", "0"}], "}"}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"6", " ", "\[Chi]"}], "5"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"6", ",", "3"}], "}"}], ",", 
     FractionBox[
      RowBox[{"93", " ", "\[Chi]"}], "70"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"7", ",", "7"}], "}"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"8", ",", "0"}], "}"}], ",", 
     FractionBox[
      RowBox[{"3", " ", "\[Chi]"}], "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"8", ",", "3"}], "}"}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"111", " ", "\[Chi]"}], "280"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"8", ",", "5"}], "}"}], ",", 
     FractionBox[
      RowBox[{"15", " ", "\[Chi]"}], "28"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"9", ",", "9"}], "}"}], ",", "1"}], "}"}]}], "}"}]], "Output"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[Theta]W", " ", "\[Chi]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "4", "}"}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"11", " ", "uW", " ", "\[Chi]"}], "5"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "6", "}"}], ",", 
     FractionBox[
      RowBox[{"6", " ", "\[Theta]W", " ", "\[Chi]"}], "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "8", "}"}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"3", " ", "\[Theta]W", " ", "\[Chi]"}], "5"]}]}], "}"}]}], 
  "}"}]], "Output"]
}, Closed]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"R0", "=", 
     RowBox[{"1", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"R1", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Chi]", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]0", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]1", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"uW0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A1", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A2", "=", 
     RowBox[{"1", "/", "10"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"scaling1", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"C1", "\[Rule]", 
        RowBox[{"C1", "/", "\[Tau]"}]}], ",", 
       RowBox[{"K1", "\[Rule]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"BI", "[", 
           RowBox[{"1", ",", 
            RowBox[{"\[Lambda]2", " ", 
             FractionBox["R1", "\[Tau]"]}]}], "]"}], 
          RowBox[{"-", "1"}]], "K1"}]}], ",", 
       RowBox[{"K2", "\[Rule]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"BK", "[", 
           RowBox[{"1", ",", 
            RowBox[{"\[Lambda]2", " ", 
             FractionBox["R0", "\[Tau]"]}]}], "]"}], 
          RowBox[{"-", "1"}]], "K2"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"K3", "\[Rule]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"BK", "[", 
           RowBox[{"0", ",", 
            RowBox[{"\[Lambda]2", " ", 
             FractionBox["R0", "\[Tau]"]}]}], "]"}], 
          RowBox[{"-", "1"}]], "K3"}]}], ",", 
       RowBox[{"K4", "\[Rule]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"BI", "[", 
           RowBox[{"0", ",", 
            RowBox[{"\[Lambda]2", " ", 
             FractionBox["R1", "\[Tau]"]}]}], "]"}], 
          RowBox[{"-", "1"}]], "K4"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"K7", "\[Rule]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"BI", "[", 
           RowBox[{"1", ",", 
            RowBox[{"\[Lambda]1", " ", 
             FractionBox["R1", "\[Tau]"]}]}], "]"}], 
          RowBox[{"-", "1"}]], "K7"}]}], ",", 
       RowBox[{"K8", "\[Rule]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"BK", "[", 
           RowBox[{"1", ",", 
            RowBox[{"\[Lambda]1", " ", 
             FractionBox["R0", "\[Tau]"]}]}], "]"}], 
          RowBox[{"-", "1"}]], "K8"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"K9", "\[Rule]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"BI", "[", 
           RowBox[{"1", ",", 
            RowBox[{"\[Lambda]3", " ", 
             FractionBox["R1", "\[Tau]"]}]}], "]"}], 
          RowBox[{"-", "1"}]], "K9"}]}], ",", 
       RowBox[{"K10", "\[Rule]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"BK", "[", 
           RowBox[{"1", ",", 
            RowBox[{"\[Lambda]3", " ", 
             FractionBox["R0", "\[Tau]"]}]}], "]"}], 
          RowBox[{"-", "1"}]], "K10"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"K11", "\[Rule]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"BI", "[", 
           RowBox[{"2", ",", 
            RowBox[{"\[Lambda]3", " ", 
             FractionBox["R1", "\[Tau]"]}]}], "]"}], 
          RowBox[{"-", "1"}]], "K11"}]}], ",", 
       RowBox[{"K12", "\[Rule]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"BK", "[", 
           RowBox[{"2", ",", 
            RowBox[{"\[Lambda]3", " ", 
             FractionBox["R0", "\[Tau]"]}]}], "]"}], 
          RowBox[{"-", "1"}]], "K12"}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"scaling", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"C1", "=", 
   RowBox[{"C2", "=", 
    RowBox[{"K1", "=", 
     RowBox[{"K2", "=", 
      RowBox[{"K5", "=", 
       RowBox[{"K6", "=", 
        RowBox[{"K7", "=", 
         RowBox[{"K8", "=", 
          RowBox[{"K11", "=", 
           RowBox[{"K12", "=", "0"}]}]}]}]}]}]}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"U", "[", 
    RowBox[{"r_", ",", "\[Theta]_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"nn", "[", "r", "]"}], 
      RowBox[{"ur", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}]}], ",", 
     RowBox[{"u\[Theta]", "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
     RowBox[{"\[Sigma]rr", "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"nn", "[", "r", "]"}], 
      RowBox[{"\[Sigma]r\[Theta]", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}]}], ",", 
     RowBox[{"\[Sigma]\[Theta]\[Theta]", "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"nn", "[", "r", "]"}], 
      RowBox[{"mrrr", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}]}], ",", 
     RowBox[{"mrr\[Theta]", "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"nn", "[", "r", "]"}], 
      RowBox[{"mr\[Theta]\[Theta]", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}]}], ",", 
     RowBox[{"m\[Theta]\[Theta]\[Theta]", "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "}"}]}], ";", 
  RowBox[{
   RowBox[{"nn", "[", "R0", "]"}], "=", 
   RowBox[{"-", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"nn", "[", "R1", "]"}], "=", "1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"solbc", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Join", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"coef", "[", 
           RowBox[{
            RowBox[{"Expand", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"BC", ".", 
                RowBox[{"U", "[", 
                 RowBox[{"R0", ",", "\[Theta]"}], "]"}]}], "+", "BCrhs"}], "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Theta]W", "\[Rule]", "\[Theta]0"}], ",", 
                RowBox[{"uW", "\[Rule]", 
                 RowBox[{"uW0", " ", 
                  RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], "}"}]}], "]"}],
             ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"coef", "[", 
           RowBox[{
            RowBox[{"Expand", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"BC", ".", 
                RowBox[{"U", "[", 
                 RowBox[{"R1", ",", "\[Theta]"}], "]"}]}], "+", "BCrhs"}], "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Theta]W", "\[Rule]", "\[Theta]1"}], ",", 
                RowBox[{"uW", "\[Rule]", "0"}]}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}]}], 
         "\[IndentingNewLine]", "]"}], "/.", "scaling"}], ")"}], "\[Equal]", 
      "0"}], ",", 
     RowBox[{"{", 
      RowBox[{"C0", ",", "C3", ",", "K3", ",", "K4", ",", "K9", ",", "K10"}], 
      "}"}]}], "]"}], "\[LeftDoubleBracket]", "1", 
   "\[RightDoubleBracket]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"C0", "\[Rule]", "0.75817940115657`"}], ",", 
   RowBox[{"C3", "\[Rule]", 
    RowBox[{"-", "0.1680773374037423`"}]}], ",", 
   RowBox[{"K3", "\[Rule]", "0.13618194331758404`"}], ",", 
   RowBox[{"K4", "\[Rule]", 
    RowBox[{"-", "0.4397130699425769`"}]}], ",", 
   RowBox[{"K9", "\[Rule]", "0.03300953404881733`"}], ",", 
   RowBox[{"K10", "\[Rule]", 
    RowBox[{"-", "0.15561422395271596`"}]}]}], "}"}]], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"bBC", ",", "ABC"}], "}"}], "=", 
   RowBox[{"FunctionExpand", "[", 
    RowBox[{"Simplify", "[", 
     RowBox[{"Normal", "[", 
      RowBox[{"CoefficientArrays", "[", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Join", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"coef", "[", 
              RowBox[{
               RowBox[{"Expand", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"BC", ".", 
                   RowBox[{"U", "[", 
                    RowBox[{"R0", ",", "\[Theta]"}], "]"}]}], "+", "BCrhs"}], 
                 "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\[Theta]W", "\[Rule]", "\[Theta]0"}], ",", 
                   RowBox[{"uW", "\[Rule]", 
                    RowBox[{"uW0", " ", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], "}"}]}], 
                "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}], ",",
              "\[IndentingNewLine]", 
             RowBox[{"coef", "[", 
              RowBox[{
               RowBox[{"Expand", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"BC", ".", 
                   RowBox[{"U", "[", 
                    RowBox[{"R1", ",", "\[Theta]"}], "]"}]}], "+", "BCrhs"}], 
                 "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\[Theta]W", "\[Rule]", "\[Theta]1"}], ",", 
                   RowBox[{"uW", "\[Rule]", "0"}]}], "}"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}]}], 
            "\[IndentingNewLine]", "]"}], "/.", "scaling1"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "#", "]"}], ">", "0"}], "&"}]}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
         "C0", ",", "C3", ",", "K3", ",", "K4", ",", "K9", ",", "K10"}], 
         "}"}]}], "]"}], "]"}], "]"}], "]"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"scale1", "=", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      SuperscriptBox["\[Tau]", 
       RowBox[{"-", "2"}]], ",", 
      SuperscriptBox["\[Tau]", 
       RowBox[{"-", "2"}]], ",", "1", ",", 
      SuperscriptBox["\[Tau]", 
       RowBox[{"-", "2"}]], ",", 
      SuperscriptBox["\[Tau]", 
       RowBox[{"-", "2"}]]}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scale2", "=", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"BesselK", "[", 
         RowBox[{"0", ",", 
          FractionBox["\[Lambda]2", 
           RowBox[{"R1", " ", "\[Tau]"}]]}], "]"}], ")"}], 
       RowBox[{"-", "1"}]], ",", 
      RowBox[{
       SuperscriptBox["\[Tau]", "2"], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"BesselI", "[", 
          RowBox[{"0", ",", 
           FractionBox["\[Lambda]2", 
            RowBox[{"R0", " ", "\[Tau]"}]]}], "]"}], ")"}], 
        RowBox[{"-", "1"}]]}], ",", 
      RowBox[{
       SuperscriptBox["\[Tau]", "2"], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"BesselI", "[", 
          RowBox[{"0", ",", 
           FractionBox["\[Lambda]3", 
            RowBox[{"R0", " ", "\[Tau]"}]]}], "]"}], ")"}], 
        RowBox[{"-", "1"}]]}], ",", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"BesselK", "[", 
         RowBox[{"0", ",", 
          FractionBox["\[Lambda]3", 
           RowBox[{"R1", " ", "\[Tau]"}]]}], "]"}], ")"}], 
       RowBox[{"-", "1"}]]}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"C0", ",", "C3", ",", "K3", ",", "K4", ",", "K9", ",", "K10"}], 
     "}"}], "\[Rule]", 
    RowBox[{"-", 
     RowBox[{"scale2", ".", 
      RowBox[{"Inverse", "[", 
       RowBox[{
        RowBox[{"scale1", ".", "ABC", ".", "scale2"}], "/.", 
        RowBox[{"{", 
         RowBox[{"\[Tau]", "\[Rule]", "100.0"}], "}"}]}], "]"}], ".", 
      "scale1", ".", "bBC"}]}]}], "/.", 
   RowBox[{"{", 
    RowBox[{"\[Tau]", "\[Rule]", "100.0"}], "}"}]}], "]"}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"C0", "\[Rule]", 
    RowBox[{"-", "639998.6239659613`"}]}], ",", 
   RowBox[{"C3", "\[Rule]", 
    RowBox[{"-", "0.0029760604617194986`"}]}], ",", 
   RowBox[{"K3", "\[Rule]", "0.002318341291015713`"}], ",", 
   RowBox[{"K4", "\[Rule]", 
    RowBox[{"-", "640555.7422058582`"}]}], ",", 
   RowBox[{"K9", "\[Rule]", 
    RowBox[{"-", "277.91528928279877`"}]}], ",", 
   RowBox[{"K10", "\[Rule]", 
    RowBox[{"-", "0.0026686897872423287`"}]}]}], "}"}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CForm", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "C0", ",", "C1", ",", "C2", ",", "C3", ",", "K1", ",", "K2", ",", "K3", 
      ",", "K4", ",", "K7", ",", "K8"}], "}"}], "/.", "scaling"}], "/.", 
   "solbc"}], "]"}]], "Input"],

Cell["\<\
List(1.8779973238556051,0.48170199857369206,-0.032245279747091384,0.\
08526741914275243,5.806990250981511e-9,5.91399305082199,
   -1.316040533386685,-1.171551028043168e-8,-2.0241640291810703e-8,1.\
4316433131003932)\
\>", "Output"]
}, Closed]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"basis", "[", "\[CurlyPhi]_", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], ",", 
        RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}], ",", 
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}]}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pC", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"p", "[", 
       RowBox[{
        SqrtBox[
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"]}]], ",", 
        RowBox[{"ArcTan", "[", 
         RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "/.", "scaling"}], "/.", 
     "solbc"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ux", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}], ",", 
     RowBox[{"uy", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}]}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ur", "[", 
         RowBox[{
          SqrtBox[
           RowBox[{
            SuperscriptBox["x", "2"], "+", 
            SuperscriptBox["y", "2"]}]], ",", 
          RowBox[{"ArcTan", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], "]"}], ",", 
        RowBox[{"u\[Theta]", "[", 
         RowBox[{
          SqrtBox[
           RowBox[{
            SuperscriptBox["x", "2"], "+", 
            SuperscriptBox["y", "2"]}]], ",", 
          RowBox[{"ArcTan", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}], "}"}], ".", 
      RowBox[{"basis", "[", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"x", ",", "y"}], "]"}], "]"}]}], "/.", "scaling"}], "/.", 
    "solbc"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Sigma]xx", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}], ",", 
       RowBox[{"\[Sigma]xy", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Sigma]yx", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}], ",", 
       RowBox[{"\[Sigma]yy", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}]}], "}"}]}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"basis", "[", 
        RowBox[{"ArcTan", "[", 
         RowBox[{"x", ",", "y"}], "]"}], "]"}], "]"}], ".", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Sigma]rr", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]], ",", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}], "]"}], ",", 
            RowBox[{"\[Sigma]r\[Theta]", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]], ",", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Sigma]r\[Theta]", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]], ",", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}], "]"}], ",", 
            RowBox[{"\[Sigma]\[Theta]\[Theta]", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]], ",", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}], "}"}]}], "}"}], ".", 
        RowBox[{"basis", "[", 
         RowBox[{"ArcTan", "[", 
          RowBox[{"x", ",", "y"}], "]"}], "]"}]}], ")"}]}], "/.", "scaling"}],
     "/.", "solbc"}]}], ";"}], "\[IndentingNewLine]"}], "Input"],

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"pC", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2.1"}], ",", "2.1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "2.1"}], ",", "2.1"}], "}"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "30"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{
       RowBox[{"ColorData", "[", "\"\<SouthwestColors\>\"", "]"}], "[", "z", 
       "]"}]}], "]"}]}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{"R0", "<", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]], "<", "R1"}]}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"ux", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2.1"}], ",", "2.1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "2.1"}], ",", "2.1"}], "}"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "30"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{
       RowBox[{"ColorData", "[", "\"\<SouthwestColors\>\"", "]"}], "[", "z", 
       "]"}]}], "]"}]}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{"R0", "<", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]], "<", "R1"}]}], "]"}]}]}], 
  "]"}]], "Input"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["first order 0-1-2-3-System with 2-3-relaxation", "Section"],

Cell[CellGroupData[{

Cell["Final Result", "Subsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"coef", "[", 
    RowBox[{"expr_", ",", "var_"}], "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Normal", "[", 
     RowBox[{"CoefficientArrays", "[", 
      RowBox[{"expr", ",", "var"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TraceFreeSym2", "[", "mat_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"(", 
      RowBox[{"mat", "+", 
       RowBox[{"Transpose", "[", "mat", "]"}]}], ")"}]}], "-", 
    RowBox[{
     FractionBox["1", "3"], 
     RowBox[{"Tr", "[", "mat", "]"}], 
     RowBox[{"IdentityMatrix", "[", "3", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TraceFreeSym3", "[", "mat_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"perm", ",", "sym1", ",", "trace"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"perm", "=", 
      RowBox[{"Permutations", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"sym1", "=", 
      RowBox[{"Expand", "[", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"Length", "[", "perm", "]"}]], 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"mat", ",", "idx"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"idx", ",", "perm"}], "}"}]}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"trace", "=", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"sym1", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "jj", ",", "jj"}], "\[RightDoubleBracket]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"jj", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Expand", "[", 
      RowBox[{"sym1", "-", 
       RowBox[{
        FractionBox["1", "5"], 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
            "trace", "\[LeftDoubleBracket]", "ii", "\[RightDoubleBracket]"}], 
            
            RowBox[{"KroneckerDelta", "[", 
             RowBox[{"jj", ",", "kk"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{
            "trace", "\[LeftDoubleBracket]", "jj", "\[RightDoubleBracket]"}], 
            
            RowBox[{"KroneckerDelta", "[", 
             RowBox[{"ii", ",", "kk"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{
            "trace", "\[LeftDoubleBracket]", "kk", "\[RightDoubleBracket]"}], 
            
            RowBox[{"KroneckerDelta", "[", 
             RowBox[{"ii", ",", "jj"}], "]"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"ii", ",", "1", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"jj", ",", "1", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"kk", ",", "1", ",", "3"}], "}"}]}], "]"}]}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "\[Tau]", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3", ",", 
    "a0", ",", "b0", ",", "d0", ",", "\[Kappa]0", ",", "\[Gamma]0", ",", 
    "\[Omega]0", ",", "a", ",", "b", ",", "d", ",", "\[Gamma]", ",", 
    "\[Kappa]", ",", "\[Omega]", ",", "C0", ",", "C1", ",", "C2", ",", "C3", 
    ",", "C4", ",", "C5", ",", "C6", ",", "C7", ",", "C8", ",", "C9", ",", 
    "C10", ",", "C11", ",", "C12", ",", "K1", ",", "K2", ",", "K3", ",", "K4",
     ",", "K5", ",", "K6", ",", "K7", ",", "K8", ",", "K9", ",", "K10", ",", 
    "K11", ",", "K12"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ur", "[", 
    RowBox[{"r_", ",", "\[Theta]_"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"a0", "[", "r", "]"}], "+", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], 
     RowBox[{"a", "[", "r", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"u\[Theta]", "[", 
     RowBox[{"r_", ",", "\[Theta]_"}], "]"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"b0", "[", "r", "]"}], "-", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"b", "[", "r", "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"u", "[", 
     RowBox[{"r_", ",", "\[Theta]_"}], "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ur", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
      RowBox[{"u\[Theta]", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", "0"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"p", "[", 
     RowBox[{"r_", ",", "\[Theta]_"}], "]"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"d0", "[", "r", "]"}], "+", 
     RowBox[{
      RowBox[{"d", "[", "r", "]"}], 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]rr", "[", 
    RowBox[{"r_", ",", "\[Theta]_"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"\[Gamma]", "[", "r", "]"}]}], "+", 
    RowBox[{"\[Gamma]0", "[", "r", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]\[Theta]\[Theta]", "[", 
    RowBox[{"r_", ",", "\[Theta]_"}], "]"}], "=", 
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"\[Omega]", "[", "r", "]"}]}], "+", 
      RowBox[{"\[Omega]0", "[", "r", "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]r\[Theta]", "[", 
    RowBox[{"r_", ",", "\[Theta]_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"\[Kappa]0", "[", "r", "]"}], "+", 
    RowBox[{
     RowBox[{"Sin", "[", "\[Theta]", "]"}], 
     RowBox[{"\[Kappa]", "[", "r", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Sigma]zz", "[", 
     RowBox[{"r_", ",", "\[Theta]_"}], "]"}], "=", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"\[Sigma]rr", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "-", 
     RowBox[{"\[Sigma]\[Theta]\[Theta]", "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Sigma]", "[", 
     RowBox[{"r_", ",", "\[Theta]_"}], "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Sigma]rr", "[", 
         RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
        RowBox[{"\[Sigma]r\[Theta]", "[", 
         RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Sigma]r\[Theta]", "[", 
         RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
        RowBox[{"\[Sigma]\[Theta]\[Theta]", "[", 
         RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        RowBox[{"\[Sigma]zz", "[", 
         RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"mrrr", "[", 
      RowBox[{"r_", ",", "\[Theta]_"}], "]"}], ",", 
     RowBox[{"mrr\[Theta]", "[", 
      RowBox[{"r_", ",", "\[Theta]_"}], "]"}], ",", 
     RowBox[{"mr\[Theta]\[Theta]", "[", 
      RowBox[{"r_", ",", "\[Theta]_"}], "]"}], ",", 
     RowBox[{"m\[Theta]\[Theta]\[Theta]", "[", 
      RowBox[{"r_", ",", "\[Theta]_"}], "]"}]}], "}"}], "=", 
   RowBox[{"\[Tau]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"\[Gamma]0", "[", "r", "]"}]}], 
        RowBox[{"5", " ", "r"}]], "+", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"\[Omega]0", "[", "r", "]"}]}], 
        RowBox[{"5", " ", "r"}]], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"2", " ", 
            RowBox[{"\[Gamma]", "[", "r", "]"}]}], 
           RowBox[{"5", " ", "r"}]], "+", 
          FractionBox[
           RowBox[{"2", " ", 
            RowBox[{"\[Kappa]", "[", "r", "]"}]}], 
           RowBox[{"5", " ", "r"}]], "+", 
          FractionBox[
           RowBox[{"2", " ", 
            RowBox[{"\[Omega]", "[", "r", "]"}]}], 
           RowBox[{"5", " ", "r"}]], "-", 
          FractionBox[
           RowBox[{"3", " ", 
            RowBox[{
             SuperscriptBox["\[Gamma]", "\[Prime]",
              MultilineFunction->None], "[", "r", "]"}]}], "5"]}], ")"}]}], 
       "-", 
       FractionBox[
        RowBox[{"3", " ", 
         RowBox[{
          SuperscriptBox["\[Gamma]0", "\[Prime]",
           MultilineFunction->None], "[", "r", "]"}]}], "5"]}], ",", 
      RowBox[{
       FractionBox[
        RowBox[{"14", " ", 
         RowBox[{"\[Kappa]0", "[", "r", "]"}]}], 
        RowBox[{"15", " ", "r"}]], "+", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"\[Gamma]", "[", "r", "]"}], 
           RowBox[{"3", " ", "r"}]], "+", 
          FractionBox[
           RowBox[{"14", " ", 
            RowBox[{"\[Kappa]", "[", "r", "]"}]}], 
           RowBox[{"15", " ", "r"}]], "+", 
          FractionBox[
           RowBox[{"2", " ", 
            RowBox[{"\[Omega]", "[", "r", "]"}]}], 
           RowBox[{"15", " ", "r"}]], "-", 
          FractionBox[
           RowBox[{"8", " ", 
            RowBox[{
             SuperscriptBox["\[Kappa]", "\[Prime]",
              MultilineFunction->None], "[", "r", "]"}]}], "15"]}], ")"}]}], 
       "-", 
       FractionBox[
        RowBox[{"8", " ", 
         RowBox[{
          SuperscriptBox["\[Kappa]0", "\[Prime]",
           MultilineFunction->None], "[", "r", "]"}]}], "15"]}], ",", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"8", " ", 
          RowBox[{"\[Gamma]0", "[", "r", "]"}]}], 
         RowBox[{"15", " ", "r"}]]}], "-", 
       FractionBox[
        RowBox[{"8", " ", 
         RowBox[{"\[Omega]0", "[", "r", "]"}]}], 
        RowBox[{"15", " ", "r"}]], "+", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{
          SuperscriptBox["\[Gamma]0", "\[Prime]",
           MultilineFunction->None], "[", "r", "]"}]}], "15"], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"8", " ", 
             RowBox[{"\[Gamma]", "[", "r", "]"}]}], 
            RowBox[{"15", " ", "r"}]]}], "-", 
          FractionBox[
           RowBox[{"8", " ", 
            RowBox[{"\[Kappa]", "[", "r", "]"}]}], 
           RowBox[{"15", " ", "r"}]], "-", 
          FractionBox[
           RowBox[{"8", " ", 
            RowBox[{"\[Omega]", "[", "r", "]"}]}], 
           RowBox[{"15", " ", "r"}]], "+", 
          FractionBox[
           RowBox[{"2", " ", 
            RowBox[{
             SuperscriptBox["\[Gamma]", "\[Prime]",
              MultilineFunction->None], "[", "r", "]"}]}], "15"], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[Omega]", "\[Prime]",
             MultilineFunction->None], "[", "r", "]"}], "3"]}], ")"}]}], "+", 
       
       FractionBox[
        RowBox[{
         SuperscriptBox["\[Omega]0", "\[Prime]",
          MultilineFunction->None], "[", "r", "]"}], "3"]}], ",", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"6", " ", 
          RowBox[{"\[Kappa]0", "[", "r", "]"}]}], 
         RowBox[{"5", " ", "r"}]]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"6", " ", 
             RowBox[{"\[Kappa]", "[", "r", "]"}]}], 
            RowBox[{"5", " ", "r"}]]}], "-", 
          FractionBox[
           RowBox[{"3", " ", 
            RowBox[{"\[Omega]", "[", "r", "]"}]}], 
           RowBox[{"5", " ", "r"}]], "+", 
          FractionBox[
           RowBox[{"2", " ", 
            RowBox[{
             SuperscriptBox["\[Kappa]", "\[Prime]",
              MultilineFunction->None], "[", "r", "]"}]}], "5"]}], ")"}]}], 
       "+", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{
          SuperscriptBox["\[Kappa]0", "\[Prime]",
           MultilineFunction->None], "[", "r", "]"}]}], "5"]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"mrzz", "[", 
     RowBox[{"r_", ",", "\[Theta]_"}], "]"}], "=", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"mrrr", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "-", 
     RowBox[{"mr\[Theta]\[Theta]", "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"eqns", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"coef", "[", 
      RowBox[{
       RowBox[{"Div1", "[", 
        RowBox[{"u", "[", 
         RowBox[{"r", ",", "\[Theta]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"coef", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Grad0", "[", 
         RowBox[{"p", "[", 
          RowBox[{"r", ",", "\[Theta]"}], "]"}], "]"}], "+", 
        RowBox[{"Div2", "[", 
         RowBox[{"\[Sigma]", "[", 
          RowBox[{"r", ",", "\[Theta]"}], "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"coef", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"2", 
         RowBox[{"TraceFreeSym2", "[", 
          RowBox[{"Grad1", "[", 
           RowBox[{"u", "[", 
            RowBox[{"r", ",", "\[Theta]"}], "]"}], "]"}], "]"}]}], "+", 
        RowBox[{
         FractionBox["1", "\[Tau]"], 
         RowBox[{"\[Sigma]", "[", 
          RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "-", 
        RowBox[{"2", "\[Tau]", " ", 
         RowBox[{"Div3", "[", 
          RowBox[{"TraceFreeSym3", "[", 
           RowBox[{"Grad2", "[", 
            RowBox[{"\[Sigma]", "[", 
             RowBox[{"r", ",", "\[Theta]"}], "]"}], "]"}], "]"}], "]"}]}]}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"coef", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         FractionBox["1", "\[Tau]"], 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"mrrr", "[", 
            RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
           RowBox[{"mrr\[Theta]", "[", 
            RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
           RowBox[{"mr\[Theta]\[Theta]", "[", 
            RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
           RowBox[{"m\[Theta]\[Theta]\[Theta]", "[", 
            RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "}"}]}], "+", 
        RowBox[{"Extract", "[", 
         RowBox[{
          RowBox[{"TraceFreeSym3", "[", 
           RowBox[{"Grad2", "[", 
            RowBox[{"\[Sigma]", "[", 
             RowBox[{"r", ",", "\[Theta]"}], "]"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", "2", ",", "2"}], "}"}]}], "}"}]}], "]"}]}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"with\[Tau]", "=", 
   RowBox[{"{", 
    RowBox[{"r", "\[Rule]", 
     RowBox[{"r", "/", "\[Tau]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]2", "=", 
   SqrtBox[
    FractionBox["5", "6"]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]3", "=", 
   SqrtBox[
    FractionBox["3", "2"]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BI", "[", 
    RowBox[{"i_", ",", "x_"}], "]"}], "=", 
   RowBox[{"BesselI", "[", 
    RowBox[{"i", ",", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BK", "[", 
     RowBox[{"i_", ",", "x_"}], "]"}], "=", 
    RowBox[{"BesselK", "[", 
     RowBox[{"i", ",", "x"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d", "[", "r_", "]"}], "=", 
   RowBox[{
    RowBox[{
     FractionBox["C1", "r"], "+", 
     RowBox[{"C2", " ", "r"}], "+", 
     RowBox[{"K1", " ", 
      RowBox[{"BI", "[", 
       RowBox[{"1", ",", 
        RowBox[{"\[Lambda]2", " ", "r"}]}], "]"}]}], "+", 
     RowBox[{"K2", " ", 
      RowBox[{"BK", "[", 
       RowBox[{"1", ",", 
        RowBox[{"\[Lambda]2", " ", "r"}]}], "]"}]}]}], "/.", "with\[Tau]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"d0", "[", "r_", "]"}], "=", 
    RowBox[{
     RowBox[{"C8", "+", 
      RowBox[{"K3", " ", 
       RowBox[{"BK", "[", 
        RowBox[{"0", ",", 
         RowBox[{"\[Lambda]2", " ", "r"}]}], "]"}]}], "+", 
      RowBox[{"K4", " ", 
       RowBox[{"BI", "[", 
        RowBox[{"0", ",", 
         RowBox[{"\[Lambda]2", " ", "r"}]}], "]"}]}]}], "/.", 
     "with\[Tau]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a0", "[", "r_", "]"}], "=", 
   RowBox[{
    RowBox[{
     FractionBox["C3", "2"], 
     FractionBox["1", "r"]}], "/.", "with\[Tau]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"b0", "[", "r_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"C7", " ", "r"}], "+", 
     FractionBox["C4", 
      RowBox[{"2", "r"}]]}], "/.", "with\[Tau]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a", "[", "r_", "]"}], "=", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"C2", " ", 
       SuperscriptBox["r", "2"]}], "8"], "-", 
     FractionBox["C6", 
      SuperscriptBox["r", "2"]], "+", "C5", "-", 
     RowBox[{
      FractionBox["1", "2"], " ", "C1", " ", 
      RowBox[{"Log", "[", "r", "]"}]}]}], "/.", "with\[Tau]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"b", "[", "r_", "]"}], "=", 
    RowBox[{
     RowBox[{"C5", "+", 
      FractionBox["C6", 
       SuperscriptBox["r", "2"]], "+", 
      FractionBox[
       RowBox[{"3", " ", "C2", " ", 
        SuperscriptBox["r", "2"]}], "8"], "+", 
      RowBox[{"C1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], "-", 
         FractionBox[
          RowBox[{"Log", "[", "r", "]"}], "2"]}], ")"}]}]}], "/.", 
     "with\[Tau]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Kappa]0", "[", "r_", "]"}], "=", 
    RowBox[{
     FractionBox["C4", 
      SuperscriptBox["r", "2"]], "/.", "with\[Tau]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Gamma]0", "[", "r_", "]"}], "=", 
    RowBox[{
     RowBox[{
      FractionBox["C3", 
       SuperscriptBox["r", "2"]], "+", 
      FractionBox[
       RowBox[{"K8", " ", 
        RowBox[{"BI", "[", 
         RowBox[{"1", ",", 
          RowBox[{"r", " ", "\[Lambda]3"}]}], "]"}]}], "r"], "+", 
      RowBox[{"K4", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"BI", "[", 
            RowBox[{"1", ",", 
             RowBox[{"r", " ", "\[Lambda]2"}]}], "]"}], 
           RowBox[{"2", " ", "r", " ", "\[Lambda]2"}]]}], "-", 
         RowBox[{"BI", "[", 
          RowBox[{"2", ",", 
           RowBox[{"r", " ", "\[Lambda]2"}]}], "]"}]}], ")"}]}], "+", 
      FractionBox[
       RowBox[{"K7", " ", 
        RowBox[{"BK", "[", 
         RowBox[{"1", ",", 
          RowBox[{"r", " ", "\[Lambda]3"}]}], "]"}]}], "r"], "+", 
      RowBox[{"K3", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"BK", "[", 
           RowBox[{"1", ",", 
            RowBox[{"r", " ", "\[Lambda]2"}]}], "]"}], 
          RowBox[{"2", " ", "r", " ", "\[Lambda]2"}]], "-", 
         RowBox[{"BK", "[", 
          RowBox[{"2", ",", 
           RowBox[{"r", " ", "\[Lambda]2"}]}], "]"}]}], ")"}]}]}], "/.", 
     "with\[Tau]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Omega]0", "[", "r_", "]"}], "=", 
   RowBox[{
    RowBox[{
     FractionBox["C3", 
      SuperscriptBox["r", "2"]], "+", 
     RowBox[{"K4", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", 
         RowBox[{"BI", "[", 
          RowBox[{"0", ",", 
           RowBox[{"r", " ", "\[Lambda]2"}]}], "]"}]}], "+", 
        FractionBox[
         RowBox[{"3", " ", 
          RowBox[{"BI", "[", 
           RowBox[{"1", ",", 
            RowBox[{"r", " ", "\[Lambda]2"}]}], "]"}]}], 
         RowBox[{"2", " ", "r", " ", "\[Lambda]2"}]]}], ")"}]}], "+", 
     RowBox[{"K8", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Lambda]3"}], " ", 
         RowBox[{"BI", "[", 
          RowBox[{"0", ",", 
           RowBox[{"r", " ", "\[Lambda]3"}]}], "]"}]}], "+", 
        FractionBox[
         RowBox[{"BI", "[", 
          RowBox[{"1", ",", 
           RowBox[{"r", " ", "\[Lambda]3"}]}], "]"}], "r"]}], ")"}]}], "+", 
     RowBox[{"K3", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", 
         RowBox[{"BK", "[", 
          RowBox[{"0", ",", 
           RowBox[{"r", " ", "\[Lambda]2"}]}], "]"}]}], "-", 
        FractionBox[
         RowBox[{"3", " ", 
          RowBox[{"BK", "[", 
           RowBox[{"1", ",", 
            RowBox[{"r", " ", "\[Lambda]2"}]}], "]"}]}], 
         RowBox[{"2", " ", "r", " ", "\[Lambda]2"}]]}], ")"}]}], "+", 
     RowBox[{"K7", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Lambda]3", " ", 
         RowBox[{"BK", "[", 
          RowBox[{"0", ",", 
           RowBox[{"r", " ", "\[Lambda]3"}]}], "]"}]}], "+", 
        FractionBox[
         RowBox[{"BK", "[", 
          RowBox[{"1", ",", 
           RowBox[{"r", " ", "\[Lambda]3"}]}], "]"}], "r"]}], ")"}]}]}], "/.",
     "with\[Tau]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Omega]", "[", "r_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"C1", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["64", 
          RowBox[{"15", " ", 
           SuperscriptBox["r", "3"]}]]}], "+", 
        FractionBox["1", "r"]}], ")"}]}], "-", 
     FractionBox[
      RowBox[{"4", " ", "C6"}], 
      SuperscriptBox["r", "3"]], "-", 
     FractionBox[
      RowBox[{"C2", " ", "r"}], "2"], "+", 
     RowBox[{"K1", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", 
         RowBox[{"BI", "[", 
          RowBox[{"1", ",", 
           RowBox[{"r", " ", "\[Lambda]2"}]}], "]"}]}], "+", 
        FractionBox[
         RowBox[{"3", " ", 
          RowBox[{"BI", "[", 
           RowBox[{"2", ",", 
            RowBox[{"r", " ", "\[Lambda]2"}]}], "]"}]}], 
         RowBox[{"2", " ", "r", " ", "\[Lambda]2"}]]}], ")"}]}], "+", 
     RowBox[{"K6", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"BI", "[", 
          RowBox[{"1", ",", 
           RowBox[{"r", " ", "\[Lambda]3"}]}], "]"}]}], "+", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"BI", "[", 
           RowBox[{"2", ",", 
            RowBox[{"r", " ", "\[Lambda]3"}]}], "]"}]}], 
         RowBox[{"r", " ", "\[Lambda]3"}]]}], ")"}]}], "+", 
     RowBox[{"K2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", 
         RowBox[{"BK", "[", 
          RowBox[{"1", ",", 
           RowBox[{"r", " ", "\[Lambda]2"}]}], "]"}]}], "-", 
        FractionBox[
         RowBox[{"3", " ", 
          RowBox[{"BK", "[", 
           RowBox[{"2", ",", 
            RowBox[{"r", " ", "\[Lambda]2"}]}], "]"}]}], 
         RowBox[{"2", " ", "r", " ", "\[Lambda]2"}]]}], ")"}]}], "+", 
     RowBox[{"K5", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"BK", "[", 
          RowBox[{"1", ",", 
           RowBox[{"r", " ", "\[Lambda]3"}]}], "]"}]}], "-", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"BK", "[", 
           RowBox[{"2", ",", 
            RowBox[{"r", " ", "\[Lambda]3"}]}], "]"}]}], 
         RowBox[{"r", " ", "\[Lambda]3"}]]}], ")"}]}]}], "/.", 
    "with\[Tau]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Kappa]", "[", "r_", "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"64", " ", "C1"}], 
        RowBox[{"15", " ", 
         SuperscriptBox["r", "3"]}]]}], "-", 
      FractionBox[
       RowBox[{"4", " ", "C6"}], 
       SuperscriptBox["r", "3"]], "+", 
      FractionBox[
       RowBox[{"C2", " ", "r"}], "2"], "+", 
      RowBox[{"K1", 
       RowBox[{"(", 
        FractionBox[
         RowBox[{"3", " ", 
          RowBox[{"BI", "[", 
           RowBox[{"2", ",", 
            RowBox[{"r", " ", "\[Lambda]2"}]}], "]"}]}], 
         RowBox[{"2", " ", "r", " ", "\[Lambda]2"}]], ")"}]}], "+", 
      FractionBox[
       RowBox[{"2", " ", "K6", " ", 
        RowBox[{"BI", "[", 
         RowBox[{"2", ",", 
          RowBox[{"r", " ", "\[Lambda]3"}]}], "]"}]}], 
       RowBox[{"r", " ", "\[Lambda]3"}]], "-", 
      FractionBox[
       RowBox[{"3", " ", "K2", " ", 
        RowBox[{"BK", "[", 
         RowBox[{"2", ",", 
          RowBox[{"r", " ", "\[Lambda]2"}]}], "]"}]}], 
       RowBox[{"2", " ", "r", " ", "\[Lambda]2"}]], "-", 
      FractionBox[
       RowBox[{"2", " ", "K5", " ", 
        RowBox[{"BK", "[", 
         RowBox[{"2", ",", 
          RowBox[{"r", " ", "\[Lambda]3"}]}], "]"}]}], 
       RowBox[{"r", " ", "\[Lambda]3"}]]}], "/.", "with\[Tau]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Gamma]", "[", "r_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"C1", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["64", 
          RowBox[{"15", " ", 
           SuperscriptBox["r", "3"]}]]}], "+", 
        FractionBox["1", "r"]}], ")"}]}], "-", 
     FractionBox[
      RowBox[{"4", " ", "C6"}], 
      SuperscriptBox["r", "3"]], "-", 
     FractionBox[
      RowBox[{"C2", " ", "r"}], "2"], "+", 
     FractionBox[
      RowBox[{"2", " ", "K6", " ", 
       RowBox[{"BI", "[", 
        RowBox[{"2", ",", 
         RowBox[{"r", " ", "\[Lambda]3"}]}], "]"}]}], 
      RowBox[{"r", " ", "\[Lambda]3"}]], "+", 
     RowBox[{"K1", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"5", " ", 
           RowBox[{"BI", "[", 
            RowBox[{"2", ",", 
             RowBox[{"r", " ", "\[Lambda]2"}]}], "]"}]}], 
          RowBox[{"2", " ", "r", " ", "\[Lambda]2"}]]}], "-", 
        RowBox[{"BI", "[", 
         RowBox[{"3", ",", 
          RowBox[{"r", " ", "\[Lambda]2"}]}], "]"}]}], ")"}]}], "-", 
     FractionBox[
      RowBox[{"2", " ", "K5", " ", 
       RowBox[{"BK", "[", 
        RowBox[{"2", ",", 
         RowBox[{"r", " ", "\[Lambda]3"}]}], "]"}]}], 
      RowBox[{"r", " ", "\[Lambda]3"}]], "+", 
     RowBox[{"K2", " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"5", " ", 
          RowBox[{"BK", "[", 
           RowBox[{"2", ",", 
            RowBox[{"r", " ", "\[Lambda]2"}]}], "]"}]}], 
         RowBox[{"2", " ", "r", " ", "\[Lambda]2"}]], "-", 
        RowBox[{"BK", "[", 
         RowBox[{"3", ",", 
          RowBox[{"r", " ", "\[Lambda]2"}]}], "]"}]}], ")"}]}]}], "/.", 
    "with\[Tau]"}]}], ";"}], "\[IndentingNewLine]"}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"FunctionExpand", "[", "eqns", "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["With Boundary Conditions (small radius)", "Subsection"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"R0", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"R1", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]", "=", "0.15"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Chi]2", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d\[Theta]", "=", "0.0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"v0", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eps", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"scaling", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"C2", "\[Rule]", 
        RowBox[{"\[Tau]", " ", "C2"}]}], ",", 
       RowBox[{"C6", "\[Rule]", 
        RowBox[{"C6", "/", "\[Tau]"}]}], ",", 
       RowBox[{"K1", "\[Rule]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"BesselI", "[", 
            RowBox[{"1", ",", 
             RowBox[{"\[Lambda]2", " ", 
              FractionBox["R1", "\[Tau]"]}]}], "]"}], ")"}], 
          RowBox[{"-", "1"}]], "K1"}]}], ",", 
       RowBox[{"K2", "\[Rule]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"BesselK", "[", 
            RowBox[{"1", ",", 
             RowBox[{"\[Lambda]2", " ", 
              FractionBox["R0", "\[Tau]"]}]}], "]"}], ")"}], 
          RowBox[{"-", "1"}]], "K2"}]}], ",", 
       RowBox[{"K3", "\[Rule]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"BesselK", "[", 
            RowBox[{"0", ",", 
             RowBox[{"\[Lambda]2", " ", 
              FractionBox["R0", "\[Tau]"]}]}], "]"}], ")"}], 
          RowBox[{"-", "1"}]], "K3"}]}], ",", 
       RowBox[{"K4", "\[Rule]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"BesselI", "[", 
            RowBox[{"0", ",", 
             RowBox[{"\[Lambda]2", " ", 
              FractionBox["R1", "\[Tau]"]}]}], "]"}], ")"}], 
          RowBox[{"-", "1"}]], "K4"}]}], ",", 
       RowBox[{"K5", "\[Rule]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"BesselK", "[", 
            RowBox[{"1", ",", 
             RowBox[{"\[Lambda]3", " ", 
              FractionBox["R0", "\[Tau]"]}]}], "]"}], ")"}], 
          RowBox[{"-", "1"}]], "K5"}]}], ",", 
       RowBox[{"K6", "\[Rule]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"BesselI", "[", 
            RowBox[{"1", ",", 
             RowBox[{"\[Lambda]3", " ", 
              FractionBox["R1", "\[Tau]"]}]}], "]"}], ")"}], 
          RowBox[{"-", "1"}]], "K6"}]}], ",", 
       RowBox[{"K7", "\[Rule]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"BesselK", "[", 
            RowBox[{"1", ",", 
             RowBox[{"\[Lambda]3", " ", 
              FractionBox["R0", "\[Tau]"]}]}], "]"}], ")"}], 
          RowBox[{"-", "1"}]], "K7"}]}], ",", 
       RowBox[{"K8", "\[Rule]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"BesselI", "[", 
            RowBox[{"1", ",", 
             RowBox[{"\[Lambda]3", " ", 
              FractionBox["R1", "\[Tau]"]}]}], "]"}], ")"}], 
          RowBox[{"-", "1"}]], "K8"}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"scaling1", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solbc", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Join", "[", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"inner", " ", "wall", " ", "R"}], " ", "=", " ", "R0"}], 
          " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"coef", "[", 
           RowBox[{
            RowBox[{"Expand", "[", 
             RowBox[{
              RowBox[{
               FractionBox["1", "eps"], 
               RowBox[{"ur", "[", 
                RowBox[{"R0", ",", "\[Theta]"}], "]"}]}], "-", 
              RowBox[{"p", "[", 
               RowBox[{"R0", ",", "\[Theta]"}], "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"coef", "[", 
           RowBox[{
            RowBox[{"Expand", "[", 
             RowBox[{
              RowBox[{"\[Sigma]r\[Theta]", "[", 
               RowBox[{"R0", ",", "\[Theta]"}], "]"}], " ", "+", 
              RowBox[{"\[Chi]2", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"u\[Theta]", "[", 
                  RowBox[{"R0", ",", "\[Theta]"}], "]"}], "+", 
                 RowBox[{
                  FractionBox["1", "2"], 
                  RowBox[{"mrr\[Theta]", "[", 
                   RowBox[{"R0", ",", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"coef", "[", 
           RowBox[{
            RowBox[{"Expand", "[", 
             RowBox[{
              RowBox[{"mrrr", "[", 
               RowBox[{"R0", ",", "\[Theta]"}], "]"}], "+", 
              RowBox[{"\[Chi]2", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox["2", "5"]}], "d\[Theta]", " ", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
                 RowBox[{
                  FractionBox["7", "5"], 
                  RowBox[{"\[Sigma]rr", "[", 
                   RowBox[{"R0", ",", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"coef", "[", 
           RowBox[{
            RowBox[{"Expand", "[", 
             RowBox[{
              RowBox[{"mr\[Theta]\[Theta]", "[", 
               RowBox[{"R0", ",", "\[Theta]"}], "]"}], "+", 
              RowBox[{"\[Chi]2", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  FractionBox["1", "5"], "d\[Theta]", " ", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
                 RowBox[{"\[Sigma]\[Theta]\[Theta]", "[", 
                  RowBox[{"R0", ",", "\[Theta]"}], "]"}], "-", 
                 RowBox[{
                  FractionBox["1", "5"], " ", 
                  RowBox[{"\[Sigma]rr", "[", 
                   RowBox[{"R0", ",", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"outer", " ", 
             RowBox[{"boundary", "/", "inflow"}], " ", "R"}], " ", "=", " ", 
            "R1"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"coef", "[", 
           RowBox[{
            RowBox[{"Expand", "[", 
             RowBox[{
              RowBox[{
               FractionBox["1", "eps"], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"ur", "[", 
                  RowBox[{"R1", ",", "\[Theta]"}], "]"}], "-", 
                 RowBox[{"v0", " ", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], "-", 
              RowBox[{"p", "[", 
               RowBox[{"R0", ",", "\[Theta]"}], "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"coef", "[", 
           RowBox[{
            RowBox[{"Expand", "[", 
             RowBox[{
              RowBox[{"u\[Theta]", "[", 
               RowBox[{"R1", ",", "\[Theta]"}], "]"}], "+", 
              RowBox[{"v0", " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"coef", "[", 
           RowBox[{
            RowBox[{"Expand", "[", 
             RowBox[{"\[Sigma]rr", "[", 
              RowBox[{"R1", ",", "\[Theta]"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"coef", "[", 
           RowBox[{
            RowBox[{"Expand", "[", 
             RowBox[{"\[Sigma]\[Theta]\[Theta]", "[", 
              RowBox[{"R1", ",", "\[Theta]"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}]}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], "/.", 
        "scaling"}], ")"}], "\[Equal]", "0"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "C1", ",", "C2", ",", "C3", ",", "C4", ",", "C5", ",", "C6", ",", "C7", 
       ",", "C8", ",", "K1", ",", "K2", ",", "K3", ",", "K4", ",", "K5", ",", 
       "K6", ",", "K7", ",", "K8"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
   "1", "\[RightDoubleBracket]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"C1", "\[Rule]", 
    RowBox[{"-", "1.2015803663941995`"}]}], ",", 
   RowBox[{"C2", "\[Rule]", 
    RowBox[{"-", "0.37186922925156585`"}]}], ",", 
   RowBox[{"C3", "\[Rule]", "0.`"}], ",", 
   RowBox[{"C4", "\[Rule]", "0.`"}], ",", 
   RowBox[{"C5", "\[Rule]", "0.17533845645094645`"}], ",", 
   RowBox[{"C6", "\[Rule]", "0.09182246809600324`"}], ",", 
   RowBox[{"C7", "\[Rule]", "0.`"}], ",", 
   RowBox[{"C8", "\[Rule]", "0.`"}], ",", 
   RowBox[{"K1", "\[Rule]", "0.01878477865308547`"}], ",", 
   RowBox[{"K2", "\[Rule]", "0.11986566347121315`"}], ",", 
   RowBox[{"K3", "\[Rule]", "0.`"}], ",", 
   RowBox[{"K4", "\[Rule]", "0.`"}], ",", 
   RowBox[{"K5", "\[Rule]", "0.02624042013393698`"}], ",", 
   RowBox[{"K6", "\[Rule]", "0.0047679876250920645`"}], ",", 
   RowBox[{"K7", "\[Rule]", "0.`"}], ",", 
   RowBox[{"K8", "\[Rule]", "0.`"}]}], "}"}]], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "[", 
  RowBox[{"r", ",", "\[Theta]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"C8", "+", 
  RowBox[{"K4", " ", 
   RowBox[{"BesselI", "[", 
    RowBox[{"0", ",", 
     RowBox[{"6.0858061945018465`", " ", "r"}]}], "]"}]}], "+", 
  RowBox[{"K3", " ", 
   RowBox[{"BesselK", "[", 
    RowBox[{"0", ",", 
     RowBox[{"6.0858061945018465`", " ", "r"}]}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"0.15`", " ", "C1"}], "r"], "+", 
     RowBox[{"6.666666666666667`", " ", "C2", " ", "r"}], "+", 
     RowBox[{"K1", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"1", ",", 
        RowBox[{"6.0858061945018465`", " ", "r"}]}], "]"}]}], "+", 
     RowBox[{"K2", " ", 
      RowBox[{"BesselK", "[", 
       RowBox[{"1", ",", 
        RowBox[{"6.0858061945018465`", " ", "r"}]}], "]"}]}]}], ")"}], " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]], "Output"]
}, Closed]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"basis", "[", "\[CurlyPhi]_", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], ",", 
        RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}], ",", 
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}]}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pC", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"p", "[", 
       RowBox[{
        SqrtBox[
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"]}]], ",", 
        RowBox[{"ArcTan", "[", 
         RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "/.", "scaling"}], "/.", 
     "solbc"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ux", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}], ",", 
     RowBox[{"uy", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}]}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ur", "[", 
         RowBox[{
          SqrtBox[
           RowBox[{
            SuperscriptBox["x", "2"], "+", 
            SuperscriptBox["y", "2"]}]], ",", 
          RowBox[{"ArcTan", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], "]"}], ",", 
        RowBox[{"u\[Theta]", "[", 
         RowBox[{
          SqrtBox[
           RowBox[{
            SuperscriptBox["x", "2"], "+", 
            SuperscriptBox["y", "2"]}]], ",", 
          RowBox[{"ArcTan", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}], "}"}], ".", 
      RowBox[{"basis", "[", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"x", ",", "y"}], "]"}], "]"}]}], "/.", "scaling"}], "/.", 
    "solbc"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Sigma]xx", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}], ",", 
       RowBox[{"\[Sigma]xy", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Sigma]yx", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}], ",", 
       RowBox[{"\[Sigma]yy", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}]}], "}"}]}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"basis", "[", 
        RowBox[{"ArcTan", "[", 
         RowBox[{"x", ",", "y"}], "]"}], "]"}], "]"}], ".", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Sigma]rr", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]], ",", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}], "]"}], ",", 
            RowBox[{"\[Sigma]r\[Theta]", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]], ",", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Sigma]r\[Theta]", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]], ",", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}], "]"}], ",", 
            RowBox[{"\[Sigma]\[Theta]\[Theta]", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]], ",", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}], "}"}]}], "}"}], ".", 
        RowBox[{"basis", "[", 
         RowBox[{"ArcTan", "[", 
          RowBox[{"x", ",", "y"}], "]"}], "]"}]}], ")"}]}], "/.", "scaling"}],
     "/.", "solbc"}]}], ";"}], "\[IndentingNewLine]"}], "Input"],

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"pC", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "30"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{
       RowBox[{"ColorData", "[", "\"\<SouthwestColors\>\"", "]"}], "[", "z", 
       "]"}]}], "]"}]}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{"R0", "<", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]], "<", "R1"}]}], "]"}]}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"ux", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "30"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{
       RowBox[{"ColorData", "[", "\"\<SouthwestColors\>\"", "]"}], "[", "z", 
       "]"}]}], "]"}]}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{"R0", "<", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]], "<", "R1"}]}], "]"}]}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"\[Sigma]xy", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "30"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{
       RowBox[{"ColorData", "[", "\"\<SouthwestColors\>\"", "]"}], "[", "z", 
       "]"}]}], "]"}]}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{"R0", "<", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]], "<", "R1"}]}], "]"}]}]}], 
  "]"}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["With Boundary Conditions (large radius)", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "\[Tau]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pressure", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"100.`", ",", 
       RowBox[{"-", "0.004086899527429505`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"50.`", ",", 
       RowBox[{"-", "0.008344050869667123`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"20.`", ",", 
       RowBox[{"-", "0.021896677301376795`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10.`", ",", 
       RowBox[{"-", "0.046087643115920715`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5.`", ",", 
       RowBox[{"-", "0.09630124346005746`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.`", ",", 
       RowBox[{"-", "0.2339294172437545`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.`", ",", 
       RowBox[{"-", "0.3974527307359897`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5`", ",", 
       RowBox[{"-", "0.568975304838332`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.2`", ",", 
       RowBox[{"-", "0.6130850161319591`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.1`", ",", 
       RowBox[{"-", "0.45012115926748797`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.05`", ",", 
       RowBox[{"-", "0.2647981458504634`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.02`", ",", 
       RowBox[{"-", "0.1126510593168095`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.01`", ",", 
       RowBox[{"-", "0.056928288413405734`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.3`", ",", 
       RowBox[{"-", "0.6356377700725309`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.4`", ",", 
       RowBox[{"-", "0.6090043327111337`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.7`", ",", 
       RowBox[{"-", "0.4898532726109614`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.8`", ",", 
       RowBox[{"-", "0.45550136224842336`"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P0", "=", 
   RowBox[{"ListPlot", "[", "pressure", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"P0", ",", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"4", " ", "\[Tau]"}], "+", 
           RowBox[{"15", " ", 
            SuperscriptBox["\[Tau]", "2"]}]}], 
          RowBox[{"1", "+", 
           RowBox[{"28", " ", 
            SuperscriptBox["\[Tau]", "2"]}], "+", 
           RowBox[{"20", " ", 
            SuperscriptBox["\[Tau]", "3"]}]}]]}], ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"5", "\[Tau]"}], 
          RowBox[{"1", "+", 
           RowBox[{"13", 
            SuperscriptBox["\[Tau]", "2"]}]}]]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Tau]", ",", "0.01", ",", "2"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.01", ",", "2"}], "}"}], ",", "All"}], "}"}]}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{100., -0.004086899527429505}, {50., -0.008344050869667123}, {
       20., -0.021896677301376795`}, {10., -0.046087643115920715`}, {
       5., -0.09630124346005746}, {2., -0.2339294172437545}, {
       1., -0.3974527307359897}, {0.5, -0.568975304838332}, {
       0.2, -0.6130850161319591}, {0.1, -0.45012115926748797`}, {
       0.05, -0.2647981458504634}, {0.02, -0.1126510593168095}, {
       0.01, -0.056928288413405734`}, {0.3, -0.6356377700725309}, {
       0.4, -0.6090043327111337}, {0.7, -0.4898532726109614}, {
       0.8, -0.45550136224842336`}}]}, {}}, {}}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
Yg==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
rCZveyaFjv8Dtn/7JQ==
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0.01, 2}, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"\[Chi]1", ",", "\[Chi]2", ",", "\[Chi]3", ",", "\[Chi]3"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"BCrhs", ",", "BC"}], "}"}], "=", 
  RowBox[{"Normal", "[", 
   RowBox[{"CoefficientArrays", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"un", "-", "vnW"}], ")"}]}], "+", 
        RowBox[{"\[Chi]1", " ", 
         RowBox[{"(", 
          RowBox[{"pp", "-", "\[Theta]W"}], ")"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "\[Chi]2"]}], "\[Sigma]nt"}], "+", 
        RowBox[{"(", 
         RowBox[{"ut", "+", 
          RowBox[{
           FractionBox["2", "1"], "mnnt"}], "-", "vtW"}], ")"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"-", "mnnn"}], "+", 
        RowBox[{"\[Chi]3", 
         RowBox[{"(", "\[Sigma]nn", ")"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"-", "mntt"}], "+", 
        RowBox[{"\[Chi]4", 
         RowBox[{"(", "\[Sigma]tt", ")"}]}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "pp", ",", "un", ",", "ut", ",", "\[Sigma]nn", ",", "\[Sigma]nt", ",", 
       "\[Sigma]tt", ",", "mnnn", ",", "mnnt", ",", "mntt", ",", "mttt"}], 
      "}"}]}], "]"}], "]"}]}], "\[IndentingNewLine]"}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"vnW", "-", 
      RowBox[{"\[Theta]W", " ", "\[Chi]1"}]}], ",", 
     RowBox[{"-", "vtW"}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Chi]1", ",", 
       RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
       ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", 
       RowBox[{"-", 
        FractionBox["1", "\[Chi]2"]}], ",", "0", ",", "0", ",", "2", ",", "0",
        ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "\[Chi]3", ",", "0", ",", "0", ",", 
       RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "\[Chi]4", ",", "0", 
       ",", "0", ",", 
       RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"R0", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"R1", "=", "2.0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Chi]", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Chi]eps", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"v0", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eps", "=", "0.00001"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A0", "=", "0.0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A1", "=", "0.0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A2", "=", "0.0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"scaling", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"C2", "\[Rule]", 
        RowBox[{"\[Tau]", " ", "C2"}]}], ",", 
       RowBox[{"C6", "\[Rule]", 
        RowBox[{"C6", "/", "\[Tau]"}]}], ",", 
       RowBox[{"K1", "\[Rule]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"BI", "[", 
            RowBox[{"1", ",", 
             RowBox[{"\[Lambda]2", " ", 
              FractionBox["R1", "\[Tau]"]}]}], "]"}], ")"}], 
          RowBox[{"-", "1"}]], "K1"}]}], ",", 
       RowBox[{"K2", "\[Rule]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"BK", "[", 
            RowBox[{"0", ",", 
             RowBox[{"\[Lambda]2", " ", 
              FractionBox["R0", "\[Tau]"]}]}], "]"}], ")"}], 
          RowBox[{"-", "1"}]], "K2"}]}], ",", 
       RowBox[{"K3", "\[Rule]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"BK", "[", 
            RowBox[{"0", ",", 
             RowBox[{"\[Lambda]2", " ", 
              FractionBox["R0", "\[Tau]"]}]}], "]"}], ")"}], 
          RowBox[{"-", "1"}]], "K3"}]}], ",", 
       RowBox[{"K4", "\[Rule]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"BI", "[", 
            RowBox[{"0", ",", 
             RowBox[{"\[Lambda]2", " ", 
              FractionBox["R1", "\[Tau]"]}]}], "]"}], ")"}], 
          RowBox[{"-", "1"}]], "K4"}]}], ",", 
       RowBox[{"K5", "\[Rule]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"BK", "[", 
            RowBox[{"3", ",", 
             RowBox[{"\[Lambda]3", " ", 
              FractionBox["R0", "\[Tau]"]}]}], "]"}], ")"}], 
          RowBox[{"-", "1"}]], "K5"}]}], ",", 
       RowBox[{"K6", "\[Rule]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"BI", "[", 
            RowBox[{"3", ",", 
             RowBox[{"\[Lambda]3", " ", 
              FractionBox["R1", "\[Tau]"]}]}], "]"}], ")"}], 
          RowBox[{"-", "1"}]], "K6"}]}], ",", 
       RowBox[{"K7", "\[Rule]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"BK", "[", 
            RowBox[{"1", ",", 
             RowBox[{"\[Lambda]3", " ", 
              FractionBox["R0", "\[Tau]"]}]}], "]"}], ")"}], 
          RowBox[{"-", "1"}]], "K7"}]}], ",", 
       RowBox[{"K8", "\[Rule]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"BI", "[", 
            RowBox[{"1", ",", 
             RowBox[{"\[Lambda]3", " ", 
              FractionBox["R1", "\[Tau]"]}]}], "]"}], ")"}], 
          RowBox[{"-", "1"}]], "K8"}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"scaling1", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"U", "[", 
    RowBox[{"r_", ",", "\[Theta]_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"nn", "[", "r", "]"}], 
      RowBox[{"ur", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}]}], ",", 
     RowBox[{"u\[Theta]", "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
     RowBox[{"\[Sigma]rr", "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"nn", "[", "r", "]"}], 
      RowBox[{"\[Sigma]r\[Theta]", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}]}], ",", 
     RowBox[{"\[Sigma]\[Theta]\[Theta]", "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"nn", "[", "r", "]"}], 
      RowBox[{"mrrr", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}]}], ",", 
     RowBox[{"mrr\[Theta]", "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"nn", "[", "r", "]"}], 
      RowBox[{"mr\[Theta]\[Theta]", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}]}], ",", 
     RowBox[{"m\[Theta]\[Theta]\[Theta]", "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "}"}]}], ";", 
  RowBox[{
   RowBox[{"nn", "[", "R0", "]"}], "=", 
   RowBox[{"-", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"nn", "[", "R1", "]"}], "=", "1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"solbc", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Join", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"coef", "[", 
           RowBox[{
            RowBox[{"Expand", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"BC", ".", 
                RowBox[{"U", "[", 
                 RowBox[{"R0", ",", "\[Theta]"}], "]"}]}], "+", "BCrhs"}], "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Theta]W", "\[Rule]", "0"}], ",", 
                RowBox[{"vnW", "\[Rule]", "0"}], ",", 
                RowBox[{"vtW", "\[Rule]", "0"}], ",", 
                RowBox[{"\[Chi]1", "\[Rule]", "eps"}], ",", 
                RowBox[{"\[Chi]2", "\[Rule]", 
                 RowBox[{"1", "/", "eps"}]}], ",", 
                RowBox[{"\[Chi]3", "\[Rule]", "\[Chi]"}], ",", 
                RowBox[{"\[Chi]4", "\[Rule]", "\[Chi]"}]}], "}"}]}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"coef", "[", 
           RowBox[{
            RowBox[{"Expand", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"BC", ".", 
                RowBox[{"U", "[", 
                 RowBox[{"R1", ",", "\[Theta]"}], "]"}]}], "+", "BCrhs"}], "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Theta]W", "\[Rule]", 
                 RowBox[{
                  TagBox[
                   RowBox[{"-", 
                    FractionBox[
                    RowBox[{"5", "\[Tau]"}], 
                    RowBox[{"1", "+", 
                    RowBox[{"13", 
                    SuperscriptBox["\[Tau]", "2"]}]}]]}],
                   CheckAbort[#, 
                    Defer[#]]& ], 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ",", 
                RowBox[{"vnW", "\[Rule]", 
                 RowBox[{"v0", " ", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ",", 
                RowBox[{"vtW", "\[Rule]", 
                 RowBox[{
                  RowBox[{"-", "v0"}], " ", 
                  RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ",", 
                RowBox[{"\[Chi]1", "\[Rule]", 
                 RowBox[{"1", "/", "eps"}]}], ",", 
                RowBox[{"\[Chi]2", "\[Rule]", 
                 RowBox[{"1", "/", "eps"}]}], ",", 
                RowBox[{"\[Chi]3", "\[Rule]", "\[Chi]eps"}], ",", 
                RowBox[{"\[Chi]4", "\[Rule]", "\[Chi]eps"}]}], "}"}]}], "]"}],
             ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}]}], 
         "\[IndentingNewLine]", "]"}], "/.", "scaling"}], ")"}], "\[Equal]", 
      "0"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "C1", ",", "C2", ",", "C3", ",", "C4", ",", "C5", ",", "C6", ",", "C7", 
       ",", "C8", ",", "K1", ",", "K2", ",", "K3", ",", "K4", ",", "K5", ",", 
       "K6", ",", "K7", ",", "K8"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
   "1", "\[RightDoubleBracket]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"C1", "\[Rule]", 
    RowBox[{"-", "3.0991564381030514`"}]}], ",", 
   RowBox[{"C2", "\[Rule]", 
    RowBox[{"-", "0.1483104865047869`"}]}], ",", 
   RowBox[{"C3", "\[Rule]", "0.`"}], ",", 
   RowBox[{"C4", "\[Rule]", "0.`"}], ",", 
   RowBox[{"C5", "\[Rule]", 
    RowBox[{"-", "2.9412095090071317`"}]}], ",", 
   RowBox[{"C6", "\[Rule]", 
    RowBox[{"-", "1.2340334381934923`"}]}], ",", 
   RowBox[{"C7", "\[Rule]", "0.`"}], ",", 
   RowBox[{"C8", "\[Rule]", "0.`"}], ",", 
   RowBox[{"K1", "\[Rule]", "0.009100811996617221`"}], ",", 
   RowBox[{"K2", "\[Rule]", "0.015083517645190428`"}], ",", 
   RowBox[{"K3", "\[Rule]", "0.`"}], ",", 
   RowBox[{"K4", "\[Rule]", "0.`"}], ",", 
   RowBox[{"K5", "\[Rule]", 
    RowBox[{"-", "0.0006864150743995427`"}]}], ",", 
   RowBox[{"K6", "\[Rule]", "0.0018238905175749585`"}], ",", 
   RowBox[{"K7", "\[Rule]", "0.`"}], ",", 
   RowBox[{"K8", "\[Rule]", "0.`"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CForm", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "C1", ",", "C2", ",", "C3", ",", "C4", ",", "C5", ",", "C6", ",", "C7", 
      ",", "C8", ",", "K1", ",", "K2", ",", "K3", ",", "K4"}], "}"}], "/.", 
    "scaling"}], "/.", "solbc"}], "]"}]], "Input"],

Cell["\<\
List(-3.7493457286826626,-0.0001748532577469614,0.,0.,-8.121139559813377,-\
2207.9530113872297,0.,0.,-2.660553333968104e-83,4.9870629820977434e17,0.,0.)\
\>", "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"basis", "[", "\[CurlyPhi]_", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], ",", 
        RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}], ",", 
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}]}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pC", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"p", "[", 
       RowBox[{
        SqrtBox[
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"]}]], ",", 
        RowBox[{"ArcTan", "[", 
         RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "/.", "scaling"}], "/.", 
     "solbc"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ux", "[", 
       RowBox[{"x_", ",", "y_"}], "]"}], ",", 
      RowBox[{"uy", "[", 
       RowBox[{"x_", ",", "y_"}], "]"}]}], "}"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ur", "[", 
          RowBox[{
           SqrtBox[
            RowBox[{
             SuperscriptBox["x", "2"], "+", 
             SuperscriptBox["y", "2"]}]], ",", 
           RowBox[{"ArcTan", "[", 
            RowBox[{"x", ",", "y"}], "]"}]}], "]"}], ",", 
         RowBox[{"u\[Theta]", "[", 
          RowBox[{
           SqrtBox[
            RowBox[{
             SuperscriptBox["x", "2"], "+", 
             SuperscriptBox["y", "2"]}]], ",", 
           RowBox[{"ArcTan", "[", 
            RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}], "}"}], ".", 
       RowBox[{"basis", "[", 
        RowBox[{"ArcTan", "[", 
         RowBox[{"x", ",", "y"}], "]"}], "]"}]}], "/.", "scaling"}], "/.", 
     "solbc"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Sigma]xx", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}], ",", 
       RowBox[{"\[Sigma]xy", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Sigma]yx", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}], ",", 
       RowBox[{"\[Sigma]yy", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}]}], "}"}]}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"basis", "[", 
        RowBox[{"ArcTan", "[", 
         RowBox[{"x", ",", "y"}], "]"}], "]"}], "]"}], ".", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Sigma]rr", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]], ",", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}], "]"}], ",", 
            RowBox[{"\[Sigma]r\[Theta]", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]], ",", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Sigma]r\[Theta]", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]], ",", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}], "]"}], ",", 
            RowBox[{"\[Sigma]\[Theta]\[Theta]", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]], ",", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}], "}"}]}], "}"}], ".", 
        RowBox[{"basis", "[", 
         RowBox[{"ArcTan", "[", 
          RowBox[{"x", ",", "y"}], "]"}], "]"}]}], ")"}]}], "/.", "scaling"}],
     "/.", "solbc"}]}], ";"}], "\[IndentingNewLine]"}], "Input"],

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"pC", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2.1"}], ",", "2.1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "2.1"}], ",", "2.1"}], "}"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "30"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{
       RowBox[{"ColorData", "[", "\"\<SouthwestColors\>\"", "]"}], "[", "z", 
       "]"}]}], "]"}]}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{"R0", "<", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]], "<", "R1"}]}], "]"}]}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"ux", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2.1"}], ",", "2.1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "2.1"}], ",", "2.1"}], "}"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "30"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{
       RowBox[{"ColorData", "[", "\"\<SouthwestColors\>\"", "]"}], "[", "z", 
       "]"}]}], "]"}]}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{"R0", "<", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]], "<", "R1"}]}], "]"}]}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Norm", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ux", "[", 
       RowBox[{"x", ",", "y"}], "]"}], ",", 
      RowBox[{"uy", "[", 
       RowBox[{"x", ",", "y"}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2.1"}], ",", "2.1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "2.1"}], ",", "2.1"}], "}"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "30"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{
       RowBox[{"ColorData", "[", "\"\<SouthwestColors\>\"", "]"}], "[", "z", 
       "]"}]}], "]"}]}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{"R0", "<", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]], "<", "R1"}]}], "]"}]}]}], 
  "]"}]], "Input"]
}, Closed]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["0-1-2 system (Type A)", "Subchapter"],

Cell[CellGroupData[{

Cell["first order 0-1-2-System with 2-relaxation", "Section"],

Cell[CellGroupData[{

Cell["Final Result", "Subsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"coef", "[", 
   RowBox[{"expr_", ",", "var_"}], "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Normal", "[", 
    RowBox[{"CoefficientArrays", "[", 
     RowBox[{"expr", ",", "var"}], "]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Coef", "[", 
   RowBox[{"expr_", ",", "var_"}], "]"}], ":=", 
  RowBox[{"Normal", "[", 
   RowBox[{"CoefficientArrays", "[", 
    RowBox[{"expr", ",", "var"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$Assumptions", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"p0", ">", "0"}], ",", 
     RowBox[{"RT0", ">", "0"}], ",", 
     RowBox[{"u0", ">", "0"}], ",", 
     RowBox[{"r", ">", "0"}], ",", 
     RowBox[{"\[Xi]", ">", "0"}], ",", " ", 
     RowBox[{
      RowBox[{"Cot", "[", "\[Theta]", "]"}], ">", "0"}], ",", 
     RowBox[{"Kn", ">", "0"}], ",", 
     RowBox[{"a", ">", "0"}], ",", 
     RowBox[{"b", ">", "0"}]}], "}"}]}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "\[Chi]", ",", "\[Alpha]", ",", "eps", ",", "\[Epsilon]", ",", "\[Tau]", 
    ",", "a0", ",", "b0", ",", "c0", ",", "d0", ",", "\[Alpha]0", ",", 
    "\[Kappa]0", ",", "\[Gamma]0", ",", "\[Omega]0", ",", "a", ",", "b", ",", 
    "c", ",", "d", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Gamma]", ",", 
    "\[Kappa]", ",", "\[Omega]", ",", "C0", ",", "C1", ",", "C2", ",", "C3", 
    ",", "C4", ",", "C5", ",", "C6", ",", "C7", ",", "C8", ",", "C9", ",", 
    "C10", ",", "C11", ",", "C12", ",", "K1", ",", "K2", ",", "K3", ",", "K4",
     ",", "K5", ",", "K6", ",", "K7", ",", "K8", ",", "K9", ",", "K10", ",", 
    "K11", ",", "K12"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ur", "[", 
    RowBox[{"r_", ",", "\[Theta]_"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"a0", "[", "r", "]"}], "+", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], 
     RowBox[{"a", "[", "r", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"u\[Theta]", "[", 
     RowBox[{"r_", ",", "\[Theta]_"}], "]"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"b0", "[", "r", "]"}], "+", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"b", "[", "r", "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"u", "[", 
     RowBox[{"r_", ",", "\[Theta]_"}], "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ur", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
      RowBox[{"u\[Theta]", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", "0"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"p", "[", 
     RowBox[{"r_", ",", "\[Theta]_"}], "]"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"d0", "[", "r", "]"}], "+", 
     RowBox[{
      RowBox[{"d", "[", "r", "]"}], 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]rr", "[", 
    RowBox[{"r_", ",", "\[Theta]_"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"\[Gamma]", "[", "r", "]"}]}], "+", 
    RowBox[{"\[Gamma]0", "[", "r", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]\[Theta]\[Theta]", "[", 
    RowBox[{"r_", ",", "\[Theta]_"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"\[Omega]", "[", "r", "]"}]}], "+", 
    RowBox[{"\[Omega]0", "[", "r", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]r\[Theta]", "[", 
    RowBox[{"r_", ",", "\[Theta]_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"\[Kappa]0", "[", "r", "]"}], "+", 
    RowBox[{
     RowBox[{"Sin", "[", "\[Theta]", "]"}], 
     RowBox[{"\[Kappa]", "[", "r", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Sigma]zz", "[", 
     RowBox[{"r_", ",", "\[Theta]_"}], "]"}], "=", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"\[Sigma]rr", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "-", 
     RowBox[{"\[Sigma]\[Theta]\[Theta]", "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"r_", ",", "\[Theta]_"}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Sigma]rr", "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
       RowBox[{"\[Sigma]r\[Theta]", "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Sigma]r\[Theta]", "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
       RowBox[{"\[Sigma]\[Theta]\[Theta]", "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"\[Sigma]zz", "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"with\[Tau]", "=", 
    RowBox[{"{", 
     RowBox[{"r", "\[Rule]", 
      RowBox[{"r", "/", "\[Tau]"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a0", "[", "r_", "]"}], "=", 
   RowBox[{
    RowBox[{"2", 
     FractionBox["C1", "r"]}], "/.", "with\[Tau]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"b0", "[", "r_", "]"}], "=", 
   RowBox[{
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{
       FractionBox["C2", 
        RowBox[{"2", " ", "r"}]], "+", 
       RowBox[{"r", " ", "C4"}]}], ")"}]}], "/.", "with\[Tau]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d0", "[", "r_", "]"}], "=", 
   RowBox[{"C3", "/.", "with\[Tau]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Kappa]0", "[", "r_", "]"}], "=", 
   RowBox[{
    FractionBox["C2", 
     SuperscriptBox["r", "2"]], "/.", "with\[Tau]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Gamma]0", "[", "r_", "]"}], "=", 
   RowBox[{
    FractionBox[
     RowBox[{"2", " ", "C1"}], 
     SuperscriptBox["r", "2"]], "/.", "with\[Tau]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Omega]0", "[", "r_", "]"}], "=", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", "C1"}], 
       SuperscriptBox["r", "2"]]}], "/.", "with\[Tau]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a", "[", "r_", "]"}], "=", 
   RowBox[{
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["C5", 
         RowBox[{"2", " ", 
          SuperscriptBox["r", "2"]}]]}], "+", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["r", "2"], " ", "C6"}], "+", "C7", "+", 
       RowBox[{"C8", " ", 
        RowBox[{"Log", "[", "r", "]"}]}]}], ")"}]}], "/.", "with\[Tau]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"b", "[", "r_", "]"}], "=", 
   RowBox[{
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "C7"}], "-", "C8", "-", 
       FractionBox["C5", 
        RowBox[{"2", " ", 
         SuperscriptBox["r", "2"]}]], "-", 
       FractionBox[
        RowBox[{"3", " ", "C6", " ", 
         SuperscriptBox["r", "2"]}], "2"], "-", 
       RowBox[{"C8", " ", 
        RowBox[{"Log", "[", "r", "]"}]}]}], ")"}]}], "/.", "with\[Tau]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d", "[", "r_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", "C8"}], "r"]}], "+", 
     RowBox[{"4", " ", "C6", " ", "r"}]}], "/.", "with\[Tau]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Kappa]", "[", "r_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", "C5"}], 
       SuperscriptBox["r", "3"]]}], "+", 
     RowBox[{"2", " ", "C6", " ", "r"}]}], "/.", "with\[Tau]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Gamma]", "[", "r_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", "C5"}], 
       SuperscriptBox["r", "3"]]}], "-", 
     FractionBox[
      RowBox[{"2", " ", "C8"}], "r"], "-", 
     RowBox[{"2", " ", "C6", " ", "r"}]}], "/.", "with\[Tau]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Omega]", "[", "r_", "]"}], "=", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "C5"}], 
      SuperscriptBox["r", "3"]], "+", 
     FractionBox[
      RowBox[{"2", " ", "C8"}], "r"], "+", 
     RowBox[{"2", " ", "C6", " ", "r"}]}], "/.", "with\[Tau]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FunctionExpand", "[", 
  RowBox[{"coef", "[", 
   RowBox[{
    RowBox[{"Div1", "[", 
     RowBox[{"u", "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FunctionExpand", "[", 
  RowBox[{"coef", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Grad0", "[", 
      RowBox[{"p", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}], "]"}], "+", 
     RowBox[{"Div2", "[", 
      RowBox[{"\[Sigma]", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Expand", "[", 
  RowBox[{"FunctionExpand", "[", 
   RowBox[{"coef", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Grad1", "[", 
          RowBox[{"u", "[", 
           RowBox[{"r", ",", "\[Theta]"}], "]"}], "]"}], "+", 
         RowBox[{"Transpose", "[", 
          RowBox[{"Grad1", "[", 
           RowBox[{"u", "[", 
            RowBox[{"r", ",", "\[Theta]"}], "]"}], "]"}], "]"}]}], ")"}]}], 
      "+", 
      RowBox[{
       FractionBox["1", "\[Tau]"], 
       RowBox[{"\[Sigma]", "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}], "]"}], 
  "]"}], "\[IndentingNewLine]"}], "Input"],

Cell[BoxData[
 RowBox[{"{", "0", "}"}]], "Output"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0"}], "}"}]], "Output"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"coef", "[", 
  RowBox[{
   RowBox[{"Expand", "[", 
    RowBox[{
     RowBox[{"ur", "[", 
      RowBox[{"R0", ",", "\[Theta]"}], "]"}], "-", 
     RowBox[{"p", "[", 
      RowBox[{"R0", ",", "\[Theta]"}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"coef", "[", 
  RowBox[{
   RowBox[{"Expand", "[", 
    RowBox[{
     RowBox[{"\[Sigma]r\[Theta]", "[", 
      RowBox[{"R0", ",", "\[Theta]"}], "]"}], "-", 
     RowBox[{"u\[Theta]", "[", 
      RowBox[{"R0", ",", "\[Theta]"}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "C3"}], "+", 
    RowBox[{"4.`", " ", "C1", " ", "\[Tau]"}]}], ",", 
   RowBox[{
    RowBox[{"2", " ", "C7"}], "+", 
    FractionBox[
     RowBox[{"0.25`", " ", "C6"}], 
     SuperscriptBox["\[Tau]", "2"]], "-", 
    FractionBox[
     RowBox[{"2.`", " ", "C6"}], "\[Tau]"], "+", 
    RowBox[{"4.`", " ", "C8", " ", "\[Tau]"}], "-", 
    RowBox[{"4.`", " ", "C5", " ", 
     SuperscriptBox["\[Tau]", "2"]}], "+", 
    RowBox[{"2", " ", "C8", " ", 
     RowBox[{"Log", "[", 
      FractionBox["0.5`", "\[Tau]"], "]"}]}]}], ",", "0"}], "}"}]], "Output"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"1.`", " ", "C4"}], "\[Tau]"]}], "-", 
    RowBox[{"2.`", " ", "C2", " ", "\[Tau]"}], "+", 
    RowBox[{"4.`", " ", "C2", " ", 
     SuperscriptBox["\[Tau]", "2"]}]}], ",", "0", ",", 
   RowBox[{
    RowBox[{"2", " ", "C7"}], "+", 
    RowBox[{"2", " ", "C8"}], "+", 
    FractionBox[
     RowBox[{"0.75`", " ", "C6"}], 
     SuperscriptBox["\[Tau]", "2"]], "+", 
    FractionBox[
     RowBox[{"1.`", " ", "C6"}], "\[Tau]"], "+", 
    RowBox[{"4.`", " ", "C5", " ", 
     SuperscriptBox["\[Tau]", "2"]}], "-", 
    RowBox[{"16.`", " ", "C5", " ", 
     SuperscriptBox["\[Tau]", "3"]}], "+", 
    RowBox[{"2", " ", "C8", " ", 
     RowBox[{"Log", "[", 
      FractionBox["0.5`", "\[Tau]"], "]"}]}]}]}], "}"}]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["With Boundary Conditions", "Subsection"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"R0", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"R1", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]", "=", "0.15"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Chi]2", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"v0", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eps", "=", "0.0001"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"scaling", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"scaling1", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solbc", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Join", "[", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"inner", " ", "wall", " ", "R"}], " ", "=", " ", "R0"}], 
          " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"coef", "[", 
           RowBox[{
            RowBox[{"Expand", "[", 
             RowBox[{
              RowBox[{
               FractionBox["1", "eps"], 
               RowBox[{"ur", "[", 
                RowBox[{"R0", ",", "\[Theta]"}], "]"}]}], "+", 
              RowBox[{"p", "[", 
               RowBox[{"R0", ",", "\[Theta]"}], "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"coef", "[", 
           RowBox[{
            RowBox[{"Expand", "[", 
             RowBox[{
              RowBox[{"\[Sigma]r\[Theta]", "[", 
               RowBox[{"R0", ",", "\[Theta]"}], "]"}], " ", "+", 
              RowBox[{"\[Chi]2", 
               RowBox[{"(", 
                RowBox[{"u\[Theta]", "[", 
                 RowBox[{"R0", ",", "\[Theta]"}], "]"}], ")"}]}]}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"outer", " ", 
             RowBox[{"boundary", "/", "inflow"}], " ", "R"}], " ", "=", " ", 
            "R1"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"coef", "[", 
           RowBox[{
            RowBox[{"Expand", "[", 
             RowBox[{
              RowBox[{
               FractionBox["1", "eps"], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"ur", "[", 
                  RowBox[{"R1", ",", "\[Theta]"}], "]"}], "-", 
                 RowBox[{"v0", " ", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], "-", 
              RowBox[{"p", "[", 
               RowBox[{"R1", ",", "\[Theta]"}], "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"coef", "[", 
           RowBox[{
            RowBox[{"Expand", "[", 
             RowBox[{
              RowBox[{"eps", " ", 
               RowBox[{"\[Sigma]r\[Theta]", "[", 
                RowBox[{"R1", ",", "\[Theta]"}], "]"}]}], "-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"u\[Theta]", "[", 
                 RowBox[{"R1", ",", "\[Theta]"}], "]"}], "-", 
                RowBox[{"v0", " ", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}]}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], "/.", 
        "scaling"}], ")"}], "\[Equal]", "0"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "C1", ",", "C2", ",", "C3", ",", "C4", ",", "C5", ",", "C6", ",", "C7", 
       ",", "C8"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", "1", 
   "\[RightDoubleBracket]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"C1", "\[Rule]", "0.`"}], ",", 
   RowBox[{"C2", "\[Rule]", "0.`"}], ",", 
   RowBox[{"C3", "\[Rule]", "0.`"}], ",", 
   RowBox[{"C4", "\[Rule]", "0.`"}], ",", 
   RowBox[{"C5", "\[Rule]", 
    RowBox[{"-", "0.000035986266305954594`"}]}], ",", 
   RowBox[{"C6", "\[Rule]", 
    RowBox[{"-", "188.2734932775042`"}]}], ",", 
   RowBox[{"C7", "\[Rule]", "3.490821351043474`"}], ",", 
   RowBox[{"C8", "\[Rule]", "0.8928710366139468`"}]}], "}"}]], "Output"]
}, Closed]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"basis", "[", "\[CurlyPhi]_", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], ",", 
        RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}], ",", 
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}]}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pC", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"p", "[", 
       RowBox[{
        SqrtBox[
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"]}]], ",", 
        RowBox[{"ArcTan", "[", 
         RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "/.", "scaling"}], "/.", 
     "solbc"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ux", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}], ",", 
     RowBox[{"uy", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}]}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ur", "[", 
         RowBox[{
          SqrtBox[
           RowBox[{
            SuperscriptBox["x", "2"], "+", 
            SuperscriptBox["y", "2"]}]], ",", 
          RowBox[{"ArcTan", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], "]"}], ",", 
        RowBox[{"u\[Theta]", "[", 
         RowBox[{
          SqrtBox[
           RowBox[{
            SuperscriptBox["x", "2"], "+", 
            SuperscriptBox["y", "2"]}]], ",", 
          RowBox[{"ArcTan", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}], "}"}], ".", 
      RowBox[{"basis", "[", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"x", ",", "y"}], "]"}], "]"}]}], "/.", "scaling"}], "/.", 
    "solbc"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Sigma]xx", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}], ",", 
       RowBox[{"\[Sigma]xy", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Sigma]yx", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}], ",", 
       RowBox[{"\[Sigma]yy", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}]}], "}"}]}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"basis", "[", 
        RowBox[{"ArcTan", "[", 
         RowBox[{"x", ",", "y"}], "]"}], "]"}], "]"}], ".", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Sigma]rr", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]], ",", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}], "]"}], ",", 
            RowBox[{"\[Sigma]r\[Theta]", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]], ",", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Sigma]r\[Theta]", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]], ",", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}], "]"}], ",", 
            RowBox[{"\[Sigma]\[Theta]\[Theta]", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]], ",", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}], "}"}]}], "}"}], ".", 
        RowBox[{"basis", "[", 
         RowBox[{"ArcTan", "[", 
          RowBox[{"x", ",", "y"}], "]"}], "]"}]}], ")"}]}], "/.", "scaling"}],
     "/.", "solbc"}]}], ";"}], "\[IndentingNewLine]"}], "Input"],

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"pC", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "30"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{
       RowBox[{"ColorData", "[", "\"\<SouthwestColors\>\"", "]"}], "[", "z", 
       "]"}]}], "]"}]}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{"R0", "<", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]], "<", "R1"}]}], "]"}]}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"ux", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "30"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{
       RowBox[{"ColorData", "[", "\"\<SouthwestColors\>\"", "]"}], "[", "z", 
       "]"}]}], "]"}]}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{"R0", "<", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]], "<", "R1"}]}], "]"}]}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"\[Sigma]xy", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "30"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{
       RowBox[{"ColorData", "[", "\"\<SouthwestColors\>\"", "]"}], "[", "z", 
       "]"}]}], "]"}]}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{"R0", "<", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]], "<", "R1"}]}], "]"}]}]}], 
  "]"}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["With Boundary Conditions (large)", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"\[Chi]1", ",", "\[Chi]2", ",", "\[Chi]3", ",", "\[Chi]3"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"BCrhs", ",", "BC"}], "}"}], "=", 
  RowBox[{"Normal", "[", 
   RowBox[{"CoefficientArrays", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"sn", "-", "vnW"}], ")"}]}], "+", 
        RowBox[{"\[Chi]1", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Theta]", "-", "\[Theta]W"}], ")"}], "+", "Rnn"}], 
          ")"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"-", "Rnt"}], "+", 
        RowBox[{"\[Chi]2", 
         RowBox[{"(", 
          RowBox[{"st", "-", "vtW"}], ")"}]}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\[Theta]", ",", "sn", ",", "st", ",", "Rnn", ",", "Rnt", ",", "Rtt"}], 
      "}"}]}], "]"}], "]"}]}], "\[IndentingNewLine]"}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"vnW", "-", 
      RowBox[{"\[Theta]W", " ", "\[Chi]1"}]}], ",", 
     RowBox[{
      RowBox[{"-", "vtW"}], " ", "\[Chi]2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Chi]1", ",", 
       RowBox[{"-", "1"}], ",", "0", ",", "\[Chi]1", ",", "0", ",", "0"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\[Chi]2", ",", "0", ",", 
       RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"vnW", "-", 
       RowBox[{"\[Theta]W", " ", "\[Chi]1"}]}], ",", 
      RowBox[{
       RowBox[{"-", "vtW"}], " ", "\[Chi]2"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Chi]1", ",", 
        RowBox[{"-", "1"}], ",", "0", ",", "\[Chi]1", ",", "0", ",", "0"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "\[Chi]2", ",", "0", ",", 
        RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}]}], "}"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Theta]W", "\[Rule]", "0"}], ",", 
    RowBox[{"\[Chi]1", "\[Rule]", "\[Epsilon]"}], ",", 
    RowBox[{"\[Chi]2", "\[Rule]", 
     RowBox[{"1", "/", "\[Epsilon]"}]}]}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vnW", ",", 
     RowBox[{"-", 
      FractionBox["vtW", "\[Epsilon]"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", 
       RowBox[{"-", "1"}], ",", "0", ",", "\[Epsilon]", ",", "0", ",", "0"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       FractionBox["1", "\[Epsilon]"], ",", "0", ",", 
       RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"R0", "=", 
     RowBox[{"1", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"R1", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Chi]", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"v0", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eps", "=", 
     SuperscriptBox["10", 
      RowBox[{"-", "5"}]]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A1", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A2", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"scaling", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"C1", "\[Rule]", 
        RowBox[{"C1", "/", "eps"}]}], ",", 
       RowBox[{"C2", "\[Rule]", 
        RowBox[{"C2", "/", "eps"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"scaling1", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"U", "[", 
    RowBox[{"r_", ",", "\[Theta]_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"theta", "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"nn", "[", "r", "]"}], 
      RowBox[{"sr", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}]}], ",", 
     RowBox[{"s\[Theta]", "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
     RowBox[{"Rrr", "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"nn", "[", "r", "]"}], 
      RowBox[{"Rr\[Theta]", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}]}], ",", 
     RowBox[{"R\[Theta]\[Theta]", "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nn", "[", "R0", "]"}], "=", 
   RowBox[{"-", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"nn", "[", "R1", "]"}], "=", "1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"solbc", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"DiagonalMatrix", "[", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "eps", ",", "1", 
            ",", "1", ",", "1", ",", "1", ",", "1", ",", "eps"}], "}"}], 
          "]"}], ".", 
         RowBox[{"Join", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"coef", "[", 
            RowBox[{
             RowBox[{"Expand", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"BC", ".", 
                 RowBox[{"U", "[", 
                  RowBox[{"R0", ",", "\[Theta]"}], "]"}]}], "+", "BCrhs"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[Theta]W", "\[Rule]", "0"}], ",", 
                 RowBox[{"vnW", "\[Rule]", "0"}], ",", 
                 RowBox[{"vtW", "\[Rule]", "0"}], ",", 
                 RowBox[{"\[Chi]1", "\[Rule]", "eps"}], ",", 
                 RowBox[{"\[Chi]2", "\[Rule]", 
                  RowBox[{"1", "/", "eps"}]}]}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"coef", "[", 
            RowBox[{
             RowBox[{"Expand", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"BC", ".", 
                 RowBox[{"U", "[", 
                  RowBox[{"R1", ",", "\[Theta]"}], "]"}]}], "+", "BCrhs"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[Theta]W", "\[Rule]", "0"}], ",", 
                 RowBox[{"vnW", "\[Rule]", 
                  RowBox[{"v0", " ", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ",", 
                 RowBox[{"vtW", "\[Rule]", 
                  RowBox[{
                   RowBox[{"-", "v0"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ",", 
                 RowBox[{"\[Chi]1", "\[Rule]", "eps"}], ",", 
                 RowBox[{"\[Chi]2", "\[Rule]", 
                  RowBox[{"1", "/", "eps"}]}]}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}]}], 
          "\[IndentingNewLine]", "]"}]}], "/.", "scaling"}], ")"}], 
      "\[Equal]", "0"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "C1", ",", "C2", ",", "C3", ",", "C4", ",", "C5", ",", "C6", ",", "C7", 
       ",", "C8"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", "1", 
   "\[RightDoubleBracket]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "luc"}], "MessageName"], ":", 
  " ", "\<\"Result for \[NoBreak]\\!\\(RowReduce\\)\[NoBreak] of badly \
conditioned matrix \[NoBreak]\\!\\({\\(\\({0.`, 0.`, 0.`, 0.`, 0.`, 0.00001`, \
0.`, 400007.99999999994`, 0.`}\\)\\), \\(\\({0.`, 0.`, 0.`, 0.`, 100000.`, \
0.`, 2.00004`*^10, 0.`, 0.`}\\)\\), \\(\\({\\(\\(-1.3863743611198907`\\)\\), \
2.`, 0.25001`, \\(\\(-4.00016`\\)\\), 0.`, 0.`, 0.`, 0.`, 0.`}\\)\\), \\(\\({\
\\(\\(-0.6137056388801094`\\)\\), \\(\\(\[LeftSkeleton] 7 \[RightSkeleton]\\)\
\\), 0.`}\\)\\), \\(\\({\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)}\\)\\), \
\\(\\({0.`, 0.`, 0.`, 0.`, 400000.`, 0.`, 4.999975`*^9, 0.`, 0.`}\\)\\), \
\\(\\({\\(\\(-1.3863143611198905`\\)\\), \\(\\(-2.`\\)\\), \\(\\(-3.99996`\\)\
\\), 0.2499975`, 0.`, 0.`, 0.`, 0.`, 1.`}\\)\\), \
\\(\\({\\(\\(-3.3862943611198912`\\)\\), \\(\\(-2.`\\)\\), \
\\(\\(-12.00004`\\)\\), \\(\\(-0.2499975`\\)\\), 0.`, 0.`, 0.`, 0.`, \
1.`}\\)\\)}\\)\[NoBreak] may contain significant numerical errors. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/luc\\\", \
ButtonNote -> \\\"RowReduce::luc\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"C1", "\[Rule]", "0.`"}], ",", 
   RowBox[{"C2", "\[Rule]", "0.`"}], ",", 
   RowBox[{"C3", "\[Rule]", "0.`"}], ",", 
   RowBox[{"C4", "\[Rule]", "0.`"}], ",", 
   RowBox[{"C5", "\[Rule]", 
    RowBox[{"-", "0.23343538802154615`"}]}], ",", 
   RowBox[{"C6", "\[Rule]", 
    RowBox[{"-", "0.23342916324385726`"}]}], ",", 
   RowBox[{"C7", "\[Rule]", "0.24999732534919544`"}], ",", 
   RowBox[{"C8", "\[Rule]", "0.9920941745006198`"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"basis", "[", "\[CurlyPhi]_", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], ",", 
        RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}], ",", 
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}]}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Theta]C", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"theta", "[", 
       RowBox[{
        SqrtBox[
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"]}]], ",", 
        RowBox[{"ArcTan", "[", 
         RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "/.", "scaling"}], "/.", 
     "solbc"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"sx", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}], ",", 
     RowBox[{"sy", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}]}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"sr", "[", 
         RowBox[{
          SqrtBox[
           RowBox[{
            SuperscriptBox["x", "2"], "+", 
            SuperscriptBox["y", "2"]}]], ",", 
          RowBox[{"ArcTan", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], "]"}], ",", 
        RowBox[{"s\[Theta]", "[", 
         RowBox[{
          SqrtBox[
           RowBox[{
            SuperscriptBox["x", "2"], "+", 
            SuperscriptBox["y", "2"]}]], ",", 
          RowBox[{"ArcTan", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}], "}"}], ".", 
      RowBox[{"basis", "[", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"x", ",", "y"}], "]"}], "]"}]}], "/.", "scaling"}], "/.", 
    "solbc"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Rxx", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}], ",", 
       RowBox[{"Rxy", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Ryx", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}], ",", 
       RowBox[{"Ryy", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}]}], "}"}]}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"basis", "[", 
        RowBox[{"ArcTan", "[", 
         RowBox[{"x", ",", "y"}], "]"}], "]"}], "]"}], ".", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Rrr", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]], ",", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}], "]"}], ",", 
            RowBox[{"Rr\[Theta]", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]], ",", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Rr\[Theta]", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]], ",", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}], "]"}], ",", 
            RowBox[{"R\[Theta]\[Theta]", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]], ",", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}], "}"}]}], "}"}], ".", 
        RowBox[{"basis", "[", 
         RowBox[{"ArcTan", "[", 
          RowBox[{"x", ",", "y"}], "]"}], "]"}]}], ")"}]}], "/.", "scaling"}],
     "/.", "solbc"}]}], ";"}], "\[IndentingNewLine]"}], "Input"],

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"\[Theta]C", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2.1"}], ",", "2.1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "2.1"}], ",", "2.1"}], "}"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "30"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{
       RowBox[{"ColorData", "[", "\"\<SouthwestColors\>\"", "]"}], "[", "z", 
       "]"}]}], "]"}]}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{"R0", "<", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]], "<", "R1"}]}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"sx", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2.1"}], ",", "2.1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "2.1"}], ",", "2.1"}], "}"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "30"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{
       RowBox[{"ColorData", "[", "\"\<SouthwestColors\>\"", "]"}], "[", "z", 
       "]"}]}], "]"}]}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{"R0", "<", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]], "<", "R1"}]}], "]"}]}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Rxy", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "30"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{
       RowBox[{"ColorData", "[", "\"\<SouthwestColors\>\"", "]"}], "[", "z", 
       "]"}]}], "]"}]}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{"R0", "<", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]], "<", "R1"}]}], "]"}]}]}], 
  "]"}]], "Input"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["first order 0-1-2-system with 1-2-relaxation", "Section"],

Cell[CellGroupData[{

Cell["Final Result", "Subsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"coef", "[", 
   RowBox[{"expr_", ",", "var_"}], "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Normal", "[", 
    RowBox[{"CoefficientArrays", "[", 
     RowBox[{"expr", ",", "var"}], "]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "A0", ",", "A1", ",", "A2", ",", "\[Tau]", ",", "\[Lambda]1", ",", "a0", 
    ",", "b0", ",", "d0", ",", "\[Kappa]0", ",", "\[Gamma]0", ",", 
    "\[Omega]0", ",", "a", ",", "b", ",", "d", ",", "\[Gamma]", ",", 
    "\[Kappa]", ",", "\[Omega]", ",", "C1", ",", "C2", ",", "C3", ",", "C4", 
    ",", "K1", ",", "K2", ",", "K3", ",", "K4"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sr", "[", 
    RowBox[{"r_", ",", "\[Theta]_"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"a0", "[", "r", "]"}], "+", 
    RowBox[{
     RowBox[{"a", "[", "r", "]"}], 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"s\[Theta]", "[", 
     RowBox[{"r_", ",", "\[Theta]_"}], "]"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"b0", "[", "r", "]"}], "+", 
     RowBox[{
      RowBox[{"b", "[", "r", "]"}], 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"s", "[", 
     RowBox[{"r_", ",", "\[Theta]_"}], "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"sr", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
      RowBox[{"s\[Theta]", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", "0"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"theta", "[", 
     RowBox[{"r_", ",", "\[Theta]_"}], "]"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"d0", "[", "r", "]"}], "+", 
     RowBox[{
      RowBox[{"d", "[", "r", "]"}], 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Rrr", "[", 
    RowBox[{"r_", ",", "\[Theta]_"}], "]"}], "=", " ", 
   RowBox[{
    RowBox[{"\[Gamma]0", "[", "r", "]"}], "+", 
    RowBox[{
     RowBox[{"\[Gamma]", "[", "r", "]"}], 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R\[Theta]\[Theta]", "[", 
    RowBox[{"r_", ",", "\[Theta]_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"\[Omega]0", "[", "r", "]"}], "+", 
    RowBox[{
     RowBox[{"\[Omega]", "[", "r", "]"}], 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Rr\[Theta]", "[", 
    RowBox[{"r_", ",", "\[Theta]_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"\[Kappa]0", "[", "r", "]"}], "+", 
    RowBox[{
     RowBox[{"\[Kappa]", "[", "r", "]"}], 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Rzz", "[", 
     RowBox[{"r_", ",", "\[Theta]_"}], "]"}], "=", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Rrr", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "-", 
     RowBox[{"R\[Theta]\[Theta]", "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"R", "[", 
     RowBox[{"r_", ",", "\[Theta]_"}], "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Rrr", "[", 
         RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
        RowBox[{"Rr\[Theta]", "[", 
         RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Rr\[Theta]", "[", 
         RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
        RowBox[{"R\[Theta]\[Theta]", "[", 
         RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        RowBox[{"Rzz", "[", 
         RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F", "[", 
    RowBox[{"r_", ",", "\[Theta]_"}], "]"}], "=", 
   RowBox[{"A0", "+", 
    RowBox[{"A2", " ", 
     SuperscriptBox["r", "2"]}], "+", 
    RowBox[{"A1", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.671014119501089*^9, 3.671014141720707*^9}, {
  3.67101420204461*^9, 3.671014204899241*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Lambda]1", "=", 
     SqrtBox["2"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"BI", "[", 
      RowBox[{"i_", ",", "x_"}], "]"}], "=", 
     RowBox[{"BesselI", "[", 
      RowBox[{"i", ",", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"BK", "[", 
      RowBox[{"i_", ",", "x_"}], "]"}], "=", 
     RowBox[{"BesselK", "[", 
      RowBox[{"i", ",", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"with\[Tau]", "=", 
     RowBox[{"{", 
      RowBox[{"r", "\[Rule]", 
       RowBox[{"r", "/", "\[Tau]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"a", "[", "r_", "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Tau]", 
        FractionBox[
         RowBox[{"2", " ", "A1", " ", "r"}], "3"]}], "-", "C2", "+", 
       FractionBox["C1", 
        SuperscriptBox["r", "2"]], "-", 
       FractionBox[
        RowBox[{
         SqrtBox["2"], " ", "K2", " ", 
         RowBox[{"BI", "[", 
          RowBox[{"1", ",", 
           RowBox[{"\[Lambda]1", " ", "r"}]}], "]"}]}], "r"], "+", 
       FractionBox[
        RowBox[{
         SqrtBox["2"], " ", "K1", " ", 
         RowBox[{"BK", "[", 
          RowBox[{"1", ",", 
           RowBox[{"\[Lambda]1", " ", "r"}]}], "]"}]}], "r"]}], "/.", 
      "with\[Tau]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"b", "[", "r_", "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[Tau]"}], 
        FractionBox[
         RowBox[{"A1", " ", "r"}], "3"]}], "+", "C2", "+", 
       FractionBox["C1", 
        SuperscriptBox["r", "2"]], "+", 
       RowBox[{"K2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"BI", "[", 
           RowBox[{"0", ",", 
            RowBox[{"\[Lambda]1", " ", "r"}]}], "]"}], "+", 
          RowBox[{"BI", "[", 
           RowBox[{"2", ",", 
            RowBox[{"\[Lambda]1", " ", "r"}]}], "]"}]}], ")"}]}], "+", 
       RowBox[{"K1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"BK", "[", 
           RowBox[{"0", ",", 
            RowBox[{"\[Lambda]1", " ", "r"}]}], "]"}], "+", 
          RowBox[{"BK", "[", 
           RowBox[{"2", ",", 
            RowBox[{"\[Lambda]1", " ", "r"}]}], "]"}]}], ")"}]}]}], "/.", 
      "with\[Tau]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"d", "[", "r_", "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "3"]}], "\[Tau]", " ", "A1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          SuperscriptBox["r", "2"]}], ")"}]}], "+", 
       FractionBox["C1", "r"], "+", 
       RowBox[{"C2", " ", "r"}]}], "/.", "with\[Tau]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]", "[", "r_", "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[Tau]"}], 
        FractionBox["A1", "3"]}], "+", 
       FractionBox[
        RowBox[{"2", " ", "C1"}], 
        SuperscriptBox["r", "3"]], "+", 
       FractionBox[
        RowBox[{"2", " ", "K2", " ", 
         RowBox[{"BI", "[", 
          RowBox[{"2", ",", 
           RowBox[{"\[Lambda]1", " ", "r"}]}], "]"}]}], "r"], "+", 
       FractionBox[
        RowBox[{"2", " ", "K1", " ", 
         RowBox[{"BK", "[", 
          RowBox[{"2", ",", 
           RowBox[{"\[Lambda]1", " ", "r"}]}], "]"}]}], "r"]}], "/.", 
      "with\[Tau]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Omega]", "[", "r_", "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", "C1"}], 
         SuperscriptBox["r", "3"]]}], "-", 
       FractionBox[
        RowBox[{"2", " ", "K2", " ", 
         RowBox[{"BI", "[", 
          RowBox[{"2", ",", 
           RowBox[{"\[Lambda]1", " ", "r"}]}], "]"}]}], "r"], "-", 
       FractionBox[
        RowBox[{"2", " ", "K1", " ", 
         RowBox[{"BK", "[", 
          RowBox[{"2", ",", 
           RowBox[{"\[Lambda]1", " ", "r"}]}], "]"}]}], "r"]}], "/.", 
      "with\[Tau]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Kappa]", "[", "r_", "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Tau]", 
        FractionBox["A1", "3"]}], "+", 
       FractionBox[
        RowBox[{"2", " ", "C1"}], 
        SuperscriptBox["r", "3"]], "+", 
       RowBox[{"K2", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"2", " ", 
            RowBox[{"BI", "[", 
             RowBox[{"0", ",", 
              RowBox[{"\[Lambda]1", " ", "r"}]}], "]"}]}], "r"], "-", 
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"BI", "[", 
            RowBox[{"1", ",", 
             RowBox[{"\[Lambda]1", " ", "r"}]}], "]"}]}], "-", 
          FractionBox[
           RowBox[{"2", " ", 
            SqrtBox["2"], " ", 
            RowBox[{"BI", "[", 
             RowBox[{"1", ",", 
              RowBox[{"\[Lambda]1", " ", "r"}]}], "]"}]}], 
           SuperscriptBox["r", "2"]]}], ")"}]}], "+", 
       RowBox[{"K1", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"2", " ", 
            RowBox[{"BK", "[", 
             RowBox[{"0", ",", 
              RowBox[{"\[Lambda]1", " ", "r"}]}], "]"}]}], "r"], "+", 
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"BK", "[", 
            RowBox[{"1", ",", 
             RowBox[{"\[Lambda]1", " ", "r"}]}], "]"}]}], "+", 
          FractionBox[
           RowBox[{"2", " ", 
            SqrtBox["2"], " ", 
            RowBox[{"BK", "[", 
             RowBox[{"1", ",", 
              RowBox[{"\[Lambda]1", " ", "r"}]}], "]"}]}], 
           SuperscriptBox["r", "2"]]}], ")"}]}]}], "/.", "with\[Tau]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"d0", "[", "r_", "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[Tau]"}], 
        FractionBox[
         RowBox[{"A0", " ", 
          SuperscriptBox["r", "2"]}], "4"]}], "+", 
       RowBox[{
        SuperscriptBox["\[Tau]", "3"], 
        FractionBox[
         RowBox[{"2", " ", "A2", " ", 
          SuperscriptBox["r", "2"]}], "3"]}], "-", 
       RowBox[{
        SuperscriptBox["\[Tau]", "3"], 
        FractionBox[
         RowBox[{"A2", " ", 
          SuperscriptBox["r", "4"]}], "16"]}], "+", "C3", "+", 
       RowBox[{"C4", " ", 
        RowBox[{"Log", "[", "r", "]"}]}]}], "/.", "with\[Tau]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"a0", "[", "r_", "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Tau]", 
        FractionBox[
         RowBox[{"A0", " ", "r"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["\[Tau]", "3"], 
        FractionBox[
         RowBox[{"A2", " ", 
          SuperscriptBox["r", "3"]}], "4"]}], "-", 
       FractionBox["C4", "r"]}], "/.", "with\[Tau]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"b0", "[", "r_", "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"K3", " ", 
        RowBox[{"BK", "[", 
         RowBox[{"1", ",", 
          RowBox[{"\[Lambda]1", " ", "r"}]}], "]"}]}], "+", 
       RowBox[{"K4", " ", 
        RowBox[{"BI", "[", 
         RowBox[{"1", ",", 
          RowBox[{"\[Lambda]1", " ", "r"}]}], "]"}]}]}], "/.", 
      "with\[Tau]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]0", "[", "r_", "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[Tau]"}], 
        FractionBox["A0", "6"]}], "-", 
       RowBox[{
        SuperscriptBox["\[Tau]", "3"], 
        FractionBox[
         RowBox[{"5", " ", "A2", " ", 
          SuperscriptBox["r", "2"]}], "12"]}], "-", 
       FractionBox["C4", 
        SuperscriptBox["r", "2"]]}], "/.", "with\[Tau]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Kappa]0", "[", "r_", "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"K4", " ", 
          RowBox[{"BI", "[", 
           RowBox[{"2", ",", 
            RowBox[{"\[Lambda]1", " ", "r"}]}], "]"}]}], 
         SqrtBox["2"]]}], "+", 
       FractionBox[
        RowBox[{"K3", " ", 
         RowBox[{"BK", "[", 
          RowBox[{"2", ",", 
           RowBox[{"\[Lambda]1", " ", "r"}]}], "]"}]}], 
        SqrtBox["2"]]}], "/.", "with\[Tau]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Omega]0", "[", "r_", "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[Tau]"}], 
        FractionBox["A0", "6"]}], "+", 
       RowBox[{
        SuperscriptBox["\[Tau]", "3"], 
        FractionBox[
         RowBox[{"A2", " ", 
          SuperscriptBox["r", "2"]}], "12"]}], "+", 
       FractionBox["C4", 
        SuperscriptBox["r", "2"]]}], "/.", "with\[Tau]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TraceFreeSym2", "[", "mat_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], 
      RowBox[{"(", 
       RowBox[{"mat", "+", 
        RowBox[{"Transpose", "[", "mat", "]"}]}], ")"}]}], "-", 
     RowBox[{
      FractionBox["1", "3"], 
      RowBox[{"Tr", "[", "mat", "]"}], 
      RowBox[{"IdentityMatrix", "[", "3", "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionExpand", "[", "\[IndentingNewLine]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"coef", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Div1", "[", 
        RowBox[{"s", "[", 
         RowBox[{"r", ",", "\[Theta]"}], "]"}], "]"}], "-", 
       RowBox[{"F", "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"coef", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Grad0", "[", 
        RowBox[{"theta", "[", 
         RowBox[{"r", ",", "\[Theta]"}], "]"}], "]"}], "+", 
       RowBox[{"Div2", "[", 
        RowBox[{"R", "[", 
         RowBox[{"r", ",", "\[Theta]"}], "]"}], "]"}], "+", 
       RowBox[{
        FractionBox["1", "\[Tau]"], 
        RowBox[{"s", "[", 
         RowBox[{"r", ",", "\[Theta]"}], "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"coef", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"TraceFreeSym2", "[", 
        RowBox[{"Grad1", "[", 
         RowBox[{"s", "[", 
          RowBox[{"r", ",", "\[Theta]"}], "]"}], "]"}], "]"}], "+", 
       RowBox[{
        FractionBox["1", "\[Tau]"], 
        RowBox[{"R", "[", 
         RowBox[{"r", ",", "\[Theta]"}], "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "}"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6710137099056063`*^9, 3.671013751913414*^9, 
  3.671014171095377*^9, 3.671014223282564*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionExpand", "[", 
  RowBox[{"coef", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Grad0", "[", 
      RowBox[{"theta", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}], "]"}], "-", 
     RowBox[{
      FractionBox["1", "2"], "\[Tau]", " ", 
      RowBox[{"Laplace1", "[", 
       RowBox[{"s", "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}], "]"}]}], "-", 
     RowBox[{
      FractionBox["1", "6"], "\[Tau]", " ", 
      RowBox[{"Grad0", "[", 
       RowBox[{"Div1", "[", 
        RowBox[{"s", "[", 
         RowBox[{"r", ",", "\[Theta]"}], "]"}], "]"}], "]"}]}], "+", 
     RowBox[{
      FractionBox["1", "\[Tau]"], 
      RowBox[{"s", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.6710142307493687`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["With Boundary Conditions", "Subsection"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"R0", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"R1", "=", "2.0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Chi]", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]0", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]1", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"uW0", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A1", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A2", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"scaling", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"scaling1", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.671013876512136*^9, 3.671013907340116*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"scaling", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nn", "[", "R0", "]"}], "=", 
   RowBox[{"-", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nn", "[", "R1", "]"}], "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"solbc", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Join", "[", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"inner", " ", "wall", " ", "R"}], " ", "=", " ", "R0"}], 
          " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"coef", "[", 
           RowBox[{
            RowBox[{"Expand", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"nn", "[", "R0", "]"}], 
               RowBox[{"sr", "[", 
                RowBox[{"R0", ",", "\[Theta]"}], "]"}]}], "-", 
              RowBox[{"\[Chi]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"theta", "[", 
                    RowBox[{"R0", ",", "\[Theta]"}], "]"}], "-", 
                   "\[Theta]0"}], ")"}], "+", 
                 RowBox[{"Rrr", "[", 
                  RowBox[{"R0", ",", "\[Theta]"}], "]"}]}], ")"}]}]}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"coef", "[", 
           RowBox[{
            RowBox[{"Expand", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"nn", "[", "R0", "]"}], 
               RowBox[{"Rr\[Theta]", "[", 
                RowBox[{"R0", ",", "\[Theta]"}], "]"}]}], " ", "-", 
              RowBox[{"\[Chi]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"s\[Theta]", "[", 
                  RowBox[{"R0", ",", "\[Theta]"}], "]"}], "-", 
                 RowBox[{"uW0", " ", 
                  RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], "]"}],
             ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"outer", " ", "boundary", " ", "R"}], " ", "=", " ", 
            "R1"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"coef", "[", 
           RowBox[{
            RowBox[{"Expand", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"nn", "[", "R1", "]"}], 
               RowBox[{"sr", "[", 
                RowBox[{"R1", ",", "\[Theta]"}], "]"}]}], "-", 
              RowBox[{"\[Chi]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"theta", "[", 
                    RowBox[{"R1", ",", "\[Theta]"}], "]"}], "-", 
                   "\[Theta]1"}], ")"}], "+", 
                 RowBox[{"Rrr", "[", 
                  RowBox[{"R1", ",", "\[Theta]"}], "]"}]}], ")"}]}]}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"coef", "[", 
           RowBox[{
            RowBox[{"Expand", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"nn", "[", "R1", "]"}], 
               RowBox[{"Rr\[Theta]", "[", 
                RowBox[{"R1", ",", "\[Theta]"}], "]"}]}], " ", "-", 
              RowBox[{"\[Chi]", 
               RowBox[{"(", 
                RowBox[{"s\[Theta]", "[", 
                 RowBox[{"R1", ",", "\[Theta]"}], "]"}], ")"}]}]}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}]}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], "/.", 
        "scaling"}], ")"}], "\[Equal]", "0"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "K1", ",", "K2", ",", "K3", ",", "K4", ",", "C1", ",", "C2", ",", "C3", 
       ",", "C4"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", "1", 
   "\[RightDoubleBracket]"}]}], "\[IndentingNewLine]"}], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RowReduce", "::", "luc"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Result for \[NoBreak]\\!\\(RowReduce\\)\[NoBreak] of badly \
conditioned matrix \[NoBreak]\\!\\({\\(\\({\\(\\(-1.3694379124341003`\\)\\), \
\\(\\(-1.`\\)\\), 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 2.0001562500000003`}\\)\\), \
\\(\\(\[LeftSkeleton] 6 \[RightSkeleton]\\)\\), \\(\\({0.`, 0.`, \
\\(\\(-1.`\\)\\), \\(\\(-0.0022500000000000003`\\)\\), 0.`, 0.`, \
\\(\\(-4.672228327776325`*^11\\)\\), \\(\\(-6.419206401650977`*^-14\\)\\), \
0.13999999999999999`}\\)\\)}\\)\[NoBreak] may contain significant numerical \
errors. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/luc\\\", ButtonNote -> \
\\\"RowReduce::luc\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.671013912247848*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"K1", "\[Rule]", "53.97166647969362`"}], ",", 
   RowBox[{"K2", "\[Rule]", "1.2625508281302547`*^-15"}], ",", 
   RowBox[{"K3", "\[Rule]", "0.`"}], ",", 
   RowBox[{"K4", "\[Rule]", "0.`"}], ",", 
   RowBox[{"C1", "\[Rule]", 
    RowBox[{"-", "1.9505992348859245`"}]}], ",", 
   RowBox[{"C2", "\[Rule]", "0.143798955700584`"}], ",", 
   RowBox[{"C3", "\[Rule]", "1.8448329709116926`"}], ",", 
   RowBox[{"C4", "\[Rule]", "0.1134211910434327`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6710138508376102`*^9, 3.671013912254836*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"basis", "[", "\[CurlyPhi]_", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], ",", 
        RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}], ",", 
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}]}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Theta]C", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"theta", "[", 
       RowBox[{
        SqrtBox[
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"]}]], ",", 
        RowBox[{"ArcTan", "[", 
         RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "/.", "scaling"}], "/.", 
     "solbc"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"sx", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}], ",", 
     RowBox[{"sy", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}]}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"sr", "[", 
         RowBox[{
          SqrtBox[
           RowBox[{
            SuperscriptBox["x", "2"], "+", 
            SuperscriptBox["y", "2"]}]], ",", 
          RowBox[{"ArcTan", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], "]"}], ",", 
        RowBox[{"s\[Theta]", "[", 
         RowBox[{
          SqrtBox[
           RowBox[{
            SuperscriptBox["x", "2"], "+", 
            SuperscriptBox["y", "2"]}]], ",", 
          RowBox[{"ArcTan", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}], "}"}], ".", 
      RowBox[{"basis", "[", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"x", ",", "y"}], "]"}], "]"}]}], "/.", "scaling"}], "/.", 
    "solbc"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Rxx", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}], ",", 
       RowBox[{"Rxy", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Ryx", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}], ",", 
       RowBox[{"Ryy", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}]}], "}"}]}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"basis", "[", 
        RowBox[{"ArcTan", "[", 
         RowBox[{"x", ",", "y"}], "]"}], "]"}], "]"}], ".", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Rrr", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]], ",", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}], "]"}], ",", 
            RowBox[{"Rr\[Theta]", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]], ",", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Rr\[Theta]", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]], ",", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}], "]"}], ",", 
            RowBox[{"R\[Theta]\[Theta]", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]], ",", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}], "}"}]}], "}"}], ".", 
        RowBox[{"basis", "[", 
         RowBox[{"ArcTan", "[", 
          RowBox[{"x", ",", "y"}], "]"}], "]"}]}], ")"}]}], "/.", "scaling"}],
     "/.", "solbc"}]}], ";"}], "\[IndentingNewLine]"}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"\[Theta]C", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "30"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{
       RowBox[{"ColorData", "[", "\"\<SouthwestColors\>\"", "]"}], "[", "z", 
       "]"}]}], "]"}]}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{"R0", "<", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]], "<", "R1"}]}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6710139653265867`*^9, 3.671014003896007*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx0vXlcjc///39aKBEiIbusCSFb4jq2hOxbQq9skUhCsmVL1hCyi5IiW7Jm
u8i+RyKJlLIk6Wyd9vPr0zWPGe/53n7+OTf35sw185zHPOc523VazFg4dra+
TCYrqCmTGVR8rs0/6xwffVG8EbdK416kEwumuqaeG6sSWklcAG+m2nW3g59K
mLFjgF9s2jdxW/LMi8bPy0SPK02+TTuhEg5HdnIMzP5CueOXkuT4W2rB1ybl
WLTZe8ot158Z7nJGI+yea6AKXfmM8s9xAzOXzC8QUB7wG51Hd99UXEDLA37+
ZtKJBSO0wiwpH8ptYktsw1y1whTpuZSvSB2hP6WeVgiUykl5ZI2Y0B/eBcJE
qV6UP7Qc43RzokbYWvVg4+DYXHFdz1ebzPaViMdzp5hMiFQJfs8WPA1z/En5
/C8XUxQyDbUPuOV3u3bJfQqofcBzZ3Zo9X2SltoHfHqtUSXq8YXUPuDTJvYW
3ncuovYBL+kS3GBLZhG1D/gNpz5fZs8qpvYBjwwwTxkbU0ztA55YfHV+WVQx
tQ/4kXXrztYbXkztA769sVXy5o1FwjzJDix/v+vKKwMLhQDJbpQ37dzBf/+i
AmGyuCzDLkEpLjvYy81yepG4tWMT/3VXlcKoFpnX+gbnU36zfbXQCf3V1P7g
twLMJqmiNNT+4GOv1A7ckl9A7Q+eZz2uq2GrQmp/8DnGIVE1BxVR+4OHiXds
Wo8upvYHT2nb58iVQSXU/uDnzXZ7DWtUSu0P/smh5OnNZ6XU/uCNN7mHzRpS
Ru0PPkbsMW3qhjJqf/B+08yrXvMuo/YHV28ZYvVUW0rtD/51vObb3Oql1P7g
NeS/7KxCi4Whkp0pT+uaf33amkJhnNQulAcufddj5iWNMHOaaXUbrVpcUBJh
Z2WjFb/an8s+kKKk7QjeILHbvXEz1bQdwU9vHBO08DHrR+ADu/pGe5hpaTuC
p9jvCZs+rJC2I/gc05p32/gX0XYEH9Tj/d4mR4tpO4LPfPDAZ+71EtqO4AbL
F9vXflRK2xH86eQD5r3EMtqO4L539aaNPFRO2xFcmeJ5qtdwHW1H8JHbTvXf
cF9H2xE8+vCby8eUOtqO4OW54iu7RzrajuDaMNmVJdY62o7gx9e3O+9hUk7b
ETz5ydXSeqNLaTuCj2+UXz88q0iYJrUj5fWXtzzeMbaA/h/tPPRjHZ93kUra
7vi0eOtV70AnNW138EFT3tZoul1D2x18vK2shuPLAtru4GE1G3WPKGftDr6q
03LXUe2LaLuDtxOVyi9ji2m7g1drduKZ2+oS2u7gZpdnTAmMLqXtDu7u5mei
elFG2x28sPqynA3fy2m7g3tfD/vjm6Oj7Q7+oWNVVXcPmRztDh6n9yv56R2Z
HO0O3jDtbalrgUyOdgffem6cOM5AT452Bx/8KsNtxieZHO0OXtCstyxusUyO
dgc/+KFsbaP1Otru4H/Pd5vybmEZbXfwquvfXL98oFiYI7U75edTb9VTfiug
/R/tvPrRn1dBnZmewG2v22QF3VbR74Pv3X1756h6GqoTfDZ0W3Wm3bACqhPw
+rsOm3WYr6U6Ae/XuNNC/c2FVCfgZe4RBy5FMZ2A15n+tdOKl0wn4AeeXB/9
vozpBNzHWNE2rXsZ1Qn4joRdR677lFOd0HycB73uHK2jOgEPrW6nzZwjk0Mn
4Acftvni8JfpBHx4xmeZ7Qw9qhNw4UVI0strelQn4AE2b9yV2Uwn4M37JIXG
ZuhRnYC//zk/89IxPaoT8F7j7TsvM9eTQyfgTzbsXTvSTiaHTsCPL3NKifhe
RnUCLu+mVS/YWiwsknRC+b40g6/T7Jl+0M4nVt14Hd9MRfUDnmxmkvzDn+kS
fNrCv4ENIpl+wG+9dfqYc5npB59t44PcxJtMP+Bmw5+fmP6Q6Qfc/o3Rw3Op
TD/gtXcldhwlK6H6AS9ydh79vEcp1Q/4woaHDtZayfQDXufk2veBj5l+wMU2
dTuHmsjk0A/4mcSob7/OMf2Ax1mv8t3mpEf1A95m/NZ+bklMP+Cv11/IMh+s
T/UD/mWOvjx6tz7VD/jSwc5nrGP1qX7A3wxIU24M0af6Afd07pDwwFqf6gf8
R9zM4fV99Kh+wIc6GwVGTpDJoR/w8w7l546GlVH9gBen9wsoOl5E40W05xzb
e3WGTWZxCfix7OxlAfeYrsBz5bEhHXKZrsAbBKc3HJnPdAX+YkbbFGUG0xV4
f9eTM7+8YbrCZ96wJkbmL5muwK9PCunWP43pCnzY1+4ptgZMV+BtdrnanZAz
XVH9Vlc/t9rJdAVu5HFl0LAfTFfgg61aH3RuwXQFPnds5trur5iuwC2zLtXx
W8Z0BR7bd8gJq/r6VFfgE2r5uE48wXRF6+vjcGxELQOqK/CqQaaDXUcYUF2B
19v2X2Gn0QZUV+C9+/zdPaS6AdUV+M7B+edu+upTXYHf+PreNG2FHtUVeHlv
TUZifZkcugLv+tHc/MCKUmGlpCvKZ/x+uDDilpbqDe15OnVO+o0/TG/gPfT2
hsa1ZfET+KbH/goXaxYngxt2vxnTypTNd8BzB4a/jMtiegO37PP+nnsCqw94
6+AF5mcuMb3hc96GNQHCPaY3yp/Pdkn8w8ZB8PgOn+5bdWd6Ay9IPv87fjvT
G/j4XXkHG/xkeqPpDeW7xzRnegMfGr7/fM2XTG+0f2w8UrxoNdMbuL5Rh+gD
nZjewF+nN+yV/47pDfzv7yFhGf8xvdG4YNnfg8vvML2Bj/Y6Nv5kBtMb+Mba
2TZjbjG90XZ/Oq4kdoAB1Rttx+d3ry7z1Kd6A2+zxfRiv9Z6VG/gBtV83wrv
yqnewH1W6OfmTiym6wtotxqjc1bL8hVUh+D5A9v1jh6lojoE3/9AeJE2g+kQ
PPZlrnuTQUyH4F9vf9u8sDrTIbjejQX/dXrFdAj+YYX57cgwpkPwNtFvLMZu
YzoEj1ty9deBo0yH9LktHWO2fmA6BA/oV2fad1umQ/DLObar+ocyHYIHFVXr
eO8X0yF4vZftPL/XZjoEP994wwMhhumQluvRH7l2PNMhuG2/gIat6jEd0v50
3qRh9Y9Mh+Am78bWzgxiOgQfvv/YhDIjQ6pDcOfgPJ3DcEOqQ/BVvu7+qwYa
Uh2CG63d6nQgm+kQvEunKUuqtzWgOgR325dv0ayM6RDc2v/cIP+pMjl0CH73
TucHVxeVChslHVJuszbwXAMTLdUn2u1RNYOV/qOVVJ/gK87c6qDczvQJPtrt
vXmVdUyf4FmJqUsOD2H6BP+ZddxuWhEbl8HfhF9Zu/ss0yddv/mW5P9lCdMn
+NpOKS2OzWD6BO+88HurteuYXcD31IvsNyKZ6ZPqtNpy+5njmD7BW1pGmzZK
YfoED5x/Rv21JZsngqcd7Bl59BeL/8EXDzbf4HObxW/gL89dmjvgLNMbeE5C
/1Mf/tEbuHm/vUYJnZjewNvLL8502c30Br7rmtfo6lFMb+CR/+25udDdkOoN
vGNR0uMp15newDet9cipHalP9QZ+YcOP4V8b6FG9gdezz4+sZlFO9QZulxGR
3+5TIdUb7G3Rpu6f3zuY3sC39FrTICuW6Q18T5sRETuCmd7AN+UqNveVM73R
9aEze671yWR6Az+TULb5w1amN5r/1mZXZ4xiegP/lPXF02gg0xv45h+x36r7
Mb2BVxt29kU/FdMbuHtim1rB10rpehH4uHnj118bwfQAvnGHfFFrD6YH8N7l
7c/87c30AJ6TOOZdl9tMD+Chh4fE2v1iegDvHDhpdNw1pgfwqkGJbb1bGFI9
gB+8eNv8QxMDqgfwrjbvFhdFMD2AX34TNKrmcB3VA/j2Ht/dH3cpFvZNtfmk
S9KJ6GfFrwdU/zpDQXUCHn17ZvTrS0wn4FcT6s0yfcB0Ah4leOY0CGE6Ae8z
eVf+vh5MJ+D9aod4TXnFdAJ+Y2BK9HEfphNwn0Eh8e52TCfgd+pvt/rRmekE
/FRu9+aXlzOdgDt69ErZ0571H1qvH+3qFE9i68Pg/dP865m9ZusG4LJdE3+b
dmc6AXf/4N8z0o7pBFzY5nSibRLTCbjhJ9XaJnWqUJ1QXmVDitNfphPw3+/8
E9bNZjqh4/mqNkUuC5hOwM/2bHhqbRnTCbhNtSMfTavL5NAJuO/JT14D65bQ
famW5f6R0WZxonqe9YIO/+gE8cJ484gDSQ+YTsANWsx61/kF0wn4vR6m07z+
0Ql490kr5JNtmU7A00rMXjW+z3QCXq5t/T5gBtMJ+F79ugGb2zCdgP+uPX/C
+bZMJ+Bn8+pWk/8zfoFPabJGqzephK4ng9edktvl5D/zMvCf50c43LVh7Q7e
c8GYvzGfWLuDt/SLTbJvzdodPKv7/cV9TKrQdgd3ytKr8ieItTv4poydB/bt
Ze0OnlNdPn+EtT5td/B0m64h//Vl7Q7e6sM6eYsNJcKW1WaLVhbrKD81IrN1
h5kaqof1mV/Vz/peFArr5lRd/I8eECfyegDn9QB+l9MDOK8H8E+cHsB1nB7A
93F6AM/h9AB+jtMD+FROD+B1OD2A83oA5/UAzusBnNcDOK8H8M2cHmh9OT2A
83oAb8fpATyK6AHjCOIyfhwBj+LGEfAr3DhC03PjCLg9N46A9+XGEXB+HAHn
xxHwW9w4Ah7NjSPgQ7hxBPw6N46Ay7lxBJwfR8D5cQScH0fA+XEEvAo3joDn
cuMInc9x4wj4eW4cAe/IjSN0fYKMI9AD4vT6XPwJvomLP8FDufgTPIiLP8G9
ufgT/CwXf4Lv5uJP8DQu/qTreVz8Cc7Hn3QezMWf4GO5+BM8kIs/wXtx8Sc4
H39Su3HxJzgff4Lz8Sf4IS7+BLfj4k/wa1z8Cb6LxJ/QA+zxkJv/gq/i5r/g
/PwX/Bs3/wX/zs1/wRO5+S/4cm7+C87Pf8FtufkvOD//pesf3PwXnJ//ggdx
81/wT9z8l85vuPkvPvn5Lzg//wWvx81/wa25+S94CDf/BY/i5r/gnbj5L/hm
bv4LHsfNf8EtufkveC9u/ot6m3LrgeAqbj0QnF8PBOfXA8HTufVAcH49EDyF
Ww8Eb82tB4Jf4tYDwfn1QHB+PRCcXw8E59cDwc259UDwc9x6IPh0bj0QvDO3
Hgi+lFsPxGc1bj0Q3JlbDwQfzq0HgvPrgeAm3HoguB23Hgjuzq0Hgnfk1gPB
H3DrgeBdyXogdIj6XeD2R8B7cvsjdF+I2x8B1+f2R8D5/RFwfn+ExrPc/gi4
J7c/As7vj4Dz+yPgWm5/BJzfHwHn90fA+f0Rah9uf4Tah9sfAU/k9kfA87n9
EXy6cvsj4GO5/RHwTdz+CHgMtz8CXoXbHwFvx+2PgBtz+yN0P4fsj0BvtLzc
/i/4cW7/FzyP2/8Fb8jt/4K/4vZ/wQVu/xf8D7f/C36N2/8F5/d/wfn9X7oP
z+3/gvP7v+D8/i84v/8Lzu//gvP7v9Rvcfu/4PHc/i+4Mbf/i8/63P4veB9u
/5euS3H7v+B3uP1fcH37/93/Be/F7f+Ce5D9X+gK5YrizquAf+DOq4Dz51XA
Re68Cng77rwKeB3uvAp4b+68Cngt7rwKOH9eBdyHO69Cn8udVwG/y51XAT/L
nVcB58+rgPPnVcATufMq4F+58yp0/5Y7rwKexJ1XwacXd14FPIc7rwI+gjuv
An6ZO68CbvBVOq8C/eA567nzcuBdufNy4Pu583Lg/Hk5yrnzcuBy7rwceCl3
Xg7cnDsvB36QOy8Hvog7LwfOn5ej+XDn5Wh9ufNy4Ie483Lgztx5OVpf7rwc
XafkzsuBt+TOy4GncOflwB2483L4fMGdlwM/xZ2Xo7rjzsuBHyfn5aAT5OfM
nb8Fb8ydvwV34s7f0jiRO38LfoI7fwu+mjt/C27Nnb8F58/fgptz52/pPjZ3
/ha8hDt/C+7Dnb8F/8idvwW/xJ2/BW/Enb8F38Gdv6X25M7fghdx52/Bw7nz
t+CF3PlbfNbmzt+CXyfnb9Hu+Ps37rw9uCV33h48hjtvD+7InbcHT+PO24N7
cuftwYdw5+3B53Dn7cGNuPP24K+48/b0fA133h5cy523Bx/PnbcHP8udtwev
8ud/z9uDl3Hn7ak9ufP24F+48/bg7tx5e/AW5Lw92hH+IIS7/wJ+j7v/An6X
u/8CPom7/wKu5O6/gHtx91/AI7n7L+BfuPsv4HHc/RfwDO7+C7gVd/8F3IW7
/wLuyN1/AS/n7r+A/+Tuv4A34O6/0PTc/Re6P0nuv8D+iB9Pcve/wJdy97/A
m3P3v8CV3P0v8Dnc/S+6ns3d/wLX7/q/97/AE7j7X+Bnuftf4Cnc/S/wSO7+
F/h+7v4XeCx3/wvcmtz/gn2w3uDD3R8EH8XdH6T7P9z9QfDv3P1B8Pvc/UHw
eO7+IHgv7v4geBB3fxA8lrs/CP6W3B/E/jTZnxRWlXzzCRujErBPCT7vZcil
/KUqYX7lc7+LQZX2KxV3H1huv2m+WgiqLGequKvy+eXin0/1OrqGqQS3ynq9
obxnQIzJl4r0npX8HuXTGjQfE11FI8gq/z2+Bf7kY1CE5QyN0EdKL4Cr48Mv
N1+uERyl/ClvsNb/3ERBI/hI5aE8srinszxaLbhL5RdQ/vktxofMqJhfr61M
n8Pq9SKwyY+GKmFv5ffzxFWVfy8WrRpdbPvekJ2/RHqT2sNMrZ+ohCVSPjR/
mcnTKZc6aITNUj4C8kl6bPXJNbhifKgsv4Lm//t+q551VykFt8r2Uom+lc8p
FOsk7h+sTWJ+GOlzovZdfTVYJYyU8qH5j773uvnTP2rBRcpHQD4PTv75pRha
8M+5o8GLYm0KRecNr74Or60U5lbap0DE5/IVNR/mPlYKM6T/07+nbjBXDckq
oPmivN8Of7MIWqQU5kuc1qPwY3iDmWcLaPlQ772GN26dTFcIfhKn9ji71v5w
j60amh7t0Hn4mAnP7ylpevBX+zecm51YSNdnwPvv1v6w1Cpoe6CdLcrTTqRm
KYS1Emftn+KTLLoXMH0QvY92mzVl0VIlTQ9+fYqnj38KWycHf/um8cXwCwph
SbMB2c9ul4sulfXKEB0cf0+a6aegukS/cR45aejl6wraL5A+KNJ/z5BtOtov
wOvVyzTvM0QmR78APzzwStS0dzJ5sJQ/7ZfOmws6f99eQJ+LfnnEX95yiUZB
0+GzQfV490njyoTjlxs/SXryRnxis9g79kiq2NTxQ5vZH8oF/B9/b+Pptsff
rJz2O+SzQ9Ft2bdiPVoePPfGxszQu1e1tDyot2nAhGF16isFpAcfMX7+zStz
Cml62CNirdnLly2UtP5IH5AYXNrwv1LKkX6MZxOPTcGlgrPEaf5Hzln7Lpmn
LwdH+oClV/zihujT8oNru5YumxPByoN2qEHKj+eCryHlQf7geC7yBx/N1Rd+
7hBpL9i5cLTNb53ujRBbMnLUjGnMzkh/i7Mzvge9oZ3ALUm74//43M61I/go
oivYEfWDbp27hp+MNnsjzGtT61C02SfBw9B0+BoV0y3SHyK6xbiG/F8Md+/S
brGeHHZHenOif4yb4JNqjO52Z4tMjv4Lfz+O9F9w+OmGnB9A+jukX2O8BK/y
68u+VQoNTY98dhC/AX8Ff29L/BU4/PQ+zu8h/XvixxCXgKe6uY4Y41BA0yOf
q8RPwg/D33/n/DC4LFXyw/Dj8OurOT+Pz+/Ez8OPI7/6ZDxCvuCJZHz5WHvN
g6SfauHX6vT1jr0KhXkOI5sdj1VT/456/CXjHfw1eFsyzqL+4Olk3ET9waeS
8Q5+HO1zkIzj8Mvgh0jcgnYF9yPxANoV3JSM43QdefqXugmHSoV9p+PaTxnM
4h/0DyUX/4A7cPEP+Awu/gF/wcU/4MVc/APelIt/wGNI/AM7YLx6P63g782q
LL6Fn2hdMLfKsFYqGt+C3wwIf2lQg52nBF9gOnvQ+LvsvB341ft73+b10dD4
Ftzu2tsxaj8NjW/BR35r6NdijoadeyB86uAO3rKK+QviW3Drph1fWXZj7Yh6
5U2t4jLjEJuf1pTaS9y/0K/IYAXTG+KFBzGNI478YPtJ8BPLcp3r6zcsoO2O
fDaTdoc+kY+jY/c9r4dr6DwO/X59mo324vgCIeHhsL/PKvod1tXq1Atp/kmn
oP3lr9RfxKmkvyA+Q7ymyXlT98xnBZ23Iz/XHo+X9X6nps+j58RtDfLzXVm8
BK437u7tnYJWcO1UtGRlRX1gp34F/XXn9imo/4GdEon/gV0Q/86t8vuDqhuL
i8CttGece53TUv8J3el+Sv7zbPtG0X1NdfSeQsyCzpeuLVRQ/WD8jJn2IfeS
kUw+aOVK6+DYuzS9cazWamwMW79Fehfi/6F7pO/iOq5k3FMN1Q10PebIrKkp
qQqqc/TjRbd1oV+sWPyEv89fkjunagxbH8DfX5FxCv0O6UfnezqZx7JxE/xV
27npHbqwcRn9afhu1bGx1Vj8A77EbZulVVMWD8BOofMTj7RqxuIN2v/U03Ob
rWPnpqj9zs14Z71Tj8Y5SH91YUH7zNEsDgGfWnP/pjt72HNh7wPcc2n/Js9F
/uB8/vRcKJc/3bchdkD7WUjlF2yb1HxrdaGM2gfpV3D2QfugfdFO4AtJO6K9
wEdy7QWeSNoLuoVdPzevIxzzZvpBfouJflBupO/s9bDt5RCmT/CuRJ+wO+x3
mugffg1+DvML9Ef4LS+uP9L9btIf0d/hzwaQ/g7/BX82mMyb4E/gz5Zy/gS8
OvEn8Fd0XZr4K/i7W5K/Ego+Wnp1yVMI+D/82aCS0Qk7E9g+5nwpP2E0mZ/S
e6mIH8j8F34KfusZ8ed0f46k30X8MOqJ9OOI34YfxPh+lIwX9Nw7sasZme/D
r8HPfSHjKT3fTtKvJ+MI2g/pS8g4BZ1DF9bc+At+lxt/qV/hxl/wm9z4C27P
jb/g47nxF3w6N/6Cdybj7+dlM3pavcgShz1TmSUMKBdfFDTqcPmGUthZWc8/
ouGxbmNHWZWKJgPaa++dVgo1DAv+PlutES0itjVMiNOKyXa2h2XVlQL+j7/r
Pz7htuqHQjDpNTpdJ5SKR4yOPvc0zBPN12Tm3DyqEPA8PD/tnqnaYZVCOF1Z
rxviuMr2/yo2eHQ/+fUrnbCqsl1SRHx6u68dve53mYB0+J7RVSFLZVEm6HuX
f3/Wt0yYXanPH0JMZNyALR8LhMLXc28nGZcIwYuLUnW6v8Ksi03GBj8qEC65
vc3WHWOf7VwPbDN6pabp8L1FMYev3E7W0HzxnKm9ZtXX/08jLJK4aCxx0XpY
8HlbbxVNDz6SpD8o5S+WS/mLtWb+jZjZSCVskOwvwP7+Hz5PT7/KyoP0s0h5
vk5a81M3Si2q98T0yYsvFGd5em2Ms1QK8VJ9RHxu7twpI6vCPyS/2uqVHaAR
suc3D027pBW3rsw1cLqhpvVH+ibEDsgXzznqNGaO4TuFkC59X/gk5SemVE1q
E/NZTcuH+jWfuqDqXmsltSP4FGL/8rDKelLd5TTs9Kz/cQ21F+ya+bnfhtMq
BbU7eCRp3xGSDqguav8Y8MMtVCb3kHRDdRT36+P7q8F68iFSOqo7i7+GX50V
enJ8H/kZE10hPXg9kh754jkLiT7xf3zGkufiecivIdE58gWvRcqP/vJG6i8C
+gvsA31lEfug3+2S+p1gQfod7Ax9KYmd0V7QV0vSXmj3VKndhTDS7ujvVaX+
LhiS/g49QF9ZRA/QE/S1negQ/qK2lJ+QSvwJvo/89hF9Qn95UrmEuUTn0BP0
ZU76EfSEetchfgz1B99E+hf0BH11Jf0XfmqQ1A5CEvGTT3NcrifN1QkHRrla
u3iniC9eTY2cNlkjmNXYWzvBVydEV/rbV+Llibez88cVUI7273XJ+tiznAIh
tLL8bL3wmrJvm6/TWT4Ff/9vHAgXWvo2bpdqrKV8dKW/fyR4r2i1Y+d5lv/o
yvl9krDKesCsQ6kaOm+t2mWDtVWuTpinqmP6wUEljP34f7w/fX5czJWFa6er
6LwV6QNrTa62Z4NKeLfiXIME3xSxtNkDh/g5OtHYINjdXk8lzJWeJ9aRni+m
Lp798LmLitYfvGuiSUzqBRVfHhHlCZDqQ9Nfevo2Z2GhitoL/NujiUE3u6ip
vUj5RcX2k5s9Ksp/vjL/cFaeEWHtH7qqqR3Bw+zGHVngq+brK6K+6I9IHx9S
xcFnmZraHbx6/2rrZs1VC/5SfSk//rnhJnGgmrYHeMzJ8D3JRmrhjmRPAfas
3SF+keqhiv4f9t5tO+KAvZeCfh92bTJpzvDTxxS03dEOK0i7zz08uVveLx1d
X/2yf6hZ0EyWD+w6+2QXq+l3WD5oB+gK9oVeAt53mfjdneUDu7rUTj7q8oDl
g3aAblEe2JsvD+w6bte1z4PiWD5oh96kv9D0xK41/j5QVw1i6dEOV0m/Qz9d
L/VTAf0U9sL30ohuUX/wy0SHqA9NT3SF8oHfIDpBOcAjiB7Q7sVSOwt1SLuj
XiiXCakXOMo1ltgHHOWC/cFRrlmkfcFRrqZEP9AbyrWX6A36QzlNSH+n55mb
njHSBlbY4dHexsnGrL+jvt1If0fcC962lmqz7D3r1+BZpF8jHgY3CdlycrIT
67/gx0n/RZwMfsGg/9TJ//RTcFPSTxE/gzcqtWyb7sL6KfhZ0k/pOWpS3+Wn
Z1teiP9/7CDCDqgv7N2a1Bf1Aq9G6kXvVaI9SflRTvCGpJxcecRlpDwoN8q1
o/7CRk672TiCcjU7M2iI2UY2XqBcxV6H54eWMY5yFXIc5WrB5UPX/8hz6X4Y
me9u719r2MCDjGN+3G3KyPxx3dV0/QHpBwydmTLZtJBypN8SavushVIjvN2V
HeFbq0QofPzsSFpdhejbR30soK6GxocrK89d/BLn1Hph1HSfhuaL52ddz/91
+r2S5guuvBKyullrpVCz79OVji7ldD7SVLultl6agpYH68RzN59SpF5n55zB
3RvcqPq5lr58ReVz02j/GFB6cpt2O4szoevXo7KUN3uU0fyxTuzB5Q/+H5c/
9BvRKCHX+5OeHOVAfsFbX+2Mncz285DfsAuDqg7dwvafkN7I9/bMzlv15OD0
Pl+dKkdfOuvR/Rqk5+0JnsfZc0zluZhMIXDO2tdCNJv3BWxqb6RV6wS3ouxr
axxVtL8XfH797VmZTmi67/c6k/kqYZr0fRH53ZX99+lKOxWNm8F1GwaLxg00
gm96eKTvzl+igVk3E+34MrGt6m6X3qFKYaGkDxpHL83bZnXGX031lCLpS9zR
wdO8w2iloJS4AP4zNbHm4cVq+n98r/rzwRuGxCoEPA/PXzHxUhPvbQpaPtQD
dsC6A3RY+GZdL9XrYrruAJ5q/8dhon6hUE3Kh9rj7w6fpzUNCiiHvmZum3Ol
i6JAKAiKvmA8XEfXS6taDqiYqyrouIb07d1Wfu3UTCaH34FejA4u7Hx/j4Lq
B+XZzukK6yJORFcYz3ZJOhW7bt/5QzapXMjpmh+fZPxKjHu5/L3dgDRRu+Pq
pg31dLSeyO/ZtMLFk0vZuXTwfidSu1oblAnIF8+JOBxyM2Uq4+h30X6TZ/5K
KKM6x3OMOZ3jOVOJzm9J5RRQzpG20d9ffpLJ0d/wnKlW99+7uunR/ojyRJL+
CHsiHuscPb5b43g2LiOeXdy25WqLhwrafmgf+AfoHLztEdV9j1Q2n0W/AUf+
iLtsueei3sakfWEX8Oec/cHlnP0RV8QQO4PDTidIu8A+SC8n/hD6xHos9In+
gvo1IX6YxrskPzuiK7TXEam9BGeuvZDelbQX+h38lZbrd+BpXL9DeeaR/gUO
/6Yh/RHthPToX2gn8F+zc9JCJ8rk8Bsekt8QVhK/gXENfsuHjGvwP/BPtYj/
wfgIvoKMj/g//q4mfgz54jnriT+k+xTETru5cRx26kPGcfgj2OMR8c/QM3hA
+Zmq1ldU1L7Ifzg37iP/UDLuw17IxzhQ8vOwO/hlTcjtA+vY+85eXo6JNfYq
Fw0PvZo5OEEpPDuTucHR5QeNQ/6zv/neMFpJywnd+ZNyxrZKHhEf/ZXuV6wv
Dt6V+11Fn4v0MeS5OL+H526P1M46J1PT9QqN7elNZldLRL/Yo78PubP9zc59
1g8NrFIqDqy5ev0TTyVdn8E6+p27G8I7Ktj6D73fc8oqe+orBa0/6j0iZEJc
0hqN0MnepW/8DxbPfF27IW71YrZ/B/5Oey7yjQHTJzj0Se9fEL7gQrf4o0vY
/sgtyU5idCfvwVtGa2icirjU44yuz4K5zP8gLm3h/nTuq9MKIWZe9TGjrD5T
ftKxw6ColDKaHuW9265zaJMEhXDH2dY9e2Q6jSNm3PS39tnN/CHSWw76XmL3
jflD1OMeyQfpwfn0NO7lyknfm0HKifoiHp5F6gv74zlfiP0xDsJfFZFxEPWv
ce9iRyubz0LAdJ859/qy+Bvca3eDDu5PZHLM92CPnPzXXr6rWbtAv+dIu0An
0OkEohP0hztS/xBSc7rX8wpkesM+iTPRWxsP8xray/+sHxb0C3KMUgjuPn9e
ehqW0v0pi13V668MV1A9Y58ngegZ8RP80j4Sd0H3WN8zqjbt4azrrL+0l/qL
MJT0F+RL15uHJ18I6MjiwLLalf5V6EziQPr+UOL3Jg66kJXTkO0HgY8wM8la
n6+m+oZde88XNfI0JbUv+FbiH5AefqM7SY9zNTgHFNc3W7/Xf+w+DriQ1c+s
zjGVkNbm8xnfUSpR3SVpT1pSofis+NC20Cfs/CfO++y/kOgxrZTdNwRXrFH9
FPqphPwZxjr3eK34VRMtz/NUi0Paj1hVP1hJzyOhXIk3NgZfWMzeDwA+esRv
17g4pVAsC2vnklckvp9Up77WTilaOdx84FyNnZvCuZ4mpc+fXpuiYu/LIvxR
cP9pz2KUdJ9jY+Xff4vfwwvnnmuuFN5O7pb77HaKeKeJ8cG0ce/ECKfvtxY6
lFMeJXEhinCkuyX9XWjcJUQvM6yclgfng5px5QF/wpVnuVQe4RcpD+yDc0xv
OPuAj+XskyjZR2hF7IN8cD9gQ+zlNcfLlQLa9b3UzkKBf52Rw8ey9sW5rUNc
+4KruPZNldpXcCbti/NeKKdpYu7eP12LKUd5rg369H3T+kIhTyqPgPIcqJa+
7McKdq4M580+u3WK+jlGTTn2hW+GmY6LO6ESoLMcqVxC+clnXm0+Mv3j+Vc5
/YMP5PSPcr0m+kf9UZ64iw8sL00ophzlaVl7iHOt2YUC7ILyDCtbq+m2oYCW
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
/lh3hP3RjtDpQtKO0An01ZfoBLpCP65NdAW9loVX6lf4csopfvMTtk8Dvv1U
PeOqGqZz/N2Z6Bz+DfccfU/o3z5/ge1bTfRa0sUqt6hints2e7mtkvYj6LQ2
6Uf0vdwkfU/PiVmDtqhp/4Xu3pP+C10+lewkjMwYVX/5LfZeb/A6oso6olgl
TN+b3TShjkpc4x11OPpikRic9nPzxY5KAf/H30uShu09c18hnO8+vdB9eZnQ
ymRxn7xfP8UBNa232vTSCH9G9b/UN/iy6Hcr6b/ssHTRb8943QiFTvieI1sQ
m3ZGcLofvy0tKV302J1zYO5kmXx+zjfH+Oj3Ij7Hb7q49NC8cqHLyzctXF7p
hLjD8ltJxi/Eif631YoKXSFfPGfqurDVe46X0XzxnAmHRqQ+PlQmWLz1aRQc
+1nYen/T0WizJ4L7liu/itfoyU9b+Zd3+KATqv4qrKm1eypEDSgdNOE/jeD6
XHs3bF9F/9r2pqfV/HeC99eQdjsna+j3kZ+lyZmy8Tdl8sWO/91IOlXx/LOz
Ptnp/xS0enZlF/toBKN+qk1mfiVCcluj630X5AstPmyMn2+hof/H32t8fHn3
/Gw1tSPsOvFIrd2fDihpvnjO+GkzypdX+Ftr5fcD0WYvxBn6faP6vtQJ7/8u
eW3ZXiXs2D22q5XNUyHV5dt6s/c6IWF9aeDMUBWtD+r3YPt+O/uLFf7/beur
fU0zRbduvmYJceXiykVvO357rRTe7XXdlZb0SYxcGPgntI9OPNstrHNmvlII
/u9vde27T4JLhOf2tAo+b5Yicu7Liv4x7mj7YJ8MYfL7KLu8p+Wi+9PYrOM5
KuHqmBmbzSx+iy1XOv14VlYq3vT+YXkzqCK+DBzS1sXit7DK/GaPvAo+LHbU
WoceaqHT0UcJYVXzhI/62a6W/UtFF7OlcYlj1IJ74O2aNo8V4ubSuleMDxeL
L8y1LeYMVAquEhfArc9pY2NXqgXcQ8O9tB7jCj0LT6gF3AfD/TD9JXU2R+Wo
aX9HP04h/X3FjbitZhZF9FxEsMUc51Wv2PNQLotO30NUVxTCeonT8n7fY9y/
VTUNPd+Ccyh3T28OaXxMIcAusFN+SteHfXdWxPVS/QV7yR6i7408n0VtKvQv
2UuYJ9lPbBz6/uLRjhrB4cANrXu1cvp+qsshcT1NAxQC2hXtnBJ2Y2z4UoXg
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
uF7NLbVfXWb2BB8fnj5r5HdmT/AT5XaWu64ze4L3jE7qEfWQ2RN8nuW9B2uf
6FN7gs/80KRN3TUyOeyJcziNZkXX0pipqD3Bh+R0aH/yL7MneOfGd6uecGf2
BM99uKFu4kdmT/D9C8UqvS4ye9L3SNy8/v1GFWZPei6o1aPBk9cwe4JnqpMt
9kxj9gR/9/vQoCohzJ7g1pdU2od5zJ7gDZ4PC/+tY/YEty0aeGj+YENqT/Cy
jM5mnisMqD3Bq3rV3/zVXU/eSrIn5aqIv82GepdQ3SLuzXW8XHp6ArMz+J/W
H2tblTE7g+/U/tr4YAizM3ifAvMTI2OZncH3D11fcGsfszN4zrzyFcetmJ3B
5T3O6DISymkcAu7rc7J26GNmN/CZFsemD2xlSO0GfrVh39Cm4cxu4Lory9Zn
6RlSu4HHZRSc/1JLn9oN3DW+xQadZRm1G853Rder8dEngNkN3LnlEmWff+wG
frBe12+6Dsxu4G2m1/o2fDuzG3jcUXmd9GBmN/ADaz44GqwppfEYuDBnm9El
G2YH8N/thhV1+8LsAN4jdFtRh5nMDvQ93s08Cu/vZHYA3375if6YiczvYX9M
uTfIPnkvswN45IX+5zcVMjuAP+yRf2VyPWYH8MFFtcYPWMzsAD7I/GqjuL3M
DuDbP+QM61iHxeHgN3fbxSaWsHgDPDfu6tuYf3QCXtdoSzV3/SrUPuCaoU3S
noQz+4AfWn8vdc43Zh/wz7fft97TWkftg3nbu5EZP0LDmH3ATby6VL+rZvYB
t7lx6OIHY2Yf8A6Ov1RvPJh9wA+FF7c9ElZE9QB+7mD0tjxLVl/wn5cOpL6v
w+oLXrLMb8J/d1l9wecqFG1v1jCg9QXvklFt85jtrL6Y1/L1BefrC96Bqy+4
DVdf8MNcfcH5+oLz9QXn6wvuydUXvCtXX+wDqzj9g5/g9A/+gNM/+CBO/5Rz
+qe/x0X0DzuA8zoH53UOXsDpHJzXOXg6p3Oca62jcd21cQWzA32PDucPwQ9x
/hCc94fglzl/SPMh/hB+ADw1r4v8oQ8bL8D7cX4SnPeT4LyfpL87wPlJ8J2c
n8Q6Uh43zoLncuMs/f00bpwFd+DGWfAD3DgLzo+z4AO4cRacH2fBZ3HjLPg1
bpwF17v6v+Ms+CVunAX/jxtncS66V1SNgmumzG7gfBwIzseB4H+4OBD8ABcH
gvNxIDgfB4JncHEgeBIXB4K35+JA8IZcHAjOx4Hgssz/jQPBjbk4EFzLxYHY
J7nKzV/Abbj5C/gWbv4Czs9fwH9z8xdwfv4Czs9fwPn5Czg/fwGfwM1fwCO5
+Qt4b27+Qn83k5u/gHtw8xeczx/Lza/B47j5NfhBbn4NPp+bX9Pf5eTm1+D8
/Bqcn1+D8/NrcH5+Db6Bm1+DX+bm1+BduPk1fS43vwb/Q+bXsBv2A5vryoKf
lLJ1HvCP3DoPeCS3zgPejlvnoe+x4NZ5wH25dR7wa9w6Dzi/zgO+mFvnAT/K
rfOAG3LrPOCduXUe8O9knQd2o+9p4NYPwcO59UPwVtz6IbhO/r/rh+Ax3Poh
OL9+CK7i1g/BB3Drh+BO3PoheC9u/RB8Brd+CH6YWz/EvZXP3PozeAtu/Rn8
N7f+DL6VW38G59efwW249Wfwntz6M3hNbv0ZfCi3/gzuwK0/g8dx68/gF8j6
M+qLfa4kbj8C3IjbjwDvyO1HgO/n9iPArbj9CPAr3H4E+AduPwI8jduPAB/J
7UeA25P9CNSX3mMT/ndfCfwSt68EfofbVwIfwe0rgQ/n9pXAL3P7SuBp3L4S
eC9uXwncluwrofy4D6WsGWN63FxDyw9uz+3r0Xuo3L4e+ExuXw98BbevB653
5X/39cBrkH09lAf3sLZz+5jgZ7h9THCR28cE9+H2MYdu2bcv2qxc9Mgbl6fo
xfLP2TcjL3RluViq2HD4qo2G5r+dvD//1cegCMsZzG5C5fm3EtF1SuSCvj8L
aD4ZhS8ehDmWijUNm3zztmB2W0/eSye/9XCL34VCWs5W5rOXrLQsEzf2jFKt
nFFI7eMWMqfYPb5E1M/dFuRVn9mn+wivgfHRRWLLwId+Rt8K6XM/uPY8HG1W
LPZyV3g+ncz05k/u//n0HLQoYmIJfa6l3+thgdnFYnrXC29a7yih7XVrw+EI
31El4tkBro3OHmftNV71JtEzsEh072L8zeRbCdWbhryfdkpZtWFTq7J+pCTv
g8zwOvFxsob1oz3Csd/P+haJH7YmTjJoyNqlw4Xkhgm+WvHzu41zi0cwv/Hy
Vvii2DStWF9n/aiHHvMb3uQeq/mvobNeVPQX1Kt2Su8WwbGFoo/xnC6darJ5
TVx2leUrLYtE+9ftxah41o+GTXCI9h2lFc+YZpcMNWJ+4zd5j26Ux/1hkzOY
P/xJ3gf464dBV4cJzB9uCa+WkGSsFZt3+7j41zzWXi3M5PnP+mrElFWjn15z
YP7/ftMaTvHRGnHQF+8bm9ow/z+LvH+y2ZZG65LfMX9Y1T5SG7qyQOztsaKh
ppj5w1NDfEYFZheIL9pXnbTLkvl/+bWo1SstNeKzWM/0z8+Z/8944JvsGagR
3dY7OXdqxfz/+rf9OrrkacSrw4NG1nUrZuvAqbVCzPapxMLM7sOCHrDxEZ+u
tepOirZk8cMX8n7gMWeet9L0YePjGoMlB9KS1OKpcNFo90A2PtZfHPMoyVgl
LjCSzV72hNknfq1f0wRflWji1tUpJYPZx5XcH90bsjC31Sc2PpYervkqzFEt
/gmdXF99mY2PYadTWwfHqsW2UWN/jTBn8UOPhmbjA7OVotMAryfPklj88IG8
77O90Ypvg3NlNH7wtzttMD1eJb77b+e6U3Fl1D4hDv93Xk8h7kn0OFZ2mcVX
XYc5isbPFWJ0QM4aq+fMPu/IeyU/BLS96p/A7LN09hfv7DClmD9QM2bELWYf
02Tzo2lJ+WLA66Y24dVYXHoh86v6WV+F2PKBqplsGIuvRpNzy6tXRmbflbP4
SlnmHxltphTbZg523tSDxVd7qw8uDV2pFC+nN9Nrn8TsY1N5/iVf/LEnss2m
EywufSm931XceKnPVpkxi0u999VN9QxUiCHmGzNrDmHzoBcturzwDPwjth3/
sMN/WQpqN+n9uHni2Prqn2sFNg8a7TK9g5XNXzH916Rq7TqzeB6fh6ad3Wwu
Y/Mgr8dOg/M888WOcfYF3f+J56tWvu/zj9h69JZLB/6ZB0n+P0+0/OLwd9lS
Zrdgcq889FbxpNnzmd0SxUca9/i/4onjN/Uabflnn3HBhbdhjvlicHO90ilu
LJ4feOO5no02V2z97pb5hf5sHhREfhe6+eoc6w+5zG5P8kvcs8PyxPOrHhS2
9mPzIJPK3//5K0695ri3URe2HnK90o/9ElWP6z712MrmldJ7wn+Jb+IyDIxO
MHs6NO6RYpeQI1qMCGxnP4XZcw3ey+3xYecYE2bPhLEePfM8c0VN2JfWrv/Y
U/LnP8UR6z08smsye0rj0S/xoeOuhs6rmD2X45z8jC8nOv4zr5TGl9+iYbOG
GbGxzJ6yyvef54o5Jr8Tftxg9uwccPx83+CfYr7joNSgS8yevuR9utYX7h9z
CmfzysuXE021djli+K5s340L2Dy9oPK9rL/FT8OnVZt2jq1bRlb6hywx+WV5
laQyZs/vlX4yWzRYd2b80o/Mnu2+mmx0dPku2o16+uvAdGZPL/L+16YW9eof
VbN+Tc+n/OnTJfIts6fkJ7PEprGrjmwwZvaUxots0Svg6M/z/9hzNrmPnrRr
+hmn2cyekv//Lgq1BkZ+PMvsmVs5fv0QXcqbL+70m9mz0YClU0ZZZYn7Glsf
WlnG7OlWGf9niXG2PheqdmDrS8f9T94wfp4tdlfOSbfqxtaXMivHwe/iw/We
TuqPrL/vquwXX8X1trXr7ndi63VvK/1Ghuh09rgmScHsaR6Z3sUlL0M8FDIq
OW8Ms+ck8t7+hDmDJ554zex5qHI8+iYmjKzS2fyf9Tp87j3r2+7nP+uckv/8
Kjr/F36l5UkWD6RU+vlvYtUQRcyDf9bfTCv7Xbq4tG1z40H/rHMOI++hly1w
vjVpJ7PP9kr/nyHavLOSt3nB7POq0s9niq6dX27dFK1H7VNQ2S4fxIg/7YN9
/Zh9VlTq+aPYbf+caZv/2S/QVer2k5i3cUu8fm9mn43kvc1vTlhcmXuK2ad6
pV/9Iqa/mFHryAFmH89KfX4Qqy23qDd4Jds3zKpsx/fixhUl1nc6GXLrYCni
TcOWR1cnsfrmVfqZj2Kfh0tTyh3Yuu7iSn/yScw6/rfJqYFsXVe74P/88P9X
11vHVdV879/nHECxuzuwE1uR2aKiYmGjoIIKdne3ICEiWBggdiGgmOABVDBR
VMQW7EQ5wKHhx5c91xru/Xmev+7X/XYzZ+81a2rNzLXeaSePb9e9t63oxw4U
9YePtGOPXHy/eKeww8giOz/R9m7W7VmnDGEHWY/5qbZCYHCic0NhBzuuR/3h
/Kq4zc7CDh+L2m+8dtnkrCn9vIQdZJ2Mh1p25+DPSmoxD1xW9P4PtM9HVhsc
1lzYYTO/F7Vx36fNh9Vi3yS6yJ/jtA2a10t/t1vYwarIb59q3xmozl0OFnaI
LWrvz7UTrr3ot2+D2BfwKrLzVe3b7fEuiQeFHQKKfvem1j65U8MjxfbL5HNQ
UdqjXUx/tqog7ODEdbZ3Zjg37Lyw2D5ykV/d015efybPZa/YLxtYZLeL2hwz
8xr964nvtZf1tLUvr8bPWVVdfG+PonqJ0Fba+vlF5yjxvX2Kyrml7VjZ+ljn
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
wM2ufcxmHdkBz5tyO9D9Cz6uNeX9P83rOK/P7UlxGO4/Top6B09R1Dv4Q0W9
g49U1Dt4Jq93tOsxF2x7b26Rrp3q37R3v6QUstsNC3PLjuOTtX2rpZyfpk2h
94xun9fEJjlc6/ej2ZsyU/PIDmm83S09cyA0PD6dvtfO3tTz7bNctk47ssam
n2I+dmL1ffNrJ/O0y85t+f4lQCfOA8vPa3e+9w09GyzsFsifb3/Q/WRUE9FO
p/DnF/HyUV/qJ/J4XV7RDxhwPoa/J3g2H99ncA6/esP3qduV90kd31z4eV++
X1y3ddaZ/jHCzrFF8+HLWvcpD49kFVtfz+J2s43t9LpXhPBnlfw88+ziHjlp
rRiP+PPMn9sZ5Sziz7sqyi/Pn6+6PGG9a4SIV0TI789a8n128Aty/TJLXr/4
rsf8+S6K7+3G178m/HvpnrXsP2w69x/FfIlV4fZH/frL9cg2KOp9GveTvbze
4eeW5b4ZpBYUsBY7mwY4OAg+8YTsz5teyP6P9vLXse3mSv+nOxrjqmo7Qzy/
u+jfC7Qp7sddnIqV48V5JudoRxm8nB3WJe3upYrnzZp893mWV8BazTvfeqyj
eF4vP888+fN4n868nw/i81LwZP688j29eDuN5u0a9Rstz6u1cbY2zba80BO3
5OfN1qWuvHLiRhZx6HW8DXzQ+PJwPdV7QzmOqn3I46h4/gbf/xoWs8V9cykN
+RX0VKddWrqxbk8N+e21ZHlf5lZfu2nt9gn/HMDj6i8Xtpy0YYYoB/qlU3k5
sINa3odl23rcGrr0uJi/VeQ8S/p1I3OomEe58Ljraa8LY3suExz3RNoYXfU7
0Fz4/xZ535lt4fvOeB9rft5v4N3lrVbcEnZ+UBR3ytfWGXEt2ut4Gvl/RW63
n1tj55eLF/Mrf76vnf7U0izyjYgvHZXfU4v4MLihHOfXXht+zbt/Ur44bynb
TRvO9yPAYf/PlRobLIsU50J9ePlnFHaoy/e1sxV2w33Vttw+4I35+4QGj/j8
1Uj0S8Nm/t+4dka7cNP7uxYeol9qKe/HaZX1PmmG/HzVa7e8twWIfqmUTn7e
ppz29T9fwU9ML3qeVVE8v5/v9+F5/O5I2T9ZH74/Cw6/+qqwTxm+n3KRfxfN
T7g/ZPL6Ajfk+wt/eP2i/B5y+2L2/DwnuNz/57O5/Lwo+GPZf5j1qtIlrs8R
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnQn4FtP7xuddZ+add14/O1mSQioJWVJCQslOZImy7ylRlpBI9iUkWymR
pWzZCmWJKHukEEVkK2t2/vfHfVz/6/qe73neM2fOnJk5c87z3M9ymh3Vb//T
ilEUbZJFUUn5Sfr3lgpOUJpYj6IzlB+bR9GZ5Sgaq9RGdYYoH690ntLdqnO6
6hyjOgP1e0yoc36oc5rozWpRdKvot9Mo+lB17yi7XdoZF+pMU52NlX+pfrQV
fbaOD1O+l9rdTnVGK99f5/dReeskih7RsfVUf7Hqn6ljt6nOQOUHqM5RqtMm
cX/o8xlKT6j+hqq/RPWfFb2p6K9FPyW6hegvRJ9Udjtt9XuA2ri97Hs7Kzf9
ruo8pufzgOi/VGdrnfun8vY1l90fyrfS7895lnEUrVPzc1pX+cfK71XSX7Sl
ft8nYgvl56r9CaL3UX6e0kTR83St/jq2ciWKDlY+qeT6Dyh/Tff2l+jjVf6g
kv6ij1T/XPX1LpXvrN+Dcj/nj1XeVBUuEr0B7Sjp9OgDld8vuip6fubzJoRz
X1eFf0SfoONviC6oDyeKHqr271b5parzmH5voPwznTtF17qiEEWnij5DaZLo
XhoXLfUumuvcs1V3oMonq/wQlf+iNkeKnqHn86voG0U/J/p8tTNc9Amqu1sj
ig4Xvb/o7VV+regBomfo/ItFHyf6N507SvTzOreXfg8WvZ+O10TPV99WZfyq
Dw+o3wOUL9eze07pB9307mr/ctU/RXXLSm+pfkP1E9Hviv6f6PeUlurcP5RX
Vf6OylcSvVPD1+KaT6hvV4nuJ/r7xP1/Sv3ZVNfbSPd+lO59JdHrij5L9P9E
ry/6CF6a6NVFnyH6J527qugBohsqbyL6TNEF0WuKHii6KHpt0YeJfljXvUzX
OlnX7ab+XCn6tMzn004v5T8mHj+Mo/dFl0SfJPoz0anoUxk/aucg5SvUxrpq
v5nKB+v3D6qzkujTGcuic9H9RC8QHYs+RfQS0Zno00TPF10RfbLohzRGHlR6
Vs/6DLU/TH07Wn3buezxM0K33kX5PWWXXaw6Tyi/Ufm+yq9X+l3nbKRzVqhu
W8ZSzeVnp56rflV5O5XfwHlKIqPWKv+b708/eqjsOqVFaqeZyn9QeSuVNxf9
k+g2oh8s+dzJyh9V/6eK7qjrvCx6hugdRF+mPnVW/q2ez+mi19K5C9VGK5Ud
pLY3VX5v3fPVCTp+oN7906ozR/0crrKb1M40/T5Q5xyh+vuo7mNK1+vYh6rf
r+h7oP8z9e9p/e6p8nVU/02VNVfZLB1/RamJfq+n8reVb6TygUUfo/xh5S8p
9dU17iqaHiR6bdV/Xceb0bbSnTq2SPlmKi/q+Daib9f9TlH9DrqXfmW32Urn
lPRcXi67vfmqt0zfzV/KH1W6QmXvK2+qduayfoheQ/Rs0U1Fj9Q9fMI7UH6n
rjOZuV55G/1+V+1ulruPL4c+r6JzZ+rcdep+pjzbfnqGj6ruKNV5RPk2zF+i
t1XeX/nVSuvonCuVX6W0p/rUWe+pt+hD1f4ApdGimylfXeecKHoN5R3Cuawr
Q/R7kMbtROUn6/c1SgdHPre1ypaqvR1DeWelHdWnw5SvyryrtJ/oLMztC8ue
u1fRGBisfHOVz1M756tfk+r+BvgWptf9HdwT5tKVVK+n6P8x33PvtKF8b72X
QVxTdF1pf9E5fVL5mWrnYV3nRbXZgfdd9/fDd9REff4o8ZjYjvlHxy8T3VC+
ivr/Bt+dyk9V/Y1VdmPdz/bPsKbletbX8g0XvZaxrrHGMZZHhfG8csnf1xTV
6VP2O+D5n5L7WrT5lPrws+hjOFflz4heX33bRb8/FL1buKdLuXed+5Dq/yS6
m8qfKLr8V93nrvr9fai/Sc1921j5VNX/RfQeNdcdEdrprGfSTuftrj78pWOv
qr+Z6KLK3xCdi/6y7nuoqF9Xq/w11R+ksuv47kSfLfp5tfec0u08I8a5yoeo
/Krcz/Bq5XvxDSltqzSSb1P5uaozSvR7oi8QfbnoV0SfIfpKvhHRZ4o+V/kx
SscqLdS9HK38Hr3Tu1SnoGteqTpzGZfq868qu5P5TXUuV/knqn+86HtV/+PE
bUwUPYS1seBjF7CWKp2oNCtxH69XnX2Ub6fUQWmonsHRSrcVPb8zz/dU3kb5
77rHzXiOmdvroevuIHpX3ono/ZRvr9RR6QClTko7KLVUnf8VPD+/pevuLvoW
XfdI5bsV/HuM6vypfITqdM/cx71EH6tr/6br9uA7zdzeTirfMfN5vNOX1OYW
oq9Vm8ep3h+MPeUzVb65yq9ReSv1/1eVt9bvXTI/2+4695XE9z1SdXbN/Nz2
UPm2me+js+hFiftzn+r00LNJlCbwDet99+ZeVXei6P10zZ81nj9MfG8TVP9u
lR/CPK86ZyvdLPpItXlR5nnwBNEbqs7B3K/KBindJLp33Wsqa+v+yi9U+Rje
pcrvU/3D4G1U9pKO3wxvAC8Gz678KtWZKLoi+hrR7yZ+N3eoP8+J3kT0FaLP
U51bRR+lOueLvp3xJ3qe8qeVnimY54D3OFz5EapzvsoOVJ3DRZ/HvcMXJX7f
Y2if9UzX/Ur5rarzkcovFv2p6pwi+gHVuVTl94k+vW6eA97jgJr5BviHA3nX
ymvwGKp3d9Hnwkt1VFkdHkb0YrV5kvL71eYlvAN4HrX5Rd1zVknP6S54CPgp
vZdDVecceEgd31rlX2ruW8w6rvKrVX6wyvuKHir6INFnir5B9GF1r0svhbXv
Cp07hzlO+dk8v4LH08aq3yiYP2kjeo2CeY+2opuEtTXRNaeIflt9/kD9ulLf
8u/wp6IvF/2b6M9FjxINE/C66j5a8Dmpzn1M+Ts69yPVuVpV/lD9h+rmxd9R
voF+Lw/r71uq+7jSE0pfqv4tKi+q/AfR00VXRb+jY0/Coyp9p/JnVF5R+e5l
8+ezlLLUx9/Vdd9VPlVpmtIK1X9B9RPVr6cue091flL5cyqPVV5J3c4bKv9E
5dep/C/18WHmd6UHdKyJfn8ZeJJvE89Tj6v+mpnlJviHBmNJ9Jqi1xf9beB5
1hX9deCL2qj9p0uWK+sq/0Dlq6t8L5VlShN1vVrq5zFX7f+h+rNUp6Y6q6r+
4sBvLFb5SNF/q+xV1X1Q6SGlz1R+o8r/YT5T+lj02qo/h7VX6RGl31TnJVh5
lcepy97StfLU39M80dXU7b0Ze/3qpmddVf610m3wWTr3dz2H0arzQmwZ5z71
fYnyjTTmputeLlQ+RmU7Fjx3ICtNDvzV5vo+/mZNL1gmRDbcq2b5DTlub+Vn
Ze4DY7uBzFGw3PJFYvohXffVxHPgDaJnJ557bxT9ZuI5f7TorTPPn53UTjvR
67KWwBPqHgvq5w3Kt8q81nQMc91TKu+vvFhxO8yhW1QYeJqbC5YtkTH3ob9K
c/gUdO41OjawYF6nP/Jq+GZ7Z5b7mItKut69ouewvmR+hsxXh2WWK/n2/1T/
bxM9U3X+En2H6JdEt1CdesGywLe67h26bpk+q7xWsLywi/q1htIE/f5D596i
/EWd+7fosaJfji2bIaMdqvyozNdiPvlMabl45n+UH5JZ5kU+3VV111K6R797
Zr4/5ALmtBdEnyr6n8T88qzY8iFy4iGMd6XtA04yte51+xPusWh+BV5lvua4
4/VcOip/iflY5TOVj9V5F4oeE/CZC5QuVP0Fqrciscw+r2G+tqvytxvGXLZt
uC7nnBbaGKo0VfRT4Tf02crPUTo1MvYC7tJa9LkNP6/jkZMafh9H142L0Obw
yLw4PP264Ca52zoxN07TL8gj7zSM72yn/D2lo1Lz1S+JXkN0a+WzlDYX3Vb5
y0ptRW+m/LyGn+mJqr9ezX08OjU+A03Za6rTlfGrfFnDvPIA3qHo63TuKnVj
WkPCczi97L6tHfkZX6L0ScH3MaDsNfp1nbu72mmv/JTwjLjei/r9s9pspfwt
pf1UZxvlM5W+Eb2L8jeUuoneWvnJuZ/te/Cz+t1e5e2Uv6K0lejNlc+Btxa9
pfLZSl1Eb9Ewf94XnqrofvUPchMy5elBfjxA32hr+Gflhyo/BFm4aGwNeWlv
5V81jM0NDmXbh3bW1DltRU8vWqZBtkGuR27aKchTfyDzlc1z/6bUquw1e3TA
9z5hLtHvLUW/ULR81j/IaCN0H2+qbIXyOyO3PY51RfW34PkrP0xp87L78o3e
01rKU3gB5ZuqvK58hVLLstcg+tklyF/XhL7SzwuKpvuJPl7n76j8m8yyWE/R
6wfZ7l+5LDIuelbZ8j9YI+O+jcqPyz3+OXdw0eV8C9/rGb6gtpop/07pQdHr
Kd+p5naRHX/Q7xdVvmHD74H3AS5wjtrsWDZOSJ+RV5FJD1Pd08E/YvflzNCH
XpHrH6K8oPZ3YBykfrYdwru7Nvc1Hs2MQ3ZC5mEeC2MGmY6c388jWykdLXoH
7pcxDe6j/E6lU0VXlT+p9LzoDZRPVZoruoXyp5TeEd1c+RilE0WXlY9TOg1c
SfkTSs+Kbqr8UqUm6u+Fep8jRK8nepjoy0SvL/oS0cNEry56sOghDeNlJ8Pf
NoyXMZc+Lnqy2lxX+cVKa6r8HJUPF7226POZe0WvJfo85DXRrUVfCs4huo3o
y+BzRY9WO2szv+oZHMe70XM4Us/tWNFHKB+vY/1UJ1F+l1J/sDblE5QGiK4p
v1vpDLAz5fcpXSK6ofx+peHgbsofVrpK9OqMEaUrwAeVPwTWJ3o1cqXN1Lcr
1Ld7RA9UeV35I0pXi15D+QzmE9EtlffN3d93MvedezhEv+/luYDxKZ+u9DUy
g/KnlT4QvRHvROkr0Rsrf1TpGtFrKp+idK3otVgjGl6P+8Gfil5V9EBkH9Gr
iT5L9EfMnUoNxifPLMwz4Dbn851TV+PvcJWvpXZ35vqwChrbTWOP6aKOnxLG
P98s7Z3KfBK5jGNDitYPUL5+5DF7DHwR66WuMYrxgFyTe348LPc47xPGPHU5
Z++i8R76A85Cf48MfQYL2r7ofk4Pxzop/5hxrmM7Kv+yYf3HrnwjYJeag35W
vqBsfUPbyNjUZsyjym9VvV4A9Mpv4/sHf1d+u9KhoovK71A6ATxX+S1KPcHr
waFFt+P7hncSvaXo60XvUfT77q78OdY21d9UeQel3qqzN+Na6UCV/612RrEO
iv5T9A2iO4v+TfSNoncU/bvokaJ307l3qP2bRR+ATkLl14veVeW3gaWI3ln0
zaKvFr2F6GtF38Q6pfp/gOsz96n8prqxFniYrTU//63n1J53p3yJ+r2L6IuL
xpTBlpGlj9c4vkT59WrndfAyPbafVfaV6j2uOpcrvyB3Heq+BV6nOr+Aryg9
GrCgpcjbQVaaI3pP0T9mxs8eKRtHfVXle6j8B5U/Vnb78/R7Fvw887rKPy37
GOUl6gWdwkzev+jl4H/qz6Oqc1FuXQT0jJJ1Cu8hM7A+qP4uqv9tZhwPXcMj
GvtfqfyiIC+AUe+p8ltV/qXaWFo2vvaL7nm68lE8q7Lppqr3p86dHHCw5TWv
o8h934i+OPC9P+ucp1X/RuXfq3x8kBmnlV2eqJ0cHUyQy7jus6H9NDPujc6l
gl4k6EqW6PhnZeOSf6MbCLz92rkx3Rt4P7nb3lTlzyTG067TfcWZ+Ut0MZfm
Hhfbi85U/myQ9X5UmxOC7PmO6AMCVgamDeZ/OvKLrv1W2bqAHoHeQ2lL1dsg
yCnDAz4JTvm4ft8APq/8K52/WHUStf2Ojr+t9Id+f1owzbFXlc+G19H1dlOb
+xaMlXUTvX/BuFaXzO8LDGqUrvECfE1u/gs+DD5yc9UpB3kKnP7FsrHxm3PT
O+t4V3iRgjGrr8v+ZngubyfGJe5Wf9urzoZBRttGdIuCca0nlUar3YV1ywmc
20PHPgYDD3J6c9HDVb6h8vdr5ivAKBaJPjvIyEtEDwl4BX34qmx9yacqPzfI
y3wLi8vWK/Ad8l18r2OvKX+9bB3hh6o/MGAa8D88w7WUb6ffGxeM+3UL9cEn
FujYgICfIEuByVyv/Lyi3wHPfyUdez7I6ZzD9cAjrgwYDvrH39XOAwEH+KLs
8c34Y6w+Gfp5mL7DkayhyJuibxTdhPVC9A2sd6IPFX09a7Ho40U/AC4p+mDR
B4teob70En0yc6noQ0SfznzO/Jx7/TtY+Yms9+CzKh/YsH70UNEDGsYW9xXd
v2HcbW/RpzeM8e1Z95rTK6w7ZzSMp/RU+aCGMYU+ogc3LLv2FX1mwzrXw0Wf
1bAO9QjRR4q+GZ5NdB/WFfhP0X1F3wr/Bm4QdAl50Ef8AiYUGx/dTX34uur5
Fv0feAXjlXF7OXox5QeUjc+jh5oZyr/X765l68M4vn+ocxJ8DFgtY0z0xMR6
DerQ1lOs0fp9r8pbq86x8FKiNxN9HLwUWDDzW8NzCnoHdCubFK1nQceCzqWl
fh/FWgtvw3wieh3Nw20a1susouNlHTsZ3ghMRHVOaFhXsbXoU+CxRO8I7iR6
K9Ef8q2z/opekHm+6RHmn4+DPP5JmIv2LFuHcoDqd1H9rzLPTXsp/QZewPqo
8s+ZSxrmh5Yyx4jeQfSnmech5iZ0pj1YZ1X+fuZnlqrs3Njj+qkwtn/Vfd0X
MCvG/+dl6z5/Vvk9Ad8bnBnLApdeXvS51xS9NkwLcz46U+bPS9V+peY1uqx8
H/Whk44tynwfe4d7OVDl+6l8GVhyaplmlPKRZb8P3sXcsnXA3MtBqn+Q6v+k
+qc2jGXvrP6c0zCOc6zo0xrG/XcT3a9h3UC3uvXFXPsX9e3AoFc+IPe7eDPM
/3PDc9snvIceoZ891c7+auc7nnnu48PVZtPU/aLN18PcwhxTVvnLzGehvFuY
3yjjOJjqN/o2phWtb5uOLBbZ/gSesrlSC+QpXasL+BJYX2487wXsOJR2Yj5X
/XYBNzs0YGjgZugG7syNpc3MzbMPDJjelhXjbthSjNOxrmBfueUz2rwp9rrQ
mbU1YErdmHtF36E+HVjwsdNT44/oZM9XF45Fxo2sK7kw4LfIbeiV0DExz1Fv
K9HHgP2Ibol+RPkVkXFw3u1eypuofFv1McH+oWC8EV35XbHn0X3AaWPrS8A+
x6v/W6luGdsD/W5fse0BugPmmxfCuonuqU/BepmxRdPcGzIoejd0beij0N1w
PXBT2gdj5Tj6OfQH6NPQq6H/OChzO8/oOW2ta1axkdDvbSrW3aCnQB9H3Smx
dQgPBx4SHR/tPRp7rUaXAG+HLg89y2Ox9XXg4fxGbuba6PXaBoy3V8HYLO8F
/UunhjG+EZnHHeONcQcWjU7z49hYNZg1ekewaPKFKh8G1hZZvwhuj47yo9j4
Nzg4v48FM9PxTRkneu7PMn/Bl4FLM8YZmxXbnIBnopvGVudZ1b+naPosnmHi
67SKjXuhDwKznQYfzLVy60re4HmofKp+zxA9S/nTjFf6lBt/AzMEO0QPAk4z
T9/TJZHxNbA1+Ef0svBbjEf0nfBM6P7gzW6PrQ+l7LbYfNCMwAuhz0R3Rr0v
tK4NU7qoZN0mOi/4OXBycvRrYO9g7Oj80E+hS3pC5d8FvSFrIhgU+NPkoEti
bsBOaqj6ekLk54t+kXNPLhjrBvsGAwTrGhEZ72KOBbMqKb9Lvy+LrEM6K3Gd
DrruW6nx9jeVf6P8K6Uv1Yc9Mo+Z9rr+YNU9UqkPOd+a8uaxcUpkxA1UdrPo
GaIvTG1bgX7/GdZKvh3V3zg2Ngmm2ExlL6j97YqWo8EddxK9Dt8Bsnfkc5Cn
kb/Bjrqrzj7KN0xcdz+lfYvG9MDzwJqO0LHeOm9DXatP4v62EN0XXlf0RqLP
Ud438m+wzy46b93EOG5XMADRZ+rY4ZHbAhtuovIkMTYJ1gfmB068lvI4MRYK
Dvqofu+t99tC6ceC7diwZ+tbs04M3Rg2AejC0PV/FluPij6V3/DSYMLNatap
UfdT1XkmNdZ5K3iA0ncq/4Fy+CHRozPbGMAvXCa6f8DywPHAub9U+TL4LvVv
ecHnn6Fjh8K3cq+J626gOr0TlzUT3THz3NZF300zXX+Wzu+tNCvzu9g5N/Z+
UGScGUz6CJW3Srx2gXVsFNZs1u4h2Isp31ZpG95r6nyNxJhJh7CudU49NtZM
vNZRzu/VlVrTPr/B6ZWvnBjPpt266E7g39RN/H7aFl1ve7Bt5asm1pNis7Eo
tu4UHSpz3/o63l5pK6WOqfPVEr//dkqbM1aUtiy6rQ6py1aBF4cHhFdMLKcj
o19XMP/SFdkzNgbP/eSJx90BSvsr7ZF6LDeHRxd9IM+NtU70QfAAonukrtuC
9S01DteSOUl0L9GbcN2i8br/8Bvq8H1uk/qZrQTfo/zgottF94sOmGfxbuCn
VlXaOvV7ayTma3ZjHMX+PnoW3b+jE6/nm2BTpPFxrs75AjlG972a0tSicWJk
DbAv7Hxo8+HM+mT0yti+gBGiQ8e2E90ievZnYttrrFOwvvDpxPnw2PgEGAJ4
RXf4BaX2Sj2UtmYuj2zDsXrB+vXuicvy2Px4c76R2DZG2Bp1R+/Ne1b5piR9
ryuQK0W3yly+pe7vE+xAVe9zzY0ji9Y7Y//ULfH168yHorcEM4nNa4MjFkRP
VH5VZH089iZrF6zvn5Y4v4S1MvG1LhJ9KhgYz0z50erfD6zTNfc9K1gH+Vji
fIjqb6Q8L9i24PHE+fmx5YkY/l19fkP9f13pvchY1GNBzob3h0X8pWpZJEV+
r9qG64vI9snYg6xUsI1Os4JlBPSd8Ozo37gIslcF/ie2bFpi/hM9JXHd8yjX
PWweWXeDPSHPAZnoicRtXxAbN0JeQG7YhHlUdKFg/SF6w7E6f3zivp3MugnP
ULRufnBiPrFjbBmL53J5bFnkySCPYBs3KOAGPRLrRldSnUGJ18btRU9IbDNw
KjxJYnuJfsgFyjtH1uPslZgnX1nl+yvvFPk330o7pS2Udk18v6nqvF82zVzA
c1oWud09Vaej8v/Fluc2EV2NjffOL9sGET0ROhr0Q9hsg/12Ubo7sZ3DabHl
2h9F94/N/3aIfG93JbadOAU+SvmCyHYPvyh9GNlmYmzi/DjVuSOxLfQxon9T
vjCyHQNtvx/52DjV+QReRHXuTHz8eNH/KF8a+XpjEl/n2Njv76vIz3SRxuDj
Sl/AY8D/q6wRWxanfwPgsRM/v5rohRqQ81X/o9S8/7aRzwE7oX8DY4+1byI/
C+R47u0M2tQ7XjmybTz289jStyMHl2DNyozZYOtykOrvm/u5Pl8zToOtS0/K
E5evxnhTPzZQf25X/kDd+rElmvdOSrymbsYzhDfWe7o4Nc7Jc0MXDA70nOiD
VacZ7zxy/9BxYN+I7mFX+C+deynrpOqvyjyjZ3VL2fYp2GB9UHb/mzLnJaZ/
V51XdO6govXIzblm5PO3SXydP6q2N7gIXiM3ro99F/YJJwe+p21s2yrsrLAX
3z7YU2H7vl2wuRohemflq1VsU4V91qXKT1W6v2h7LDB0bLoox769U8V2JNid
Y6OF3SA+AOBk2Aj1iq1HwrYN235s48cXbM+A7T42/OhHJhVt64KtGzY72Opj
n4HOCts5bPvB+7F1AfPvXLFNO/YYOypfRelu0Sdm7ttkPYcdVPY/pbv0+ya1
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
DvaBxJ3ALhA7cGKSwD/gq0UsFOQTfLWuzSwL4Fs3P7adXu+wruGL/Vps7AAM
AXmJ+AnYDmK7viA2L0qcK2wKsSUk5sz3fFPq/9K6/UDzsHYQOwU5Bb+86bHt
+llnzw/2JfgLExMDuyvsfj+PLbeB+R9X8jzOcycOBlgiPlBgiWBu+ByNz4xn
4iv3QGaMDt8oYqqAi+Lfhy0L8wwY6kd1jxH8TXgPvBew2jh8l9hzjgqyE/6D
W6l89ZLtpLCPRC+ErzFxP7AJw/cZuy5kXPwZiYmBPIqv3KuxdZj4j8+OrYMl
xhcxZ5Cp8El8JbY+Ex/w43Wd/aqesydW7O+E7cfJ6G3hCeAbVG/rsvXa4El3
Vz2HE28P/2Wwj/exoa1aP11R3rdivO8Z9MD6XVC9Zbl1++srf1Dlt1b9vqZW
3G5vXevTom3owGqmqXx81fZ7c7n/ovU4+ATDh49ANgMLUp2Z6HsbxvL+B06J
DI48rvwMHR9Y9bcBdk47Y5WPCPgeON+nqjcFGaTub/kz+gJWp/LVdI234FHr
5iXuV/5t1RjUTvDc6BqVZpUc+w4ZsIvKO+n3x0X/HiP6WrV/h/LWJcuKyIlg
RbSDndxLut5NOvay8j7Kj0YfrfxI1e1TNd99tcrOrroe7Z1bdZunVx2L7nnR
xyk/tmq+7WTl56vew6KvUX6Oft8m+g7mKqXfS342n1X8fAaIXlQx38lzva7i
Z1tDLyz6pZJ5KnAgfCg7YzdQtXxLDBHey4PKL6ZfFb9L5ibmKGydP9Fz3LHk
Z3if8uFh/sI+4aCKbRTw5yCAJDa0x6SWu8YrP1FtPlSyPMZcyZyJDSK8D88L
/odx937JY+81+JyK+dqWojetmj+7V8cvLnkeXaT+HKo6ryu/nfYrji+yquiH
A804/S3MLU3LtuOlf0+q/OOK7XEvEX1nxbzpnKq/B76F2aJ7V6wnxF6fb5p5
YZbK/qzYt3qm6uxXMQ+Cfnlb+OfU9/pZ0fdL3EXG7CXKe6nukIr9ValzSMX1
3tA9fK78Fz3bt1T2V8WxBcZWPdczz/dU2XkV+2tfpbbeFX2trnWrjt+i1EJp
M8Zx6PP1qnMg40Z5/6rHB2NjcGrM9ynl1+pYm7JxFXT62/MtKj+oZF8F7hu+
/U5dczd4E7V3RNXyYm/lbauWG9dSfkbFPjs9RR8IT1tyHFB83pHzp4T1EhkH
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
tpTYXKJjRr/MPrbEB2AfPewJiT/A3nP/B0aeIbA=
          "]], 
         Polygon3DBox[CompressedData["
1:eJwtnQO4K0kThnOSnJNMMsnatm3f9V3btm3btv2vbdu2bdv+33e/eZ7tvV3T
PT2TmZ7uqq++qjPRhtutuG29Vqu9OlSrNfm37Ndqh/DvHK1a7VLqzbJWO7iW
Y193arVGr1ZbvlGrXcNJn9LWpc9BtM1O/0uor0n7Ogw0N+0Pd2u1Nylt2gvK
NZw/LmVv2g+trvE27Ryq8U/tOiqDnL8S49/I+Z8z/iPIiwzUag8xyA+MvzHy
tpzPP7VLaN+Gc+YcrNUOp89H9PmXgfaibW/KR7RtSMfN6L8m421A/VfO+YT6
gZQbqP9MmY/rDaP/K7QvzDWOY6x7uLeHqf/DeHvQtiflA8b7mh/yI/2vos/T
9NmVY8O5/pvII9D2EOVI2p9k/Hupb037HLTvSPsb3N9DXGMh6g9S/57xh5BX
p/8U3g/XGuLY7lxrRsa+gPq2nD835x/JOR9zzmbI0yOv7vXb+X2b8/se4fz1
qf+Pa87IeKcjb0N9kDF2ZbwZGO986vdw7qW8a192nbI9483Hsf8x3g+M9yf3
sDPNu1Depm1a+i5POZwxH/cZcmwS+n9P/x8Zc3faLqb808g9/M3zXIz6MdRf
p/434+1Wy296j3M34R6357pjIV9G+5+URel/GP1fof4XZYjxvqcMp++jXOtR
6nNzzq702ZIxZuHYtlz/Ne53Y+QpkadFvh35Qn7zNIy3IOOPwv3dzxhj0HYt
bd/x+3+mfQraN2Ksn6hfTJkV+X7kM6nfz1iX+y1wvSHKB9z/eIw1PuVGrjUh
5QCOn488AfUtKDNzztpc41musT7yRMhvIH/K9WdkrBORN2f85yiXcI3ZuN7D
1M8uMt6BjHcI8vjUd6AsQP9LfL6MtyPygsiXIf+EvDm/Z3f6L8D1L+dZHchY
B1EW5zpL0mcP+i9D/w7jTcn4N1OWpP085O2pT8C5JyKvVvVfh/E25tiytD/K
eFtx/mycvz1tr3O9Oek3L2U3ztmGPpcxxuzUN6O+FvV/OWcZ5MuQP6I+JmMd
h7wq57QY43ee3/bc6w6U1xn7Sa73A8fH8TvifTQo29E2Dc/qXGX6LMQYFzgH
uX6zn3Onpf086i4W89K+OtXlaF+B8eZr5n3fT9sR3MdhXPtp7uFifsfbtJ+C
/DXyy9S383yOH809fML5o/sOOX9hzh+1lXvfu5F79zeMQvtatE/KuH36/8Hv
2ZG+O1HepO11v1nqnFq7Cvk5xn6MA8M4Zz/O+QL5feRjkO9GvppntC//jkXf
V/g9C9B2OX2O5dg3lM05PiPymlz/Ga63C/JiyK8j93lmGyJPhvyj84GLzoc8
O/WlKY/S/x/6zMK1xuU33E39Oe5vNcb9nvpHXO+iMnN/Q8qztB3J8ZfqWaNn
4H8z0qeLPED9CepH0P5CPb9xeo6dVGZu2ecazj+4yLqwDmVq2g8o8i0tSZkI
+Zci8969ZTq/T87fwLWK8jTnz8A1Cjcg2h6nvh/tr/BbXqWcTnuLd3YP7bsM
Zj85pMjauh5lGs5Zjf7HDmTN3oH22RhjDtrGoO1Z6qfTfwyexbwc289vn2N7
0fcmnt291M/j/NnrOeeBbr6vPahPz3P9gvZZKbMhj854z1CfnLIH59/I+fdQ
X4vzT0Y+hbIr50/NsWOo3037Q9S/oH1krv8bx+6nviJlz4Hcw1r0XwF594GM
uQbynJyzCtebnOu9SH0G7uOCZvankRlzTX7DDvWsSU66aejzLOe+T/0R6i8y
3of1fFPXUT+O/u/4rJDnYcydi+zdJ3DOvZzzF/Ld3N+XvOA/qe/B73+P9qcG
sx+uzhhXOxfp+wbj306fW2h/j2O3UZ+W+zuT+zsH+dt2xpsE+SDbOWdbxjgK
eXL3I+qT0v9I5BGQ96Tvnu5ZyAtxf8tTX5f2Bzn3bcqItO/F9V+g/iLlZJ7P
6kXWIXWG37nnfWh/ibaXKafSfiXtb9TzjNag/hrtX1H/0PWbepsTP6DvH5QJ
aN+Ha47ofsu9v8Xvm7KX7/A7jk1B/eAy9/IO5Wx1AeTnqD9PORH52TJ72ayc
/xLn78SYV3P+ebR/x7GfPB95bPr8SP1KxlyLtot4NnfSfyWO7Y28j2txN9/n
qvV8s367yyGvS9t6lFWQ33FPpW1+ny/1tyi/OB+Qb6E+GWOuQ/1/jH8X9ZO4
n99pH4Vj2xZZzyarRz9bAPkiykGumdzfZuoTjHGWv9V74nrLOGepr0RZwu8D
+QLqF1IOQt6O37MG7+8u9T3ati2zV11OOZT205Cndv5RbnF+q5MNZM6/zfUW
6kZ+gfrX3O/i9J8ReSbKArQtibws9eUoiyJPQp9lvD9+3+397D/fMg9+Vgeh
Pmk/fc+h/Q7qE1KmQj4a+TbqS9FneeQVKIsz3nvI/3Jvw5HvoL5EmbXUayzs
+sjve8j9iD530TYXcovvZTfa56R+Ms9vAHkV5Kf4DVP28y5v5nr3UZ+FMqPP
n7anqc9MmR55ZOSnqM9OWQF5UuTnfXdc41TOP81nxPXn4dgdvJsTuM7r1C/w
fdB/Jb9R2ufopz4Z57/Qz/q6cj1ryDO0T8Wx/RnrVnUh6iu7/yDv55yifT3k
06mfQdnT91tUuhjX3JBzVqX9ANoOpGxIe8FvHpPfu4x7BvUzaZ+hnt94J+2P
U9amvjzjfMj1tuDfo5EfY7y1GG8mjk2LPBL3+yT1Tct8K+dTDuDcM5Cnq+cZ
3Y68cZm15VzvWV0C+QrqV1IOR/4YueB+Dka+j/oqvczFvbnuJ4x/DsdmQZ5V
fZz+5/v+63nmTyCfhTwT9ZkpdyM/2o0udKBrB+efTHuJ3KNcR9v7rIvvMNcO
ZU7cwLGdaH+caz9BOYr2lZnfXfpsh3wNv3eAMVbkt49H/Wzq39JnUeTFKI/Q
92/ud3HqY9B+Ou1fd6OLLEJ5iPZ/aF+C+pi0n+H3wbEfuPa/HNuNYy3tD+RH
uV6Tex6O/BPygPOH9u8Zb3gtYzxO28iU1ZqxN0bq5PwlkK91j1fXoHyP/KY6
kbqg6xtjHcxYm3P9U7ifT2hre0xbppO+EzD+QCvnv4WsqrYo9ePo8wryVIy/
ut8L5QPkV2kfi/qi/ew/7hWfU5+Icw7RnmH83fg9C/Tzbl+m/q5zmXPupf8h
zgfPd/2m/6eM/7u2B/JPvJ/9eAfPUf+N378S11qZ8hJjv8Q49zSyhj3KNWem
z4fIp3H+re7VlNfouxFt33K9JTjnZ8Yf3fWOYz+4JtG+FOVJn18/tuFMtF1I
fRHKbYxV0PYq9Trj7U/7AZTP3bSQ9+GffSmfILf7sVVn5vyL1L04tgLXG4kx
GnwjJ2s78Huu1b6iNNT5a7G5v6Rvp5+xZ+P8i6l/RP93tdcY41b3eeTNkK/W
5qC8xe89Gvkt6jeXsR20CbQFtCEKdTD3M8b7H/Uz3A9pn55jy2g/q7PUMqdf
4Po/Ii9tG+Vp5H97eTZjcf6ZTgLK8vwzLvJZ1Jekz6+MN2Y1p37jfYzTzB51
PfWf/f7U7SnPajv3oruvqo5L2xf0+QJ5K3VEns+ptH/B+bO53/RiM2o77s/v
fp76no3YJOrzC3J8B46djrwa8sTU653YEtooazHeCeo/4hO070t9OdoHGGth
9VHud1l/o/aGazTyCTzDlmsh5Uru7zjkQb8lyuXIC9D/CfqvwvjLMv56yBMw
3mvaH5y/TRl95w3q+/J8diyjn3yB/I17hXOIsf5CfkzdkvaG+jTlUsZfi/HG
0qbnnCfpcyz3/BzXex/5GOoL0v4s8mPut7QfzfkD9Yx5cbW/PUz7Uj4fvxX6
F4y3DfLV9N+F/k+6tzmetjzy0+qD6tzV/n8S50/JeDe6H3H+1cg389yfEf8o
gkWMRP/9Ge9wbXzqf7vmO3fo/yf9p0M+lvbpnDP0/5P6o9Q/UH9lrE94d1uJ
rXD+P/T9Vx1E/cQ1VHtY/Y9z6v186+NTP4f6VvS/n7bXkfdBXpv+Y/P77uHY
axy7Wf2U+l3UH+xHP7me8Tbg2CUcm4H2kX0WvLv33ct7+XY8Zpvr0XXNrCmT
9WKf/TSQPWMqbR/K7Y08z6taeT63IP8lZkb9Bs45grY7aXugnznuXJ+ats/U
V/j3d8afxudPn2H8nsmpT0GZi75r0j4Gv+di96BWnte7jP8R479P/W31BuQ/
tKdpfxP5ZdcS5DW1H7j+S8jHcb83Mfb5tE/WiI12KPVxy+jOW9D3Pe5nOtdz
2j/QJq/09fG5/gPVHJ6KY0cOZQ12LV6F9h7tO9B+Le1rII+GfBHy48hTltG1
t6O+EeMfzTlPN2NzHCWWKGZI//uqd7gExyZvZs8foL4v11lRfE38wt/JsYkY
r0HfU/rRWdVdX+H97dCPXqx+vCjlOY7d0ooutAXlffvwmy+vZ4/5soiOqK74
Mm3b9zMnnBsPNqOzquep721GeQ/5SuQtqX/eyPp0cSu6++LaDO18U86FxmDw
K3Uwr/819Z0Y/5FWdJ2r6rEftCO1J3eifNoOLqmtuwvls3bmrfPXZyye8XAr
uvtdjdhjzivnlzqJ+OEdyIcN5BsXL1UvVD/0nj9oxybUNryP8z9Hvr2VtXBr
yoft6DTqNoODwYe0o7VlN6G8245drC27EeUd5GWQr+Z9nCQmi7ws8rXUT6Hs
g7wc8vXUT3NPRF4e+Qbqp1P2a2ePdK/cnvoa/eyz7rcbUjZoR8dR1/kS+eJ2
9lH3043tgzxLK+dv6p4uXoR8E/UzKfsjL418pfo1ZS/kpZAvp36cmC/yxLyf
H8XaxBr7mcPO5dZg8FxtMt/vW2J16gK0DyJ/yzmXcmwP5IbvF/kS5OHuq9SP
VH9DXhL5MurHUvZAXkIcnfrRYqbIi6tXUD+csivydK1gT2tR1mkHJxZbXd/S
jl2pfemeJR55OPJEyB3KTdqj4ilD0eG/4tu7j/rR9J25GdzoVuSRh4JvT4n8
I/2nagbzr1Mfh7a7KTNwbK1GcDnxuTUoazP+RkXwrX1oH6+TNcq16n7athFv
cQ8eiu78B+fPQftkzjfat6b9bNpup0ytTkD7pYzx+FBs1I0Z+zTq7wzm3n4R
46P9oaFguhfQfgnyekPBnA5HXop7nqYZn0JTrIG2ByizNoNZiy2vwnjj1IIx
/0yfR4Zisz+vbY38xFB8Bs/2gu2tTv/VasH4jnOP4P7Hdg3nN8ymjUr9Xupb
8Xvm66b9YeRt3c+7mQ/XI2+hfdKLvn5dO/r1pLT/zNhXIG8i3oT8K/KVyJu6
/3Qzv25A3hL5qFae74jaeO3Yudq7o1JuQz6ilfspKTcjH9nK8+5TbmlnT3Fv
UccVP5+S8X8Xy9TXoD3pmj0QnUc8crsiWLI61FSd2OHaynNQHmvHZtd2f8S+
nH8+7Ssjn1uPfXxeK+vxfOoryOe2sr7O4/7VrnSAgeiIdyAf38p447qmtWPX
a9/P5f6BfEErupw6gP4Q/Rz6O9alrIc8fSu+jHU81o5eq367mWuEGJvfsfYC
52/LsbH5TXtRX5X6wepurtO078qxaTn28GB8ZTs2M2e+RH4BeT3ke/mNH/vd
IS/bjB2wk3YI8srIIyKvS30dyjP1zNm9aL9iKL6GjTm2O/JLyBsiL428pXoP
5fpGfASX6OtCfhb5Of1Wzl/KsY3s4xNTn8TzqZ8qrkB9MsomyOcjP875HyCf
x/i7izP67VA2pf0i5H31ZVA+q+eaV1M/1f2c+s+Us8UFkbdu5ht4AflD5Aub
+e4PRd7C39TINQ+jvhXlykaucSD1TdRX1TEoK1Hfn/Mfo/5mPde6ZjDfttcU
u998MDqRdsC3fC+fc+wKn1Mvz+JSdf1GnskN2uaUpxqxC/UFrEv7nbX4BL7o
5R68ds+xenlnvqsH+d6Xov8SlM983pRPxRH4d3zG+kNMQxxdPJf+e2mr0XdN
ymkcO4KyIvW1KOdQP7qR+nGMf3Yjx+x7rM+0kXPWRp5OfwXjnet6qL9Nfxz1
XShL6o/k2FniIWIxzlXKTvU8s1mpL0f/C6hv7RqH3BgKfvM5fV7k983cCGb7
gNhSJz4JfRGHU3+D+gGUGejzHcd25fv4m3M/pVzUDsYg1vA55X/qKK2sR29T
znfPa2W9epNynt8XY17Js7pKm4z6zq2sJ+9SLmhHB1UXfY9yIXKf9eJ+6idT
X5vfOiLyg+oHyOvo+2ll/32dci7HZurFHlC3XZf2Mej/lPqCulQ/Pku/962Q
V+/HL62tvJU6QDt2svbyFpRNkFdEvoX62droyCsh3+a1KAe6Bhf57vwexODG
5XrP03YWbRsw/vjIL3q+2Cny2GLC6hfI6yOXyPeq/yCv1c8cci7pk7uJeof2
u2k/kfY1+9GJ1Y1HGIw/9ir6zN3IfrQnv+30Tnyi+kLXLvKub6SM1Mw730f7
phGf5v7a2vT9zTWs/h/0UPu0l2/Wb/UasWbqf1DmFNPk2PiMNd5Q1qIJOLYG
bf9SFtKmEFfrBH++DXm/Tr4BvwV9zvtS31jbkfNvbQRz3gH5GeSl3c/dp9xb
OTZI+9KUbfU1uic3onfu7LfsN0X/eRj3JMZctRH/wWHUR3DtoU+bY0tR2shv
+qxoXxz5depHDGVt9Jk4t9fXX13PHN+O+rlD0T36lOvEzPh3XO+vSLH+Mcc+
pn4ZfffknLU4f4DjL3eDbclB2JVn+RXyTtR3oWyGfF8nvhaPbYr8bjfYvz7v
3Xrxtz7IWJsgr9fLOZ6rz0l/7lOUNerhLOjPf4Xx9rSdsiXyFr3Ut2bMl2n7
VH9WER+Lvpb3xNj1/9F+Pe3z9LJuu5buSNv4jP9xLd+Q39IwMVx+44+UBajP
2ovtoj2wZDfneK6ch7l7Of9t6k8yxui0LdUN9v0lx2bvZU22fvJQ1ur5esHm
z6DMX8m/0t6lbMy51/s8+b1H+Jv01Zap6yPapvr97sXuyVshX0v7go34uPR1
TdXNeqKNOz3tN3Xj61u9GbxxtV7q+iiOp/4y5xxK+yKN4IUSSZZtxGezSYUn
X1HPMe1LfY76StZoxBfZ8R2qN3p92h7RJ+C36DV64XCIrYqxroq8Ui9Ynpje
yl6LMlcz70g8bd1esPSNq/mg7NwYRxvd++H9blDEx62v+1Cutxz1P9WpxH84
tr74jftXN9dbvpk+K1J/oBPdfJ5m/GvL9VLXh76XWCzjf17kHS5V4d/6jp2j
8gHuLOP7cD+chf7Pd7M2NDh/kV58Fvou9Ek8SdsTZbgN9rGv81leyPic/0I3
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
1qsjnNOJL8p4te8biR/QntAXoE/A2GDnhHPDOeRcknNhPJNxTXIxpmrX/vPj
6H9evlpP65Vvxza/Sb9N1zzzV7i/dprR+VyPFu7l+/U7Nt7fHBgL1sIfGXCP
5fm9pS7XSDzyL/3kAJFvdi3n3l3GNqrT/kEZzELOvPa3WIaYhxw57XWxEDER
OXTa62IlxkOKXRvDdGQ3nHhtTOMV5MqLccjx134T+xCDMUZA+1BsRozCGAHt
SbELMRJjBLQnXXiPKKNfqmeKPxsPJHbtsQu6iSeanmtN5xygfn2ZXDNy114q
g9cbe/7rQPTNg8ro4+rl4vtHldFn1WvFs433Ml+LORnMzWC8kfa5OVjMxWJ8
jrlHppHXar2f+K7dOslvYXyOuTwW4djOncS/mGtlIeSdOuGPmctDTFa+mPHs
YoPq+KfQtm8Ze0C7QH+NPm4xTv21+r7FnNZtBUMSizJ+y9wo5sQxN47xN+ae
MeeFuS+MZzQfijlTzJ1iPKlY0uTIG3USv2ruD3POmHvG+Dfz75jjxFwny3eT
H8Q8IT9z7S27yR/jHHIuLdtNfhbztPzUT7yXvgRtgPNoO6xMXbtAf8IhZfR/
7QD9KWIKxpRor4s1/NINPiNOI/9BG9yYG+1pbXPfqe9WfqL5fMQ45XyKP4p9
inHK+RYPFfsUUzTvkHNCrFHMU07ogbVgocYfbloLBvtMJ5jPK0XiYcSCfuqm
TZxWfoXx4PqiJ+b7+rCMzW4MjPiDtrzfkN+S+vM9ZTAPY5DEB8RCruold4wx
SVf3gkEYkyPeIjYhx0EMW3+93Acx1E2LcNjEVg9rJ4bkctp/7QQTNiZEPFms
WAzXmBbxFLFdMWRjaPQPiC0bz7lFLZixvg3zHfht+E2cJdbD+Gu0ggmP3A3m
a8yMeI1YsBiuMSrir2K7YsTG4Ihfix0bf7tVLRixvhoxP2NcxHPFAsV8jYkR
3xELFsOWw6+/R2zb+NKNa/Fp6GvZsp0YGP07b3WC6cpBMX5TrFfM15gU/Tti
weZYMCbGZ7xYP/lF9EX5TZ3G2PuXsde12/V3jtdPfLXfgvmCjKc0fnLkIvGY
5uAYxthPVv4hOc5ynY15NJ5vJn9TxQ1xr5yon/g91wbzPS3iuM3EWBsffZb4
bTOYnflbjKeWz2IMtfHXL3Dds5rJsWGujZ16kafrJF7afdf912vO3AkmLjYu
xntOO/HW4scntBPPvHsv+UTMK2J+EzFFsUUxzBvbuX+3m8ur8cQ9xT+NiTRf
g/4xf7sxrca2Gg+qr1SM4dhu4kv1RYohiJXsXsbe1+7XH2h+DbkZozfDr5m4
DJ4tri1fWg61GPbXtXCrjYkxTth4YWNlxmyHj7lOZTMaoyKma/yLsStvMt7P
9cT9Gs84fj/4qTjqV9TH7sd/oB/hy35iasR8jYcx1mbXMr9F3ER/tTE4YsrG
zxibY4yimLfxXQv2ExMmxmx8lbFi8nLk55hTaLROfI76HuVTma/I+9feNaeQ
+TeMbzQ+1Rxi5hLbswxeJG6kf9R4YXP/LFntKeYf0VctZiRW92o33Cl1/r17
4XBoI3hMbsfOZfAdcR798XI2tDnke8nlML+KvmmveVI3/EG5Sv9xlhhv7zJ7
kbiT/AA5QfrE5KfJFTLflbnPlub+du+EY6QPTD6a3CPjbe8dSA4jcxmZP8z8
T+aoMleVHKZ1ivDZ5TbJWdKnJl9OLpMcFW0m+SNyVybuJPeMOQIm6QQvOrEZ
fqY8TfkixzfD75Pn92sruV5OrPCkifuJN1Y3MJ+c7WJNYmLmg5mvH+6ueRLM
H6FPX9++/Dfz1ZifQF3y0Or6+mT0zbgeH9RODgVzKRxf8VWMHzB/hznDzO9l
fNw2tXC6zQFlDJWxVGc0E/NrzJyxc+bIG6cTTrdcaPPmyPWWM/Mez+OTwXBp
jM+WG+A7Prpar/XR6LMZqRsbyphR8X1tK/MXbFiLz1HfsRwIMVv5AnIj9EHL
ORtei29an7IcwiWr/tOW+Rb0qUxC/+XbyZu1MO0P0j5NmTa/Cb+Nqct8G4X4
YzcYtRiPHG2xa21QMRn93dqmU5T5tr6hTNANh0OMVv6H3A7jS4yd/qQW/5J8
T/NymZ/L/ByTlznXNcS1ZPoy37Y+ocm64ZfLPzIHjnxzffZyNJeu9hfzHRr7
cU6lP8gpkLO5UrV/yQGQozdNLdwAfepy8Kaqxdf+YTf+Z3U0dbX3u/E/u4e7
l8vhEQPXXy63Rw6LGLz8GbktcnrE6PW/y/WRsyImrf9bLstn3fiX/cb81j7p
xv/sN+O3IydBDuoK1X5uvghjW86q9JtPu/k2Pef2TjgPcrbEC+RCfNQNV3SW
SpZ/7beoz1uugBwBOZsTV/JkZdZqfZDj0XfSMnX9ksbHTFImNtc1fhyx8zL+
Vf2sxvuMXsb/qB/S+JixysQK2WcE+hdl+GwPV/rLqGX8tfptjZcZu8xc109p
vNBoZWKR7NPl/HHKxKq/X+kvY5SJXfKaPeQJy/gr9VsaPzRRmVinzyp9erBM
fM5dlG+5frtMfNIDlf4yZ5nYRH14M/huyvj79PsZnzlUJv7nnko/apWJd7qv
0nfML6gu7xy5wf2izNw2RsP4itnLxJaag2W6bnxyYpDiPfrq9AGJKYvv6Bsy
P4FY34n15PeYpUzuEn2S+iZnKOPfdM9z75uuzLfhHudeN2OZvdQ+U9B/lDKx
V+ZEKbzXMv5T91z33n6ZeCh93NqHXTnVtdjY2nOdMrl/Hq30RW0GbQfjxy+T
b1kmfksftfZer0z8lPaM9uEIZeKr9MFrX46I/HItPnjtT/noYuObsCa+0wtH
TZ+XPiq5a593s1f5zdyprVMm1vzUSj8dKOOv1G9pfLn5WowN18eovWA+UWPV
9WGqL1/cS+5NY2Iv6SWn4JX8lgvryTWoD88YVf2r+vb08Rkjq/9V358+XWN0
9Vfr65XDJCfb/CBym4zvsS6mZryPPmRj8uQT+P7Mn3pILXuI+4OcRwmL5vAw
P5X5CY+uxWeq/mv+xSNr4UCoH5vP1Fh8fa7aB+b7PLYWjoX69F/d+FP1qxo/
d10vuVXNIXB9L/mJjD1fs1rvzVlhjgHzky6u7dNL3ZwEN3n/veRaNIfBrb34
sMxpoP9c35Y5N8xhYJ/h/eg86j7qOHLFvm8nB4H+1i2QL+8lN6Ix7lf0kl/U
2H19xtoL5lcy1lcO2MPIr6q/837OGky823fd8Mvkmcmf1wdvjLz8AH3z33Rz
rjwy+fjmT1q/Fo6W+6E6kLqQOpPcSW1ybXNtdrmV5rAVHxYrkysqh1Efqnwo
uY1fdsP9n7faL8z58GArHEZzQZiPcqFaOMfqj290gxerA6kL+Twea4XjuTlt
r3WDB6vzqfuZb1fdznOuVsfvhr+kzqbuJtht3hN9prf1wjHVByu/S+6pnFF9
qvK75JLKSdWnLH9JrqocU/N8mO9D7qmcUvNymJ9DrumWZerqfLcjb12mrzru
nb1wNPUhyweTuymHVB+y/E+5pWIAYgHaoHItDyiT61Kd8Z5ebDRtNW04uapi
QGJBYgxyE+WU7lrE3yzXVB1eXV4dSS6qNoi2iDaLXEV1YnVjMSu5q291g8er
I6sriwGJBYkxyXUUsxC7GLkebqSYkdiRfE+5ouYDVVf1nVzZSX5jYxcc81rk
A8v0NUfMffyeL8VD+H5XbiT+2Pgux9ZnYvzWuEXyfPoM7u0l5vW9Ivwg4/fM
B6Tupo9WX7X5LM29qQ9LX5Y2jrbOD7XoX2P0E+8qZid2p49Iv5B7hvlsXG/F
8oyBHXK/7qcu5ndTtd6LBTpG02fVTz4NMUKxQjEv7RTtlSer+9cu0D54uhcb
TFtsQjGlaj0XS1RHbneT82aaTvBrc+FoM2s7i6+ZO9n5K24mfvZoLxiTWJP5
VP7Xi06vbi/+Z+5o9Qn3avdsY4vVR9yr3LOM5VV/cW9xjxm/0hfUNdQ55NK7
H4lV+hvr3ax3q3Xi7zV3j/NNjNl8ZfNSH7WffCZilmKX7m9imR77l/NG6wfL
FAMVCzXn4fyd5Bw0F6KYrditOVrN/6g+4N7oHmmssxixWLExmrP1oq+4V7pn
GnusT0HfgvbmVWXimb4p4t80N582jbaNfGBjp8bqh48mhiiWqI2hraG981CZ
mHn58ebVNZ+umIHYgfxYc6WqT6nLqNMYy20+VnPzXVGt75uVFb+jlbVGDr1c
en0+F9O2RZm1yDXHtUdOh9wO8wv/r4wPXx+RMXbG2pn/z2ctx+Uwxt+uTN01
yrVq2m7i1cVwzuJaC4svaltx7w/2goHIe5P/Jjaizqfu90n1fGd1vdF2M6al
l5xY5sb6mmOnIy/iHisWQ/vDvezh7uVe41zkV7qJfRDjObMX/GnFTvLFmPtT
H5K+JGMsjbV0j3iiyBrh3qEPXFxDfGP+fnxA+oKMaRi3l3yM8v/PqvBB80Ga
C1efmtwD9V91TXVOY8/FsMSyxHfNha0+py6rTmvsufk8Xet9RwdW+/Hqnfj7
zI21Shn+v3uUe5U+HjEn8SFzp+oT1jdszOeTZfKZys+XIyZ+az5Q9w5znB3S
Tf5b+f1ynMRHzUfp3ifHSjzXfLjGF5xIWR15zTL8IvcI9wrxWDEp84cOU1/v
xXbWhja3m/qr3E1zDogHaf/JbTRngfiO9qtcT3MWiOe4JmqbXtbOWqm96lpp
zgHxnHH7iSVRB1MXU59WF3OOOdfMZ6durs/BfCWuaeZjvrudtU79XW6mOV/M
/aK9IDfTHC7mcvmzF1+vNqS25Dxl1kZz9sxC+7xldBNzuJhbZv4y3EZzuJg7
Z4J++qrDqMvs3AuWYozxLr3oG9qmUzsn1O96qWvDasvOXSZ33l/qr9QXKpNL
7R/kd6lPVSbXo5ia2Jox28Zum/PbfKvaixPWEsN3i1hPmdy/5mQ1H7jx52IP
6ujGi8qX9Hn7G8UbxyuTq+yboeSLN+ewuYfNQWxufv1R5iWRo7gq19q0m/gY
Y7TN9/l7L/FG2rDasur7+tKnqAWfMt7HXJNf1BN/qo/YPA7mc9B3rD2sL94Y
OfEq+bHaOs4B8dN+P/maxKjFqo33cm01RvK9Xuybq2rJcfUn547cT/0/n1Y/
MUfGHpljchTqc3fDPZWjYv7eUfrJh/VfXizqw7rhip5dTz5a7alraunzdyfx
c7Zt1Ei8mu/P3JX3yA9FHrUbW8uYM/MdGz/36VB8ysYnzdQNV1e+kfmCR+on
/5WYvti++Iu2lTbWhN34z/xbCXJ09Zf4vsztr403Wjfzw9xxt3H9Q3rxT+jD
vYD2ufuZT+YuMSfRPN3E7x9QTz6nX6h/XSaWzpjBd6v107WfQ//FYsmZMmZC
/o1cKveHlYvkYJALKEdQHE08Te7gCP3kz9LHoK9Be1vfgsd+ot8zvVzbnFLv
U3+1k9xa3pP5srXX9WX4zn/oBH+4opZn9Hs1v811Lx6/UTecJzkW8rnkQo3Y
jy9Gn4u+F/EDn8WF7gnat/3U9ZnoOxFPuLSWHGC/iJeW4VtqM2g7nMg9vs+1
rqVs1k1+B31B5uQ0N6f5is21tmGlP5gv2VxsG1f2pvmj9b3KudXftHyZb0mf
rL5ZMRexlzer/cL8yOay27SyX5ctw2+V52r+PPNBmytPTuvwbnxg+sL00Rh7
bD5MsSo5lVd0Y0NpS2kzGussZiN283q1/5xahu8lJig2uHSZseXNmm9Pn5++
P31yxkKbr3V/Jsd+1fe0YBk+tLxo84uZH9HcUnKi5+xmPTU31eyVvqkOqi46
8WD0b3VUddUJB2NfPCWGPpi/4aC+rY6prjn6YOyZw3vRBfTZnNZLvmyxOjm2
ezP+ExxbdDAxedpHJ5bhk4rhieVtUKavGIVYhf671VvRT33/i5XhD8sjNl+Y
67+5ruas7NPhZfjL8pjNr+V+YO4sOd2za1uWqcvzNv+Y+bTNPeiY89O+QJln
I2/cfGvHl3lXYqxirdrE2sba0Maam89U7FVO72Xd5Gc2lkkOm1w28yeLPclh
k8t2dhl+o5iU2JRzxrnjnDEXo/qTuVT1qZ9f6WfmUtWnrv7kO/fdOwfNvWiO
NDnyY1f7p/mcxb68xj3I55bhLomJiY2JOYo9flnp9/qU9C19XunHi5bJ/ahP
+8Je9D19S/rEz+7lmfpsfWbmMvMd+C48x1xu4t3GkJlT44HKf6HPR3t9rn72
UPdS56j5hMUAxQLHrfZ786GLdTvnb+4mPs98Idp88mPNT+3fUli70tfNPy22
LSdQ7q1/f8FYJznHco+PLfNuxPDF8sWwxLLEuMydaH5uY83kEMpFFNMR2zm2
llxJYrBisW9X+vvpZfiRYvJi884h59Jclf6h/9WYnKNr+fsX6gjqCubIMj+V
c8q5NU+ln4jJis2+W9lffqN+q36j5gZ8zDkwmBhV8YPHe+FKjDkYvECdXd1d
H+p5veSYNdfsq83kc3F9NBe0OXtP6kXHVteenbJCN/719mD+Bs+KyCt1k0vT
Y/rbzQ/jWOaoNle1+VEubuZvEvi3CfybIgvWcsx8KfrbLmsmZln/2kZl+PRi
9mL3/n0ic42c00x+IPGqocFwJuROmA/o3GY4OM9V+s6wWnyy/u0FdWp1a6+h
P8+/l2NuEc8xf5D5ia9pZk/w917aC5Y6K2W5bvDJ5mA4GHIxtusmvnjUweBv
6vTq9sPkh3SDz9nm35jZtpt87GJBcvT3R76oF9vamIdlqu/nr2ZyGvo9+Pcv
xLbU0XfpZk90b9RHra/64G7yWZnzVbxp3TLxBvo89H1c0wv3yD7ie+KNIw6G
UyK3xHz4+kbcE3frxubW9p5fDko3eOPIg/mbOVt3gz+5VjunnFvmtxdr8pp7
dIOZiZ35DM3vLN6g300bYsde9Oezm/Hh6o/0Gl7LexL/lOOyaieYqPdnfnp9
Oc6BfZE3KfPs9PHo61m/DBYt5iX2JX5j7jJ13oX6maPOVeeIeKb4+AqdYJzO
F9+p79Z3ekmFdyzfCQbt+9UG1RbVp3lBLxiJWIk2quurNqy2rDkm9Z/7zn33
PjPxWW1CbUNtXtc/OQXmYleH9/2JoYil+M5dL8Wv3DuN2RXvEp9z73TPdO/U
P/5Gkfgxcy+oE6ob6nM3X/waHHuqGRtPvO/AXv6WghyDg7TluonlkEN1dy86
j7qPOZbN927+pOlreUfaN+bj8lszJkR9ULzRtcM92L14p25sSa9pPuE5yvhq
3FPcW8zRY/y5HA/zZatDq0vLGTi0ul+xSXMSm5tYDpBcoBur+/X+rZuTwtwU
ckSMqzC+Qu6I+I55gs0XfESlP1h/qMIT/g/JV0e/
          "]], 
         Polygon3DBox[CompressedData["
1:eJwt13uUT9UeAPAzY8zDkEdekTwr79eQVJgxM5FV3YwYj0i1elgpGW631CqR
vCoihlRKtSpEtXqpPJJHREWT200XlTQkl64Yr5n72fd3/vjy25/z/e69z5lz
9tmn6a1jCu5NjqJor6gszmVEUaeUKFqbGkUzwcQqUTSVbZfUjg0QG7XfFN0q
RdH3vL+8Ynk3s+f83se2+38ye4MVaRdonxCvaw8Uo1gnfXUV67SbVVWbro+0
KPrGPBpmRtFs/p2aJSLXWCu1G5ynT3kPyTtgnvOqRdF/jPOpmsn8DjlXyBms
vxPa47XnJEXROP1dxFezZ9QeUjtfbU3R2xyyRYkx2mi3FjO1j4sZopX2DjHR
PI5pvyf6xLUT1ORopxnjsHZtcZ32JeIV57jGPHayTvLe0X5bHwe0rzSXO83t
rnCO5p5uftPEMv38nd0vrpJTS/0z5rwtI3GOGXLKWJ7+pulvuP5K9XeGlWrf
pJ1s7NPavdR/q65EvKTfO9TmyP2bvOb6PMJ7a3eWW9vxx1yX7exC1i9cB9do
lb5qi2TtpmKVcXfIaeOaF2l/JYYas1zkOHZCX1vFYGO0NMZkuV9q/xFCzsdi
uLxMddeKdsb4VP91RYp2kbxaanL0v8WcZphzgeimbjQrEFc7r3vDubAi7cGi
L6srno7voa9dq2Q5ddhTbEQ4Nxax2uxJNpxtQxXqq7AilsueYwdZBhvLerMF
7DcWhXuLtWR3an7DktgQ1oqNYjtZuXO5kbVgI9kWVsEGsovZrexLVk/tLDaS
7WAp5lefzWa3sG9ZKjufzWQ3sa3hOVVbi81gw9gX7Ay7yfUrY5+x+a7fP9SO
YKfY+nAe7EG2J4yjptx13+p61ze3GvqbJm+IvA2OndTfaHm9XOexfheKPnJq
iunyhsrbJO8Uz2TjWB57nv3OzmNT2CC2lv3JqrHH2UC2mh1lVdl4ls9eZH+w
6uwJVsg+Y8dZV+fxNuvrd7LzaGdu97Bk8x8W1ho2hd3Nkth4lmfuW5zb7eyc
2k36Wyxvorzb2Fm2kb3AHmFfsElhPUpPPCdbtG8RZ7Q3yFsk72F5I9lp9nm4
X9hD7E5Wzjazl9kkNpO109/ptHBDWhPYGFaJbWNL5U1l49n5bA/7kj3J7g/P
Jdsb7l32NHuA1WH7wj3OZrMp7CJ2kO1lL7CprA0rY2fZYvaN6/Bo5cS6dthc
jso5KXp7Hiv4MPG1nB6u/cNqi0VdxwZVS6xh0x0fI85jx9QtFRP0M1LecNE9
1LH6fv9i3BLjzjPuI+wCtp/tYsVsOmvLTrFy9jKbzBqxUvZvtohNZA3Yr+x7
tpBNYPXYz2wnm8ueZ/mstuufFdZd9iK7mtVhXdk6toDlsBqsLfuQ5Zl3lXAP
i/Od2+9yVjjfqfr+2BiD+ErtbFHmeJH6meyasL6yGa7JfaKWY3+q7RKefbUv
qT0ot6t2rtzDfv+RkVjjxxp3cGbi3XTQXHbxbDl1MhPP997wNw7rM7tQn8Vy
dmtvdqy2nCaZiffGv9gPYb2Ut0reAXMoDeu9+fVjFX53scau9zd/yhwf46+Y
T2G45uZ3g/ar2lXFs65HE3lNRTXtp/XXUf05eZUdeyO8k1knVs7S2NJwDqwz
q2AZbDnLVX+MXZqeeBfkab8uhhh3ibz+4XnVnq82W151ea3lva+2hC8114Pm
ccj5XBb6Eq+qORn+ximJ9294DybJeVfUYPns5zBveV/L+0htE+0sUer3NfIG
h3eN9jkxwJjNzWWE67hZzTn9HUlNvONTxVnttPCukddL3lx5P8trGf6W8Xpa
7HyGm/Mk/qE5r3EOf/l/mval8n6P1+J58obJ22xeQ/TdVmyRu0n787Bn0b5c
3MMKtQ/J7a02VW1L467W30/sKhaxRv57lx1g2SyFtWCrWGl4N7LK7BL2Cevm
fD92DZbof5n5fafdyvyOxOtaWMNGqmvN/kpPrE1vsjGsPetgTun8AvWvsWtd
m++0X5RXIK9vGJN9xmaGObMrwruDrWMzwlzY5ex6tostTks8J/3YTvaTvpPM
9RZjLQ/Prtgob5a8jvJ6yuvLNrHZrDPLZm3Nr6Ga/7JjbHXYV7D2LE1uvXjd
bRP2COyIvNJ47SyWe9i9s4j1NPZ07Ury7lLXnU1z/f4Z9pdhXxT2qiJLfrn2
CfWF8hqG5yjeC3RV29expryfcdeH9Znvcs13q52ktrF2lrw8eY3CnkPeJ/K6
sD6sSXjHxetV2GefUjsg1IfnLVwbcUa7UOxhb2mvyEjskaPUxFhhzIXssN8N
2TDHPslInMcIvxuJI449J+8y4/bnrcOeSH9bw36LFYR9XthPsW3sCbn71NTR
X4H6jxz/nneSczL1/0NHy+QcDXs2Vtd16RM/W0dYf1aH5bON7DgbxBqw69lX
7EeWxU7pLGy3VvrnF9aDJclrzN5jP7DOrExeeCTeYp3NOTf8nUCOOa+Sczkb
wNqG/RT7inVgWawqaxKvVx1ZF1aNNWMrwnmx3qxheP7jd0UH998y7XHmUmbc
S0MeWx6+Ndhp1or96j66Oaxh6vIrJfbjjfS3MuyJ5dUN7zc5F7IVbFJaYg/e
Wm1D9habyGqy9vLOijxWk/Uwxtoqie+Ub/X9pDFGuw67tZvxJ9xje1ITf6vw
N5snHvS7sdyulRLvgDPhnaS/Gvq7Ml5fylgXVpGa2Bu+Fr7J2FH95Tl+o2vx
atgzsI7yTsurLq9eeN7CfoAV6e8Eu9h5XOA8FrK72W+sPmvGNrAFLDe8g9RW
ZqNZDzZL3h5jpbJ7WE/2DNvH0tkYlh3WU7afpbBR7Ao2I7wPWVP2OStmOWHv
Y4xkNjS8Y9jd8krkNWHr2XzWS96V5tc8vNPZ6+w2lstasBL2Brud5bOL2W72
NhvHBrDGbA2bw7qxLHba2L1YVdbFuB8Yd5RrVcG+YK/Ie1zeKXk9WWZY1+J7
/AZ5P7LXwjeEvEHyBobvKPYBmxiv2W3Ym2wsO662ORsa/k5sHXs2fFOyJHZf
2B+xR+PvmXxzbuf/nWFtcG+0MI8DYb/l9yL31Sx/41nh/aH2HbUPqk3RXwf9
rcpIrANL5Lzv/npAu4e8tfKmh/eRvMvkdWfvsgkslXVix1l3tcXqNogdYS8e
9u7y2su7P74PGvB5YQ8Rf5PUlFOXzY2/K9axauGbjs2JvyvWhM88dolzOxRf
g7nGHcIW6/Ne813o3PYbf3/Yk4XvXccL+ZxKif1BC/0tir/LduqvUeiPPR9/
l5Wwxuyo3AXqluvvpNqe2vXlPRt/u6yXVz3s19iC+Jtze/ws/A8WSEOo
          "]], 
         Polygon3DBox[{{3544, 1511, 1760, 2597, 2427, 3268}, {3245, 2402, 
          2586, 1753, 1487, 3543}, {3448, 2606, 2691, 1485, 736, 3449}, {3418,
           702, 1463, 2690, 2430, 3646}}]}],
       Lighting->"Neutral"]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl1XmUj2UUwPHXkomDzrFWStEmW8pWWU/bKSpZRpYsEVlOSCJFSkUqhUEi
y0zJKDHSZhs7WY5E2eowdiZbGCVUn3v64+t7733ufd53nt/7vip06duiT74k
SS77p1+BJIn4Oa5TKEmaXZEktfjjIklSm+9ETdyFGXp64Q7xOH01uDM64TP9
dQsmyRzxsxhrfQinqFUys1L+hfxKeYbe8/IWeFVtnfWhPEG+K3+SnOXi+nYX
S5J56p/oLybPEv9trTXWmxkunyReix3iNXFNpGJd7MuTzNbT+7J9TxVNksri
veL6fEhPFc4onCT71BqJc1xzqrntcQY8FG3wg3wLT8Ob4o165/M/8nbYZ269
fJbrzZBXjf3tmS5+S32TfAR/hXw4qr+DtY3iT7ma9Y48Uj7KXAl/7w73myvO
VN9qfTDKqrfSk4rGuA/H7ZXiRxxivTyXkA8T1xIP5yZ8Qq2N3kfQFE1QwV5p
1k9ijmuk8AHXrKh+xno/9FFvFmfG38tvt3bWXqXEC+OMcMH6FJ6n5ypxc1TV
N8ZZLIozFjc1s1hcBktwUc8MXmBmPzaLn+ey3J9/5EN8zFwrvSWxyO+UyqXw
JE7racOF9JThdhjlmkfN/WRtAF/DA+P8+Pf4G/CiuLp7Wsrl4vzUxpvLFp+z
Vw1rC9XK2W8JD4rnX+098XLxdZis/6R8hfgUd4pnjDPlS3kWZ3Ntc2P1rpL/
IX+cl3EVHm9mApqJn0BVtMUU/YP5/Xi2uHm8U/pWoZvnIds59BCvRnd5z7i2
ng/0t+cWmGaPllwNT+EVjLE+Xe9oVJd3QEecUV/NM83Ucb/L5bPlK/jzmOXr
uTxOi3/hwTxB/2heGc9wzOOl+BbEu+e+Flk7gb3OdJtapv5B8nexTH7ZfQyM
9xuL1X6Oeb6Wj8U7xbk80VweZ9szxV5tzZVGTRzX05rT9BzWkyM/wudwUO+3
vEXtBb6aD8T98EEeEHVcMt9P/g6+xgFz6erp9vxGnhHvLZfmHN7D+7h/PLOY
HueNvmqjcNh8Fk9Vm88luQS+wx75hzw3/i7+km9z5nvMdJN3R+V4z1AJI91b
7/guRJ/8VjwWz7L+R7mn+gjcIr4ZD8c77n0vbr1rnJH4JrWKeAgPopv+4cjV
U0F+Ix7A/eiq3tncDeLZ4kb8TNTjOYn3zL3OUn87fuf4e3kXL+ACKIid8k3c
iQ+ZyR/PYHzr0VvcK37z+GbjV/F2Tjgjni2Mdu4b5OfNtpf/i7bIcl8947zj
WcFu8Ta+HO97/G7yrXzE3JT4hsT/J2qb+SN7Nja/3zPUkE+oN+A837sctcnx
++vZyDutbeBL8d2P75N8feyBN2Itvj/ii2iFcebWque57ur4ffGbPSfyMPXX
8Rpayi/Euv7mvEZtFf+FP1HU2c6NZwI94vugViS+O/qflndBQ6SpN4h3xX3M
RD1xfdyNezFV/z3xTdFXN55xPW4nWVH4///v/wN57h/s
       "],
       VertexColors->None], Line3DBox[CompressedData["
1:eJwl0UsrxHEUxvHjNsxgsJQNubwSFEuvAAmNy+QlCKXG/VLYkGzs8S7shUlJ
7mHCQjY+/yy+Pc85v/M7z+8/0zacH5gui4g8XssjvlIRBVzVR0zSo0xEiT/h
S3hDNYarIm4qIibSEffqu+SOXg29ptf0IZl3d4qO6GXoj4yWyoha/hRrWMeq
nFXan4044Df5DZyhHs9YsGMc23zR3kO7ionXa6RT9Jwe6894V8n7OmUt6qf5
Lv7T+R765BTk7PAfdu3Sb7yjCR1m2/Frz4u6l5+0p4HP0R71UzLv7hZtVWdp
mZw6OmZmHnl+Rc6tuWl+n1+hyxh1PodHPo1mO5aS38/shm/oVg86n8VlMqte
189504WcIb2q1P//9gewtUFz
       "],
       VertexColors->None]}, 
     {GrayLevel[0.2], 
      Line3DBox[{3287, 3355, 3089, 3354, 3353, 3476, 3823, 3090, 2825, 3091, 
       2826, 3674, 3092, 2827, 3093, 2828, 3675, 3094, 2829, 3095, 2830, 3676,
        3096, 2831, 3097, 2832, 3677, 3098, 2833, 2198, 2834, 3099, 2835, 
       3372, 3373, 3808, 3100, 2836, 3251, 3288, 3312, 3536, 3398, 3369, 3370,
        3547},
       VertexColors->None], 
      Line3DBox[{3299, 3385, 3384, 2903, 3458, 3459, 3457, 3773, 3648, 2904, 
       3153, 2905, 3622, 3774, 2906, 3154, 2907, 3623, 3775, 2908, 3155, 2909,
        3624, 3776, 2910, 3156, 2911, 3699, 3157, 2912, 3625, 3777, 2913, 
       3158, 2914, 3363, 3364, 3653, 3817, 3443, 2915, 3263, 3300, 3327, 3326,
        2916, 3389, 3390, 3568},
       VertexColors->None], 
      Line3DBox[{3311, 3242, 3641, 3662, 3427, 3444, 3445, 3406, 3405, 3481, 
       3040, 2737, 3663, 3041, 2738, 3042, 2739, 3664, 3043, 2740, 3577, 3732,
        2741, 3044, 2742, 3578, 3733, 2743, 3045, 2744, 3665, 3046, 2745, 
       3047, 2746, 3666, 3048, 2747, 3049, 2748, 3667, 3050, 2749, 3579, 3734,
        2750, 3051, 2751, 3580, 3735, 2752, 3430, 3052, 3431, 3241, 3432, 
       3818, 3448, 3449, 3542, 3317},
       VertexColors->None], 
      Line3DBox[{3334, 2994, 3414, 3645, 3814, 3413, 3269, 3439, 2995, 3472, 
       3415, 3471, 3416, 2996, 3728, 3222, 2997, 3223, 2998, 3729, 3224, 2999,
        3633, 3787, 3000, 3225, 3001, 3634, 3788, 3002, 3226, 3003, 3635, 
       3789, 3004, 3227, 3005, 3730, 3228, 3006, 3229, 3007, 3731, 3230, 3008,
        3636, 3790, 3009, 3231, 3010, 3637, 3791, 3011, 3419, 3420, 3012, 
       3270, 3417, 3792, 3646, 3418, 3013, 3335},
       VertexColors->None], 
      Line3DBox[{3342, 3344, 3343, 3296, 3258, 2880, 3144, 3695, 2879, 3143, 
       2878, 3142, 3694, 2877, 3141, 3490, 3526, 3826, 3618, 3489, 3525, 3140,
        3488, 3524, 3825, 3617, 3487, 3523, 3139, 3486, 2876, 3768, 3616, 
       2875, 3138, 3295, 3257, 3658},
       VertexColors->None], 
      Line3DBox[{3346, 3349, 3347, 3378, 3255, 3293, 3130, 3463, 3462, 3478, 
       3614, 3820, 2866, 3131, 2867, 3615, 3767, 2868, 3132, 2869, 3691, 3133,
        2870, 3134, 2871, 3692, 3135, 2872, 3136, 2873, 3693, 3137, 2874, 
       3256, 3294, 3360, 3554},
       VertexColors->None], Line3DBox[CompressedData["
1:eJwVzrlRglEYRuHPGQkclQpMjKUTNaEECoBx30BkU1HZxF0sRVACEySyBCMN
DLQBHoMz59z3/+/MXczk0tmpiFjF8nzENFaQwNdcxBrqsxEN5yZ+khHrtjPb
Bp9zybapL/QWN7hs29ZNvcMtrth2dVsv6Td09J7tkqvO+7qrD/iKa7a8vtYF
vuFj26G+1UW+4xPbkb7Xz96Zcv7DSPdR8u2dB1iYiRjzC8r2B3dO/VvRj//v
4B7XbTX9pF/5G7/4cG/InzwBwaowtA==
       "],
       VertexColors->None], 
      Line3DBox[{3546, 3278, 3310, 3028, 3277, 3238, 3428, 3446, 3029, 3239, 
       3797, 3236, 3482, 3030, 2729, 3351, 3575, 3804, 3453, 3452, 3031, 2730,
        3659, 3032, 2731, 3033, 2732, 3660, 3034, 2733, 3035, 2734, 3661, 
       3036, 2735, 3037, 2736, 3805, 3352, 3038, 3440, 3237, 3576, 3796, 3279,
        3240, 3429, 3447, 3039, 3280, 3315, 3316, 3281, 3573},
       VertexColors->None], 
      Line3DBox[{3548, 3253, 3376, 3375, 3809, 3611, 3374, 2857, 3121, 3687, 
       2856, 3120, 2855, 3119, 3686, 2854, 3118, 2853, 3117, 3685, 2852, 3116,
        2851, 3115, 3684, 2850, 3114, 2849, 3819, 3610, 3477, 3460, 3461, 
       3113, 3291, 3252, 3371, 3345, 3564},
       VertexColors->None], 
      Line3DBox[{3549, 3541, 3383, 2892, 3816, 3442, 3361, 3441, 3362, 2893, 
       3491, 3492, 3828, 2894, 3493, 3494, 2895, 3495, 3496, 3829, 2896, 3497,
        3498, 2897, 3499, 3771, 3654, 2898, 3500, 3501, 2899, 3621, 3772, 
       2900, 3151, 2901, 3698, 3152, 2902, 3261, 3298, 3262, 3348, 3563},
       VertexColors->None], 
      Line3DBox[{3550, 3302, 3388, 3387, 2930, 3386, 3781, 3651, 2929, 3159, 
       2928, 3780, 3626, 2927, 3511, 3510, 2926, 3656, 3779, 3509, 2925, 3508,
        3507, 2924, 3655, 3778, 3506, 2923, 3505, 3504, 2922, 3830, 3503, 
       3502, 2921, 2289, 2920, 3454, 3473, 3475, 3474, 2919, 3455, 3456, 3365,
        3807, 3647, 2918, 3264, 3301, 3329, 3401, 3328, 2917, 3391, 3392, 
       3657},
       VertexColors->None], 
      Line3DBox[{3551, 3309, 3339, 3338, 3027, 3425, 3426, 3424, 3276, 3026, 
       3803, 3275, 3274, 3025, 3396, 3395, 3812, 3024, 3235, 3023, 3795, 3640,
        3022, 3234, 3021, 3794, 3639, 3020, 3233, 3019, 3793, 3638, 3018, 
       3232, 3017, 3811, 3394, 3393, 3016, 3273, 3272, 3800, 3015, 3271, 3421,
        3423, 3422, 3014, 3336, 3337, 3308, 3572},
       VertexColors->None], 
      Line3DBox[{3552, 3243, 3282, 3244, 3813, 3409, 2753, 3451, 3407, 3450, 
       3408, 2754, 2128, 2755, 3053, 2756, 3668, 3054, 2757, 3055, 2758, 3669,
        3056, 2759, 3581, 3736, 2760, 3057, 2761, 3582, 3737, 2762, 3058, 
       2763, 3583, 3738, 2764, 3059, 2765, 3670, 3060, 2766, 3061, 2767, 3671,
        3062, 2768, 3584, 3739, 2769, 3063, 2770, 3585, 3740, 2771, 3064, 
       2772, 3586, 3741, 2773, 3433, 3434, 2774, 3435, 3798, 3245, 3543, 3246,
        3559},
       VertexColors->None], 
      Line3DBox[{3553, 3534, 3318, 3247, 3283, 3248, 2775, 3587, 3742, 2776, 
       3065, 2777, 3588, 3743, 2778, 3066, 2779, 2154, 2780, 3067, 2781, 3672,
        3068, 2782, 3589, 3744, 2783, 3069, 2784, 3590, 3745, 2785, 3070, 
       2786, 3591, 3746, 2787, 3071, 2788, 3592, 3747, 2789, 3072, 2790, 3673,
        3073, 2791, 3593, 3748, 2792, 3074, 2793, 3594, 3749, 2794, 3075, 
       2795, 3595, 3750, 2796, 3076, 2797, 3596, 3751, 2798, 3249, 3284, 3250,
        3319, 3535, 3574},
       VertexColors->None], 
      Line3DBox[{3556, 3545, 3544, 3268, 3815, 3438, 3437, 3221, 3436, 2993, 
       2357, 2992, 3220, 2991, 3786, 3632, 2990, 3219, 2989, 3785, 3631, 2988,
        3218, 3727, 2987, 3217, 2986, 3216, 3726, 2985, 3215, 2984, 3214, 
       3725, 2983, 3213, 2982, 3784, 3630, 2981, 3212, 2980, 3783, 3629, 2979,
        3211, 3724, 2978, 3210, 2977, 3209, 3723, 2976, 3208, 2975, 3207, 
       3722, 2974, 3206, 3410, 3411, 3412, 3799, 3652, 3307, 3267, 3561},
       VertexColors->None], Line3DBox[CompressedData["
1:eJwN0DlSAgEURdEPCLQ03QyKmroNjcmIWAIL0GW4FXFG3YpWuQCrzJxQoBn0
BLfue+9n/3B0OjwpRcQAr1lE0YxY4hkvecQxkjSirdf5UT9ATW7Zqvyg72NL
zm0Vvtf3UJYzW4kneg8h3/Eu/hoRTfcN3+o7WMupbcU3ehdLuWEr+FrvYCFv
2+Z8pbcxk8+SiF9O3H740t7CVK7bvvlCz/El12yfPNYzfMhV2zsf6ed40hfo
+9Gc3/gf+u4p0Q==
       "],
       VertexColors->None], Line3DBox[CompressedData["
1:eJwVzkkyg1EUhuEjRkrYg31YgSGTaEN0iSZRJSKNiCCSqlgQYa4ZGmYBmKps
wHMHX73v+c79738XCpXl8lRErMj3XMSX/GUjfuVmPmJRBrMRZ+Y+VrCje+Bl
3sNTvNa9+vZTTswv+CHHvG034u9yZH7GN4mZiCe8d0dJf+XcHS/yWzzElq7L
D9J7cB+bug7fS//FXWzo2ryQ7sEdrOtafJtf8ibPp7O4hTVdnW+mPW7gha7G
15PjGlZ1Vb7KH713KOfmnHls94PTuiXJyET+AVkFL2s=
       "],
       VertexColors->None], 
      Line3DBox[{3562, 3341, 3340, 3292, 3254, 2865, 3129, 3690, 2864, 3128, 
       2863, 3127, 3689, 2862, 3126, 2861, 3125, 3688, 3485, 3522, 3124, 3484,
        3521, 3824, 3613, 3483, 2860, 3123, 2859, 3766, 3612, 2858, 3122, 
       3356, 3806, 3357, 3359, 3358, 3566},
       VertexColors->None], 
      Line3DBox[{3565, 3350, 3379, 3259, 3297, 3260, 3466, 2881, 3480, 3464, 
       3479, 3465, 3821, 2882, 3145, 2883, 3619, 3769, 2884, 3146, 2885, 3620,
        3770, 2886, 3147, 2887, 3696, 3148, 2888, 3149, 2889, 3697, 3150, 
       2890, 3380, 3381, 3810, 2891, 3382, 3540, 3567},
       VertexColors->None], 
      Line3DBox[{3569, 3399, 3537, 3400, 3324, 3325, 3289, 3101, 2837, 3650, 
       3678, 3377, 3102, 2838, 3103, 2839, 3679, 3104, 2840, 3609, 3765, 2841,
        3105, 2842, 3680, 3106, 2843, 3107, 2844, 3681, 3108, 2845, 3109, 
       2846, 3682, 3110, 2847, 3111, 2848, 3649, 3683, 3112, 3366, 3367, 3368,
        3290, 3570},
       VertexColors->None]}, 
     {GrayLevel[0.2], 
      Line3DBox[{2410, 2524, 1897, 3808, 2199, 2523, 1882, 2185, 3757, 1868, 
       2171, 1854, 2157, 3745, 1840, 2144, 1828, 2132, 3737, 1816, 2120, 1804,
        2111, 3733, 1795, 2102, 1787, 3659, 2097, 1783, 2094, 2441, 2389, 
       2496, 2716},
       VertexColors->None], 
      Line3DBox[{2411, 2530, 2529, 3678, 2528, 2527, 1884, 2187, 3759, 1870, 
       2173, 1856, 2159, 3747, 1842, 2146, 1830, 3670, 2134, 1818, 2122, 1806,
        3666, 2113, 1797, 2104, 1789, 3661, 2099, 1785, 2392, 2443, 2391, 
       2499, 2717},
       VertexColors->None], 
      Line3DBox[{2417, 2539, 2517, 3807, 2515, 2516, 1991, 2302, 3707, 2006, 
       2316, 2020, 2329, 3718, 2033, 2342, 2046, 2353, 3726, 2058, 2363, 2068,
        2373, 3730, 2078, 2381, 2086, 3795, 2387, 2092, 2438, 2464, 2439, 
       2501, 2718},
       VertexColors->None], 
      Line3DBox[{2466, 1811, 2561, 2401, 3813, 2560, 2127, 1823, 2562, 2139, 
       1835, 3742, 2152, 1849, 2166, 1863, 3753, 2180, 1877, 2194, 3674, 1892,
        2206, 1905, 2217, 3684, 1916, 2228, 1928, 3767, 2238, 1938, 2248, 
       1948, 3769, 2259, 1959, 2270, 1971, 3774, 2282, 1984, 2295, 3700, 1999,
        2309, 2013, 2625, 2322, 3822, 2026, 2568, 2335, 2039, 2600, 2425, 
       2569, 3799, 2570, 2571, 2051, 2490},
       VertexColors->None], 
      Line3DBox[{2494, 2500, 2495, 2504, 2463, 2437, 2091, 2386, 3794, 2085, 
       2380, 2077, 2372, 3789, 2067, 2362, 2057, 3725, 2352, 2045, 2341, 2032,
        3717, 2328, 2019, 2315, 2005, 3706, 2301, 1990, 2288, 2419, 2418, 
       2699},
       VertexColors->None], 
      Line3DBox[{2497, 2498, 2390, 2442, 2095, 1784, 2098, 3660, 1788, 2103, 
       1796, 2112, 3665, 1805, 2121, 1817, 3738, 2133, 1829, 2145, 1841, 3746,
        2158, 1855, 2172, 1869, 3758, 2186, 1883, 2409, 2450, 2551, 2724},
       VertexColors->None], 
      Line3DBox[{2555, 2556, 1976, 3817, 2605, 2514, 2604, 2287, 1989, 2300, 
       3705, 2004, 2314, 2018, 2327, 3716, 2031, 2340, 2044, 3784, 2351, 2056,
        2361, 2066, 3788, 2371, 2076, 2379, 2084, 3793, 2385, 2090, 2436, 
       2462, 2502, 2503, 2715},
       VertexColors->None], 
      Line3DBox[{2697, 2429, 2455, 2428, 3814, 2578, 2577, 2576, 2575, 2052, 
       3722, 2347, 2040, 2336, 2027, 3713, 2323, 2014, 2310, 2000, 3701, 2296,
        1985, 2283, 3775, 1972, 2271, 1960, 2260, 3770, 1949, 2249, 1939, 
       3691, 2239, 1929, 2229, 1917, 3685, 2218, 1906, 2207, 1893, 3675, 2195,
        1878, 2181, 3754, 1864, 2167, 1850, 2153, 3743, 1836, 2140, 1824, 
       2128, 1812, 2582, 2581, 2583, 3662, 2397, 2400, 2396, 2712},
       VertexColors->None], Line3DBox[CompressedData["
1:eJwV0CFLQ2EchfG/K7qFIWpYmWBdcEmrBoPImHBlIArqDENBHWgxDZyGsaBN
BDGJVgWbrmkzbHkfQMQ4tPtbOJznOe97L9w7s1tPjkYiYk3amYjtdMS5npWf
bERRT4xGLOqcLEh5LGLadud8AxdwTc/rR9sJXsJnOtEvtiu8g291lR/iB3yq
l73zGe/ZL/gKf+WXuIRrMnD2YbuxrfJ96fJ7/uYs4QfStz3ZKrguX7zD391Z
58fya/u0beKU72046/MtPs6/cV637H+4gFOemdNZPTn8DziHp3DPvQZv4pZc
yz/lQCrB
       "],
       VertexColors->None], 
      Line3DBox[{2700, 2444, 2520, 2519, 2507, 2505, 3805, 2506, 1790, 2105, 
       1798, 2114, 3667, 1807, 2123, 1819, 2135, 3671, 1831, 2147, 1843, 2160,
        3673, 1857, 2174, 1871, 3760, 2188, 1885, 2200, 3679, 1898, 2611, 
       2612, 2613, 2614, 2615, 2510, 3806, 2509, 1921, 2414, 2451, 2481, 2552,
        2480, 2553, 2533, 2534, 2703},
       VertexColors->None], 
      Line3DBox[{2701, 2448, 2479, 2478, 2693, 2591, 2592, 2590, 2405, 2449, 
       3801, 2407, 2408, 1890, 2521, 2522, 3683, 1903, 2215, 1914, 2226, 3690,
        1926, 2236, 1936, 2246, 3695, 1946, 2257, 1957, 2268, 3698, 1969, 
       2280, 1982, 3781, 2540, 2541, 1997, 2421, 2422, 3712, 2453, 2423, 2593,
        2595, 2594, 2694, 2488, 2489, 2424, 2721},
       VertexColors->None], 
      Line3DBox[{2704, 2454, 2487, 2486, 2012, 2308, 2567, 2566, 2599, 2598, 
       1998, 3802, 2294, 2420, 1983, 2281, 2518, 3773, 1970, 2269, 2616, 1958,
        2258, 3821, 2622, 1947, 2247, 2621, 1937, 2237, 3820, 2620, 1927, 
       2227, 2619, 1915, 2216, 3819, 2618, 1904, 2205, 2617, 1891, 3823, 2193,
        2508, 1876, 2179, 2406, 3752, 1862, 2165, 2563, 2565, 2564, 1848, 
       2151, 2467, 2404, 2727},
       VertexColors->None], 
      Line3DBox[{2705, 2461, 2544, 2543, 2089, 2384, 3811, 2542, 2083, 2378, 
       2075, 2370, 3787, 2065, 2360, 2055, 2350, 3783, 2043, 2339, 2030, 2326,
        3782, 2017, 2313, 2003, 3704, 2299, 1988, 2286, 3777, 1975, 2274, 
       1963, 2263, 2538, 3810, 2537, 1952, 2252, 2452, 2483, 2482, 2684, 2687,
        2511, 2702},
       VertexColors->None], Line3DBox[CompressedData["
1:eJwVz88rw3Ecx/H392TUJicXDjvubiflQiFRk1pTyxorRRMJqdXkjHJZLSdZ
OfhRbnLj5sB5f4BcCUfl4fDs9Xy9Pt/P99s3W92YrycRUcZpX8Q+rnojrnGC
0VREqieilYmY4AN8Vg7LM1uJ53hN5mXHtsXHeVMW5J3tmC/xtqzo6/yC78pJ
31zGh/3Wdmib1ldwrx/pM7yGT8882Vq2OX0VL/q5XuA/ztdk13ZjW+B1vOkP
+qPzor6JL9uzbZFvI/G/DeddW1nfQb/tXa/wPQzp33qV53jy/w53Rniaj8lB
+Wqb4ll+INvo4BdNdxu4xB+mojIc
       "],
       VertexColors->None], 
      Line3DBox[{2707, 2695, 2597, 2427, 3815, 2596, 2426, 2574, 2573, 2572, 
       2038, 3721, 2334, 2025, 2321, 2011, 3711, 2307, 1996, 2293, 3780, 1981,
        2279, 1968, 2267, 3772, 1956, 2256, 1945, 3694, 2245, 1935, 2235, 
       1925, 3689, 2225, 1913, 2214, 1902, 3682, 2204, 1889, 2192, 3764, 1875,
        2178, 1861, 2164, 3751, 1847, 2588, 2587, 2589, 2403, 2585, 3798, 
       2402, 2586, 2692, 2713},
       VertexColors->None], 
      Line3DBox[{2708, 2457, 2491, 2432, 2456, 2431, 2073, 3728, 2368, 2063, 
       2358, 2053, 3723, 2348, 2041, 2337, 2028, 3714, 2324, 2015, 2311, 2001,
        3702, 2297, 1986, 2284, 3776, 1973, 2272, 1961, 3696, 2261, 1950, 
       2250, 1940, 3692, 2240, 1930, 2230, 1918, 3686, 2219, 1907, 2208, 1894,
        3676, 2196, 1879, 2182, 3755, 1865, 2168, 1851, 2154, 1837, 2141, 
       1825, 3668, 2129, 1813, 2117, 1801, 3663, 2108, 1792, 2394, 2398, 2393,
        2475, 2445, 2723},
       VertexColors->None], Line3DBox[CompressedData["
1:eJwVz78rxHEcx/G35e5cukwWBrfdzqQsDBYiSnd1ESlFfnUhk7BicxKL6Io6
ZaDLaLuByXBllT/AyXoeN7x6Pl+v7/fz6fvNLm5Mr3dERFHO0hEH0uqMqMiV
fGYijjCXipjEfhzDd3sPH+ZdOIB1W/Ac33PPgjSTEb1607NdfV6+bRnbNi9K
Qw+9xAtS13/cs8n/nJvFF9uXbY3PSFVv6Cv81ztTeG17sy3zCSnrr3rN82Ne
44f4gM+2HX7DV/ECn2xz/IQ/tu/k+3wEt/DWNsiX2v+Ieby09fFx3o2jWLYl
+RBvJZzBD9upf7yXOzn3ff/MqDMd
       "],
       VertexColors->None], Line3DBox[CompressedData["
1:eJwN0CFPgmEYRuGHgkhwFgw06VgtGhRh0wJjsrE5DRaCA+dgcyY3DQYoBooG
J0XHyFokOKPNTWfEH8AfIDCvcO+cne8p37t6fFptJSKibHfpiLfFiLmN7d5+
lyKuMJeK2MUs3mpbfJmvYxJ7Wp7PFtziFK+1DJ/wFH7huTZz/8HbfMpf+B8O
8Uz74Q/8E/vY1N55l7/iJTa0Ee/wR2zgodbndX6De3iBG1j37YSv8SPMYU2r
8hVewjRWtE2e4Nveo2AlK9qO7fuPbzcH+GxPNtD/AUpnKdQ=
       "],
       VertexColors->None], 
      Line3DBox[{2719, 2532, 2531, 2683, 2686, 2468, 2413, 2412, 1920, 2221, 
       3809, 2526, 2525, 1909, 2210, 1896, 2198, 1881, 2184, 3756, 1867, 2170,
        1853, 2156, 3744, 1839, 2143, 1827, 2131, 3736, 1815, 2119, 1803, 
       2110, 3732, 1794, 2101, 1786, 2096, 3804, 2608, 2610, 2609, 1782, 2093,
        2550, 2440, 2726},
       VertexColors->None], 
      Line3DBox[{2720, 2536, 2535, 2554, 2484, 2485, 2416, 2415, 2601, 2602, 
       3816, 2603, 2513, 2512, 1964, 2275, 1977, 2289, 1992, 2303, 3708, 2007,
        2317, 2021, 2330, 3719, 2034, 2343, 2047, 2354, 3727, 2059, 2364, 
       2069, 2374, 3731, 2079, 2382, 2087, 2545, 3812, 2546, 2547, 2548, 2549,
        2465, 2725},
       VertexColors->None]}, {}, {}}},
   VertexColors->CompressedData["
1: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
hAdrwkMY4YFDePgXjwQSj7wjHrEkHqkgHulPPPLuP/BIMPHISOKRWX/xyPv/
TTxyg3jkNPFIK/FIM/HIPuKRZ8QjQ4hHyolHtIhHav/ikTDikfPEI9b/h3gk
ingki3jEgnjkFPFIBPHImP/AI2OIR4qIR6b+g0dCiUfGEY8cIB55RTyyivRn
C+nPSaQ/35P+TCf9Kbfvj/7sS/pzEenPlX/pz46/9Gcf0p8Kf+nPLtKfeaQ/
j5P+9CD9+Zz0ZxjpzxekP2eQ/uwm/Skg/RlP+vPYf9CfbNKfR0h/skh/JpH+
fEz6s5705yXSn0WkP9eS/hxK+pNN+rP7+v8Z/SlP+lOZ9OcM0p9XSX+akv7s
SfpzNenPA6Q/TUl/PiL9OZL050zSn3f+6n+dqf+Vi/vT/2pS/9vjP/S/cdT/
cv7qfyup/31D/e/dv/pfm7/63ybqf/tT/3vtP/S/GtT/FlL/a/+/uf81o/53
DPW/Nn/1v0eo/62n/vch9b9LqP+d+9/sf+Op/91L/W8N9b+21P+Opv43lfpf
G+p/x1L/+5X632bqfxup/02m/reN+t+R1P8eo/53L/W/mdT/6lL/q0n9bwH1
v1nU/9pT/3uL+t9b1P9epf63hfrfQ9T/ZtB94BO6D+yg+8Bsug8cTfeBav/N
+8DDdB9o+L94H9hG94GJdB84g+4D4+k+sIvuA9X+P3IfeJHuA73+ug9cQveB
JXQfeIPuA/XpPtCT7gN30X3gYboPDKX7QAe6D7Sj+0BNug8Mo/vALroPzKP7
wL50HxhG94EX6T7wKd0HjqX7wOr/cB/oR/eBdXQfaEb3gQZ0H2hL94F+dB+o
TPeB+nQfuJDuA0fRfaA73Qc+ofvA/nQfeIvuA3fSfSCP7gPn0X3gO7oPvEjz
kYM0H9lJ85FCmo940HxkH81HdtB8ZAnNR2xpPpJG85Fimo/c+2/OR9JoPvKW
5iOh/z+fj+yh+chUmo/8ovnIRJqPaNB8JIXmI8NoPtJC85EFNB9po/nIZJqP
mNF85DXNR2bSfGQVzUdSaT6yiuYjI2k+ok3zET7NR8JoPhJF85Fymo/0ovlI
Lc1HvtB8JJXmI100HxlA8xEZzUeO0fz3A81/x9D81/mv+e9bmv9OpfnvVJr/
vqL57zSa/375a/47l+a/r2j+K/xr/vuJ5r8v/5r/OtP8d/P/z+e/pjT/taX5
7zWa/yrT/JdF899LNP+NpPnvdJr/Smj+q0XzXxHNf/Np/vuJ5r8GNP/9SPNf
LZr/NtP815jmvxNp/ptL8189mv+W0fz3AM1/lWj+y6H57wua/4pp/vuI5r92
NP9dSPPfL+RXKSK/Sm/yq0wmv4r4f9GvcoX8KgbkV6khv8oJ8quok18lkPwq
PPKrRJFfZTj5VRLJr2JNfpXi/8N+lRbyq9wnv8pK8qt8Ir/KqP+mX6WC/Cp6
5FdZRn6VUPKr2JJfRdXgj1/lAPlVssivUk5+FQfyq1iTX+U++VVKyK/iSX6V
1eRXWUB+lULyqySTX2UO+VV6kV8llvwqNeRXySe/ykvyq6wnv4oR+VVukF8l
hvxyl8kv1536xy+3jfxy+8gvF0t+OT/yy+0hv1zZf/DLaZBfLp78cm/IL5dP
frlm8stZkl+ukPxyv2v++OU0yC+nQH65reSX8yS/XDf55brJL9fyl1/O+X+T
X06N/HJHyS9XTH65b+SXu0p+uZ7klyslv5wW+eV6kV+unfxyp8gvt4T8cgXk
l0shv5w6+eXukV9uPfnlVpJfbjz55V6QX24J+eVOk1/u+68/frkr5JfzJ7/c
RPLLnSG/XAL55daSX06J/HJTyS/3g/xypeSXU33wxy+nS345X/LfmpL/1oD8
t0fJf5tF/tuT5L8tJv/td/LfKpD/9jb5b6+T/3Y6+W9VyH97hvy3t8h/60H+
Wwfy3zqS/3YA+W9F5L/d9B/8t7rkv91F/ltD8t/eJf9tK/lvG8l/20n+23vk
v539D//tevLf7iT/7Ujy36r85b81If/tXvLf3iT/rQP5byvIf3uN/Lfy5L/t
tv3jv9Uj/60C+W9nkf9Wi/y3t8l/O478t7bkv+WS/3YP+W+F5L/1J//tZPLf
niP/7QTy3+4l/20++W8nkP/2APlvb5Pf3on89jzy27PIb/+b/PZ55LdPJ7+9
Ivntx5Lf/g357YPIbz/41x+/vS/57Y+Q3z6K/PZbyG/vRH77HPLbR5HfXs7p
j9/+JPntI8hvr5D9x2+/hfz2F8lvr0J+exH57fnkt59BfntV8tsrkd/+Dvnt
15Dffhb57W+R376K/PYh5LffSn77GPLbO5Lffin57Y+Q3348+e2TyW9/ifz2
XuS330p++3zy298gv30Y+e3Hk99+I/nt15Lf/gT57fuR316f/Pa15Lf3I7+9
Afnt35Pf3pb2Xzpo/2Ut7b/E0f7LMdp/WUX7L09o/8WO9l+O0/7LfNp/yaf9
l2Daf1lF+y8ttP8ygfZfCmj/RUr7LzNo/yWW9l96WP/ZfzlB+y+7af+lZ8af
/Rdt2n9ZRvsv0bT/0pf2X5bR/ks47b8cpf0XR9p/OUL7L/60/3KR9l/W0f6L
Nu2/7Kb9lwG0/6JH+y8raf9lKO2/9KX9l2zaf3Gk/Zd7tP/SQPsvobT/8pH2
X/bR/kvf83/2X+Jp/+U17b/U0f7LHNp/CaP9r2ja/1pC+1/1tP81j/a/ttH+
VxDtf9XR/peE9r8KaP9rC+1/NdD+Vxntf4lp/8uE9r96DPiz//WW9r9Caf+r
ifa/ptP+Vzrtf5nS/pcz7X/V0P6XDu1/VdP+VxDtf72h/S9d2v9aQ/tfhbT/
9Yj2v9bR/lcf2v/aT/tfxrT/lUr7X920/+VO+1/WtP+VR/tfMtr/4tH+YDjt
D/ai/UE72h/8SPuDB2h/0JH2ByNpf7CV9gdX0/7gNdofBO0PLqX9wcm0P8ij
/cGNtD+YRfuDSbQ/OIv2B+1ofzCH9geH0v5gKO0PrqP9weO0P9i768/+YCTt
D06k/cEy2h9cQ/uDh23zX+aeaEK0rsnZvufZmP519AddZEJ1QvOxPg1NkDan
GM3zZ8Mo1lKplJ+BuZymrvwsPrYNPZ9WfpuNUUkHv8UsYmFdi+Yor4U8JLbm
qeW6snHJ0rbnjEMZCDeMr++bzcfBcA3v6DtsfOkoG5fGfF7s1Pb8m6EAbVbp
6+Xky1BlLwq7f5yFGWOXrmvaK8Cqz4qCTaVMXxHmX6B7l4Uz8rah1kECBJZv
7bTuVQ4/u5Abfo+ZvwcEaw9dL8DrcVlaisfLsEnT8tGAKyx8PrOp9O4nPvhb
I7xn6HFga3Uhb+t6Fni5iSq6TH9teb1qkfP0KhR6sKz9mf46pT1huNP3RlzJ
0Ngf9ILhr15rdefkZyIq1ltHZQEfOkuD3BNHsrF8wzGH4/4sLOx0NlieyIMN
x3zWZqYe9osdVTyQie+95iGCIbYCbAu8X8JaVQbz0D1jh0aycGLoAdG9NiEs
jljudb9cg/AF6Q8uCXKwYViI4j5BPeol3ud5TJ+w3it3nIZjNiSvFwVGM3nl
sd7vxAoRGzdv3Z4x5GAWhgkHGXhvbkKq6H1G5hU2tv2cLax0ykTOLGWfz6MF
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
5uOL8m5PQyZ/udpTooKZul0y8Pq0Jf3qwZ3zIe6mGaNvw1XT/LOyoejBelHJ
1J+ywCGNuYzOdPv2cMlBpv6kdsz5nfexBm+Lb9isSeDgQ/eOUyccc1HTf/DH
ZKMaNCTJjz34hoPJHdJZek9z/3kOBdKDHrEaEoTv0T/j1pOPzmPeaokLKpHr
NaVlv7EIok9RY4MX16JFIUOhaHYBKmM/COMkTB/K8/4806wCzba7YzfIWChP
tDxSck6IqDjuqpPrqyAV2j608cnA95PDv129VQ2N9u6dr0o4qBzrskjjdy4u
bXPqdufJkBJ4I/gJg89H2pYNRcXVUN18bNEQtxrEvJc36v2CA03R83dGsbkI
JFy1EK7WE64cCVe3CVdZhKvleXo95x+U4dSBsSv8CsVYpP/ksZ4+F+v7/NKX
b5ehWFWFG3BbAu2Ag8Yp32tg4Wstsfsiwdg6ded3AgGc732uifeqwd2WqLE7
bkuxo3N8n3OWIjT86nEv7CwXa9VPNNk3SCFTmXzUIFmEvhZ5TW6+XNy+PC+h
baQMLmuTy36PEaNYc9LqN2u4SCKcDyacZxPOnxPO2YTz6YTzssMWN/TvyRCQ
9Ciex5ai5O49K6FeFVTGfZfb/lQKvTKFi098pWAt/Z2SPqUCBZSPiygfT1M+
zqy3PHB/OBduvScXhV/nwOhVob7dglz4KCgrTl/NRdmBxakvLnLwyzt5hoFu
7j/rg7115k6TYxJcbuHlB1VKMHj2Ux/ZN84//2781+/Oot9Vp/heofgOofj+
6/zv0fnv/Ov879A5u9I5F9E5/ysunVQPg6geJlM9/Bc+M6gOq1IdbqY6bE+4
Ok24MidclVO8DlK8yilegyle0yheRRSvfMq7M5R3HZR3eZR3LZR33yjvqim/
kim/tER/8otL+RhM+fiB8vFf+SW1O1XIK5XBbnDIE4/NUoQOSr/MWlmNeqob
9VQ3JlHdMCBee0W81k68VkD15xXVHwHVn6PEj3OJH8cQPw6kOvaJ6thmqmP+
VA8Hqfyph41UD3cQj78lHi8hHnclHj9PPK5CPL6O6vN0qs+rqT73erbcXcuf
hyddeler7Nkw4og1qswz8JN4P4h4X0C8LyHef0S8zybe96U6v4XqfDnVeTye
YVVazkf02gVHVlSyca+y4sM4GxYEvHfiG6Ma0WR7aoisjY20iGPLLtzOQsKh
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
+fj48HDHpVsk0G/bHWwZyfRNTeuiBZEs+NR7rNFnnlsc25V56jYX2dsDU82Z
5xm8Ue39blZiSZ/th4awOWhwrdi/rWMBqlLMzXd7SHCgpunnzDguehSFZ927
w9Slo7OGdrdTQfdhvfl+LzluGaXXTGXq7LGEtK1zo5UYJFS3XOGpxBy3rJIO
OmV/Pf8g3Wc23Sef7tNE9x9J919D9y8if24gf3qSP7nUl22oLydSX/Y75dFL
sk4Cxc/xDRf8uThdZB914gYL7uR/E/L/VvL/Kor7cIq7K8U9kXhFDvEKPeIV
2S87r/WwY+45yz3n/mwu7L50WbYwiIWG9iadvOH/+S5IRlMs07/qdy7ZJz/A
gm+XnIBhX8V4OKn2kuNUDhzP27U2b2DBm/BfT/g/R/ivyB48XDOlBlezTgzO
MObg4OTIsBDPXKgoj2Ipj+ZSHi0P40e6csT4cfy2aWwxG9uN3g3IWcjgh/J0
NeVpAeVp59o/9WE01YeOVB+c1c6PPb1cgMnf3ayPS9h4uyVgbF+fHJylujGB
6kZfqhtpVB/WUH1oa/5TH1L7b/u8sLcYSz7NDGs3Y2Pm1e63Sh+xELTMTkND
XIsnGS0bndrZ+Hw24PO88hwoV7bVdHYWo0DLZragPxs/HvWomruFhcknhkSv
eC5G40rnmtvebLxQ65r0ZBoLHOqzEdRnZ1Cf1atofj2S8aeoF8e5nw0Hn1IS
7T4x/vx0e9zjpfrVqNmf323uWg5sQzWzVMjDDeq/kdR/T1L/XUD+FJM/3cmf
7GWvtyWJxXgy9PceKw0Okga1FHRxYmF28YBuuxViuAwe3DhZl4NGg2eV6c4s
nCCeMJx4wlHiCTsIDwGEh8WEh+Qrd/pn60swQKury4pEDn52Ox6wai8LrHGB
0R8GSdC22D2x8AUHv+pDzU75srC2yHJQb30+nEZL3+Tc5uBs6W2nodb58CE+
0/z4D58pID6jIHwqCJ8qwucWQZmr4ygJbobtKEqQctDVL/0A6ygL33asF6Vb
SdB0eeGim524sHLYkx7vx4L2HW2HodaMPr915oDKkot74+vV7C+wkN45aXN/
BwkurYsN372EC6N15eu/Xmb6rOtsdfdFEtS1P70U6sjF01VVV58GM/V59CN2
AtNnU06vT/Y8xPDGcrHiCZO/T8t/xpVsliDgVFfzBeFcqHHjVwtusVBFfHIu
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
SXduVg0uRSu9P5rev/Yv7z+i+zfQ/dfT/TtR/pZQ/v6i/LUlf04mfzqRP6eS
PzvE//GniPz5P/UhjurDR6oPf/PnUY3tLxdVqNC81fGQhpMSpyPMnSP9KmFD
eEgnPGQRHiwJD1WEhxeEByV/+vaCtRIYBg/30j3Jxf2L6v7C6yzMpf3XW9p/
+dL+y5rq20mqb32pvj0mfG4ifNYQPnkptbf41kx/3/pLNGM8FwtWqvd8foGF
iQ7FPdPsmfqTv1P8w46Lwig7TsQlFrJp3/GC9h2HaN+h/u1Pfqkov2Ipv4Io
v4ZTfhVSfhnR/qWI9i982r+4Uv1fTvV/JtX/XVQfblJ98KT64Ex94SL1hVTq
C57f0zDBgLmneWDt1RFsnLrx8XwOE8fHE72WcUpr0cm6o21vNQ6eurgN/FKd
A3uaJ0+nefIHmic/ovmwI82HF9F8eAWdn07nR9D5d4ccZmd41GCNxbmFDWM4
mLNHrTguLBdblIejljvUwGRtflXReA6CNn98deleLtRH1phf4fKQ8rLz1MYY
Dqr9VwvstuRjy7XyUYbGPLwaHJHeI5OD67uHpOi8zsfC0xpz5jH4/HlugMGO
EC5cR0QPV2N+9294yy2YUOPM6Perc/aNHMro950RxY6vR5X+9flSOr97wJ/z
3en8M4pDNupqPFiZWOxszmLq22XVRl5JPjzpnql0zyt0z/u6Nap993gYEK2W
ZPuEA82cj8Z3jubD93wX3HvLg6G2T9zCRxzUvyg5ss4rH3rkh+fkBw75YeIY
25klljVg/diRETTpP3vhWfxfSbl4S35eSX4eR34eVDlCPSxbjLdZIy6132VD
Y/Bhy/q5jC44vjJqz4VaxA/cXZHRmQPHylz1vhq5KCc8qBEebhEevvY9Nmbb
BTHi7INn63ZlQ/PkdJO5YxncEr9iE7/aRPwqkHiUKfEoJ+JRO7Snbzy0WYz2
Iz17V/Vl+F6fZr2E1SxonMismvRSjEbXKQvkh9lI6dtHJJnBgoV320Ph2GqM
kFnqmq7iwG7zdN/28Xlomlnv1m8UHy+6Log8G8FB1fcN309OzUcI+Xkg+bkn
+ZlNeV1IeT2P8vpvcZRRnelHdeYe1RkJx2jrRjcVaseWBAhKlMgI0Gqu2VWO
X3Sf53SfMrqP48ZNMxYc5KNf42e3/iEcRD+L1PDSzYf37eWvpMYSPCwa1niK
y4Fw0Ky6x4dYWEj2GpK9k8le74X7TW9froaGbXVtwEIOGm8Fjr2gkYfu5Lee
bn/8lkF+u/0gZdfNcjGiq15P+c3ERe1+c9OoxSycI/+3kP/Xkv+n0j0H0j2f
0j2X0e9q0e/+pt+1bj4fIZKJcadXp272DN+Q9QnM461koSjc76nVYAk+d0ka
1+0lB6E+6hFpviwEKK9vyRsjAb+sg3l2MwdJ4w4ELDjBgv2tzr9NFkvQo4Ed
3OzExYtlya8MGF5X6HFeeLBOiayW4R+Tg5X47qZ/z+lyGUroeS4977jlz/Ol
dI4RnfOKzgmm322h331Bv1tK9+za9c89r9E9F5Jdr8muOrLrCvnzPPnzZ/Qf
f26nOF6nONZQHAWEk2rCyQvCyWX6u9z69He5Lejvcv/Pd1vO03dbvOm7LdHd
M9JqnishGKMX1OirxOGrfcVXRpf99e+0K+k7QQ7/+E6Qdq9mx47TlNBp69Fz
3iQl/F9POLVgYSmi6XtDJ+h7Q1Poe0Od6XsHuu5/vnfwmb53UEB/PzyA/n64
Lv39cP5BbsvQTBUu1vjpH72qxPVRBzZs+lDx1+8IjKHvMoym7zK403cZXCcv
qo8rUqGncnxgwW4ler6WTN1mVYnn3S/oHciuhOVAbZeHhRxMtF1gdqAxH4kO
OVNlzPub7Tb2G8e8b+dnKO82qRL103S4OnUqvBtSJJtsqITp9rGm3jo8DLGR
VKkxzwfqBg9zZZ6vDupk9r0nDz0n9J1eLhdDu8tU38U6HNxUSsrdnFlo0th/
MFNbiry1s1azosqwe9mIr3d+srBM48rBnwlSVFwYfYDTrxJaItMxpdJsGG9I
GDcjW4ron7kfqi9VoltVvVNdaQ689Bf59nwlxb33559qO1ai86a1ibPX5cAy
tX1yYJ4MU0dPmXXvVi0YZZj5bXsJzunensm6Ike69Gf75U9CTLU49LDWqxTm
t4YPbPkux169u8aBOSJo3mnprskrw7Za2yOcKDnUn23Z7qUtQlu95ibr8FLY
RKvpN+2UwTGj/3jDE9U42+GpS2X0exgaqHXJYOyNX99U+LsnB4J+Y/xXMva6
uBd0sIqQQtp/EisiqgKzc+avXvsjC2k93n2qUMiQe8xBiztGgILDMSdcR7Hx
+EqvqNMTFDAbor5XOFcMHf36A+wn5UgPPWVl56DE3ik9Y4/dkWLsUy+3vAQ+
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
FKyvPhdg0+7uvJMuUnxZKow6YduKNxtmpphyKby84+KgNT/5sNhyoSr2MFXX
PrFa9qyW4jfv2KtKTTrk99b7OFE4bWEfO9bzsRi9fum+9RROYxXd2yqeyIf3
nY0+gq105LzX09W7VYwrvUdnPJghRPWAs4bBXAaOL9hkUEvhxh0rb826+1sI
hyWJD+4eqccjK06y0zcaAiI+m4/+LMIht3Sl7pNsTB6oNEs7txz2/SJU3Awl
MGUqjDzcx8X6Gvts+zIG1mymNY9LlSG+R3u1PoWv32bSDKdFc5CSdy3lujIX
X3pmDHiqQsWFi+udQjM+/OOdJ2rzGmB7ZuvCvW4Ubzjfu/ZYtwy/q5y+Z3/m
gK81vSLDkMItQUyX3VPEMF3U/GIE5ZfgcrZJbIoESz3bolcbM2EVH1Y3K14O
2yGThoz8LcGzd3oOx6ZykBS2prkYfGS9095Y6EfHiydnYmXhxRjz+nkkU0+I
zeWavjfZDLhovJlXeojiKTVzpyz9IoTvxHWjj7vVY77+A83lbTScj1u9diOX
wqV7lk2YYMyGRrtJwhvNckz53PptNhUPxi36Vj0qPNzZn58wpoWBb1GcQ/0X
cjFuyaS0BKovrTi66MTeRh727VerXTimARuXD+BXzRLAhj1/3tZsOYrNFGxf
L2Gj/XLt3Un1VH/b/ahON0cC5djHri8GiDDm9rJWthFV//UswjcE1+PhgY06
msofkDWtVIVbK8WGFd0THdvZmH+w+lKgDR/DBY/WL/Wlzvt7XPj8Q///zUPn
R/N2KnyvR4RFjJFUV4AWhhKtrk6OlONX9FqLG+HwQe1QzSsBijLkZmNnS/91
HvrnfFBobGw0xZiPnqHKr9UD6Zg/mK2fcaEYPpxN4RlUvmsGr+9Kp/Ld4+Xs
0E1UvqffUdafSfl3Pd79mE3598wIDxdzyr+KE5MzbTki2OTYTo1VZ4N7q+Hg
dE4ZuvOMj1fMk6CQNkjtzUge6of1Cwn/xEBYyWH/8CwZcjpq+7b5iWGnyFpl
GsHBu0HbYjXGcBGQWnnr6XCqvqWfve0/jo/og/cW2exqwHm3mcrCxQL09E+x
CfSRY2W0wZLubWxMbxpcvL9FAHGJw7LxMRJ4JhkP0hcL8X5Wy5KiqRLMDrzr
lPyU4kMv4vlD+n3As5VKZVvkUgy7aZ1Q84iNQGtbl2kD+GjPHzD1VSgdwhTt
z0sKiuFVH+kuo/Jn+f7PbQO+MDDrkm9+1TEqr8eNYjRS+V6/w228w9F6PDUO
jdxB5XvaZtmDeCHl91mP2cYObHB8NywJX14O69F7jb2ofFfbZn34PJXv/cbR
Vmyh8n2sf6XpeE8ZYlo9px7IE2HDtRPO8mcclP86OuaeqBUe1rXW5goiqOxr
iGFv5OPp9mUFI1NZ4M8OYjkdE2Ce+7bapZYyWNaeun5/cRPc/QKMMiBEzEVT
r191IrQON9VmlYgwMPree94ZCWasZO1YkcvEdH70zTSeHDueT558OEIK4xu1
v9T6c0B/bjl2/30eakPlCbci6fC0MokbNLYEy2LLAmFE+T0otiawm4Hwjpkv
Jh6nwfOn31s3yk/f1s2Kor2sR+OUqU87qPq/Kf/y/eYuESzOWL88+JwNm+xA
X2+NCgR5K/mM1Zcgcey7t4wuLp6HvZFNzGQg/e6lySajZTB//HRj5AwRFlkn
jx8ppHj0rcJPHLkYC90sM14pS/Fk38czsTPoWH39vOd1DS66x+leGEV9v0sl
Z4gBVa/V55j5LnpJ8Y/QqB/HPguw2q8tWW2ZBEdusubpuLVCpZ9G232BEONe
nu1/U87H2cWX77lR/bp38nkTKyMprrNXvWPdr4Xdmzd25U5yJJ6NKdI/IYEJ
XSoIsOZgyYCUrFlqPHhG291Tfk7HN/OpfvrZJYg0GiRzNRDimbFAjy9lYKXa
qe2uR2l4KtOap03lc8LvqcULu+uRp+a0ZPbQYjh1sLu8h4kRsSyurw0cFLea
newyqISTsm9uOVWnfMddKCpT5uGzTfqTTA4Dia8te9V6KD74bRPHoUOIxMml
HTZn2fCqGBKadF2OxnMvg3xUpYhxyOu0msjBHs8N6nsovsMYpG41gIqv5o0n
opr3NMLmjcuegCciCN/dzzpM9cObn0bIWJ+ZyBuZ1Xcjj0vxp/BZX11EqLjt
cdNazEXpBKeSZ4JmmEz2/nQtQQiPqR9uVy4XYuBr/TBfMQ8P6k6fOF4jQvWC
A6+3bW5GkKmXT/kjKRYsfHrv0icpbL+n9TnYMtGj32oWqcNF6oju471f6Tjy
TSc592Ep8k3zw9+OEWLC5mVsjYcMDJxrN9F8Fw0+S+5F+swVoXSP3wXPaQ3w
kmqPcVAvhu6blBmVumI8747S5jZwYBxxnevi8Rbj67+1aS2RIL8m8r32Qh7m
nBpnFGbJxJxWuf5Aip96fW+c8YTip5MdSo1GUvzUSkd16LNLcjiYOX51/SnB
E/rzN/oUjg2ZY6lyvVIO9eipaqMPyuCelvwgYXwj2vrOfKHIN4p2Sn8f0Kfw
0u32h56T62AYnqqrqy9C+Ypzfc7U99P9xPcVRtdj+JVPqg8U+Jhpf7XsSpMI
Zk6dwTb6zVTf36kQPYuHBOXKu1UnRDDMfD7h+XAu2s+KMlpshRgybydmtoix
2C4k8bY6CyfzbT8tiKb622GPaHWpDGNP12VVFTZAnWFfcsu/GRkWeLvPiYG0
unnzV2uXI7J/ho8NxbMUvWc+PjCJwifcJdqHKJ61medsY0zZ02xXdvz7qdT/
n+H/aS5lz/Zgh9wpFmLklnLbjqxpwrwdJ2NiVlTBMOaWbYuXBC1VzNdPw3i4
/cU/8mQyE2FK84ojB8vQ+HGEvZmqCDG/7abXZbGRXZa2/GmMHF+KH724902C
8M4xmqN0OViU762sS/Gs/injnYspnjUwiz1uDsWzPja5Wh76IoWl8dhRsyhe
8KkiJLOxmIkpWf2+b6Vwf+HO7NLDFC9pDLZ+y7lRB0me/FL+TQH27oq0PBcn
hpsmy+Pn2UZseOhuvzJDgI79/c45J4uR/C3P4bpvI1yKd405YSdB7cbi62Hz
pPBxWjV+fmYt8tXtY7dL5LhlM1F52CwZphqWjPTrasQhwx0Oy6j1tzRHOg83
pCPT42lPzmwqDndZ1ydQOFywMHBYPaMe6xrsim4PLMYcZfWfGlZiCp+UXlbd
3QRuwBmRdmwVrtW++HVsuwRLHDde51/l4cK334OiuEyYNNuum6Iog7aej9sL
ir8cPvLL9s1dNvZ+eawbeVKO8bzHsadaJPh9KNelV5+DiKffN9dUyXEyptB1
8m4ZFA2vz/9m2IiCENN74+f8he+OnrtlJMMpT9ZXM7M6TFuyf4oKtZ/Z2kWq
B15LYOj9PtIwlQF+HuvtZokIF2dvynqTIEHO2pu/h29n4sGpdzfGFYjRbcQa
u47yV7HvWGbyOTo+zB4W+uKnDI6mN+OTk2SwsPy9fMvjevz2Hzh3v5Yc655H
ZXZqUXhNpvjZ2IuDC8/bB68YxMeLLazlt3fSMbIybueIV8W4c8xVM5clRJpx
3OiPyvWY66AqXcujwdX1+eDDs8So3jLut7SPg9WiuIr8tLfYudQ5fVgQFW8T
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
qosLBCPmr71CR7anjnPaShpujOSF6G9pxV6ZxeMF+gzsKQ7NmZpUBpVXHS92
og0B21aXC6cw4JkjvXKaVhn1nb7wLmMB9pXEyRvtbMaK+MLrzbvfo5/fNYuW
2gJn77SEYksGPHqs77H6ytATbczVnSFAGF9oE3STjeR+86v3myuxS/eZ9448
FnLHbuHv+8CApLpRf8bPCmytfHMl/pcESds/9jB/i0C/yOihU3gqvvbaH70C
Cc5xW+c03hcjOaV1//10JsxrTg8o3eRR+HXRnXiTejxVdIu89YqG4/PfmF7x
bMbHp9U9WscYWGk/1ZgVWw7HJxldbWoCsANybU8VsWHgz5bqXFCFaBKPZ0k8
apB4HFb+Lx47SDxOI/H4gcTjWRKPhSQelUg8riLx+JrEoyuRp5bIs+5/5Gkl
8hgTeSbFb0hJfsZC+NX4l0WUfn45L64M6P1v/ey6PJyzgdLPgeVViWGUflzO
LbXyyWDCjOiHS/STRfQzXPDPXk7EXq7EXl+Jvc4Re10h9lL6H384TPwhn/iD
E/EHHeIPkcSv9hG/2kv86jzx513En78Qf5Yi/qlK/DOL+OeqJdls9XHtMA1f
sqmxl46VRr33HF6XwqCUKVhFa8aGvkDtQjcGDi57XtF7sBy7Z+98VPBDgu21
e9McRovRUnBxSo9zE3Jhsfo1jw8v2X1n1Cn8ZPprb5jL+nLcIPm/guR/X5L/
e3SmFD6z4mG+3Am+0KIO72vljOIiaPjDWdO0bSoPPePGX91+j4GRrle59Udp
qNCVlKzp5yLbK3lajBUD0rfWGLS70HCH1Kl9pE4FkToVSr57n3z3CPkuzWX8
S63ZTbgmcycnuoiBqLuLJ04prsDyBkm3oU4LUhbrp93fTu23+0Evc2k5dn65
yby8i8Kx+VXpXufrULdpy1abeBoekv0uIvt92/dvv83vo5uryyS47DB1Sk6Q
GKcEBZLbY1nobzqRnfpGAo1Elk/pTTFsG25daHrPRKtuivWTTgm44aopDSpi
ROb07Qyc0fT/6dmR6JlF9Nz5eDk+Vkown3eGfu2UGDJdvp6jVFnwt6dZ5VPr
Fy04qRxNrR9UyFDZX81EBtlvFNnvbbLfbWS/SWS/O8h+Y4k+9xN9XiD6fEme
7ybPfchzG+InVsRPnImf1BJ7fSD2Gk/sNYKcb1qQ881Acr65gfihMfFDA+KH
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
Wg==
    "],
   VertexNormals->CompressedData["
1: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
yTAc69OSeSUQ61NRbn0QoU+0aUPcTqxPtfFREeWOcahrr1FjCxxHfqYrHLu4
BqBVVcuhemQC2H3lRqP/UNF8g8tu/7190Fx06X6k2iS0t0uf8181jo5VKH1m
L+4BgfvGTOz3wjdl6YTf0VO6ux32+83va1fsJ/yu/U7vCeF3FNC3cy/2+xOP
hjfFwoSO+R3FdiWPoadXx65vpvYAt894vZcDHWI4+hIqCsfQkBd/3Iagbvh2
cO4n3+8pYJ7Im74wMYj+PiLftqT2gSQtL/Ro0TSgxdU0MfoAehxaKpBD6oFv
rwW5dpOnifsrOc1bZxAp9uUZmdzphuIrleG4bs/9PbyfqNso1tNDCtdtRw7d
5f1dapYYxP5gdGpTIN5f0zkvBO8f1ejymdgfZDWWtuH9rVtTl/e3GYxOJvaH
W4snTfD+h7cnl+G8TrGskiLygqvpPd44L9nJk7U4r88HTqQRecHzQ4KROK/p
tz8EMf4CbB2aBP7QGfHeAeO/g9XWEeP/+5zeCIE/pFeflsH4374fE4rxX6ft
bE/gD9dnDsxg/A9VTl/GOvnV80SW0Al8p17yxDrhEbnZiXXi9SjjPaETML71
5RXWSfjCDYSejqBGwRq/1oQxtHtbo1UGfQI+adgVcDuOIZ/mvEvHY7pRi8L5
8OB4OnyIB/7JqDGkl5AlTXrdDE2xGTs9JqfgfqL3GmrtGHIpNObmUSLBOR/Z
F2lEP9oexeG8YusYSnqnaqAv2wuTLK8W5q/QoVK/i0f22Shaejjz7qU0Ge7J
inVlZ0yCPVd4Zld5G4z/MznWf42Bfvqf0tjEOgwbliaCboq3wubGpPG0MgY6
23CAzfDmEAyLnYmGQjJ6OSuyysW1Dj0bvZr1iz4Npadv+WRJjqGzCke3Xdpd
h5LrdQYUUqYhwrxi4kwFHal/ELg4qt2ADvGNUlnuUuED9bzsz2g6crGdOMWM
/og+rf2zLlyJCkZeNS6/zEdQs+Tu70UTJcCesDPFYQMTrgZ86bHoJOaoRHmN
kIxaMIrif7y1iAGnvSPYcF5buC/hvJDGxuZenJdrfzdP7fY+tDlow9rfnJOo
Vkdt3KCVCpGL4ydxPSydOM8g6iFyv1vGi+uhTCa7D67bTS8LfxJ1G3X9lAVc
tyOO1sbCTWKO80gLkD9DR2pzWdssFfpB+tZMPu4vxnpyC0R/QQ9W8Y3h/vJN
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
3dL5ixlRvSBT+vhU66V++P2+8jbP3GHkrT0Tv+JPG5zeXvA6qKoPpbhsdD9c
6cLO9jHFNc5DcL97yNX8Xi+ip1Xqco9W3Dh/nrQFMOHUI1Zs+9Fu9E0burJ/
fiN2rt4+E187AmProiJS67uwKSPZbfONOlyl+lqu/RQL8tNT1nHRu/DEWNH5
rpA6XHkw8IL9MRZ8/GYj0/utExlifid/WTbiEfv6F74iLEh5U+vzPawN57Ar
CvZltuH82gX2ii0jwPOdb8sP03rc13W2+SUHDYcPOcf80hmBo0ePIxq+Qeau
Z0pRIwMo3PT9p/0wA2L21SxbG14CDo9Ftt+NHcL0YbZQ5PwhKDcKxRijdvi6
SMhu/cZhDN7hoZe0oh8sZ0uNFK/0g8DtmXqjOeT/922K4zvWBd+znDZMLe5D
fts7/pLjzbjHF57IFjBgyyvVay3j3Sj7RKZ+SV8tcsUXXVi7jgU2xyru6Jp2
od2N6ov2c8tQ4XPco4H1bKjT/KLVzd2NQb3LVc4MFSCdoV0lJccGHZEnSSnH
elBI9oSDgkEhLq3I3n28jQW3Hgd8L3/Wg8OgvaLjThk+jdZsZnix4LazH6M6
rwuT5Ix1RHjrMGuujVi1LaVPPk+lhqxsxdUf5t66odeKPbEm8n8cWGDU+/yQ
w9tyfJ/1+m/mXhrmwRE1gfERqPKyKBCNy4ZzEXfMbGXpeMxxQ/vOTAYEcZe5
0blboXXgkQYzbhAff7cOffuEDm+MXdZKGfWDYujOg3nVdGzlpje+GO2FAr7V
X/FLL8pWlt2QUapF7p3Th+dEjMB4YzD6fOjE7qfPV702K8J10u2ntW6xQfrt
0TntiztRR2bTrWO5r7G8XMxygskGAffKj5sGu/Cvq9qmleGxmC1UfczJiw2G
Xte9BxR6MfFWhsZR10TcmSdR+WuQBTMmy0q2b6fhSZ1YuFWZhW2praIWriwQ
+zs50JvRi+E8zqfFeQuxYOqy3HlHFkjbGEyMTHTiFqXFSltMa1Cr36lNtIUF
P8s+otfVBpxnXiylsqYNl+3pm7dEmg0XR6deblLxw5M/eWz8xfpwo1+e9U8e
FrzJa+npYTWCVqWD+5u3A+hk7BOwdv0wvL5W/ERvbT/Y3lfTszo5gD6NPiOt
zD4ojZ03JSg1DJr3nsrFhfVhsqaFYnZ8B+ycxrK5+v14Su5+WHFsHVo/EdRh
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
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{308.95449409413976`, 171.51086569110493`},
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.14512664763698996`, -3.274409185472258, 0.8409415807537101},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.671013862845168*^9, 3.671013927632903*^9, {3.671013974741726*^9, 
   3.671014004961474*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"sx", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "30"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{
       RowBox[{"ColorData", "[", "\"\<SouthwestColors\>\"", "]"}], "[", "z", 
       "]"}]}], "]"}]}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{"R0", "<", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]], "<", "R1"}]}], "]"}]}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
82vwLtb8Gny3Nb8Gr2XNr8EPWvNr8FLW/Bo8lzW/Bh9sza/BV1nza/Ci1vwa
vKI1v7bySX8Dd7Xm1+A7rPk1eGdrfg2e2Jpfg5e15tfgfa35Nbg9vwZvZs2v
wV+a+TX8CuXzseKB4EeteCD4JCseCL7VigeCv7XigeBeVjwQvIkVDwR/ZcUD
wRdb8UDw3VY8ELy2FQ8EH2XFA5mOFQ8Eb23FA8G1FQ8EX2LFA/EZZ8UDLR3o
V+CdrHggeLwVDwTfYsUDwe14IPgRKx4I7m3igfAf5PestR4B3txajwDvYq1H
gOey1iPA3az1CPBR1noE+N/WegT3s1jrEeBjrfUI8M7WegT4GWs9AryDtR4B
vsRajwC/Ya1HMI5irUeAT7DWI8DnWusR+HxjrUdYutF/LJ3pP+A5rfUI6mOt
RzAdaz3C8hOujyNfb6x1T/CF1roneJi17gk+21r3BP/FWvcEf2ate3K+Yq17
gtew1j3Bfax1T/B21roneDVr3RM82Fr3BA+y1j3BA611T/Ba1ron+Fpr3RP8
ubXuaelGPwGfZa17goda657gi6x1T8vuXPcEP2/WPeEneP8eax8FuL2PAjze
2kcB3tLaRwH+2dpHAb7U2kcB/tLaRwF+y9pHAT7V2kcBvsbaRwGe19pHAR5k
7aMA323towCfY+2jAH9g7aMAf23towBfae2jAP9i7aOwdKafgMdZ+yjAq1j7
KCy7c98U0mtp7ZsCf23tmwLPa+2bAm9l7Zti/2ntmwL3tvZNgU+y9k2Bn7f2
TYHPtPZNgV+y9k2BZ7T2TTFeYu2bAr9t7ZsCj7H2TYH7WPumwJNa+6bAPax9
U+B5rH1T+Iyz9k2BtzD7pmBH/H9Gax8jeBJrHyP4HmsfI/hUax8j2ydrHyN4
JmsfI3hzax8j54XWPkZwF2sfI3h1ax8j+CRrHyN4e2sfI3guax8j+GlrHyP4
dGsfI/heax8jeFJrHyP1MfsYud/L1Nez1r5f8FHWvl/w2da+X/CS1r5f8G7W
vl/wjNa+X3Bfa98veEdr3y/4emvfL/gAa98v1zmtfb9cj7L2/YKXtvb9gs+1
9v2Cj7b2/YKfM/t+sZ8M46ydsh+bOoOvtPaxgy+x9rGDT7b2sYP/Yu1jBx9m
7WMHH2PtYwc/be1jB59m7WMHz27tYwefbu1jZ9zX2scOvsHaxw6+2+xjhw6Y
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
60H7yrVP9Y5wpz1gn1zi57SHVb9QX7RVX5gu3oP6NUY461eM1Ef1m+SP+Z15
v/TlWaNiFJ5HOjslHT6PeWqM9Tzq9V/meZQL/mKXC/6CcqE9sbiCzla9Znnw
/lWmHUO+wWsZnZE/8GFVHJx+Br97bdkdfmfm9ZxXW5x+Bb/LY/wq0RX3qoMb
v1a5ctzs9uTuHbVncJ+NecIC2Y5Y43mmi/fcNH6OdgrtVjozL4b/QacPpn+B
jtB1lKmP0BHPJzL9DvoJ9BuxZpyfRfKtv112lENXWJ43pcrWhXE6xMcmLWv4
fXzTYOoMf1xkdMbziP9MMM8jXeizX/The6FfKfNevA/xpEZFF6V+r51xQvAm
wtlvoR+7aeIYqFfQp4Vp99CvoJ/ZauIYyB/yW03yo3r+PDPcJ/Klbnck17gG
Xx7o345tv/xgfG+WC+VAuVAe8H3GH3LE3dDpf9E6ZOS8oPDOh3WqtclGFak3
VpcTrsAzCFeD5Dv/Llunm1tuLpxMjr9LYzjy2UHyqYqafCLf/vL/Ksma0/Pb
bfGmPZDfcqa8+Hs8n0yeV0gH7zGc6eL/i8t7WR7kP5fkk+VH/jMYjnSs/PM7
3pvC5AfpQo9Pa0RPnNfDeeKt5rwezj9a5215jwzOqWv3HPELQkN4Xh18n3Ce
m0V7/knOq2rcF4Pz6JPLzm9fOTxE41w6+CThPF+H9Z1ach6T35FfX3P+DucP
Ub6y5pwjymmdf2Q5+R5z/h335yNufNC6P5/nds39+eczvfgt4s4rXamjz7jm
4fdUp43t6w38FqD/dOw71Fx3KOEz7Y+fJeqYfmuZK7h8/9V1ruP5c4yvJ8kV
kMinUUtV+k7TV9V/XnP+Psnlu8snremop8jz5JmypN5XtEhrvhd88froc7c7
1Od7weV7SddF8jz3n6yX5xXyA55d0lcxDu78nd9TJUNfzj7jrZFP3iscH72y
uktX5hO83KBKR66caMt88nfJVn7+5fnQxswnuONr1B/MJ7jLKsfzzCfP3Uv6
qrzkhzyJ5Ed9f+g32+vnI8Y95s0r0TTkQk+NcoFv+bKpweE5PVgu8MPT74fe
uuDNcoFP7F15aJYBXiwX+KG08Ydmf3JjucDle3mWC/yyPM9y8XdvJX2WC/yo
5EfNkvyTb5X8q59SXvL5Ul71hyMd5+/Snp6f9dT7KD8NfXg/X+E+/oP3+1Ef
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
xgt9Oi66WPIFjZgf/h6CT4GiV7N/rAmdpxab1rzQpFf6Vq/PG7VrA+p8/r1L
3Z3fXujOE1rNePV7W+azgJqU937DZ3rDuayn8nZ01tPzl7w6xBV6rjNfmFXl
7cRuzGeUb4mZX78/1yt/75l36ox2zKeuuOjPKb2f6Tk7dm6/d64584nzarUS
tc5TIPM35rNAl+op1hV8of/4UTLrkhVNmM/Ov2/6t86k/8bpu3/5td36jvTb
9AeGVGnh/1xv2XzyfrGm3VgffxQ66P9h8zPtFX6jY+dCPbmOFrzmwP2LAU91
zMaC/fcv68V2ODay8lW/m4/1zmyL2p2LdbbDndMkzxy57YnetaLsmHcHfFje
dIsvuo+Y/FT/uWvmL+PGd2J5mwc1qp/7x2OtFqqjA/w8WF7sP/2SdEVI19pJ
FcobO/PRvopbn+rTmTYmL1irBcv72qf91tMFn+igg75lBxztyvLO/6fY3ze+
PdHza1WYWq2rD9ul5hM/lHp27ameVKNPQMtHznbpz47+hYfUf6IPph/kWirO
l/1UM7d5Xu5FHukit5u8GlW4N/spfObKcMYv+zZ/6uO68d7E9wEPdaE8wxYs
We7sx1/XW38qUaNHevjO95UanPGlPvNuDHBJV/ixPrvlsPvtVN7U59aKt9+X
TX6oN19K9Xljs7bUB+cOGxXrPD/APzX1cT0/PlI3eKzzbUtzNdS1NfUZMD9x
oOfWh/rEkOXlkm3wcbZj5c6t7j7pkb75b5py82v4Up9bR+c9DfF/rAvWLzuo
bVM/6pMrJtPtX64/1J41trmUzx9AfW6Oqpf1xvb7et7QcYWbPAukLuNzZ/J4
OuWB1vMytExaMoj64DP0hmtvv7XO8eGAwW1GjLt5X9/oVfD3wPeB1KdEpsIH
Zm57oF8febA6KLwn9fG7N2t76cL3de3InJ26de9MfXKZ/W9e6xc+TBqRhfqc
dKnwR+MbD/TVZFNW9rrRnvqkvLq66P0G93XUlsP/TPzh5+zX/CO94wo+0CpL
23Ln8gQ6458/6y38+u2BHt180coB7QOpz6rTu2Km+N/XsfsPbT60KZjzkZA2
NQutvX1T/1Ptt9zzXjvnIxeH3Jh7ZOpt/Vsyj+cPwpzzkfKrwrPeb3RXl62z
vEW+RKHUa1OdronSFbml//hWPcOtHs75SMaAf/sXv3lb776xoU77OmHULWz6
jPd1Jt/Vm7O3ju820blv4Y2jnbylO7TetXzwLB/qhn34e063nT6iZgHqtsnR
zt/VI5J8LLknZTfqVjrvsj2XNt/S4TMqNl+xPoS6TWqgKsX73tHPc+QrfHBR
KHV7G3xzg0v+ezpJ/VaPjmYIpW5BqY7OqfT1lg5Yn3FR2OlQjqvPle+WpeXG
O7rgzV2vsnx26jnh6MRp+xJf1UNefNv5+wDnfPnNm9/S3thxTf+MDpjR7Xko
9WyR88io94E3dK1+m7JkTN+Hep7dsjG0YOOrevOsCpnL93POl/Hp+2Nr5Hvf
COo50dEf3dBfy74vVmhOmHMfiKN9u6qntb+VKWWnQOoZiHstPIsHBGX4nXqe
dfQjN3SXhqfOhHbqRT2bOdqlq1q9rX3p0a2+1HPdjkkrE0+8rsucyN55UWRf
6pn2QYmCeerd1C4db7kvvOyc340fmC1Nk/zXdKOCQ8t3v9WHer5etmmkz5Xr
Oq7Z1y5PAp3xhzWV7yW7WOyCvvJqaYa33Z1xnjTdBgx5ffuiLjFtTdbHTZ1x
nsBxWb+kmHZZp23Xp2Wmkn2p56siiR9VCLqgx3neOBC91xnnaepoPy/pLi0u
vuoWNZB6rnP0I5d1bGDxRFdv9qOevznq+wWdrpZnzto9Iqgn9vVMfrWvQWKf
6tTzlaP9v6Jvvqg2Y/zVEOrp66inF3TQ/rwVyvw6mHqeKH4/R9Ytl/TmZC39
DhYdQD1LeAycWsbvij7tVndNn1fO+MOq1z0Hd6p3Ub9o9KrZlpd9qWfKbEk+
R369pPd4DThy84oz/jCxZZfXJ2ce1ztPeTXtV9QZb2y5bPq9n0lP6wKxDxIP
HOGMN2b5fOpihZBz2ivsebI6pSOpZ4bfl66aXOyEDppf1q3Bi0HOcYWj3Tit
6+QeNPPP1VHUE5+rTnh8mf4+inr+6fDbE3rL/ZiamRdGc/yW2uE/J3X2dBl7
dNoznPqcdtS7M7rQjviOgyYOdc5fDp1KWnfied1geZGhs38fQH3G7Q668+Di
SX2z84O9Vy5EUp/m6Zafz6bO6u95vPS3POHUZ1KvRAseHdqr5ww/d/LERqc+
40dVOljM7aDOtqRiyOsIZ7za7UbAto67jujEtQZXnvHEGY+dlmdMtuAH+3TI
iMuBf490xqtTOfz2oN7/vOf91uOc8dX6jvzv1+e3J96548dYljeFw46HdMFc
XvndZ0WzvMd9q7xc1/OY9ogsWeV9Q2d89dD89Ptd8h7QZ2bNbDuokzMuPept
/S01xh7WmVeX+lLzt74sb7J2I456b1ymWz1b3Tb+q7O8Yy/ENp77xyY9rFqH
G9NTOdcpMkTm/iN5yr90h7Ke5WrkdK5TpDk4bUf/Vyv+GzdGT/MY7VynGOXQ
bbN+5HanYOElI1neL9M3z17Zba3+Tb/Y3GjuJJZ3iCOfW3VR90unV3x1xuGT
zvi/53drP/ddZ3sddcbh3/08MG7fvPV6+LD723e3c65TRC0/U/LEim06/YkC
gw7cd8bhf2laLVP5oXu0e+vNfuu3O+tFtvxfYhP/uuR/1msKtBg4Zsf1Yf+z
XpM6PvxK075T/2fdKo//hYFXri38n/UaX0c6of+zXlPXodsMNWfxwkx9JjjX
a3K4O57/n3Wr636O9P9n3aqF5Od/1mtmOdIZ9j/rVh/yOcr7P+tWOUQflbdz
twVvtzt1mCJ6KqOns31IdPD/9FcjRH/qkEXspfzFXtQhRuyrfhX7Uod8jvZk
pwp6O/5BeO4J1GGe+I+6I/5DHUqLv6ml4m/UoaD4p2oj/kkd5og/q6Hiz9Sh
mPi/ain+Tx086g5aEfbxmPK8FneoTBmnDpOkHqlMUo+ow2mpd+qC1DvqcF7q
qWot9ZQ6ZJB6rQpIvWZ72MrRzx5Vg481vFPynrO+XHGMB46qpY9vJ8+2YBT1
ySLtidop7Qn1WSbtjwqQ9of6eEp7pf5VjvaK+kyT9k1lkfaNOvy5Me7B8ivn
VctZSduODHH2v22k/VSm/aQOU6W9VXekvaUOTaV9VrWlfaYOV6U9VwWlPWc/
kVXafxVTPrz7qDHDqU9ax3j4vOqTfVGZ5e/7Ux98trt1fcHxPVHU56b0R6qG
9EfO/RXSfyl/6b+oTx7p71Q76e+oT3vpH1V+6R+pT7CaHzJ14xVVJTpRnYtj
nOO9tNL/KtP/Up910l+rl9JfU5/S0r+r49K/U5+zMh5QG2Q8QH2CZPygfGT8
QH3eynhDnZLxBscnk8z+5XkvHeMTjfFJaRnPqLQynqGOG2X8o1bL+Id6tpDx
kmor4yXq+UbGV2qkjK+oZ6iMx1QqGY9RzwwyflPFZfzmrHdnm/0cMv6mGrTy
XpV06YKp51sZH6rXMj6knpNkPKkayniSemaU8adKIeNP6rlJxquqhIxXqWcL
Gd+qSjK+pZ6XZDys3GU8TD1xbuVta8f4mXpmlPG2miHjbeoZI+Nz9UXG59QT
nz4ynnfuh5Txv9oo43/q2VrmC6qGzBeo53uZX6gfMr/g/PeyzFNUwUbZkuRN
6ZzHhcm8RvnLvIa6fZB5kEok8yBnuy3zJvVY5k3UrYLMs1RvmWc59yHLvExF
yLyMurUx527fnnLM46jbB5n3KS+Z91G3CJknqo0yT6Re2WReqXbKvJK6bZN5
qCot81DqVlnmraq0zFup21WZ56pfZZ5L3Tp2G3NhQf0HqlbjO31HVHLGDdbI
PFqtlXk0dQuQebcaLvNu6rZH5umqiszTqVtqmderCJnXU7fTEgdQhyQOQN1w
vqnKOkfcgLoFSJxBNZM4A3UrJXEJ9UriEtRtkMQx1DWJY1A3fAZL3IO6TZA4
idotcRLqc8bRLj1S6+e36Xt6iD/1ySNxGNVK4jDO/aISt1H5JG5DfUpJnEdd
ljgP9RkscSG1T+JC1KemxJFUWokjUR/8rqNvEUfcifrckTiV2iVxKuqzUOJa
6pzEtahPvMTBVLTEwahLTYmbqXwSN6M++MwpcTbGXd0ljqeGxD2ekuapM+66
UOJ+apbE/VjeNxInVL0kTsjybpS4otovcUWWF+fdxyRxxCFZXneJW6oGErdk
eaVdeqpMnNO570XiouoviYuyvNL+P1ZbJY7qbM8l7qqmStyV5T3QplnfTvVf
qAaXX6c5kaq7M/4jcV21QeK6LG83iQOrjBIHZnkLSdxY5Ze4sdXePlfnv7f6
vzjzPu6vlri0WilxaZZ3uMSx1SqJYzv3n0vcW2WRuDfXR4aPuTr06LWX6ty+
nnHLpnRiPqX9f6E8JK7OfMZIHF6dlji8tW7+UoV4O+L2zGd5ifOrqxLnZz4/
yrqAMusCXKdIEf8yZta3OPW4fYN+z7c410dwv+ailI51in1Ip9fnG0WfXY9T
ul/b3ZXOtlR4PsHvAEcVdf3/yxMV5TpO3x2/lf+5P17n/bLm17lLa1Of1qu3
Li7ZIk7f8Cr4YMCA9rQv1k0+rnOfNmdPew2d8fwteZ76b/FO8+LG99e6R5FK
hzK8b894/oPQnMUb33yuB6ROXqR4vI8zjp0w/s/2BOsj6zL8OuX91G4afjvF
rMvkkHUZ+q2VPt/7b9zefd4dn+vCnofaTQzuwfHGSWnfNNo39BenEnL2I01N
HL6YxOE5nuH99D6BK8e9CdSYd4w3ccLBEifk834yntTVzHgSz/c23IwzOX9Z
lTA+Rru7mfOp8r037d7s/+VRvq7w85Qy/9KDZP5F/39r5ukVZZ7u5Acc81a9
SOat5K3NfHah4fDP5Cb9CDO/A79n0plr5r9Ip7Bj/rhWlbHeW8jME/uafCKd
Eub5oiaeAH/2NPOpAp/ONJ68eyT1aYf7bI0O4B3+X/6fbrDLRtFZXTZxSOgf
a/gloz94qJkXVLLsNUXsrgYau4PjPpI/4i5/HPDGuQ/BXfxKYX0H/uZmeCHj
b+BnTb+82vgn/DxRYUc9Uu1NPQJ/JPVC9TP1jvuaEj7vXI+T+qIKSn1h+z9d
6p3KYtZDUR9jDDfrpGxPdkg7oLykHWC7sd1wb9M+gLeV9kRdN+0J2snssv6r
gpvkC6q4oTbbyYS/Q+5s9xLwKGe710/aPZXbtHtI/+evVd4k2/dGdzyRwv3O
slpMP2H7WYzpHMnV45eK/z3f7m3+SgVX1GL+0U5+lnaS/azVjjnPTZh2qZjR
GfbFebEzsi+F/mO1M+Q4t5Jb9puR4/zFNNnXx3qR8Hfg/dg+8D5D2VfM+oh9
vwUMRzoJfx/ezxXvxb64Kea94NjfhXyi3hXwnv4kbOQddbLt9JolDgdqcNSX
8lJfWC+wX+WE0Qd+bvmttY/upVpj9SPga41d4Lfof99Y/R34B2Nf7lcs7vAf
Nflzu4jjS2v9f/in03+Oif+okZlH7M25vBbbgUdeI5fULf5En905YEyBz77U
Yd/0ZQ0+frmtU1zqWGNAoiDWX9Rr9HfgZZeOuRj69bkK25+m2bLTzn6wjHBt
ONMB72Oeh85PTH5OSX5oxyCznvhZ1hPJ9yfMp3P/szyvPpn1R/DD8rxCubjf
3jxvp3/UPJ/EpA/dnkk+1QmjG/L/wvDjJv/QAfqEGB3g5z4yvtL7ZHxFjv0h
G2R/CDnOU3/P6divwnKNknia9jDxNPA5si6jdph1GaSDfSy9ZB8L/fbPvhOb
h2x+pVeMKVS4wMquzjjby6ljMr5++d+4u+bo4l2c/pzpbH+fnltf6euZvAYs
XtqV7U8T83wmeZ56jjH5NHE/8nFm/egvySf5DJN/m0808UN3kw7em0Xyo65a
+Wkm+VEm/xwP1Bed1VpLZ4x7d1t2wX6hb0Z/8L9ET+Vj9OT6i0k/1uzzAcfz
Pc0+IqQz/WKDKuX+jddh5RYkjVjmTGeG4RHC6efRXrXyeX6+q9Zkq7Z1VgFn
O4bfS1pbKT60eC/nfks3o0M6Y0fwO+6Jd69q+0odmfF6cYF/utK+Fne2V6bf
vGzG7Uhnn8zXdCMzX0N9aSdxD13XxD2QT9zPU23mlMELk4SQN5N4nY4y8Trw
HxOe3qwQfF0XaV1g4J4PTt5A4uq6nYmro538ReK6OtrEdbkfUsZveoKJh4Ov
ccxPD+v1FTs9brprDOe/LiadsZIOx4HjzDrjbllnJMc5r05y3oG8iXnvJHkv
+Urz3u3yXvrJCYnP69UmPg/eUtb11DGzrgcdVsk6o8I6IzjiilUsnZNNdOip
Chg9Ya87sr9FzTb7W9C+3TZ8lnC2214mruUq9iXHPthesh+Y47rCsn9MrTf7
x+BvhQw3+8pYfw+aOEB98Stya/8k/bO+7JdTLma/HM/RG2720XEcNcLM06/I
PN25n8rsMzT3VLD/XSH7/dQas98Pdlxu+E7htO8vZt79Rubd5GhPysp+RfIZ
4ldqg+VX6cw6RT/LD3GepYXlb8nkvfqd9d4lZr/iHiuf6F8qmPxAzyjRR4+6
//NKx8mdqOcww69butU2+xUzWzrj/o0mRk/YUSdsN8jzm32Gmy1/sO7rcK6n
mHamluWHNxLu1yLHPQC9jX+if0G7VFXqC7mbaZfMOgL5t4TtEnkT0y6Z9T7y
0WY/wFypp2z/T5n6vkbqO/uXumYd/4rUd3J30w6csfi1hOt6HOcsMu0D3st5
YsJ1SXK0G5UtHVonXE8hT5KwPWG7NM3MTyPKFGl/qL+z/bmf4uMOl3zXVf5h
40dOThXC/o6/87ZlwL3UK5zxRoyX4pOt2NDgakvybwvSxL5cFKf71Y0cVSqH
B+tpxgUpv2xt+kYnjx/aOezX2owvbTXxovdXTl/s8MEZd6oaEL10WLrXul+u
T9PPhznjh9ulfVZzTL8AjvnIybQT+s+b6jy3NdvU37efE5eKmelch63sWNc4
pba+q3K00MoolneSsVsXs84IfSqZdeThTUpdWff/7KO4btYXsjRPXKhKD+f6
y0TZz6mepe5V9OwnX+e6jImv9ls0bGjGub3IsS+9z6lJ1bJed8bBNpk4bVzI
piSZ1vkyn9nN+mlGs3+G68vGXrfbb30UF1uX5UX7E5445YXvS+uQe636t2bV
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
px0qvP3EK3E+aPg7UccdRaU7xvcPnfe8tVvtvStjHV3G+Y/PLKrfJuUB2Rde
a+3CtU9+3lXjAN6hctl5n57sG587eD8OH340bdXiASoXfmRsSrvnmsX5c+Gr
Plg/bHDRQLUXvmBX5/pjnsiK82s4n9l+zdddjsb5c+GXXDv/hRp5v8gOOldM
ufzFguJ9vvIuOd/xVM7Ax57Lkn3gWV2a1+nx1UC1F/7TvwbNLTcnzoMD33+4
6bBnGiW0HiXZIY6D5/ykz8Rrp87OUXvhs5eWPzl34hC1S/u39eVbNNzUQPMW
Hoa9nbKkQrbqL921h8ZcMK5MnDcKPqz29+9V7Bjn24KXn/hR75/fiXWYpRPS
rlzpT54eof6V/sPaY+vfmBnnuYMP6Lksv/G8OI8q/KU7P5x9qN6Taq9+v/vv
TxwbOk7rJjzbuNoFX7Dn8R8Kfovz2cGHHK7x5fzb43x2yiff7dzRmc/G+S7h
RYVvbjs8bWi8L3d7k7eR58KT8y3CybdI+fInJuVVhJNXkXJ033/e9kUXpz4q
O2OPgpTsh7ociPPYwh+LKh3f/j/54OTX+Kho3fzBebIzfMtZzacfHDNK7YSf
On36dGr1dOn+wbM/33v1jN15qie8UeOpGc1mxnlU4c1GVmvd4/w4Lx68Ra3+
IzadzpGdec6GxnurvjUqHv/Kh/D6hcfWjR2i9UdxAvsaPNkzP0v1gbec23Fu
So94PMMP9RvVKrVwkJ5LfWuurjC187Qs2Q2ekX1zzc+GPKj6wB86WvRB+34P
yG7wXcuyvmu9Ks43BF94rFr1zYPjdV5xWTeUOlUv90HVH1647vL0amXjfDHw
x1ZO/GrXn7JiHR//97HnLCiz7J/dZB/40ZbV37r65Q4a34yjn41rHGidtnL0
t3Th7Lnx/RbnG6yeshv8c2uX5jN8jtlBdoNf83GJ3VpSH3ie2Vl2g2dbv8gu
0uWzflT9dd/B+j3On+i8lY0T1VP5nWxcyT7wnjYO9VzlpbRxq+fSP5GNc7Vf
3OaF6gO/2eaR6gHPsXknu8GP+zylnsn7GewmP6mtA6o//FFbN2K/i3NfZ+J7
O26n4bYuaT9EvZLz4SreyfPh6p6S80uT8t7CyXtLPeHkq6V8xvtmW7dlZ53L
2Tof6/c5H2rvBT0X/pq9R2R3eGbS+0g68T3X9ModHL+PtL+w95rsLL+DvQdl
Z8XD23tTdpbuh71nZU+ec569l9Uu+BB7j8e6e84X2Xtf/Qefb/sE2V16EV+X
7CtUD7XP9iFqF7yV7VvUL9of7di4puuSeL8H32f7ItUfvsf2Uao/PM32XeoX
5Te2fVqs8+U8x/Z1ahc8o17JPlDrM/xN2zfq/QSfb/tMtVN6EbYvlR3gv9k+
Ns6n7Pxh3+/RXv5fe9snq/6Kw7F9tewP32v7cK07POde27erHPg/bJ8vO+ic
/2DJd4HywcFb2HeE2gvfad8dei77lyX2naJ+kX8z6bsJXi3pu0n+2etLvpvU
L/Dk7yZ4mn83YRfGXeaKvBZ9CtP1PoBnGNd6RTtSlqW93blKQvWnXjOS8pFp
f+R5x6gHdmpn5ei5ur/vz6We8HSvJ3/rXq2/36k3/4/3L/WnvpfXWTlp++Q4
L4zO/50rj5j/3nnsz/bf13LO+OT5++st+fDg39JUPv35zYn3Mr+dEefjoPyp
Cwu/rffdCK2b8FnG9X3Lv1MOXLoxpcd3/qFyvD5gp31eH8WDOvd6qj9o30f+
Hc3zaO9zXh/Ggc5/lgzeu7V4PFM+djjo5VOu4g+93xU34Pb41tqlv7WP2D7y
14z3RsS6/V4vfv8fpP00mQ==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
EP5NsCz8ofDt9I3H6Fs/IPhvsEw1Vf15ZTnkK8G0stzypWBZWW6ZJviqxm8v
/CnhHwXrMq9V9tt8ENfkhsEyJM+7frD9led9I1jHf0b4p8E2gbcqy0snIh8I
fh6s07+j/o+D9dQ34APBcsp7wn8IlsE/Fv5dsLw/WfgfwbL658KvDbaB3yD8
qmD/AntkeLAPhT1yifCP4p7CPvhV3C9PBetHjwi/M9geML6ybRb961Hhjwfr
aw8LvzzYp8E+fTFYT3xc+Ohg3WWM8FeCbRpPCv81WO/5VPjPwfrOJ8LHBNsB
bq2s+6+jb7Qp9DzYVnCL+u8ItkPcKfzWYF3/DuG3BNsGbhf+aLB++pDw41Pr
zujRwwrTikFt+9HwC50i/PXaeu4bgkvW1lufFjy5tB65p+BStXXVpWvbeY4R
/m7buu1xUW7kODIkx9Cdj0deVf+3hXUx5P/vC+toX0RZFB1wWrTzHBXlf2xW
hyP3RrvQwcK7t2xrOoR5ck3Na5TaNqltYNjCOAe7F3rEES3bxIBvtW1rGsC6
avv50M/5jS3rsCjr/lBYv0M/nVlYN0HOxK+0XmI9CD8I9GF54bNG+wN2iK6F
fRz4O5ZO7Qtkz+NDgbasoP71C/tW8Hfgh4JWLNy2bwofFb9/KqwLo0ePEP5+
Yn8c+gd75LSWbQgDowyPLQf5nN/YfAYJftS2bQxd4JSWdXpkfr4HNjn0AsZh
FzopyvbY6BiLvjCjsF4wpW1bHboA7/3XwnoxOu+sWhOPtqy/oCOji/0edf9b
W9ah+LboU7e0rNcDf2n7GujYt7W8FtDbr2tZp6bvt7b19ZOxibes448W/F79
fwbP867a7wnbwU0t6/Jc44e2bQXoBFe17QtrtWzDxK+IPfPfxLaIG4T/2Lb9
M2vZFoq9Yozwn9q2PWCD4HzWBfo/52Dr4J4/o1uhq2qev5Ve49gdrmUeqfUy
dLVKx+5rWQcs0dNa1mFnKy33ZlH3ROdF3wzC7xH+l8Y0wh9kzsJr4Q+0rCd2
KM2LU42fpTQPQq+cu7TOFYTPUVrGRo9+VnN8Rq1Han3wavXPbPs7owdiE/k5
s06JbonOznN81/Y+QFcf2bL+BfxW/XNU/o7rSV4dV9uW+36wHYX1cEXLPtbF
E/vH8aniR4X/HaO5LZ7arjiLzt0YvV3XGaExj6r/YPxF6ldX0giu2dhfid/y
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
Ow3P9GJ8risFX8hsr7sizpV53l/7HfIur8linmNi+GrE94/n7pfZX4jfcCti
LWrrZRdW9oWRewX+UWl5+ePSegD+SOj/pZl1YfjRmqVl+eUK66Oci92R3/Tj
f4R/oSegO3Pe5fHcD6Md5oPS1x4erw/kN35P7JvYOR8ubXu9Nj4LfqUr43sA
8hv75jW14/pfrWzXvCqO+Tg+y+4IGdpHI+P67NC2j3F2vbcppW11+D24zzXx
XkfE98863Lq0jHs+9L/22mMNEm/Mt8AXzzveP973hThP3jmxg+jx2FQ5fkAc
80lmm2/fzLF2QHLETtN9DspMQxhDfhl6CLlm9GNbGJbZD4Se+Jngp7y3zLl5
6OvYBln72NGwoV1WWJY8te3x/eJeuKpwLh85xRxjzJOl+SV885nS1zg8sz3u
6dK+UXyvvJ/+cX1m/1tvmXM5H85M0+D/j2TO68RGR4408hs5h9hZb9M8Z0ab
BrYN7nF/nDN2i3vj+Ftq21lHV74G/dj6yOnEpoAM80Pp+GTieW6qnYvN9b8r
HeN0VtuyKOPJA32ncBwMuVcPxnkzT3KW0DNur///Geh/uG25sq3jv5TOayKH
bmycG3N8LPOcmA/5MOhhS6j/ytrfChsYeht6GrrbVbn1C2IT8aF0za0L4it5
P7O96+jUOHInsj+2Huw85LFC51mLyNLYNPE14HvBB4MNrRWcO0wOMf3kHZHX
NDbijPlP3sssB7P+s9x7AF8+Pn1yt8mbYf+wd+rc/phW3E/0s/dmEWxiHECI
uTaMJw4Av+bWlWMDOI+8ZnKxuRd7kGuSl83liMEiFou9jN+DHA/yO8CZJ3Lp
S4W/Bd8E2RwZHX0Q/gMfIhdsZMSZQ9+41/CtoFuSK7RR5DXwD+RGct2Jz8Cn
hJ9qWuy7I86B+06K94KHkgc8KeLovVPiPl2h8HNAY/D/8F0gP/BgePGo0vZH
7JDXltZF0TeR0dE938ysY6JTghNLjQ6HbJPH90y8Bb4xctaK3Dn4eXz/xIis
UFtGfgVbbLBttCws5/yamef+njknAT/iIqX9t3MWbuCvq+8vHf87jkHG4Fzk
DvyPf8V+8ole0dhHBP/IfF36WaPYJInPnpBaV0dWQBZAnkEeQKZFnkV/x26O
HasJjsHjO2E326r2fmUfodvRz7dbNLP9FJsQ33lk/O6svVLtn8yyx/eZvxVx
l8TSYVMgb7uM65l3WcT3ibyC3NIheP2GeB1ktSquT2Ad8VbcC/hx/nv38Tpp
HNOKcwnxXg8Xzi+/pe0cM+LSyK3jN/0vlo5BQhaFryPLMX/knB8zz79ffA5+
Y4sE/hRxdB++17Ao99KPrPV74fimb2IMEmsb+xR5c9Mz0zTo3PRIry/HH6/j
p2FL09y3zG0PPii3jR66gb2qX257JPaquXPr2ej9T+XW1+8W3C+3na9jsG6A
r/CO3Doj8uR44X1y2wgXDNY38CFS/6RDHmug5PZZwjfx+yyam47eUZvXQKsX
z73OWGP755Zd0F3nRx7Pvb/QV5fPbZchDmp6nNsSwfI9evS96ps1t3/uHsE1
o6x+X+45Yae4X/jauX19+KS2z22rRmbfObcMd5Lg7rll8mOheblliSMEN85N
8w8U3CB3rih+ns1z+3rQJ9bNTbvxS26b24fwPrIjz8L+yM0jsYmsU9u2uKvg
o7ntElzzMeEb5vbFL6RnnDtzHYmH1bdebp4yTnDf3Lrc7YJ75fYZ4es5NLc9
crPc88OO9qHuUWb2T72a226OTeVx4Rvl9h9fxzPl9nkslNv3gDyBPP9FZn2B
XOwXNJc7G+9/5Hy+HbIJMsrBkd5NjfQT2s657F1iyIgl276yrWhEbhmkHfcg
tPAWtbG55XZkKGSpvpGeIi8h/8zIbDeYFNc6a/750n0zYz/3/zLOAbvtV3Hv
TInXhOaPjmNGxWt/Fq+PPRG74uOl89PwQcyr7/Bxbb0dP+xsgjfn5mNjBG/K
LR8sqnH/8FyCN+Ze99jCPqqt/+ODnqj+7eLawzb4hu51VO74CXxbb9f2gVyY
27Y1ILffGnlla+FDc8tc0Oa59e4XY5+VlveQA/FX7pnbR3Gr4G25/Zrv5rZT
sbZ75Y4PhCDuI/z93Pu6p2D33DR5lODouIYXIZZb+HOlz/swd9zAubX1PvS7
zYPjzcil+iS+I+zG2wTHm5FLNUnr5v3SMQnka38l/NvGuc/IC9NLx3j8m9q+
sUduPwvPclDtmA1iN/A59M2t6yF7ny38adZrjHVYobE9DR/cZ9GetqDwz9EB
c/sAsD+MaJzj9HttmRbf7bel6Tw8BJ5CvjlxltTOQa5bX+e/kToGJiVWvnGO
OXLHF6V1E9bUJ6VpGPZr6Bg+jR65dRu+4dHxO27buB7Qzno/3RrXadpT+PaN
6zTtTu5D45pKu5KD0NgmeEhtWQGZYXnBbRrX8enJtxC+UmH57Ybctnx8A8jb
1Fb6UfDyxvlRP+vc4Y3zlH6r7Qd5I9IlZAzkhlmDZRJkD3j9FY3zl36tbaP+
mTVX2zb7ofA9asepQguJEZqM37R0jtjHfJvSubHIXcTr8DE+aew/mENw08w2
Guwz8+jYe9DD4POwbWD3wA+O3RGf02G5bcXwshk6/5DSPq/Tcvt5seHg8x+e
2946V25eiNxOfiy2ppcFz8htV8e+TjwGvib8g/iNO+e2D4xtXLOmEry1cW2d
WnBa45zb+/S8rwu/rXTsEDGH2Ajx8WHvXzq3zeTU3H4E/Ak7ZbYfYTtaDj6Z
29ZPbAY+n7107uTc/jlsb+hK36vv+8a8cYPM/PGLxvph1tjmf4vGfCb8p9L6
0s+Cg3LHCmD34N2cknsO2DFezjz/OXPLB/CRQ3L7LpEZ2IvL5H4/xIrgd9q1
dEwIvo7tBbuVlh/J8/umdI0Y9tSitX2z7zf26SND4wfvlNtXis2Q+B98gPim
sT/DY/AdEzuEL2sndKLG9XoCsQyNayptq7W0Q+Mc797CBzWux/F2Zf/i87l9
5kMa5zD/Ru5MbpqAzL5WbvkA2QBf1Ju5fd3IC8QF0Y9c80CUbU5tnHs8Bd2/
cb7xZ8JPb5zD/IXwfZtYp0x4r8b1ZU4T/jpyRGY7PnbeS3L72DasHGPxX+4n
uhKymOZ6ZuNc6590/IzG+eTfCT+rcW72L5XtZk8In9pYDpojsywEX/iO+wXz
Vexi8FZoMDGi2HMuaRyP+0NtnXSd3D6eJYN903MLXtY4rvcnjbm0cXzwj8Iv
bhzX+53wYY1jeb+v7dfAv3Jnad6IfxP+eFtwraRSY09unLP9vuZ/SuNc+o8q
29ux479V2maFDes9ZLzgfAf23UmNa0xMqmyXvSfKe/gFsLFgCz27cX77H+gj
wlcpbH9GDn0tyqL41NbU+E669k6N6wscXln2RqavgvXx9zLTeuSjpTPLSMjb
yCKl+nduXOPmiMr6Anp+UP9xtf1H+JF6Nq5TcKjGdG9cv2B/4T2E717E2guN
66YNFL5H4zprxwvfsXH9iAMr03V0feqh7dW4LtuJ6t+tcS2wY4Tv3rgu27HE
MDSuy3MkMaKN6/IMqKwfECuCjoBfgJiBzsFy8cQon9xT2q+BfwP9FF1xYu01
wdogfgE/FOv5xNo2vcns+8b+rxWRsWrTQnyU+I4n5fZP4qdE7n4ryt7YeXbK
7eMaoHNWETy6Nv3H14bPDR/gc7n9gJ839k9M15itcus8PMtugitr3PdRBh8V
ZRjeMbY97JPdcsttrEnkfWQj5CJ8l3zfqYIXNY5f/1b4mMa1utrQ9cZ10JrG
Mji+JeTwaRr3S27/xevRH7wgMkqwHRJ75LtR5kf2x9c1JL5PYumxJfMsy2r8
t7l9EOSPjNR5mwlOb+y7urR2/ThEC/IU8Nt8ndt3My23boZedmVuGoIdAp8a
sYbIb/ht7srtu0GXQt9Dn8ImRm0y9BRsNfgCkWN7Bsf2kz+ND4LaPfg7qFfY
KXEODPGWyJb4QpEJf9A1v2JdkMuha5+HraJxvB2yCrV3iE8jTu0MaDrzLR3L
jY6Jf/LdxjGyv2jMAbXtLlPU93bj2PGZ6ts4szyHLLd2cM7ON+r/srHdc4jw
1YLzYmbUrn25ZGI5bdXGcT7E+xDzxvsgNhZ/LTSyc21fMj7lhaI9kLyaq2rH
JWLzPre0vxa7L/PEJw7tXYr8lNz+Vvyu6+rYQNYm76lyLgJ1AIg5JH6FdU5e
Ev7KbyrrG//FPul6s1Su0TFdcM3KPjVqC8xXuUbF94KX5fYb4j/cLDg3BDpM
Tjf5GtDnuSvblL6tXPdgk8Q0f7nKMYjUSdg6OH8E2r585TwDailQD2HLxPS/
W3BeBnLjiNp2bd7JMjHOj9oIXYNzD9k73dE1c/uqO1SuTzKjMv24PeqtH+Wm
w8Qy4IPonduPvnplPy91FchjQqbesrGOhK6EX549NUPjp9TWS+6MukknbJHI
TrVtFcQysS/wBVCvipzxRSrX7iAPeoHKNT1+FNwb/SmzHvJObX8rftclK9c4
oebDQpXrfPxcOXeYnAPyYKiTgB6zt+DileugkHu+SuUcDmo+4AeekNsXfHPj
moPwxA8ax+my9ohbmEfjlia/trH9+k72QeNc639rx5t0zO0DuKZxruw/rNXG
OVR/CB/VWCYjdvGGxvUB0yiPYz+m9tT1jfM2W+hljesvYBTD/nFMbhvIhMa5
eUs1zoMjRupG5N3GeafzNI51x7dDjOnzjfP6lha8t3F+5tzIy2oTS+ff3d24
7uTsyHSNa1POiQzbOO/rT81/ZOMaEH/XjgvCP4ufdlyUa6k5SY4VssZbjXN2
kBfeELyrcQ3K2RrnC+Bfxs8MzeYb833vaFzjclbB2xvXvpylMd2eqTELB8f4
LJzblzm+cY3LDo31iS5RpyD+on9umzO6+xZZrKWbO3aN9Y+v85rc8UdXN67T
8VdtuQy+Bc+6sXF9xlzwpsZ1Hosm6gRt6wWsyan6/angs41zMpfkORrninQS
fKxxTuZCgo83zudcWPCJxjmZiwg+2ji3s6Pgk43zNhdt7KOk/hS59g81zu9d
oHHuMDk60F7seH/yTmrH3aF/42sjRm6S8IsEf2jss5mLtaff82VeM9SBJb8e
/R/bwx3R/oCMhv2IeqfvNc4NgPYSl4WfCl5I7N/LGnth6dgPYjOIZ7y/cc72
vIIPNM7Znk/wwcY50vM3lrWXjPI2eQ3Y26i5OrFxrHYXvm3jvIXlGsevHZfb
t/Ry49yGZVlTjXN7lhc8snR8AEzopcZ5EZ1ZR41rtC0j+Ezj3NclGttXTog2
locb5ycv2FjewV6DrQZ73uBIG59unLe8eOOYQNYIcUdPNc6hXaxxPMKJuX1f
xL3zLsmHQg+GFpLncUlt/8DXGj+4cY2nH/TehjauG/WX8LuD84ap23BYcB3I
wZXraZDrSP0S6q1hb6d+wm/BudjM/7jgeins2XMb16giUHt8cFwuNSKo/0DO
O9+IOlPYxaEJRwXXDj27Mj40Me2iRge5nehQtwfXSqKGwKKV87hZ5+OCa6tS
62BycO1Zai8cFFzTEp2LegXkkpO7P0/lHCx0qFkr53fDj8hLxY5LLH9WOY+Y
mhKtyrnD1JSYv3IeHe9tqcq5z+RpvRRczxM6M1vsJzeaOg/k7LP2msr51/Dx
H4PrD7Cniso54NSpICeNmD7yEmcG1xZgDYfKOdxfC04Lzv2H3lJXpEtim899
wfnj1D8hP/YW9V9QuT5Jv8R6zdjgOrHUXkCuOzCxPgJfHhvnzPzJhYfOI3uQ
qw5tocYLtWbQNXiH5IND228OrilLDQdqmxwUZcXdgmvHoRMhk1AXFN38seC6
vNSgoLYMNXfQcfoE1ytG96GOCvWM0F+oeYvfeBPBG4Nr294aZYzukedS+4J6
l9Bw6gxS7wJbB2tyDH7pyjVebhB+TuWaJNQKhIZT44K6mfCgB4Lr91Jb5pFg
/w71KIihJJby19LyD3Ww0cWon4wPE5vVqOCaRdTNoJbFf7UvG8tU1MdG13si
uHYx/OX64DoJ1MegLgd1MNEpZq9cT+CbuAcHJ7ZPIsdSdxo74SfBNRHQfz8L
rpvwdlwb1BlDpyYGF78ZtqPvg+tbUHvkp+CaCtTuoA4YdZPg9b8E12OgvseF
wbWVkAe4FzWcqXkyIrgWE7yJ9UkdQnR26hVjUzxY8PfgOg3UM7mgth+PuKZv
g2tXTI7rn7qLUyINoSYh9hPmMCzu0x2C8zz/q/FVOf8U+oy8Su4qNBb5kJxT
6PB2wfnB1O9Cxib/FBq+QuX8Vug29IHaE69XzrMi3wobGXXSyOOmvghxlk8n
tmVRfx7/AvVYqJ9GTjdyF3W9yFuHd58anD+O3IUNhxxS7M/UDSN/HLllSnBd
0zcr1xqg5sBLwt8Nrv3xQuV5koMMzaR+4Pgoq0PHqA2FbZb3QF5wVru2M/4W
bH3UIiMXF1sH+dHEOaEnQiepcYe9ixprp0UaDi8gtpJYzo6VazUgx1JfiLxl
7GnzVq7n8H2ke/dF2Rg9ixrp2KWpk4x/HjvwgpXr3WGnoq4R9bCwOVCzEj8m
tXqoO0SO8S9x3VJvnJo5bwbX7Hi2ck2eJxPLqNQpJT4DuRcaS03RJ3jW4PrA
zwmfEVwvhRpB1CYiZx47OTU3iLvCFkdNEGpGYM+BblNrEX5HPbd3Iw3/Mrhe
CLV6qHdEzjl2eGpSkC+NDZx4FOJSboKPBtduoZbR3sF/+wDbC3mXxEpRz43a
TdTIw95C7v+rcY3xNyCwG41GTgixbrTGTAyu90ydIuogUMMAux7JuNS+QJY7
rnEtVNYMtSbIaSCPFvpD7Y8b1f9ycB1p6vYc37gGK+sNPRpfGnHy0B9qEd5c
WR4nro5YWfYsPu2vdN7AxrVW2S9PB9e1po5Qu3JtE2RFbHrUEx6nvv0a16CH
3hKHSdwBcQbUa6Jex39yZnCtceoUUSOYHEHsKtiHifsm15OaTtQkQUY9rPHf
eGCe1IAmJplaUsiS+Erxk+IvPTjid7RdExm79OGN/27EWI0/unGNWtbPEY3r
RN/Ne25cV/pe4Uc1riV9P/yicc1c1iQ1yj7VPK+q/DcyiInH/9K/cV1jnn1A
45rOD0b6yd+kuLyyzwo/Kz5WfMjED+FHRtaiDidzIP4UPxZ2BPyxh8fxxzau
scs6x898dW4ZhXjXQdFngS8a/zGybFW5PufXkVZ/rjmMrJyjS64uNlX+zggx
YNhGqL9ETXj0i+uCa9XeVLleE/VOsbHjc8bvhd+Z+mxfqv/ayvZYaury3qi7
Ra0V9Iv9G9dqR/boB18s/Pc7gMTs4KuFVlATBtn4kMZ//4N1e1Djv7HB9evK
NW2Qmfs2/lspvH/qelF7B7kXf/uDuf1MPDu1bpCTD2j8t094/9R4IT4CHQR6
y98yoM7YiY3rI0OT92n8t0OQdal3TP3hyf+zEQme0LjeFD5BfINvB/99BGqX
nde4DnsW5RPqeLPeLmhcXwl7FD7Yk6NsD63jbzFMiHSMv6eAznt+27V+8HEQ
i4vPHF/7+Y1rMGG/6t3Ev/2gcw9s/Ddg+L78PQVi01h71OOmHhf+odeD45eo
XYZsQ01v1jZ/b4C63NioD238t1j47n0a13NHRvo/KAjdQg==
          "]], 
         Polygon3DBox[CompressedData["
1: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
Z8/YpL7fT/wt1M9F4v/aBp/U979MmXvVJtc2N/+ib6uOW7DMnureqn04cxX7
xljeF/V6HdxPX/Wi+6v5OWMFYhYWpv19jp3P+GuYf78iMR9jP++Yk3F/Qb6y
l/fp4yIxJWNLYhrFds7YDz5VnKrxwQ/KYLtGxJCL2OPG5uwzB23LlcFOi1EY
TPsWZfCL5qzNXZ+G/HojOUhzkUuWwSobgzIWtXkZvKc5f3P/YiK+6mW/ECth
zmtYL/Euc2HLljmXuAj9GX1c9xzfv5n6wTR80Mt+JNZBfJS+hfpBe/W9Mlg/
Y7jG2t8tg1UzRm1s/q0yWC5j0uZqri8TDzYuvKPvmudvJmdlbk0d+y/nXqW2
524so3uNMZv7us78XTM5QnOHR7oGW/G3zbWdRft7PhvkRZCvNd7VTA7PXN5k
VXKJ4sWGVLFptW3LTmIhrpcteolXapuNxbHZ6Pt8rZ9WLrN3bMzzOMDYZZHY
2f9ayR+NWiUXO60+HfzWZXJtm+mbIq/cy/193gj+YbMqe9e5/H5vV9Hx6vo5
jFUgj1uF9x69V++vybVuw3yH0naTOUbOP3Yz+9WgKrm5s40/wA8vY9tNwfwf
6Psif9pITtvc9pXIPzSC0bgY+aoy+XTz6jvwLK4us5d77FLaryjTV1zH9rRf
gvx1I5i382ifg3Ps3ApmR/zXZfoQjWA8LqD98jL4EHEi2zH+0jJt4kC2RV4c
ebNWMEbieZ8ok88yr7Un7fOViR1tbIyC9gPK+DLGzDdFPhf5o0ZywmdwvmFl
8r/mgbf0XS6DXxDHsBXyOWX6mkfeAvls5A8aySG7/15Q5rdyzLnqsyK+g2ti
7Co6YLi2Ti+64cwyukEMglgEbSBlc7vaRicz5p92bNrnquCLxcJ6j68XsU8W
6QXPZyzyozLxd+Pw4kU/LIPNNUb/axGdo+1k7lRdZAyjV0THq+u/LIMPNedi
7uWrMngxcybmTr4og8c0R2KuRJyX2AhjDMYHPyuDBzUHYy7mtTK6zpzYR0Vs
HP0dfW1tn1fLtJk32x/57TLYSXNU5jLfKZPPMq8lHtIcrjEEaz7+py1RJh9p
XnJf5JfL5OfM0+3XTz2GWFmPfVAEry6W2Zzk28gvlMlHmpfcpx88vthmj71L
+w9lsN7mLMxd/Fgmf2ceT7zrT2Ww2x4bz7VeJj9jnkb87FQ806V5PktCU1bx
v8QResy2Z8u0LVbbf1NXweq9wvv3HvxqVbAYq0vu5VWwNQ/ze43B2Jmq7FWP
Is+NPEEV3fKYOMIq9qlxO+N3k1aJgcqLIR0RGy2TTzWvulc/+k5ssjn7u2r9
0KHtfuZ/3nVSBi9oTs3c2rq0X9FKTHgG+O/KxD6MAYzpuwo93EwO0Fzgp2Xw
xTe6JxTJKRrzORt5XvhPyuSXzDOJp/64DLbbHJS58jt9Zu34cMbmni5jS+mj
Lo08Qz+5NOsyzLeZEzA34Dv0PO1blqk/WLiT+K059hs6wSOYe3d9PdGLzaDt
IIbhqk7wJWIbxHyc0wk+TSyImAT9Xv1fsQqj6b9284xGKYNBuLaTfKfYBDEK
13SCtxC7IObh6k7ynWIhxDibwxNTIvZZTLY5YteYWG3XnGvPNSn2esN+MFvn
cE/bFbGptK20qXYrsgZdi/4mYru1mbSdzqN9xyI2nraeNtfORWKcYhrFvPh8
3fPc+6ZqB6/unufe90v9exvzMvZljEts+eIcO5G2Qe3gU9XR6mp1/vlFMChn
dIIHc38WE3N6J/gs9/Nd+sE4TMh8txfJcYvxNl9t7tucrJjqi2r9Y85WzLX5
bnO55nzF+A+r9Y/r65le8FHmsm+qkpvXp7kZftd+MCoTq9OK5NjF7IsHMHGz
bBWcrnhd8cViAqxB2L22X3buB0MynjqviA5Rl6hjrIcRA3RKJ/gi7QkxS9a+
iT/SHhHTYe2TeBOxHjv1g5Fxj76pCCZETPr+9foXs2CNwa61vSSmwJqNvWr7
8Jduajb2qfW9GLT9O8H0uH9rs2u7a5PvgXwC93hVIzb8pVXsPzGGeyEvVNt3
C/XiM+g76GPra+tjW6ujj6evp00ntlefXt9eH95aqRXL2IZiMvVX9Jn0nfRp
rc3RhtSWHLW2x7UfxcZq0y7YT85ELKeYWe17a4TEYG7dSO2QmHnjcMbjjqry
TvtuawObq7HmRgzqFo3U4ljDJmZ1s0Zq2/T59f31yc0dW6MlhnKnRl271Q8G
U0yltVLWUIlh3KGR2qp1u8GMbom8apGaLTGh2zZSy2UNmRhJMaLWlumT6pvq
c1rbtgLj5+4kRrJg/fuZU9fm/6WIz6nvqY8s1lwfWl9aH9zaEW0QbRFtkNOL
7IHuhe5h1pPpk+mb6ZPtjbxBPxjL0/XBkA/UXmikRusgnsee3WBCz9KnK1Kj
JUZVjKm1WwtVwWpaD2X9mjaStpI21JlFMJR7dYLn056xZkYMrzbRwv3YUNpS
2pTnFNHx6np1vLU0+vz6/vrgYue1YbRltGGshbEmTYzsro3UqlmjJQZ290Zq
t07tBmP5LPKhRWwKbQttAOsxjWkY29AnOr6ITaFtoc1h7YU2g7aDNsX7yK/X
GCYxTS9UwXBZiyXmTGyXNq22rTbqRUVq4sQpGtOeHX7bMmtvc2hl2rcrs1Zc
k67N7cus5a2g1dQnZfC0rhnXziFldLsY3W1p30p7pRGMtVjr3cqsVTG166o/
y6xN51hbfVJm7bkmXZs7llmb20Br0L5DGd53yndLDJ81LkMbwfYZI163F5tF
28X1YU3AwfX1iLG1JnME/rv+vX/qBd9q7dTBZdbSmfV85qTNTYtHmxl+aJm1
eFo9/qAy+F/XqGt1vzK6SIz0pq7vMrxr0rW5T5m16RpwLexdZi2Iod6oiH90
J/zwXmJjT1XBmphjehr+VPq/Svsr2vheH8d+bienbm790SpYn+/r+IOysYi9
zSfR/5Qya03MpdhL5/+NtgOhf4rsOe49v9XnEz+7dTPneKIKRtyaisMawY6f
rD3ZiL4Wi3kS8hONYEDFgu5RBg+uTlI37Vrmt1cnqZt2L6Or1GHqsr3KPAvf
Gd+dPcu8O86xAfMdWgbvrQ2hLWE+RP/EPcF87onac43EF41nHFbGdhhWX68Y
Kmv+Lq/9gxe5p//awTj6vqgf5+kkHuz61j82dmeORX9ITL01j0s1Eq+wZsAa
yWXr9W1NgzU71v8YD7amxhrsQY3EC41BiyFctZnYtDUJ1pQs0ki81xoGayaH
NBLfsIbBmurFGom/6iPqK1qf+Fq9Pof04pOLpbBmwpoj630WrvW1NVTWIC1U
BGNpjeNOtb+ij6qvqg97YREMqLXP4jXFhhrDMJZhTOLqIj6zvrM+9SVFMKnW
WIt3NP4hxnzPTvDSxmuXqZIrMGcwTRVM44ud4DWNx1rDZA299SjGM7Xpte31
Ga1HNQdsLth4/Yxl/A9jz+aE9E/EqO/eCT7ZeJGYO2sKL6n9QTHG23eCzxd7
rP9oLtz6i8X6iT9YW+E7ZzzCHJq5NI8ZbxGjZ82neDCxe2KMd+ikHsL1LmZ5
x07qEXyfdkO+r5P66Cdr/b5TJ/UJhxXB/K/VSX2E8UMx0tt1Uh/g+2IO1Fyo
OVdrn9Rn5r6sH52tH329aS8+1oq1P2GbGATjs7v3g4lduZl644l7waiZQ52y
DB6roP1txo9WJSdubtwc+KxlcqzmWs3BWmtlDcW6ndR7GB+9uQweWptP2+/z
MvWYt9X27mzMuUkrmK5FkU+j3x+N7Lfi07Wl/25kP7W+Qlta7LoxDOsdtDV/
a8Q+EO9uPMlaGm30/eDPot0EtPa59TST9mNLa2Nra0/STz2jNvYD9fVpi3ts
AP7GTmr5tX/FT7umvb6bulnr+jr6NsbwxJfrC03dTAxP/OdPVV3P3Mm7+nOV
+md1grrB/U5dICZqpSLxTXXF0o3YdxP3U/+pj6Cv8EsVLIs6RF1yaxl8tza6
trq+1hTNvH/iS/XtJm8m5mf9gD5AT9+3G99AH6Sjb9CNb2J8Q9/Cc7bgJ+rH
V9Dn0PeYsJ96X30IfYmx+8E2+077bhvf9N22JvqrIu+kteKvdvOuGl/Rt7GG
t1cm3+K7vV1t743fD7Zam38EnrhILkb/WbyE8R5t/31re0kfxNr8N7p1fKOo
a+e7WdvqPGvXX+lGF67jftUKpsn1PE4/16qOU9eN2w/2Wh9EX0R/3nN7z/8V
8Y2t5dIesn7rbORWM/rQ+q5hnTxfY4TWZxjvUXfuXNtf53byvNWH1ufoG4nN
9zcUj2/8WN9rj9rfGK+fenB9Mn0z48n6Rh77vohv77dB9KesNzA3Z/5fDJNY
Jn0s1/9t3bx/2mvmKrXH9ReMp0zWDuZf7L8YArEE9yGvUsXeMNa+QW1/ur8a
S1+vtk+3r4ItGMKYfYx1Vqnds0bQWsH/GYMX3zSQ7ytoz5kb1B9Zr7bnzF2a
w9Tf0B7S9tMG3Ax5JcasxVyfDqTeWXt+i3a+kbF5kfqNA1upAbMW7NQi37EQ
k7qd56f/LbT/1wpefrEy2Ap1zuxVcqDmQp1T/8AYt7HuP2lfv8r9TdzOnM69
UZVvK9xszNV3u8yzMsZrrNd495utYBTnq+NbT7byTQn1rzFMY5kPGFOqkkOb
zr2+m9ya+RB93b1r/8gYubFyaxr15+aEFm0H8yH2w3y0e7c1v4vQ//sqvDaF
toX5Zm0La4T1V80P6Yta02k+zHjc4Do/795r/lbbQYyx/uJ3VWwBbQRtBfMp
2hrqsGWLxARc/7d3o3/Mp1hLZA5mrn7y49rC1mTr/5kjMFcgpmt/+B+rfP9F
m0Xb5Ycq9bLaONo6xnCN5VoPswNt8zNfvxUMmVgyc5LmJkczv1Em/icWUgze
ElXy49pKnmNIkZiNsZvHB1JrvGMVbOH07dRv669oy5nj1//WnzBXr7+vv2vN
uVi+mdupf329zLU5h3Ppg/ltnLe78c2M7xnbOKD2/ybop7bEmIexD320+/Qf
uvHd9HG1R8/txve9q0xuWB1+b5F8j7EV9yD3oqqfNvW8sbxeP/uj+6SxJ/M9
xmbcI68skl8yFuWeel0Rn1b7e1g3vm6nn9ofYzrGdrr9jHWfNbajT6v9fn43
vq45a3N7YkXMZd9dJpboHnR/ER/c79fs3o2/s57rqBGfx/pObQVrO/VxrA/d
ubZ9tNmt79XnNF9/cTe+6Mj97K/us8Yed+3EFrugkfrWfj/ndh809jhSP/uz
+7SxyXvKxCad4yHmvrdM7NIa/4f1v+l3XCM+lvWm2rj60hd1Y/sW/Tw77RJj
feKnzLWJcfVbLtqW9zQSn7T+TayC9YLWGFpraL7A+ilzFOYqRulHf6vHjdWK
P/L7N/pQ4ktf6mRv1P63fkhsgfgiMXNi57Rx/b7K9L3Yvtpkfu9ncC+2mraz
2GntO+udjFHqD17YTexyj07W36WN1CPeUqb22Hfad1s8vLlC16D4QmNQ1nNe
0E1syhybuTZj8Mbi7yhTe+oeqK1hrOTBRuIz1j/eVia27B6o7WG+TmyJe5R7
lb6AtZHm4K2f1PYWj3phI/XP5j+NrZozNDda9rMfuy8bu1Y/Cz4yZ2bubA2O
H95IzMB6XGPIh7j+uvEHXeeud3Ok1kdqg2vvPduNbS5mRKyotaNiScTjH9EO
hm1wFTyp2BK/mTN9GR9H/Mkl3fg+q3Vyvm0bqZ82Zn0M/P7dxLLNJ5grMGdg
/NqYpevvgG5imWP18/v5O+oLGdP2fvbpJtY9bT/n9rs91o+Ip7W2ym80zcx8
k/fz/Rl9En0T81/6Oh4r1S392GL6QPpCxoSWRn6rm1iR+FlruVxjI9ZaEV/l
zW5icdbzmzvyGYhHm66fWi+/62T9jfg/sepiUMWi3tLJt8mMR1svqe/o97OM
h1vvZ72L68n8l/hZ8yvW5viNltHVLf34VvrkD9e+1E2NxGCs7566n3qn/zqp
L9KXuqWRGJP13tazmtszx2f+QV/v+kZiNNZj71D7fsZorF/Xt9OXNyZgPf2a
yEc2EpOy/nztTn5PYw7Ws+urHdVIjMJ6dnMO9t+3m1zElP3UDvldFuvFxM+a
izQnaX5hmn7qvVrd1EOZj7L2yG8QmW8xX2kswm/ijKQu66d+7u9O6o2m6KfN
7+Y8UvuK1zYSA7WeXDyquSpzVlOXye/pi+mTmX8Rv2su1Jyo/qT4WnNh5nv0
74yxqr+HdhN7NX9oLtScqPka8+ujtvPtky2NNZWp/zPHY67HY7ZZc7RFlRiS
sSS/6WJ9lPiYIxp5Zj67P6s8T5+rvrD5Ymu5j6jzXX9U+TaBMSZjTWdUqY0U
Q3xmFfyILqBp3JmKxHvErvhM9q/jPYc18k75bonX0df2Nx3xrpb5VoHvpO/m
G1VsPzHqX1SJXxor9B1XtxjvM1bonufe91sVW9UYorHEv6rsd+57+srWrPlN
NevZxJMbD9O3d00eWAQjI1ZGjI7449+rfGvCGKaxTOOPQxv5honxbGNYxrLE
movVMZ9qLZs1ZX6vwJyhuUMxNuLdxTPpq/ub+tuK17dW5cT6+fk85bWhtaXF
HIk92tM9yHiK8Tf4XaGjkQ+rgtX2GwDGLz4tUvuzbzv1O8YUjS36zaER9YX9
2A5ioI6vgqkRWyPmSeyT+IynGrE5tD2eK4NlNwZnLM54pnPvV8cbxXCJ5XLP
PbIKnvmrRvYY6zG8Rq/VPcy9TJtR21EMsVhi8Rliidzz3fvF1IqttR7KWjvx
HcZS3UNH5PvKYA1H6Pwi+AhjpcZMhxXBJIpN1GbVdhUTIDbAezivyjcGxMi6
3xs7dY9xr3GNn1IFbyJ2QsyE2Al1qrpVHW+9hDpf3a+Otr7B+mB9HX0mfadH
ytQ7G+PRH/b7edoSHnupyPfdjA1ag2y83+/PaSuM+AZfEYydWLsxWqnnM98l
Ns8aq7mrYFTV57/2gl0Vf2VfDjVmKPI9Sm0dbR7jg4+VqYc2pmls0+89ai9b
A25+8IEy+48xMfdfawCtGTMGZSxqlipYF2sI5y2DJxqR62qlft/vZRoP8Jt9
jxXxzzQJdqn9We0bYznGpG6u7T/jE9bUm7/WfhX/a43/iFr/KtjDF1vBY2s/
Gk8wP2J+2+89uh9a025+Xf/Mc1mzbu269rvxCG1kbWX3JPcm9yBrYdXx6np1
rvUSfi/EXJU6Sjy0NTJikMWg6O88U+VbmNYEan+IfxWjIsZv/n72APcCdbJ4
Dp+X2DQxzOKDxPSJ7RPTJ5ZefKffHrH+b55+4nHyvdo/FlPvt4qsJ/T9EA+7
TS86Ql1xre8013KX9i33N30/toc6Td1mDbXfVlMHWVutfejeb43/HUXsQfd+
v0kg3uDOMtgMc9Yj4lNl+pozNz5l/Y26UhtXW9d4ZaebPc36CvEJfrPPPXbU
Mnuse602hPgM8fza+mLorO9yj3SvdI8V76F+/9X6NGjlKhg3sW7WnojN/bvK
3uG+aizW/JnfPHC9ibe5RH3bTr2W9cqC7/UH9AuMPYs5FHtoH/uar3+wHUzI
X0UwvGJ5xdNfRNvXVb79ZMzb2Lf57BvawbCLZRdfbK5gikbyp81+7GftaGPr
+xT5lo5jzH//W8W+0c4xNi0GSyyW39u4nLZryvC3QFdUwW+Z6zRnIrZLjIxY
GWs+bqT9YuiqdmpCR66CxzS2rk+hb2u+x9i3NtrByAP9fM/DnL25e8/huVqd
fH/CfJWxdp/ZsUXwv9ZCiPkXzyt+2W9VTdZI/vS/KnNrBxpbF6P2vntFN9hx
8W+PN+Lj6uu+WeTbYdawXF8F3+Z+qc+t7y1e2tyC32Q1fy1e3RoKv6+1aD/4
+mV6yR/5/L+p8u0rczbmbtxz3XvFNG9epX7dtdBtB48nPnvKRjDbYrdb/fhH
+knmlsWvP9DIsZPcXxhzO2PvgK6qgo+0btKaxIWrYPTF6ruGxHtYHyA225pO
8QtipsRO6TOeVgVvby243wwVnyAGWyz2BO18/1cMrFhYMUhikcRgicXymwi+
v2IsxVpaI3UI/Ppl1qprwLWgDlAX+E0T8ULmD811aIObr/6nim2j3W2uxXfK
d0ub4fAqOVVzq96z9/5/DGSe/A==
          "]], Polygon3DBox[CompressedData["
1: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
e0wfvbFn4vfl/wCF6/VF
          "]]}],
       Lighting->"Neutral"]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0L1KgmEYBuAnNYhqsyXKysWhsyhaLMjQM/AAdLAs6wikqTEoGupQpB/C
oXIqaAkzrKGfrUC8pOHi5nnv93t4+bLlarEyFhGbHCci0oaLVMQ53cmIazk1
HpHkVV8z//Ko25ZN8ixPRHzKOV7ca3JnZ8s8qzsbnXPv7FDXZd78xYJ+R65T
583ub5mh594RG8mIaW+4dfasv5FtZrx3TX9J1vzDk74htyixZH9RXrlzSsGu
Vd91Ru8hp3+QK85O9B/smwcs6g5kgT36dv/JXd4T//9sCL73Lo0=
       "],
       VertexColors->None], Line3DBox[CompressedData["
1:eJwl1XmQz3Ucx/GPczEptyhlQ44kInSQK0yl6dpax1KOQlg7TMc6SpRrtRUq
u9WUKBRb6FAUZqqZapSZ3CtX7sofoWtNHu/xx3Nf78/7/Xp/vp/v5/P9/DZz
aO6948qllAr9mVo1pcoVUiqumFJ3jMc/yMXe8uoYUC2lUlqlUkovZ6S0RzxW
fQqtQ3fRWnQSHUN30mw9+XQ7XtLzJN2GkernMApd8SXqe/4SnnrWtF/fb3Ij
cAsm6rmZfoFmVVKqy7teXBMFuAQZ1jU31q+2xjzdaJHxjfE++utjgnwu7Sz3
KTrhM1yMWvyf0KbmrymuLv4YHbEWN2CM3jxz1KaPYb/cItTgXy3fhbY2Hq3W
VTwnavgcdYwvN/c68U3I45lJe8ofoD3oE97bUaTFsQ/GG+S74FH8jUfwlb7H
8SLPz/R/ufv0bYw1iZ+io+kOWjv2i95KN9ECPZPpbvTX04JuRl313zEO3eIZ
uNTzR/IMs55G1v1HrBGzME1PT7oRh3ga8G4SH8S8OEsk59Em5sGvPA153hC/
iZn6y6l3l58n7iP3NfriG9zO2xh71b81zhT3w4/iO7EF/fBa9PJUNFex+B65
ZfE9xJ7KNxHPx1tRk1sYa8F2XGu8j2ebOAvv8DxI75c/HHtK19qv6ubO47vO
eKd8f0zG6dhb/KlvGQbynKFV+RfpOyt+Rn0FfTrOj06j79Nn437RQXpW0v9Q
rGcVLUNz9TOYgUFYiQc8v4lzKHNfD+o7IpctlxPfp56HaAla8AyQby8+ilfw
PKpZ16u0FZrzdIz9FT8cd0D/CMy2hnV0qNxHOI4TyOHtjMv0rTYeLB6CX8TD
sAYnsV7vXHOMohswXG5f3GHeq/ReE2cWd0+tJe2AY9iD9jwNeT4Ul2I4z2D6
HM7GWuJuyK0w//W8q+R2Ywj+ivfGOfUSFPL8EGeCHH3/0unqH9Cr6ffxexb7
F57op0V6ltPvkKUni57GFPUyTI3+OD+08/wJPCXOItOad8m1lcumS2KNdHns
P08b+R3iptEX54jKzmIBvVttEk8rujW+vbgf+iup95UvEr8n9y7uwk+4Ehfx
L6VHeJqJrxAvxtvxreMOvKC3h3p5cxWIe8ttRiP+fPnetDC+DbUG4Ue9uBfI
UCvleV18G6bz9KJ5OIWW3jk/Xfi/cR5CHckx
       "],
       VertexColors->None]}, 
     {GrayLevel[0.2], 
      Line3DBox[{2430, 2659, 2622, 2577, 2724, 2429, 2909, 2879, 2148, 2428, 
       2147, 2427, 2908, 2146, 2426, 2907, 2145, 2425, 2144, 2424, 2906, 2143,
        2423, 2142, 2422, 2905, 2141, 2421, 2904, 2140, 2420, 2139, 2419, 
       2903, 2138, 2418, 2137, 2417, 2902, 2136, 2416, 2901, 2135, 2415, 2134,
        2414, 2900, 2133, 2413, 2132, 1627, 2131, 2412, 2899, 2130, 2411, 
       2129, 2410, 2898, 2687, 2688, 2409, 2621, 2665, 2681, 2664},
       VertexColors->None], 
      Line3DBox[{2625, 2457, 2692, 2691, 2819, 3045, 2197, 2458, 2198, 2918, 
       2459, 2199, 2460, 2200, 2919, 2461, 2201, 2820, 2981, 2202, 2462, 2203,
        2920, 2463, 2204, 2464, 2205, 2880, 2921, 2465, 2729, 2730, 2731, 
       2778},
       VertexColors->None], 
      Line3DBox[{2626, 2585, 2728, 2476, 2727, 3057, 2214, 2475, 2213, 2474, 
       2926, 2212, 2473, 2211, 2472, 2925, 2210, 2471, 2924, 2209, 2470, 2208,
        2469, 2923, 2207, 2468, 2206, 2467, 2922, 2697, 2698, 2466, 2699, 
       2792},
       VertexColors->None], 
      Line3DBox[{2631, 2741, 2740, 2235, 2758, 2759, 2757, 2702, 3048, 2236, 
       2490, 2237, 2826, 2987, 2238, 2491, 2239, 2827, 2988, 2240, 2828, 2989,
        2241, 2492, 2242, 2829, 2990, 2243, 2493, 2244, 2881, 2991, 2732, 
       2245, 2733, 2734, 2794},
       VertexColors->None], 
      Line3DBox[{2632, 2594, 2256, 2737, 2736, 3059, 2255, 2498, 2254, 2995, 
       2832, 2253, 2497, 2252, 2994, 2831, 2251, 2496, 2932, 2250, 2495, 2249,
        2993, 2830, 2248, 2494, 2247, 2873, 2992, 2751, 2753, 2752, 2246, 
       2700, 2701, 2779},
       VertexColors->None], 
      Line3DBox[{2643, 2574, 3031, 2572, 2385, 2686, 2685, 2795, 3044, 2095, 
       2386, 2096, 2890, 2387, 2097, 2388, 2098, 2891, 2389, 2099, 2796, 2957,
        2100, 2390, 2101, 2892, 2391, 2102, 2392, 2103, 2893, 2393, 2104, 
       2797, 2958, 2105, 2394, 2106, 2894, 2395, 2107, 2396, 2108, 3055, 2722,
        2397, 2723, 2573, 2798, 3030, 2618, 2648},
       VertexColors->None], 
      Line3DBox[{2645, 2644, 2639, 2954, 2867, 2342, 2557, 2341, 1821, 2340, 
       2556, 2953, 2339, 2555, 2338, 2554, 2952, 2337, 2553, 2336, 3018, 2855,
        2335, 2552, 2951, 2334, 2551, 2333, 2550, 2950, 2332, 2549, 2331, 
       3017, 2854, 2330, 2548, 2949, 2329, 2547, 2328, 2546, 2948, 2327, 2545,
        2326, 3016, 2853, 2325, 2544, 2947, 2324, 2543, 2323, 2542, 3039, 
       2638, 2603, 2651},
       VertexColors->None], 
      Line3DBox[{2649, 2575, 2619, 2959, 2863, 2109, 2398, 2110, 1614, 2111, 
       2799, 2960, 2112, 2399, 2113, 2800, 2961, 2114, 2400, 2115, 2895, 2401,
        2116, 2801, 2962, 2117, 2402, 2118, 2802, 2963, 2119, 2403, 2120, 
       2896, 2404, 2121, 2803, 2964, 2122, 2405, 2123, 2804, 2965, 2124, 2406,
        2125, 2897, 2407, 2126, 2805, 2966, 2127, 2408, 2128, 2864, 3038, 
       2620, 2576, 2650},
       VertexColors->None], 
      Line3DBox[{2652, 2343, 3036, 2604, 2765, 2605, 2766, 2344, 2768, 2706, 
       2767, 2707, 3050, 2345, 2558, 2346, 2856, 3019, 2347, 2559, 2348, 2955,
        2560, 2349, 2857, 3020, 2350, 2561, 2351, 2858, 3021, 2352, 2562, 
       2353, 2956, 2563, 2354, 2859, 3022, 2355, 2564, 2356, 2860, 3023, 2357,
        2565, 2358, 3051, 2708, 2709, 2359, 2606, 2607, 3037, 2360, 2653},
       VertexColors->None], 
      Line3DBox[{2673, 2684, 2674, 2636, 2744, 2743, 2301, 2763, 2764, 2762, 
       3004, 2874, 2302, 2534, 2303, 2843, 3005, 2304, 2844, 3006, 2305, 2535,
        2306, 2845, 3007, 2307, 2536, 2308, 2846, 3008, 2309, 2847, 3009, 
       2310, 2537, 2311, 2848, 3010, 2312, 2538, 2313, 2849, 3011, 2314, 2850,
        3012, 2315, 2539, 2316, 2851, 3013, 2317, 2540, 2318, 1808, 2319, 
       2852, 3014, 2320, 2541, 2321, 2875, 3015, 2705, 2322, 2602, 2637, 2676,
        2675},
       VertexColors->None], 
      Line3DBox[{2679, 2680, 2613, 2774, 2614, 2642, 2373, 2612, 2570, 2720, 
       2882, 3054, 2374, 2571, 2568, 2773, 2375, 2091, 2870, 2884, 2376, 2745,
        2719, 2885, 2377, 2772, 2771, 2378, 2092, 2886, 2379, 2093, 2380, 
       2094, 2878, 2887, 2381, 2754, 2658, 2888, 2382, 2746, 2569, 2383, 2615,
        2862, 2889, 2721, 2750, 2384, 2616, 2646, 2647, 2617, 2776, 2784},
       VertexColors->None], Line3DBox[CompressedData["
1:eJwVzc0yAmAYhuG3Fk2yLWwdgmNwAGYcgpk2Uvb5yW9F0a9YkMJZlJ0DMcZw
EsTV4p7nfp535vtWt3Y3S4mI2EA5E1FEPx2xIwv4WIzo6XcLEV35oifR4be2
tnzWE2jxgS3Pr/kNv5JPeqDJ+7aGXNfHePPHpV6XNXzbLvQVvow6X5Ij+xpq
ek7Posq/bFV+Pmf+firiTPb8cyof3f/cTnjXdiyHtpntiD/wX17hHfdDeW/7
sR3wtm1fvtvytgleMcWefVt+4h9o2C9o
       "],
       VertexColors->None], Line3DBox[CompressedData["
1:eJwVzzlSAlEYReGfxAKNwBVY6AbcBQEJSzDQDEjAAdiKWzBxB+KsDM3UiqKI
KYkr8CO4dc69r7tf9d5RrVLNRERZWtsRdalJmouo4mon4jcbMdNXOMWO7YdP
+BLH2LZ98xFv8S+e8AUO8cL2yQf8A9Mtu+8n0rdd4tozc2c9fV8/kFd+bj+U
kv6iF/FG/my7csXfvffs7Ex/4088xUc8tc34A5/itV6QCb+3NfmY3/ER3mLD
lvAuH+JSz8uxu04292/+Hf8B2Ms5RA==
       "],
       VertexColors->None], 
      Line3DBox[{2780, 2660, 2624, 2579, 3056, 2726, 2447, 2725, 2170, 2446, 
       2916, 2169, 2445, 2168, 2971, 2811, 2167, 2444, 2915, 2166, 2443, 2165,
        2442, 2914, 2164, 2441, 2163, 2970, 2810, 2162, 2440, 2913, 2161, 
       2439, 2160, 2438, 2912, 2159, 2437, 2158, 2969, 2809, 2157, 2436, 2911,
        2156, 2435, 2155, 1655, 2154, 2434, 2153, 2968, 2808, 2152, 2433, 
       2910, 2151, 2432, 2150, 2967, 2807, 2149, 2431, 2689, 2690, 3032, 2806,
        2623, 2578, 2787},
       VertexColors->None], 
      Line3DBox[{2781, 2586, 2627, 2587, 2215, 2821, 2982, 2216, 2477, 2217, 
       2822, 2983, 2218, 2478, 2219, 2927, 2479, 2220, 2823, 2984, 2221, 2480,
        2222, 2824, 2985, 2223, 2481, 2224, 3033, 2588, 2628, 2589, 2789},
       VertexColors->None], 
      Line3DBox[{2782, 2590, 2629, 2591, 3034, 2225, 2482, 2226, 2928, 2483, 
       2227, 2484, 2228, 2929, 2485, 2229, 2825, 2986, 2230, 2486, 2231, 2930,
        2487, 2232, 2488, 2233, 2931, 2489, 2234, 2592, 2630, 2593, 2790},
       VertexColors->None], 
      Line3DBox[{2783, 2598, 2634, 2599, 2742, 3049, 2277, 2761, 2703, 2760, 
       2704, 2278, 2836, 2997, 2279, 2521, 2280, 2942, 2522, 2281, 2837, 2998,
        2282, 2523, 2283, 2838, 2999, 2284, 2524, 2285, 2943, 2525, 2286, 
       2839, 3000, 2287, 2526, 2288, 2840, 3001, 2289, 2527, 2290, 2944, 2528,
        2291, 2841, 3002, 2292, 2529, 2293, 1781, 2294, 2530, 2295, 2945, 
       2531, 2296, 2842, 3003, 2297, 2532, 2298, 2946, 2533, 2299, 2738, 2739,
        2300, 3035, 2600, 2635, 2601, 2791},
       VertexColors->None], 
      Line3DBox[{2786, 2775, 2640, 2655, 2654, 2361, 2711, 2712, 2710, 3024, 
       2868, 2362, 2608, 2609, 2363, 2871, 3025, 2677, 2364, 2716, 3026, 2876,
        2365, 2566, 2366, 2861, 3027, 2367, 2567, 2368, 2877, 3028, 2717, 
       2369, 2678, 3029, 2872, 2370, 2610, 2611, 2371, 2869, 3052, 2713, 2715,
        2714, 2372, 2656, 2657, 2641, 2777, 2793},
       VertexColors->None]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1905, 2048, 1581, 1294, 2064, 2065, 2063, 1583, 2885, 1299, 
       1589, 1306, 2957, 1596, 1315, 1606, 1327, 2962, 1618, 1339, 1630, 2902,
        1351, 1643, 1365, 2969, 1657, 1379, 1671, 1393, 1984, 3046, 1685, 
       1408, 1985, 1986, 2090},
       VertexColors->None], 
      Line3DBox[{1907, 1851, 2018, 2016, 2017, 2887, 1301, 1591, 1308, 1598, 
       2893, 1317, 1608, 1329, 1620, 2896, 1341, 1632, 2904, 1353, 1645, 1367,
        1659, 2913, 1381, 1673, 1395, 1987, 3047, 1988, 1989, 1990, 1991, 
       2078},
       VertexColors->None], 
      Line3DBox[{1929, 1901, 1578, 1846, 2009, 3026, 1574, 1842, 1567, 1835, 
       3020, 1557, 1825, 1547, 1815, 3017, 1535, 1803, 3009, 1522, 1790, 1509,
        1777, 3000, 1495, 1763, 1480, 1751, 3058, 2052, 2054, 2053, 1467, 
       1739, 2051, 2079},
       VertexColors->None], 
      Line3DBox[{1931, 1904, 2012, 2011, 2010, 3028, 1576, 1844, 1569, 2956, 
       1837, 1559, 1827, 1549, 2951, 1817, 1537, 1805, 3011, 1524, 1792, 1511,
        2944, 1779, 1497, 1765, 1482, 2014, 3053, 2013, 2015, 1881, 2080},
       VertexColors->None], 
      Line3DBox[{1932, 1322, 2959, 1862, 1613, 1334, 1979, 1625, 2898, 1346, 
       1638, 1360, 2967, 1652, 1374, 1666, 1388, 2972, 1680, 1403, 1692, 2918,
        1416, 1702, 1428, 2983, 1713, 1439, 1724, 1450, 2987, 1735, 1462, 
       1746, 2933, 1475, 1758, 1490, 2997, 1772, 1504, 2057, 1785, 1517, 3004,
        1997, 1798, 1530, 1889, 1810, 3039, 1542, 1945},
       VertexColors->None], 
      Line3DBox[{1935, 1934, 1895, 3037, 1894, 1563, 1831, 1553, 1821, 1541, 
       1809, 3014, 1528, 1796, 1515, 1783, 3003, 1501, 1769, 1486, 2940, 1755,
        1471, 1743, 2994, 1458, 1731, 1446, 1720, 2986, 1435, 1709, 1424, 
       2925, 1699, 1412, 1689, 2979, 1399, 1677, 1385, 1663, 2971, 1371, 1649,
        1357, 2908, 1636, 1345, 1624, 2966, 1333, 1612, 1321, 1601, 3030, 
       1910, 1860, 1937},
       VertexColors->None], 
      Line3DBox[{1936, 1856, 1861, 3031, 1857, 1311, 1602, 1323, 1614, 1335, 
       1626, 2899, 1347, 1639, 1361, 1653, 2910, 1375, 1667, 1389, 2973, 1681,
        1404, 1693, 2919, 1417, 1703, 1429, 1714, 2927, 1440, 1725, 1451, 
       2988, 1736, 1463, 1747, 2934, 1476, 1759, 1491, 1773, 2942, 1505, 1786,
        1518, 3005, 1799, 1531, 1811, 2947, 1543, 2058, 2059, 2060, 1892, 
       3036, 1924, 1893, 1947},
       VertexColors->None], 
      Line3DBox[{1938, 1911, 3038, 1863, 1864, 2028, 2026, 2027, 2909, 1358, 
       1650, 1372, 1664, 2916, 1386, 1678, 1400, 2980, 1690, 1413, 1700, 2926,
        1425, 1710, 1436, 1721, 2930, 1447, 1732, 1459, 2995, 1744, 1472, 
       1756, 2941, 1487, 1770, 1502, 1784, 2946, 1516, 1797, 1529, 3015, 1998,
        1999, 2000, 1890, 1891, 2954, 1923, 1946},
       VertexColors->None], 
      Line3DBox[{1954, 1955, 1858, 1586, 1303, 1978, 3044, 1593, 1312, 1603, 
       1324, 2960, 1615, 1336, 1627, 1348, 1640, 1362, 2968, 1654, 1376, 1668,
        1390, 2974, 1682, 1405, 2981, 1694, 1418, 1704, 1430, 2984, 1715, 
       1441, 1726, 1452, 2989, 1737, 1464, 2996, 1748, 1477, 1760, 1492, 2998,
        1774, 1506, 1787, 1519, 3006, 1800, 1532, 3016, 1812, 1544, 2061, 
       1822, 1554, 2001, 3050, 1832, 1564, 1896, 1925, 1974, 1975, 2068, 2083},
       VertexColors->None], 
      Line3DBox[{1956, 1957, 1909, 1859, 2025, 2023, 3055, 2024, 1320, 1611, 
       1332, 1623, 2897, 1344, 1635, 2907, 1356, 1648, 1370, 1662, 2915, 1384,
        1676, 1398, 1688, 2917, 1411, 1698, 2924, 1423, 1708, 1434, 1719, 
       2929, 1445, 1730, 1457, 1742, 2932, 1470, 1754, 2939, 1485, 1768, 1500,
        1782, 2945, 1514, 1795, 1527, 1808, 1540, 1820, 2953, 1552, 1830, 
       1562, 2002, 3051, 2003, 2004, 1897, 1926, 1963, 1976, 1962},
       VertexColors->None], Line3DBox[CompressedData["
1:eJwVzbFLQlEUgPHTkEVtEUGLWCBBQyA41ZouBqVZTSG45ZCNDkVTLTk6VuBe
CY1Obc4uQmv0B5jZWPR7w8f3nXPffXet3qycz0TEHl7nIrp4xD0esLsYsTQb
kU9FrPIOl+zWdUFvcZn37bb1qT7SRd3QVW5xza6ub/UFd/iaJ974xpnztvlA
l3GJCt7tD/kKxzjBi+969lP9g7555H8tu4H+0CMeJ2/Yfepf/cVv5gV3/vQK
3ySzs4xe5k2+s0vrnM7y0Pykn5O30cPGfMQ/jsUo9w==
       "],
       VertexColors->None], Line3DBox[CompressedData["
1:eJwVzT9LglEcR/GfQSkED04RQYMhQRCCQeCkqzVFJNhYQ0ODLY0urkFNIdFU
tLWkREs0NDRYiZsQvgDxBdTYn0/D5ZzzfS7Pze0fbTdSEbHl3KcjCjMR2emI
H/7rfDtFW3U2Ys5e4ot4pit8mW/gGp7barzM93BXb/IGr+OlbvIDfoLHeG1L
ZyLauqV73rvih/ZTvaNv9QWv8ZH9Qd/oun7md7xjf9V9/aQT//zg73yMI3x0
55NPeMrdL3yxJXzK/sYXeMLzOI8DW4Ev8XVcwaGtw0vOqu7+f/feH6ksKhA=

       "],
       VertexColors->None], 
      Line3DBox[{1972, 1973, 1921, 2070, 1922, 1942, 1941, 1503, 1771, 1996, 
       1995, 2044, 3049, 2043, 1489, 1757, 1884, 1474, 1745, 3041, 1952, 1461,
        1734, 3048, 1994, 1449, 1723, 2056, 1438, 1712, 2982, 1427, 1701, 
       1415, 1691, 3045, 1983, 1402, 1679, 3040, 1951, 1387, 1665, 1867, 1373,
        1651, 3032, 1980, 1982, 1981, 1359, 1637, 1933, 1865, 2071, 2077},
       VertexColors->None], 
      Line3DBox[{2073, 1871, 1915, 1870, 2976, 1394, 1672, 1380, 2912, 1658, 
       1366, 1644, 1352, 2903, 1631, 1340, 1619, 2963, 1328, 1607, 1316, 2892,
        1597, 1307, 1590, 1300, 2886, 1584, 1295, 1850, 1906, 1849, 2084},
       VertexColors->None], 
      Line3DBox[{2074, 1900, 1928, 1899, 3052, 2008, 2007, 2006, 1571, 1839, 
       3023, 1561, 1829, 1551, 2952, 1819, 1539, 1807, 3013, 1526, 1794, 1513,
        1781, 1499, 1767, 1484, 2938, 1753, 1469, 1741, 2993, 1456, 1729, 
       1444, 2928, 1718, 1433, 1707, 1422, 2923, 1697, 1410, 1687, 2978, 1397,
        1675, 1383, 2914, 1661, 1369, 1647, 1355, 2906, 1634, 1343, 1622, 
       2965, 1331, 1610, 1319, 2894, 1600, 1310, 2021, 2020, 2022, 2889, 1855,
        1908, 1854, 2085},
       VertexColors->None], 
      Line3DBox[{2075, 1903, 1930, 1902, 1579, 1847, 3027, 1575, 1843, 1568, 
       1836, 3021, 1558, 1826, 1548, 2950, 1816, 1536, 1804, 3010, 1523, 1791,
        1510, 1778, 3001, 1496, 1764, 1481, 2937, 1883, 1918, 1882, 2086},
       VertexColors->None], 
      Line3DBox[{2076, 1852, 1853, 2049, 2050, 3054, 1297, 2067, 2019, 2066, 
       1587, 1304, 1594, 2890, 1313, 1604, 1325, 2961, 1616, 1337, 1628, 2900,
        1349, 1641, 1363, 1655, 1377, 1669, 1391, 2975, 1683, 1406, 1695, 
       2920, 1419, 1705, 1431, 2985, 1716, 1442, 1727, 1453, 2990, 1738, 1465,
        1749, 2935, 1478, 1761, 1493, 2999, 1775, 1507, 1788, 1520, 3007, 
       1801, 1533, 1813, 2948, 1545, 1823, 1555, 3019, 1833, 1565, 2005, 1840,
        1572, 3024, 1898, 1927, 1977, 2088},
       VertexColors->None], 
      Line3DBox[{2081, 2069, 1888, 1944, 1943, 1920, 2041, 2042, 2040, 3035, 
       1887, 1919, 1886, 1885, 1488, 1961, 3043, 1960, 1473, 2039, 3059, 2038,
        1460, 1733, 1448, 2931, 1722, 1437, 1711, 1426, 2033, 3057, 2032, 
       1414, 1959, 3042, 1958, 1401, 1869, 1868, 1914, 1866, 3056, 2029, 2031,
        2030, 1913, 1939, 1940, 1912, 2072, 2089},
       VertexColors->None]}, {}, {}}},
   VertexColors->CompressedData["
1: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
PbCX0QpMEYhQ3nvtozWJPLx4NHjxreU1ULnxrrIqshjdX5xsfuDyGCOHdOzR
mfiJXt8+i9XVxYiVPhvYK0kKq5mJHwp83qK7gFOfXieG1bvGOR+f1sLkXGnr
dNKXJw7y7/1mOgvL54sTtZLlP/cVfW4n+txu9Lkz6fo96PpT/mR9eXEwHHbt
wqCNVZj/1G3foFEl8Ft3TLT37FO58ZGXX4W8v+UxhubRnOZxNc3XeZovkz/J
V2eKkycUJz0pTqpnfOlWHspg6pqwwmeaYly8EdOuR49/Hbd6FLfy6kVeXcjT
z3+1TuXp/7Ta5yvSvnAosqs7v5p89yQN0+381fJ9hzy+ksdL00+X7D9F3uPH
sT5Df8yRwGHlqbNug/7Bn/GUP4Mof8rjyd/+q1Mb//Wb59dTnh9Lef43D+tT
Hl5AeVgen//uI/fa9BF5fvN3H+FoH1lH+4hU3XP+8GscRrxet/acNrluk7gq
p98/+ibbpm9+aMyv1SZ9s277+U9HSN98wbks7vlv9M3pZqnCnqRvWuyYZv+A
9M2uH97nB5G+OZ/2Tcs2ffPgVO1ByntZvDmkp5jWLEGVqa9rzBUh4neYjVts
ycJpiPioykkJSufcUd4RIMS2mNwRT/uwUD4hvps6XoL7VtPy1FoE0Nf48Fn7
G4O3af4LszkxZjgMWPJitwAtLd+7zOUxOG41sJdRjBhzXw4bka0swN3lOsO3
JzAoHj/0aaiNGHfSVt+MXc/HI/3Mc406DAyn7/cNUBWh6c79mudzKnB659Iz
2qbVuHvjasdp74qh09h9f+Vp4neqH461X1cFu/2d+s9OFiN49u7rQ1+L0N9Y
MLphIoP8wu+Jf+ynWRr6HorwKoGdsuLiUaRfdDBN/BAwgcWZUXP2ZJTxcWa8
RYg9y+FV762rpUSH3p75lgtSFIDlZZ9e/JnD6iye1YDOLL7EeKgdXiyA5kBD
5X4EV6XdvcY//sqg64KTrapHBdjZ6XrzDaIbM9WCv8wWMdDwsmtck0P0rXTs
gZSPHE43DJykE82AX/Jk94wfApyaua7/iyQO07aMO/vRiEFDycqWg9rEj1T3
jloTS/CwLyZl4QwpGOVmvQFBQrn3D7GeOcV7A4vw5jS14SUStOtw+trSBCGS
65wjDIXEd2zIsA7Yy6DlCi/lp5Lw7+8T3OZ95ncboKNJfIV9vzqNlWskKA4W
fz0xTYir650TMjvUweCmwxo7kk+Td926p1bJ/97pdwo2equw2KrUYdIUdQmc
cgZ0npouwMMtlwKf/+KguP5X6at64rM29Li4/eo/4llG49mFxjPLb9PGbKJ7
PiYsvuP9VIxd4+b362suwKW1055EfuUQ0Uf/5MR2LApvJ71pv1V+vsqXJUyc
RHxNZI+ZWkcIb12tdD25jqyTZzSgtVMyg5sWOv7b54vR1F4xedWOf+DhNcVD
MsXDaY3uGpsIP99tlqqvG8ai9ogk8E4LH59PlWi6BzNwrVccvb0b4fOocz/i
O/Dl4s1v77bzORpSWH5T2GxA6vlzbEFRg+Nz9NwgUP3+nMPcojPXdL1ZVH3p
922yHh/aFM95FM+mFM/7D5Ud9SmoRnPFmBs1ecXI/DXP6GbzY9yndTGd1sU1
WhfrF/bxLp9WiSClmp5Tt4uRoJxQXV0jRjitrxRaX+q0vrzo/cH0/ov0/gD6
3Cb63Fv0uYfpdznQ7+ob97fvyqN1PYLW9U9a17+/dw793mr6vW3j+Y7GUx5v
yMvL7/wm0fx+pfn92YaX5lFekocTeTj8zXvVbXhPHj5/14UbrYu1tC5+82oH
yqsPKK/Kqxd5ddqWt8sob8ur39+8EUF5Q4HyxiHaFyrb9IVblE/mtuETeXx1
L2T0tfrHLNR19t4O3i/FpJzhk4sPCOEb3Mtp/0sW/n6rNb0DpdjUWcNq4z4h
9p6b3XtqMId+JavOJX+VIVJnRG2RgRB3z29ckXicw/WNe8Y+Z2XY+spaMHGo
EIPzj3VreMehOSswVF+XRUyE34FNugJcO/XNo5b091Yjy/lTR7No7LfYqJjl
Y+XWI1PfuzEYPU7hkfJjEQK+rB+WfJSHwr4VW8cdYFDz+eaPGZwIO3STPuQ9
5UH0xDbv6GEGpRqpEVGfRNikJN0XVEHu59YGrSh+A/VYzfLs9SWYszt0zKJ1
+bCytt+8/S2HU1VaR2KmsXg82NmkPv2vP3fbuL3VvQJJna8JztDoIMZrRjj3
aRMPN0KWX44oYPEhKr2fwgkpnoe+OWbpK0SSw9t9WYM5FE+0l80fI8P8R29N
JtoLcbg0Cm6jOSxPPuzUOJ34fa1d7Mb5BCd9+rrN3U/879g5+Q/LZVAcby2Q
GBE9sO0gP+EC8Ufm43llJlIkFX08sJ7onOSMH+L99zm4JF7bttWSwbBOGy6Y
E52jrGr6epYji1H3GhN+PpZgydeGnyFJQhjr2b2vJvhvMWEvWBO+8qtdP6Db
NwEcur9vaHrEQFct1GfgLjF+hjjbltzjI+247Vt+FIO0xuJR60aIURd/LOvK
eL7cOCwRbqib+obDsnbjRy+ayWJPRFmyyhU+7ilsrE0n8V+W1MGw3uKPuju5
q+4+H7GmY53nER1eGX/Kum4ii42zqraOe8WHmJ3vFkb8RW+XdUHBIP7CbtIE
50d8HBEFTLE8wOLdTlVlv/ZSvGu4sCrzkhD6LkYF1b4M7Ncqj94sE+Hkl3Yr
2Ec8udfl4WTevhrjqMd8WMe5zP92X4RCYWHs+pEMHOh1W3r9Cb0uD1fy8PlX
4yMvDm3j5krjdpTGp75NfG7ZNu7nyjlM93pt9Wg7gzpZRra0g/Dv+U2n+X1H
8yuvTuXhpIt//YOXpC87nXDNuEr8hKPrhK6dOgrk8oA8HMrD81/lK3n1eFx9
7dyqCuIX0k4e8LssRfkVDaus3fLr9K/ynrz6PXZuUL/gAA5TZg0cYVUvQzcr
nxBHQyEaB69U7J3LYqV1yzAnHykKAmdpaB8kfsdipuvDmyxurkkJ7GhP/M6l
ltUWAfLfX97605QH3u8RSvRS9Fvd2hYZ1Gaqdg3QJzpT1eLnMXcW3113f3op
kqAkYH2/6bFCxA7VZwfvYhEneNoxv0GCvq/eBlVcE6JUNXvHD+LTXGafVQ93
EsM6bNmnNWf4WOTbcn5yGNHzbjO3fO0jRtes7QfL+/BR9Ov6rVKCz/c3Zd0P
Ex+5WfZiWzfir1d+u+u47BmDcVnnrbjDYjgUi54aENz+xqd1G3x+iNiUbfae
w56gQ+HxvVlo35y26OcQAW79+GRusJ+Bp80efiup6+XT5k4T5fJwf3CG3i2C
uydLT4YkPBPB4bL0+fsPMqzJyK76/sd5k6s370xUEuPW1n5cJ4lU7jru9P73
9P4r9P5SxfLHK2OJfwx0f1hM8tCiuit8dn+e3O9l7l6K7Unik2Ix3uoyiU+f
tWHJVn3+OW5qNG7ciMszv9xjoLqcd3ydoxgLvcz414L4uDnypWhpCoNFwtOe
XvZi7Hz7bkTJPv7f87KR5sWG5kUe/6+t6btw91oWFTfs1hYVSDD7xNhBQ24K
EScn70UznDbdIbp98dRgqQfRdyfn6P/Y810gtx/tXzWpYPMVFkO1109cByku
RLPphaeFuPPS8lPOXQ5KpTu6VU9gMMVk67qyXkLEHGJytfoR/+syoPj8ABlO
mt24F7xMfn8MvH62uRfx1+zB+zvjHWSYfSnBWWO2EJZ4/fP1GBbDVhdWumyU
IP1CZfth84RIWTri6b4RLCbWnDZ7slyC3jZTHDXNhFDr0dtfZyyLmdudFiq7
SnDlslPhGLK+ut2+02qpDNY2a16asUKM6cOdG1OOEj6/Ueq6KpMBw1N3Ut8s
RuOJHUfXX+Vj9bGAjDSC5/GlWc/v+otRPSZ24r7XfIyVhvTpfpBBz+5rxs99
L8KG3U8HnS7kIWNhdmjeKQaRpv06CFWJH3HYbheswEfPTsyURZEM1Jb4pPUZ
KsYF/rV5PcfwkeRT1+vgagY+dxr6R1wWYYVVVXjOLB7O9VQKCfVgENphgF72
cxEaV/0YtSaYh+ZRSakR+xi8H+jedFMsgvGc7FDrLB6GbEhu/pomherG+Kt+
Fm8haJ0fEN6tCK+1hJ5jJBIcH967+s1cAZCpXJU7Lx/H+gpi/LwlSFDJHuGm
wkPNWmXjOVPy4N39Q71FAIvVR/dHr17DwjSNf+BjTRle7fhpqV4jg9YaoYXS
IQbSgg9WXV8V41tfV63CFinKbGOikjQYEM9XvLRdMXLilNL5HaQ4FdN0+dY1
GSq6RVqeNyxFcvvqGJGJBD25sHbRNjIEG0zvadRahk7zSi+26IuQkS2LTVkp
RaM5G+oQSeqcrnOGrvOcrnOPrqNF1zlM1+lO18mi6wjpOv+pOJvQvPeieXdp
k/comvc6OXm/SPPeFofWFIdiikO2DQ4dKQ4nUBzWUhyuoHw7lvLtQsq3haH7
YVfG4ES3Q9z1KDFaGj2mpDbzsWF7+KclHIdRWwzyhxmwGJGmH9dLVfB3Hvah
PNyH8nDkr36pUR85PBb0NR7Rk8WFdmqbK80Ef6/H4bQeM/7Netx/ITP85HQW
a+KqIktOS+ARsqHHacIzHV5KT96bweLRe4/RXy9I4GWiP2jTdSHcT24Sb1Ks
w4OSpPnWNUSn7By95NtjATqOv8MYd6xDwv72Gj0rGNwP2eynUiuA+EL6ObNO
dZjTpTTRqpRB7zmNWY9ZAVqMcm1jd7Po6rUu4MRnCbQ1w1WGET4cuWvmxM3+
LPR6lFv8UJVi5Y19Qa6RQuw0r9/+gVzfIPk16l0XKfzqR+4yJtcn/Lq//XAV
hwG7dmamEVw8zM3s6a1I3v/O2EMPizio8pU72W1msGckP9BMRYjM+tO25uT6
4w6V2ks2Ed35zjDGi1xvuaK/9KaERccLr12rMqSIm+HX3d9TiDW3boxRr2Nx
IPZVl5w8KUYGFsXqbBOihu85f4iUhYets9+D+1KMLRsfPpfcP+HYsvW+HhwM
5qm+XZ8pw6igMlVdE9LffUpO9NvC4YZllymHUmS4MdN/+3FTIRYuUN3Sgdyf
cXX70yMPZIhRGnBoEbn/r+JqH+WNNZQ3plDeKKW8oUN54z3ljb/6vX/1u/4s
vwPa5PfP8tilTR5/49aR4tb9L+K235/gdrHUO35w+zqs7Ftdnyom/d/71rz9
DwS4V4Fd3mSdY2e783XJOuvXVv5a90TwT3U9/E/q+ukHsyFFf/w9vdXHDUbp
sXD7EH1JRVOAr+tL7s4i98/dsWDaTnJ/xxJJ3HFDAar2hSTpEJ+i13TxITuV
haHugYN3s/i4tDV5o4DoIk2HLiHbiS5yrYDORKKLNH7Z6IcQf/GodMXSnoQn
zJL7+h+X8ZGiYTniM4/oPfsXvpaLWBzaO2DftmN8dLLX9nxGfNOaXpoHa+1Y
rH3qPFsxho+uOQWaJsQ3NYYEb3WwZLFpmNS8QxofB75fVyvVleDijjmtQbJy
TFijlWmskoe5HXsYn3othu+8AS59P5bh7pJUXvKbXLie0rDOJ7y8NbNlR+OB
EmDp7A2lm3NxkK5zha5jRtdZQNfxp+uk0nW20HV203Wm0nWG0v6rRfuvlPbf
Ytp/Q2n/taf99z8Vh381L5v+JC9/FQ9/FZ82k0dXcxOInvwwRCF4hwRTe09u
5+4sJDzSo0cL8Zsbhg8NMCJ+U//HvPZS4jcfsdvr9wZJEW62ZKY54Q+FhaPP
LG0qxp0HO+9zuxi8PIR+LjwRGH8myDeOhxdXNIyjSf+tbWDtzpH82BUei+lP
+q/06ncrvz/OAQzocDVkjRgeOv0PXD/Nh5WC48X1ZSwOLrJ99+2CFPsVZg8R
egsx/QrrN6qIBU4vdkeoFNMccwxy9gih/+DKgheXOFgV3Pzp3J1ByM/sz1b9
id9wWXzKj/ivy6EdwhN/yqD/yspgGfFfe+Iz1Tp7M2je2kFWIhBhjnDcgbBE
Hu7dqV6xfC8Dpe+bPvyoESHv4PIed9N5uPSqvZ7KBgbJ3If8smQRrmWrdp7g
wsPaC3FvV3gx8I0tNQ8tJDpTumrJ2zAeCmh8Iml83i34W3wCB+k/UPnCYnTE
J0P1Cimenat4E7FZPs8b8EIXKAazWOU24vI0PSlylVwDxpyX36fk9dPZfca8
iFaqgzDv1YrPlQxWuFz+1eeVfP1gmuup1fiOg4lF03M9XRbvvQJHeeoKcJLq
0jSqS0VUl1rmsoetzzDY3v9HlqWGGJeCa4rSVfhwejzO5/JpBl1HZxy611WM
PS+c76Up8uXG80vJ1t7hhMfHH1t4riJThEGqN02P7+FBcuHRm8/5IoSVr7i+
MkaKqEfOXypG8rE0wGjJEmsxujNT7r6vlKLXG3Hq6148fBzeXy/fj0P8uTMr
ZwplWMrv/DV/hBBm+V+043ZyCD0fuKn6iQwzYh2556OFGLZi8MSTLOHhhcO+
f/vj73p+HBjh90uA8+8iP52qJP5oonHF1wMMngc4GjGk7+xJC9xuOlAG56xH
FRBWo2lTXJ+NviXoO3nyvKkHpNg3unnsoc+V6Detd+ad46/gzos7eroji+VN
2zdG9iU6ZY+l0pH6Uiz0dr/j9/qP/rtmv7sPg6LYXmlBt4pRsTzjWEWZFMcz
VJduUmAg0eMcE5cUQz1IrKq7mIFHWq/2xidEOBw/kH05mIdrI3177l/KoLzL
BYerISLknw0eWGjKg9I5NI9zZjAi4vJctVsiBK48bjxuPQ85rW9LndcxqA/J
mTYkQYRzB01Xh6/i4cC6aLXVngweKxtlbnshwp6EsvtTQ3nwqlCy2+nHYGF6
CdrVi3DUa0798hc8LPwwpO+cQAaHyjd0PNFBjOOjFoWHfOWhY2tDwYIrBJfd
jHeljxZjAN6tipvKxyvvDjOn3SK++1iGNH+uGJpxOrbHPPmIrPJY3lWBxYMz
ASrMDzFKY43jys8K4NRr4tWTBJd7jIt66hlKsP7Kkis3awTg1kcNWjaAhcHr
7HMhFhLY7t0d9bCLECXPQoZP78Ti2zZm6JWuEhQfrOlZcUeA63GrVN0Ijnt+
6WOxbYoELifTn+QoC8Eo7Qq4QPpx/myn+nezJNAfUd78mfCGB83XCpovV5qv
7bcnpvAGsVBeE7Nv+nCip3ad9L2oVwaprd8SJcJvG7zT3t6oIvWl6e4/T6NU
7u+VhKY+aTFNLEaWTVjdQSAFl5ksq9kkRKy+vfWJjyxWynxaXxUSf5Q9UnR5
qxDH3Ls7fj3DokAp9RZPX4qLRb+c5ocR3B45EqtD9JJ3l83xa4leSjq4MDOI
6KVHaRXBeuS6/4KzYzzI9dgf70YEkOv2FG99KN7KKd4+fmxWf+jKYGqfL59W
FDDw1J1lkfiiBIeaLLI+d+Ywy6nv6dmtUphaq6zIdBLi0/kFbwe245Bs89XG
ul6K9rL4mUM3CJH/zf+iXxSL82Pnzuo8UYrVD7ak6p4h+srlwftmwmMHhk01
UxkkxbyO5mq55P379Cn90bMfh20JL1JDBsigPnj2tzPLhNDRuPFIexKHB+h2
JslBhmcpnQerzxZCYazLDfs4Dmra8772/ON3zDdUfTf3EeKHc1pJ/TUWglEb
dX9aSjHrzpleN0+Ren/8hEMKhwX3PYbbmDA4aZDXqUlTCK+q9O5eLYQHRjrb
639msLp2q6RTsADTf7TXedOeRfaiD1ua2klQePvhGc3LAuytSPPN/84hYvOp
Kat/MPBL8Pymt0+AkVfEu+xLGKxLtWjvFSFG+3bay85/4qPJZkh+D9LHLXuZ
MG7EV+04dvfVSxEfXXJExQZhDJas7jbzSR8xtLc9X36wDx9xbrO9ggh+Hs3Y
5+pC+uMsp50LXrfycORyp772Yg4hHqXe28axRE+59LOtIvVy16dg8S4ZVl5q
2PDhZg0SrfgRzxXKMP+H33QfFwn8Kgfc2vq6ApfUrnmpjc3DRwslT/cXUqx7
Z3FlaosMGw752eVsKUZ+1HhV7nE1MswOPHixRILrl/zKkkur8fhb1aK9RM+Y
Hp/Z7/Q0gkfXHwaGGXy514fMXmaRbiHApvRW59QyETR2r4zvli5DGV0/m64f
SNe/RN/fib7/Pfr+8TQOuTQOs2kc2sZzJ42nvPj/zm8Iza8jzW+V15GnRkT/
b0942/oyQoK5/J5DvaKFcJ48UNaP9M3PtvuuB5G+Gbmi38qvjEAu3vYI032V
clmof1p+Y6KPFPbPLB7qHRQibd5j86FEb/T77hup8vOP3xtqrvQjeqNsz8Tj
i7JY2Jw/cznKQ4rU7OUa5oeF6Dy3o1UE+a7JYyZ1a0f0nqnEMCqb6L1XO/xn
GQUzuKzjoCtREyP8yJnB95T5MC6YX/R9BYO801vODbwgwmAH3Xn7LHmY82lB
bfYXDrdNR02e2YHFuMviQxqOArhlvdwnIfjZ5uI7uZ7E7c0ps2KvWj7y2KOa
YmcWZUbv12oVSzDFOWrqxQQh2omtF/BJ/bpMbfCJI/XbrXPuja/BQrzc3Ho0
8BaHhT6RBxcbM3glm+UxQluIW0F9bxoTfnDR+/RY9JP47pbLWpprhahvbBSF
dedwf6o/u6irDMkLz52ctVoIG7MAQch0Dh43Fjt+cJXB0D/nlIOtEIcuOKn/
ms0h7zlz0NFbBofKux0CrYS4dylN/eMBDjbXfiVl8WVoPSaZOsyI8MD7cMMO
hE9e/dIqtyG6qMzkwPTRRBeZmItDh5CSX1mf69liz0A5upznoUZ8ZWpjQJaA
g+cuz1PP9jCYMbXLdiPC/8umtnuk7sDCZ36Mu8pdCfzbTduVmSKEoG5vS992
dUgOH8efmEv6Hq9XjPQT4YF8zfPHfxE8Jd59FP1NjJCtl1MXnCa4Ug9rERA/
Hvgq+Farvxj3Np2d+eM1Hx5VrmELiT4vY55eXEf0edgyvR+ZRJ8XnvKIWpjC
QK9LyXtnezFsNEQzH+zjo+BIk47wGgPByBfvjMeLoWCxy4Cx42PWxLEqhkSf
yCSX168zZNF/U7ziuPYCtFSJG0VSDtXpDZpHRrKYq7vYdX4DH59m6vkn1HCY
1P1ga8xkFqrHPrR3f07q5ZrV3VNExyxQnfu2Wx3RvbYVQ7o/4yEDMUNy9zOo
2rN19yJWhJC4xZmDnvCwaZZCl8qXYjRMvz7pjKwMHeaXfjIU5oKXk/MlMkqE
u03rJnYJkaLJbFHmnhN8jO13auILwg+r+y3ac9+CheaExDFeD/hy15f3PtlM
JneFrPNzxtwlwwnPjKqbZjf1Ph8X7rwq2WcmxpEX+ke8u5diSHwfxSL/XNTS
98mg71NF32d7v2N7pceJXlpz5c2YVhFS1Y6dHlzHQwvlw42UD2dRPiybsPxE
tNEfOsB2qZuVDKP7Drjo0q1cbjzl5astb0dS3r7/q2GjHtE/PxJtmg8Q/TPm
YBY0POXn9zeugiiu0iiu9rXpRwdpP0rrajSf+8ZhGf9WedpPBhxP51vcToFc
nHfYETDabS+LDE+XdO8fEgSdnxm348o/6sWD1stMWi9RPj2cbirXwbec/+Qi
0Qll+TJtXoPgn+qxlNbjnhNPEqeUs5DYVJ4/HCmFYK5H5W5v+bwhjx/k8YDr
S0G2IfHXmz0O+2f4M9BZ1mib2V4ol+dDb21a4buARWKv9gdjEiRQ0nBXfnFX
Pv/L+97+zbsWGqiziBAcNInSlcDVJ27vuSIBXI6N3llA9Opn82meMUSvns25
v/RUrQBzHFWs1v7k8NquMfFCA4PFL12TWsP+OV8szVep35MNbi8ZXHLT25cW
KMa31OLqLgQ/emPLd04ifs1kzPYLk3qR/ltdOL3RVAAvlegnqh84vPlayW7T
ZhGyrzCr90gBtOL2eL8guBrX6DPo+mAWdvc/xf3qIECGlmfr3njy3NjjwzSK
WTDF+YyBMQ/x5noXh26uRe/pjvldHIpx7VCLYsuiPLywtzXOzRHhdhef4Ich
xVBOu/R85LRcFNB66U/rxZbWy1fcsr2/vBavY9/ePagkRbzC3Qkua94gja6v
SdcPpesX0fUf0vU70fXbTf3bOmV0nWC6zmKqcwKpzrlCdY475SsF67/xVSfK
V7/jeVlOPMfSeK76k3jK1Ydt+kIo7QsDKE4uUJxskoOTc3+CE3m43Ujxv6kN
/k2+a/aouEl4pPTEAmN7KfqMnBU1PkB+vcvjpTDKt7so3+pTvnXO9h0XdZ0F
333Kk/e2Uqg2dk7YGSTE6iQrE/55DtIFtrHXlBkM6t3SxXmgfP2gGtTF8kM4
AzX39XimJ0aJfRWXZMCXq1vGLItkBoo4PK5zsE2ewEKsfsnNvowPg7M9k7bx
OFxt2FV8bTGLCfensNcO81G+d5hvgSEPUduc7OydRbA60BB87w75f/T6FXp9
HL0uT3fJe66895cXH3k6UF7cWv10jBRIfU50tbn94KwUtXaa15z2kPzGrT9t
5M+h8UDIuSM1MnwNsvC2GC7Em1R/yzf1HLZ39s+43ofFoPnjgqwMBHD37Tt3
H9EJwVUzZoUbE15U2ydc/p4Pa8OCloYTpH+lfan2bCfGBIeH/b++58ntm33p
76d6t/md4NPaqOhbpF9rWugO70D69e6MT5ExpF/L6+Pdm3vPPE2u95+wXn05
uT74zob3D4iP6LT8XdPS9XzcuzBz22J+CcwufC/rO+A5dF/Fp9TW87E/e6fY
/mkJlJ6maHYQPgMv8dgoF7LOwIKRK56TdU45MaePp/Plvo88fSIvDvLiJk93
yYu/PB14dIBFdN1SwuNvesyyyZBg5duFq7xuC5Ggaq4z7ReHV93yf7ZkMtjT
rJhj/EUA7rF2RvuzLF6L7vqfN5Si82jR/fXnhJjh7Kw0/BHRvZ0G58bPZQjv
ejmZqwvx4OyZhO5qHHSP3PbroCxD9bQWDfv/j9/B7Qqt0+gzg/id9UOfTvGU
4fvZ5V3mWMtfJ7D+RoiZNgc2wpOL05Lh0Z4JvNwVf339GPOSoZ/BwWqey+pw
Rxm0Vva3rp4h/Pv3vmrzvfJ8irw4jLWdsHlRGvEXN7iX4VMYPH8V4pHQU/hP
8V/1J/FfvVk26dhT4v/T/JhfB4jO77Qz4WA+H4u4E441V4g/VPbpWD9GjJWb
x4iTpxEfFznl1s5IBi+YWyNdhoqREu2RFjqGj2ivVttaoid5rYpbexE9Oetm
UKrCCz5uvNIY9vw9g4nu/VxvlItxx7STZ5GDAJ5vigbeKGSho7PvTOQpKWLv
X8yq3StEYtKeXR2Jft6geLRcRnT1mx2a+v2e8jDr9Nydm4jenrXbdME5RoRV
ym8uiPJ4mFwQ1xjpy8BmjWxIlVQE5l3S928PeXLrS1P7dkaZZzkEgXH3b6uK
cEFrSJZgfh2y3mP4ragKNP9MuCCxI7w6/uH8pabEx+5z36/3rRydX3ZsHDSE
6PH3FS6PSzk8p/e30Psn0PtB71el96fS+//qd8njE3lxlsdjv+Pcu02cH89N
jPA7xkGnZGVqtEyGUboZqx8OFf7lvMvz+79xdZDiKp3iqulM3zeL/5gbbrMY
MtaAhX901cVfnQXgU396q40/lYdzeb5Y4eDf+sukNv1FXj3K6zvydP7qlNhj
3p7/i7w3j8aq//eHSWVIA1IKESppQpGhvKVCg0opoSiKSBQKJUOGJMoUKiXK
lDGKkkjImMyuwXxNe2+hkErF82mdfc55lt+6nvv7vc/3nPNb6/nrXmvf2vtz
vT/v92va+9oXwmWnM1EbcRZsC3igN5JCB5F9b+g99zFYqFm8pVGeCe/0VHcs
W039jzovJeu8gawzt79nLti3YeoF8o+bhC6sPsYEoUTVmivB1P+4bsS064bg
YvK/n+AwdV9Ea8kONhinVSunhtPhqd7Z+8r5BKw7UDt/zSYMglVuD/5axD3H
4IZ73HKMNo/2TflIz8RfdS1YcBuDuMNF9Gc8iN/3h+q0NGIgeny1n0AME4zY
BlLnCO6fi1s/rOe/1LxsOQsYYjrrPg61g5fJm71XhSpAzXaidUqYDfFCkmoO
qRxoq1A1aFraivZHdCjArg9mfHPGO5A/umMYuVxdvwdw8rgAefw4efzf1ylG
rnMfuU6TzfFL3xvh4HR+v9btx0jHGj7lic7j/nkLKo2725HPCr7p0nKvGYMW
h/sTZkO0/+M8MeR5Zp04q1KEdLiiZnby3UU4/F67+s36jTTQsjNp/SLKgMPG
F+4uWtMMaqsGWlQyy2EXedyYPL6CPD79PJPkeaavp5lcz0aynl/IevqQ9eT2
fT3xg9d9Gu9gsLt+/MObRch/LHd/NimK9IbdjGUnA5E+PBi3cPcoA+6GKZRO
tlPgRL+JezjS7enagvJpgAPP3EstSu+owD8ovqfCrRsWhiVtuL++BbSd8xLv
h1dB/cMfdYvReYLrWwcyRhjIp0mKjbZRkC8aK/JD5/kx97xgIzpP9qvoyeIy
KtQ3x67rQXp1u/qaa/nqODwwXpTVRKNy/f7d9O85apHfcwya9r3pcfJ709y+
/15Avj8/k3x/vhj5/nwL8v35UeT78y3I9+f71Gm/9irGoEsy/NZqByYsfaP7
cN0jKuy4lt+oMI7D7RDe3sVUNsy7PnFaypG7rqj0r9N/FUlAt8y7eeHfORAd
bH3w/gqEbz6mLbXXcXCPGR/0nseG/W3tz+of0OGZlTbnMlr/uvPei0JOsIH/
vpJvFlp/7c6Q3dmfkN748XDPyyo2iIvzbrI6z/26DuwxV5+zBFiObJm8mcuB
ioojxI7NdPCv396R95gAHq/jG4sWoz7XWfdwHNV5qYEtHNqLw3Ubk23Oj1jA
Y1EgtTuLDpdurbqbeQ4H/U9XfW52s+Aw3m96O50Oj0cslJof4uBcuNfsvQYb
0m8MrnaKooPt+SsVVr04/PqwabXsMzZoLBT+iF/kvs6G13wTH9wRbixLlVWo
4kBi5Z79RSp0iNCUj7Z4RUDJptufrwIGygccxtQQX5Q8MF3hh3CGM3W89uVd
DAI+u71fOIl0iEsFHi+Gw/l3tY1LVrJgbIdNE3TToG1nqkqZAg5zRBe8E9vD
gst7H69rlaLD0bz05YvR512xRiV6MIEFJy+vS3bKpMMTfh/3iWs41Iyan0mb
xYZAgdy4bwl02LZmb8bKRhxivspamUaxwVIzkrr5KvfPNcqzUYw/mICY8SLi
E5MDVx5V7nBUokO4Ao/BxjYCbL779t13wcCkKTUwk58ORYxbur5o3m+s/2Ue
2ILBlb6w060DNDB+PXgmjmcAQie7DQYxDCJ3CH3n/Pn+u2/YxZXIjxc/XXBo
2wgGW5bVemjF0qDJgfUsaxCDi2ybmp2tTDivXjH07hANdIM4m9cSGFgL8VBe
1DOh9vkN33F9hFfnvTfs/IqByPcF4ilMJnx26Z9/2ZkG8OB5STHyA6uO9k+6
q6H6mNhL6n2nQZidkqSfJQ4LISfn2TsW0OMKftnkIv28dKplfREOVl737Wac
ZcNTwYfLpa5zr88bEV9i8gEBDc66/dvmYrCh8dWv67J0SKsweZz5A+mZrLX3
IhHPTOomLtf9RgPhgKcz7iDdqxzX1HQCzf3CkGfX2Ik02KZM2T/3G9L/fVMO
FTNwaJ9lkvXengav6qOONI8R8ISxzrlBAOG39ATPKjMafNJQ/LSiGoOC+17s
A/5MuH2YmldaS4W8yFDTja8xCNmzW8DGDulbzVtSV+5T4dFmTfVkhAPXHgb1
+iIcqBCMtC1DOFDM9m606sTgUYCE1Eg2E6yn1j2PWUiD6CeXw8+swqHvcLLm
hwMsWFb44HjASjq0fBOVuXgfh6bvOcF3VdkQpCXW8yWae31ObnJMeFlMgMXo
mrKnO5GOStgBeaJ0uB7HGpFF+srGNTLqCgfx88PYJ33PaSCgEmgrPEJAzoPk
lwcW4FDk1xV9ZQcNeuT2DWUMIJ2LUYail+MguUFRdQytU8lnX9xJdFyqUETd
Ug6H6tF8hVpRGszY0RR84REGv3dpmmasY4LHkctn6zWpkPA+Qbo1CIOPhkuP
OYwzQF9satWuTgp8ehPqWOCJeOSJso8MDR1fVrjeLpMCn+nO/cphGAhs3FAp
P5MJ90qvHPIfpYDWHZUIcQoGZ7yrxJ8lM6Hx8RzjwZk0+KHvWPvWCYf6ZTsj
gnpZYJH7e0I0/T/rs3iaHtZmiY454gSc/BDz8k0sBt6rzeUjEA4IBkpnbfhC
gP0nR6sUURzgXMaFeTo0sAw6e0Kun4D7/WyGnTYO0hd47bs/UGEi++QmjW4C
wvUj3Xj1cdhQt6YzN5cK9mm2/H/eh3wyKUqnWwcHg9HiiCMVVJjNEh3iQf56
9/zB6kFlHN4aZB17gfSGVnROwjpUN9p4C1UC1a3zwiGfVg0qBKr9pGxyx6Dp
8oJbha0MyH955LvuYwocjD4fNWSEwfdvsyVyrjCgjMfxeqQwBUzT5Kv512Iw
5L136S1VBkjUvypqCO+ARwazv7YqYtDaV9GUuoYBJjs2OC8P7ADZq2YPtO0x
6H5OWRZVwIA2sQj/recpIC/Xleovj0OPikq9rSELBkVahvdKcK+n/ieH2KMI
Z8p+5iy8h2OwblvGPuEc5Otv2x7AaAQE7bXV/7EPR3rkpSZvHBUgRIY6/oEA
OcqXxbNccNiJHa4I3kyFKI1FDvcbCDgfP9vX4DwOF068PHJoCxV2Bac8PYtw
7/bS+getx3FYnGjfJ+lMBfPhIb3CLgJW33oVa2mAeHVta/1wJhU2aRi8ueeP
gWV3wpeLwwy4+PXYF/9GCsw6/M3DYh8Gb/cFTd71YkBx+f6FsvMocEbC6dp1
UTTX7gcmb/7sB/P5k90vNnZATHuBaksrwt/O2rYLl/oh0WSfsMvBdkiVDG92
z+DAi44GqrZ0P3yg8IRfet0GZuoNIVF1HFi4RiDK27of0jwj7LOV26Hp0YKw
4ASEk/pDlc/XMIHprdTlqU7lWs/T68eWNiM/VaekF+mogsP4adNjR3EqVInp
fdB4TUDgx+qcCqT3rUtfqnRkoM/lZtxY8RzphGM3SrcW4DCi+NCk5AoFXk+e
SVn4hoCoFOetxQk4HFAb73z2igLVe/msrtQQsOLOliWK3qifHds2yS6iQsC8
82F+qM47rTUs7qI6J7rP4C1Fdf6QqrQcR32SlJlyRvAlA0JnPf5W4EKBoKJd
Obqor74/3/3TTokBRy0Oyc3074D34nzRKykcENcfM314tR/GRiJUYizb4eDL
LptjHsj/RI0k/s7ug6/8qTn9PG3gMXnZzFWKA/FtF7v4a3tBt2FT1bbjLVCw
12uTxw82dPLlVfic7IVftl5XiLBm8LZYdG20kAPB3/fortboh6B3KksE8bb/
eN+XxLR6dugLLTQoJOBWEjPPJQeHO082HrtwiwJiJu1CVvMIKD0fvL0O1TMs
tvXe/aZ2CKgLKBg2IeBIckiJRQ0OLRoWkTGHOsB4V9VBn6cE8M8pjZr7x1/S
PtVs2ECB403H35WiOp+MUBr69ACHs8szN2aVUKCZdk6Yivr8403B6sOoz0Hj
U9pTtO8Xr0g6CdIJYPxwuZ+A5iImd/nc72gu3t89fivfBIPXJhZ7d4Uw4IiW
+IpdKygguL9pVTk/Bi+uzNU/yOyHl8a5anbCHXDP1St34DEH7MaG5o4J90PM
DAcWloDqcPh5idIKDvSvbPsgxuwF1RspdQPhLWDbd9PPK5INKulWtwMtuuHl
wEKfa2saIXFi9NaO7yx4Eq6Y1l5GgwfDRF67ag1EMlRXpSki3ztP+4MAgw7v
THo3uZ+vg+q2c13XJjlwP27A+8/zcQvj2432zGoB/ewNKxMR3s1euW/HSk0c
Kowezhw92Ab5WZXfA2wJyLJJlPdAdUt0+E794doBX47O8dFF/nR3qZOyGeJ/
2Us2888j/MnIlLczrkJ4a/tBZGYADocaWAZTs6gQq3AwpbKdAFbr8w9rzHEQ
OCPycL0nwtWrxocuIZ77Lrz1u709A1QqortSBjtAcapMizXMAdqhj1Htuf2w
5KfOg50v2uHIDnflGV4c6HlyaJBe0Aez8i683DivDWKYwj5yOBuy90W35ij3
wvPdMlcl1jXDwtyzcoKibGg0nj3YboH0Mb9NjtGpWhAuktq9IYEJfXWed34f
aoMTJpGNCW/L4c6laH7HXCak/vZlfhZG+2BtXi+i2AFvRj75+2sjfHY779Of
h3yV/xfB9IstcO8eLfjsIA68280NXkbhUGAz4YFHtwNuozOllUFAwasABxGk
H+duzY5J2YRwXmXT+cB3BFSxXWbwRiDdVKrcpNNPAYY5H6uwBfXn0YTQ89Y4
xAcLEWetqSBYQ30duBWDzHNenruOMuDYV3m3p40dcD1sl+dmBgcCd1WvuXqn
H2YVnNr1K6gdtH7eeqRjy4HaA0HB+PU+MIPsG6UlrXDKUOXGyHs2zKRU1s69
0wNCHxL9L1o3QYZOrK9AGQsEl9z7XuROhRObCzLmP3kP12c6J6nX9wGxrHnh
w0oWxB9ybjpV0wWHX54ul4rjwOWfPds3W2JALexclWXYDIucFYvd0pDeDm5f
98sZh1tic736xFEdTBy06SkEiKUXW+N0HB7XOEYJL6TAfB0zqR+lBGi6u+zj
xOJgI1VWrfuRAo8pi21kmgkYkIlOe2eLwwmP2auvH/nX1eE0WYdZZB3m/EUd
bpB1GCDrcIesw5FpdaD/D9WBc+jYT380L96Xb5y7juZFQjXpJQXNy+pp87L0
b86LODkvLeS8nCfnZR45LxxyXk6S85K8Hx+4VsiEpgj2GvEFHCgewFetl+iA
EnJehsl52fs/NC//KA6/+i/isDqJw8UkDj8mcTiDxOFMEoejSRzGSBzuJnG4
lsTheBKHl5A4bEDiMD+Jw5UkDj8ncTibxOGkfzEOiwRctulFOsFyf0nYeCED
rvNdnhf7D+iERVx0gjKpE76ROsGT1AkPSJ2wfZpO6CZ1wgy7f9MJvqROCCF1
Qsg/qRNiSJ0gTuqEt6ROiCB1QhCpE0xJndDORSds+RfrBDVS31qR+vYSqW9n
k/q2jNS3b6bp20JS3x4j9W0sqW+9SH37mNS3aaS+LST1bSOpb81JfbuI1LcZ
pL5tJvWtGKlvsb+pb6tJfRtA6lubafq2i9S3o1z0rfHf1LfT/VcX6b+CSP/V
TPqv59P81w/Sf72b5r+GSf+1lPRfiaT/aif9lynpv5aT/quX9F8U0n8pkP6r
l/Rfw3/hvwym+a/1XPzXDS7+S/+f9F8S0/yXIum/wkn/5WJn0GHyJwewUnE5
h+qZcpsvw+YfyAHmkzmAwbQcQJDMAe6TOYD2tBygaVoO8OGfzAFO/EUOoPtP
5gDKfzMH+K/mS5XT8qVEMl86NS1f6ifzJZlp+VLzvyhfsibzJTEyXxKcli+9
/pv50t/NJ0W55JOKZD5pwyWfpP3NfLKYzCc/TMsnU8l8UoLMJ6e45JPiXPLJ
jr/IJ1XMvKXjFHDYEJu34vVuFizjUVDX+X/l1SvJvNqazKuT/yKvjv2/PK/+
Z+87PPlfuu/whrzvwJ523+EfvY8z+3/oPs6/6v7UWp1ljqe+4TBw5HaKNR3V
uTDZK/QsHbpCLLMbbxOgZ1UsoDnKgapW+zgC4c/KQ7sumA/hcOXuC7PaWjas
icl3eOhMB56klR/j1hEw29Upj63DAY3aIQMFdN0XeR8POT8iwOSOiF6xCOIN
qdOtTjJ0eL6fZWm1H4cDJ6/V4CksqPbq3bKpEPUbtmBJgCcO55pxqV1jLOCv
ajbRekIHix75+R25OPqv0G66GRtc9l9ZZHyTDsEeU1cm+3EQXH01dPgFG0Sn
hD+8dqODYVPpwJz1SD/HpQoUAQeY8wddPh+kQ+iQx5plTgQ4GAWetHjBgYc5
ptgidcQvr+YUF74g4NNjSYWPGhjEz3wdQhWng/4Co+07FHEI29Igl3qQBSem
ljimrKbDneEHq0MtcGDZikxuf8OC76+XNb98RoepU6WHRe/h8O3V0Jp5ymw4
dSksIeIOHejVr2sjWlCdm/IFHt5lw7fbtz9kXaGDk9LO8mdonSNhQ36ELge+
1Gx+n4zWecbMdYnmFaSvJjRrHT5wQEtq13ZlZTp8irFxcW1E65yQe85AemR+
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
    "],
   VertexNormals->CompressedData["
1:eJx8vHk0190XNpxSEkqTkgzNGjQaM5w0GBpUmlRIIZFZoiI0IIkkFQ0KTaiE
zJyk0CxNolAyVVIJGeI9++xv71rP/f6e9/6n9d3rrH32ua49nf057nHbnIyt
+/bp06dFrE+ffuxfzWK/k9/XONATbYeDxpZuJcke0yObepvJ0OsbPu+xd6bO
uVof3LdsJvVzq1W/MfmCA5k9qpku1OV7ibfZotXEcl4f5a9Mfu3htbumdq70
cVj1d4lzamTikcEJX5j8yuNrFOT7w7mcuh5F+WN/jW7Q091c4sP00OvqqOdU
0tsq2Hf9A74vnaCF+2aW+IWAnTEd3E461xvtvKTdm3Nq9Fbqusk8QeuUPdkn
LB7/ncmHzPKwl1q/nT7ZpfMwOGUnSVdEPRUlHbtk3u2kjctLJYfk2JJIqVeB
jUx+cWHJLXremSq+MGscu2w7aTpk01nH5HYH3wx88teVDpkgQzet20qa9loX
fGZyq4I2se+Fu+ilErFkMng9Of7ogFwNk7sZrg0RyXWnOQ2FlqtW6JDNNy9p
f2LyNqO1wSCX+VJow+Q0OwXlG4vbREHP9FKxVKaH2j1HPR5h6/vCvuOmyuSz
fan+Edx3+6aSWLDzVL1ZLbOTxlxEO5vqOrbBuXauLpVi56Iu4/Bct1U8tgMO
9p4cB1o/A3Hwvn9lRtG2rTT6oEGWxVZ7+nqBwm3A7Ye+Z4VowHr6Xdzs9TgH
ZzJ5/+opgHOMplbHtgYLelhbMmP5H2cSLsDtcLOk3DwnGyp3YczYxC/OxPCn
V2Atk2870DRkSKgjHWawW05GzJkku64z/sjk0sLlL29+dKW3B+hr+xvbE9+A
EbM+MPkKYZXQ01N202GuUTYK5tvJty3Wfu+YvEHv7OSeBE8aViAfcq3YlGR+
m5XxhslX6hR9+ia2l36RNimtrFlEFCfPUX3N5PlL6qtBvmmsyUsmp/NnoPys
2VkF0KNULh/E9FD5PrO5nudTVA7CvkcORO1k+1LT/bjvkpnl98BOlWncThp9
C+28c7WpYzA71w2j3QrsXDT5IJ7rdofkMMDhb9QYBYYDjRbg4L5c6yPgZqAh
mcdwowEC3DbYeKYAzi+Hm71kONOlRxDnhMXXFM4EEtomLFrw4qYL6ZqGfN1v
6Lk1y9iYSpt47Nk4141Ep465Vs/k2ptkk05d2ELF1cu+Jq7fRTJPol8FV32/
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
h08Ef9dw+WJ1GXx3sBL8XUOR4O8aei5Wl8PfOyQK/q6h8ohGF+jJ6+Z6iKg2
6ll/520l7Bv4QSsf5kWzBPbffOcXDHbq9/ffD/f6tMNo5+HzlikXG+1pS3LQ
UfVb1sRAefNp0LNfdn3UzTQnaje7syVCeS1J8k5LgvPWhdzcePOZM43bZjdo
3PPFxGx281fQc2pnj0O8jAtNjjKU/jFGM8flQZ87IA87ftME1ve14uupx1xc
371f8oP+UycqNzTDsCRuDZ2kFc/1n8mxvAT20MKgg8we+scQ7XmYLrOgZNQO
KnZx76O4ZTvI6kzU7ysfn1z4w5L+Vuy+a9fuSI5GFT8FfMSXeIaY+NvRNxq+
+XKTbchQM80YwKG8WGYm6HGN3VvC9NDV91BPkHZ8FOhRW9ydwfRQ7duoJ0T4
044BJabUs9vnKilxJMsU0f78lMLfka1G1GuQdMLYeS4kq3NMOOhfM16pZL7U
Vqr1vOi2mIgTuf7NyBrks6Q+GXA97T63mB76eArq6flemAp64sdIxzI99MkQ
Ga5nVGnoqG+9z3NDhgerNJS5CH7/k1NtgZz+kzcee/h41vEZxOCohE7cBWfy
we3ZLcDz9C1uJ2kdIH0D7LRvQztP3SkUjmLyoBHSl2HfawNwX9kDZlP31K8m
AXKbpt4Z4EzUn/RwP09Q+rSA2U/ER/meBRwqtND+r7KfVoH8nIRvNJzLRgXl
f5Q4L8R4Zfc14KVAgGf7vPh4kOev6E4EnD8mo1x/Sbc6uW5Jzh3Mf+oz255k
dyseBT36rzhfZEfW3hzg3ecF8mX/FOWXEvcWA4+WxSj3uWSZzvyHSNwL2gf+
fEAT/Uc02fIWyLOfB7mBX00zQHnK2gfya98mUuUpTvI+ly6Ts76amfFfWT92
+/mwdcKpVKNvsOc1pUs5l6d2rPtax+41m+U+rWHrr+aGK7D1NMnRla+PCZxp
xvycDDS2k4O4mCfwkwkHMifftJ+XV3Hu2ae5vmnkvuzinGXVbF91IS3F5tk6
P5OKPzM5LQvU4XKRMzPXgZ7sCLs8BRYv9QKcJw8z3sXi6/99V96Yjuc93Ow+
ktlP6oNvN+xn9sc02nJ7Yg9kKTL7SYFJ5Mg1P+blRU+5x+2Pdr79ldlPdn0u
/sLW05eaIXx9oZF8z1q2/sGpY85Bzco6B6SU1sP6Knlje9i3/0PYr0ob//3/
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
XEhC6xf4+VlnxOfU06xm0POiZxXoIYP9UY/BQMRtmwjir/AAcWsMkeL4PLHV
XQj+rzNdldu5b6rIPZCfnSANchI6bBuXX97X2wrxGPFmXgn4T9l85Pc/cUr+
xenspR+/gp9I7VQxAf8ZIPAffW8jlR3elmTFBWOLs512JENxLF+fqY15wM+G
rycKw3D9CzP0w3t7VFaBXG8cyqcd6m0Hf1b9Mi8H9rXQx31/9n8xB/KPr+v6
OPArO0F+kJI1N4P8s3uJVhr41YbDiJtXJ8bjlp5sHqd/shGf/m+yfkJ8NU9a
rQm8/AhFPP/FaWLplp8Qj//iVHPwCyXYV3Ef8vVHkPe81cyXwb7PV2vlAF/W
Ebhvw9esj6C/afrqJcDX/POoP77fCQ2wp3FAzgngy/Ue2uNxtrbi3Gl7Kjdg
m4u62FYyteUXv5e5PxAu8jptRx+tbHtysr8Vaa8W4vVl3Nus76B/69jVy0D/
eoH9uj1hXL/cb55/aFAO6le7WfsU9BeJc/00oRf1z5CacNtl9TYaZD7gTNCz
neSExudEkDs6GC1iPNKoUOPtwON4GeTRdMO9AddltpKO5/ZVojccyJ15Z+Jh
3xmPfyQ3VduSfTPqTY93WpNBQvXdIN+fWPuc7Uv2Smxzgn1benDfjPMPVjeE
3qEnY/TzMtUuktGpKtUFlc3kuO/PfPBPC7dSiGt6RmUT98/aglMqsH7BDkdY
TwNr/fj6cZaNb0JPO5NnxtkRdTOVybJpj7idw/btaBM5m0p+RHyMFlG9RdW9
110Zz/ocX+HV05gekjeuyg30/N5QyPWUbkU9DwqzIupnKtMHU1DP6qw5fP0E
8R3PwU6b0Wf4+oJmse9MP7UfeC6U6SfXpPZx/UnX8LyfBmzzAB5vd+J55QqF
HzIeicnatkLGIx1SgzxK3kXcHo2qd2a4UaOWOo7b4KkTLjFeiIfbgBDGC7Vf
hrxY7zLShfiafN7YlPFCH038n7zQf7zYq2P+7+PE44ueGInxtWYzX0+dKuzf
wnp5TVyf7Ym8T0wwXgX6k5RQf5rVvb6w/sJ3+8fAu7UBrp+4r7cX4rSulscp
1dHFOF1+/0cqOxcdPaHeCs71vQPP9fDFj2sgT5pSvx38ZGFf9JNrG23fM/zp
AolsEcC/QBbx1xbUx4sveTySS4L6qLfZtgLWhwzm68lreVwvNobUKYVtos5h
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
lmzZl2zZl2xZI0uEyBIiZW+nkIjoalHJ0iYtQkpCi4Qi4XnP+/p+n/P9Pef5
63POnDnznjv33rkzr3tnPiA/dV7O/zk30X/OTba9IabTXdQ+32X6bhxdrtea
RvqrKLutFq9z8/X3Qe/Pqmz/KaKOF746SMtX1yPn+P1ROq7ANerEn98wLNe3
POmDXrXmzs093Y5DzznR63bXhc5ASj7aucbumOvrnXe6X3bqgfyMkjp+xou1
qH69qUmvaSxub4kwNKLoBuv2HFh+3gcJPpKj5PaqkF/qPBUj+txLVLGk9EEP
XxJ92MS9EiHeSF5PxxuoMYScO2HLfWrADgoGs9xgT9dRYgejK9P/wG4MEiyq
lN3QRydit7pP5NzfqU/itGZhct65KD+IAvs/S9yiSNkfXUoh9v8/cSD6Txy4
R/pBDsWPudK2SMF8VacRfqTwIA3oD9JpOoo7ReiZddOTlD64VYNFHOZxOJjo
U/5oehDoXRosMqDntwhC3yr2F+yAXyarGMO8RMzbIfnSNUvKbvj6p+qiaabt
yhntxG4Sm+tcgd83heZHHJ2EX4HYE/+JUXEGuu68nBqjZ3rUPGKza7lKDM+2
o7g8Mo//kS/dXX2Nkl//H/nPxIl8tVhaDracXyczxj77QI7IzVxpSg4OLSRy
ssqm/8K4lKVYdsK4OlzJuLh9GqcgTyleeXwRlTehxRokT2m4Pf0D+HsUWZTB
Plv8Cf/6SDrPwqKCND/+aUD4OQWIna2cthiAnZMPEzvP7yP8f/dRNPeDQpjf
Iheajq7O8z8vJ+vksxK9v9AFb/LdhcGNY5DffV59nA305JvP71plffJhvf30
ofcdPsLORK+3hXVB2yCPW5KptILK49CB+kePII97MR7ASK1//Mh989Ee01jE
oPiWXv/VwnVesM6vnab3HWpvJfZ8ql5uBvvr9x16f6FvScSe/2e/NPxnv9iu
b6H318j7IZduSv5OtVO0fLVrHfKwH60YuJY6uavuPPjkAr3fv2ttW0zpiSYL
Hzv4UfmmdoIfnW+KTdV1M1ByXNhjzCk5eKLK3Ajk2D1ethD4x2QOGMK4gtar
0vwqBRd6gL9A8vseal+jSc5dND/n/LgyYun9i5NayLheGRC/IROXexTWSWsu
GVetTbkm0DkzaDqyLCX0fm7i3yZ3zm4D/xYxv69HNIkf89DbH0b5MWWdeT9m
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
8sQPGznuK1hEIsazJdrlFF2oxZc9QTgcd/9sYOVyPYra+0X3JkNeUJ1reXJL
HBY92iphqBuAcg7ZG3lAPF89fqTaKgFr1sn3WTKmNvze2brDlqJHJejqA79G
pNVWih9nfCX8ZwrUB+Mp+WujTEA+TnTeRMsvXt6mCvo4M3Xeo/TBj24TfX4k
uS8H/Qd0+Ewo/bHtBaJ/h7VgHow3aCqxjBovRqfIeA+fPWmWvMMOidwdEU5a
7I8+fvuoCHazP9jhyjlghrwGq7TEckKQbYv9sw6KbvW269+dpXxIR1AlfvGH
SBRiuqL1FkV/NLX95fNZF3w78+2AVNMx9Gzz5o0nKHqKyjsxPZFIPBz4ZP/9
ylhk84BpoxZF79ULFHYSTcJW9eU1a8QikF6NwyQDRV/FbxYp3J6KnRW+qikt
SG1Y5VqV+nl2BE27MXEA/6K53iqKHze/dKT5De508ID84NdnjSj5+GUoMy0/
WO1hHuizbd2fz5Q+2NSa6LPt24t/9yj9J9bQ+uNaE6J/5zmlNBhvlOglXWq8
+GAdGa9DkJoj2MfLCglS9sHh48Q+cmWi7F3azggJNOLT8R4oYu9jR3iv8mtO
KzGtxgWZb716bpO+P/K+7jrYS9Hf/BFpPW/kjLi5tTLHzMJQk1ZXWDNF5yv7
1NZWYoW4j7QPcBnHoNqrF87lU3R8djyqU8MCR0v/De+VT0RHSkYrDSn6/TmV
Sz+bI3HohcdNa8+eRP2ZRnueUvbJYCwrMlZNx5Oiz46MnT+Olu39xSoK/cnX
RIf/3nca7+lRLjnelqJiojfx8sPMCBr8tSgF+COYdkRQ/HgXywTNL/dWKQbk
K/Fsu0fJx8eZjWn5435Lm19R+lSd5z1K6YMd6og+PTx+/0D/mox/oD/+nk/0
9/07+gXGy1FmkkWNFz+RIeO1jlyXBPZ5cUoul7IPZqwi9tnz5/K96XseCH2S
QB2pbkhBpeoO7NO0MwevhXL7oPvNuWUxBX7o1aSb2DvwVzYin1MLfNF3sbrV
Qs/DkJH+LYV6is6oYF7C4uGD2jtqO3S3xSJ/u++PIyBefaun5slpjMrcXeUH
RFNR2UVO5ylqXO+77pbsVQjHq4xlPvP2ZSLb53V9Xyn7lG9N4GZizcZLn/IO
t3eeQkeaJ5fJ/aPimcbBrKtShRh1bns25p+vchlFX7GfpvxM0K0RRor/trfj
EMWPOfPnaP7nTu5yIJ9lOhPk42Vm9bR8tqniZtCH4amELKUPDntH9AndYX4J
9HctkHxG6Y9t4on+Ly1FhmC8hzpCV1LjxY3mZLyDyU3nwT5BgZyllH3wnaXu
tH2MHocktCX5oGWuS1ayCjuj4n5rJXjncF3Fa4t+cAB6cunW7/tVPujMEc4D
sM5/efJ4FCwMQc5v7jPIqIWi1O8u9WUUncWjQoeVORyNPWnatzA3Fv29PXnd
FPIOv0YX5fFgdGPdjPyDjnR0dMlb70BKf8fTcZJK9w/i7ALqlyUfTV7xZlGg
7JD4sIFpr0g+3hJ2JfoJbxHyO4gS4F2HhM/Iafmaq/jEv41Spxj8G6y+2QjM
jME7nNM3NSn+JO6bwI9fbjKi+Q+Phm5VpOQL2VtuoeTjhpU+tHwVi9+hoM8R
OW8FSh/8Db+h9UmL6NcC/c+VRmhQ+mMhzila//bNr5xgvFpO3X+l1UKxJacr
PV7R63/Wg30kbNoYH1T5YKVIYp/h8ZVtXsk+KMHy6b7aDc54jG2bPNiz3VHl
q/IXP9QZ7D0RJWuPuGKTF4N/WJi6apNPWjB6MKNnxNLojnqOC/A9hXXY2KEf
rBGJHA85TifNHEa9GSeTYb8cHN5xt78lFp0e0smU84xBvJz7B8XBL8VGMlpm
nkBxszKa76NOoZCv0RJN1PrpN1x5rFroGDoaoq25P6cEHfO8cWZykrL/zekF
K00LMLe03cWFOyuR4dXnCrMDI+jPFxWeitFY9LjC6Ndm3xK8uC/AZI7itzkr
PWlByXdhLdCi5GPFpTG0fJUE9xrQJ2ZszWlKH+zuTvTZrmulAfr/K5diS545
jOPvEv03PFolAOM9rlykQY0Xh1WT8XaPTimZDPohnB2ysUeeiodFK1nBPtyp
HsEuZQFI8KR/ueSACdI8FOcCcd3GtoUG3M1hSOhoxtcKB3u0SGcfK5xfX8sM
z7Z7x6CPkU/MWNO9EKvS7LdToE+AmdGu/CT06UkFb/K5MJSqPRXDDHEOqs7b
2pqFGtmuqhQHp6Dh3StjGahxvex6Fb27oRBdtFq4PWPuPLpXd0cwhlpvIUEj
wUAfNe+Vp+i4y/khTV/BwZ4IchxG5uQpObjAip+W03rVYjt897tEFCP1XXzy
x1/6uy0plSdAz3MeTi6Unliwlei5bPMiZRiXyXl6XPhoKhmXb8m1g2AHcYYF
RZQd8IMSYgcTtafxqoWH0SWFWZ4DK3aiOxdxAsSBqUl9fF9Sw9HdrpmOOdG9
qKo1voWOiyZMJw+pxaIgGZ8uu2/GSKIrSgfiBN4XZV6T3qloVK00s1/0IFoq
u/HUV+hvP6R+JyD0HEpbIyTe+DQYzSl+sQyg9tHe+28l3h++jkRlOp6yDZzC
zJfbwyd/UHm9za0M4F/A+pGb4scVHKM0v2ca+wGQX/gp/xklH7/g2ETLH7LZ
OQD6vLEv7qX0wV1noml9pL3Y2UB/TwbDPkp/zL4sgdb/7j6uEBivqv0XLmq8
eP8LMt7tiNhBg6tQ15aiixcT+kQcscPwGLMBw6a9+MtDYgfLBMcp+O7MtLyh
PfXdpnpih1iuo76gZ7qhj95nSk8JtQ20nr2vN96GcXFUP6+HcTWIDdDj0tYo
pu1wOdlKd+EA5f+Db9N2WFk7mg786be6SsFuzXkjNL80h5ADyPfN9AX5SHKH
KC2f8WP3IOjz5+JzV0oflORK7DDtQuwwJ/fbgtIfWS4kdnirQ+zwomzgBcx7
1FMy3nfGwruGrgYgdalQzp8fTXCy/08PWCf5HOO6sK7ietxnYF2x65J1tbWo
PwfW4Wiu9jlYh7YcZB3eld2pA+v24c5PKrBu9beQ/bL9w40CWOcJNT0usM5b
DbjpdX7R/gW9XxT8+nfT++JXDb0vZrQ+PQ1nKUI3OWcWrBY9j7Sl9Xy+U/Qj
urXxICeXU9AZ9h1/JS8t553pTXq/PLlmIgn7VE6H7JeCasWToKfPv/A02Nfl
SURPFtVxVRiXX9pRjkrKD1h5kHExFJL9kmM31Qh+Izif7Jc3OGAY/DDPhTnW
aFl7HBJO/LCm5Sop8EvvrRwPg1/6a0j8UtI3SwPwY4x9Drzgx0p2Ez/mGb7j
Pvi9aMeQQvB7i2KNaL+3bmjxDPhJAZ13OuAnD/oTP2zKnRINfthwr4IC5Yex
3OsG2g93WHxhBT9852NQKOWHcceQgiL44XHRyjXgh+sv5fVTfhitVQ6n/bDC
8d9TIH9bULQ2+HntF0S+2DJl2g8zqa85D+eCXz/R5+nPjj2g/w2OLHZKf3Sr
luh/2jN0LYzX/Z3ScTh3BALJeDu/ED88VjW2h/LDKHsl8cO3TBXpc03p8v0A
ONdufZOhz7Xy2D8ScA5u2N22AM7BzRbkHOyPYXOHc/OG7rlVVJyA9+aTOOGI
tQkdJ5z6ulALztngnyROcHUptYNzuaVn5TY4l4NukjhBfAuDFsQJvb9YlsA5
vlA+iD7Hez3tFkCcsPl3hjWc+0l6xvS5v5rBh44TVg4lrPp6uKyh3/IAHScI
rFhxC+KEwBVPrCCueJjhQvMXBomvgzjBYJ3qUohD9K8Q+f8SIuNAH42uLhmI
W4T2En12Sy1TBv1fLh+n45yGX0R/p70/XGC8Kq9SOSAuSr5Pxjul7SUC9mnP
vzULcZTNfJxQfmSiFey5KlzLibInmvpD7Clin/cc4luZ7BsQ3+KXkiS+9Zz5
cRXit39OnOUQvy2Zj2+zhhePQLx3d533Coj3nOfj2/rqKjq+PW5R9xjiw889
JD78KFy8FeLJb4ZO4hBP/tzKTceT9d+aLkH8OWtq3grxpy8TpuNPOwWXFRDf
dux+8wDiVUv5WTpelc5TPE3Ht6MGuh988xvqeUh8q8R0+CfEt8GZwg8hHv71
i2U58Lfzq24H+btfibRB/Czv30jLF+m69Qz06T3UuRni7R8DXLQ+N7b+Kwb9
V6vXPYH4XKKF6P/2kEgfjLdng/cqiOcF7ch41+HyC2AflbdfbkL8PztO7PNS
5u9yyL9SyhWuUPkXvmxG8q/qCP9UyC9eyl3Ngfwidj6/8Pwt0gH5yB0h4ZOQ
j+Rbk3zkjLJCJeQvWlkFHyB/8fhO8pcF9q3+kH+dSZDwhHwnJ/UXne98GX9K
51+Nf5vyID/aOUDyI7X0ejr/kr9uYQn5lGf3GJ1Pmc7nX+xDXr9cB/Ib/pN/
5fsiOv9KOX7QBPK13N7fNL/ECdYokF8VKVYE+Z0Lgykt32LBiZeQf2mmuLpD
Puj7iOjjvJCRvZ3S/8Tp9o+QP0o0Ef0tFv6i869ED+VUyDeLNMl448e00sE+
D8VJfhp5mdinxUtcicHcDi35UKT86a8fdj2Upw/+4U6HdyTkxSXX76pBXizb
TfLiy58IDsDXPREBefSDEpJHJxoGvoK8O587+hXk3aiH5N07OvK3QJ7+QfC0
MuTpty6TPP3hfd0NkNdXtk2cgLzeUI3k9bXreGkcoET5YXQiS6pKpA/BAQrq
PTiBP4/teRLgBhOmBwlu8KGAG+SzyeQpAs6QkcdCy/8ukpQB+hz0HesEXOLn
HNGnzvBGO+AAdxsegf4o7TzRfzkHWziMd1zrkjrgHvdek/FyVUtYAw7QIxC6
AXCSDwMEB3BzvloL+NJJZRpfwu1MBF8qZFm7DPAWaz7Bi4C3JFwheEtWxvF6
wGc01CT2Aj4T/4TgM77mxe6A50SUjt0EPCd5juA5Skp+SwFfan6a+onT9SjO
cyH4D/fdrVaAFzWacHABXpR7neBFcnVVNL7EYvW9TZKhVGW9GsGXtJ/X0viS
5UF5bsCjajc70PxRIou/A76Usy3tMyUftb0i8g/v3C0H+sjN3qoCvCtK6Tyt
z+sHDdygfwma2w34WNonoj/zTLU2jFfzFguMF/VcIuP1ujTiD/ikSWADi8xL
HyzoRfDJsmaCTyrkPhUCvO5AJ8HrsnudagHfs2IevQ74XvQNgu/pXn1qDXjg
Eh7xGMADr4gQPHBj7w0an+yPeOAK+OGWfIIfui98IQh445JFPDP4uCc23Ufw
Rs1QYxqfXBSmq8NocEc5wIbgk3w2mMYnKysfz1L86H0i4fd1eyQP8g3v0PJR
wgSR33RjrQzoE830Igrw0kcGRB8z1dehoL9dvfNVwFePthH9HTuHhn9Q4017
c1YE8NiTL8h472jwuvywPID9Wi48UUcBWNfI+hHEe+y9BK/O1lebiosIwCti
CD7MljHuD3jylhCeZ4AnH39N8GSL3EQar16tzmUH+HMa5//i1XOnJkPYGFJV
/oNXXzr4NQv4ZftsHADffiNP+Df9rT0I8iciwkE+0mZMp+VHhgvFgT4vN4dP
U/qg12eIPp24JRXwav7XkUKAt4vsIHj1/VtnTwNe3Zx5ZhDw+aIIgleXGJB7
h+UhvMvTfvhg443k3sFfU/AW4Pz2cS+TAOfXWUtwfnFNjym4F2DOZOKGe4E9
5uReIH749gq4RxCuKFkN9wjV+8g9Qve2SWm4d3gcEVCxk8FHhUmI3DvY6Xku
A/4uwc0CcE/R4jjPz+I0CvKzH0pxwb1GhieRf/3VjkLQZ7QxG/RBNtuIPhJv
8DW4xzFu8hMIuueODcPIPc6BZU/pe5wQXkZduGdJv0DuWW7MftkG9zKP+M+E
w71MXQi5l2GJs6PvcV5VO6wqmDvUIDV/j/N0ykAS+MWy9aLg3qf9GOHfd5pZ
FeRX58qBfKRSS+TL92+h76eWKy6vUH5mhHHW/95PVel7RDFRdvjP/VRv7RAH
3E8djPd9WcBqj1a+JvdTnVF6Jo6SvnjsorBUtoQRWji2VxXO0+a0h2VFhl7Y
szXMo8HIDsd/b3OBezFRSX0Op1UBOFKv7Fs6qxkqa1t3DeqAOu9WHqjkDsCP
/yRsXdy0GG+8+60N9BxQYZJsL/bBy/x6v3P4HcSt72vEoB4nR+FhPeNhO6zy
xeaCTLkPerzzkjXoab/a90pZijt+SG3Xrau8Ubqy4QuQ43IAG5k3+uLTIi6N
TPrO6H3rkePwXfYf8Q1Br4KwN/p+59UFG1TU27kc/udF8ZDFpdD+IHyFQ733
3TgXVvD7bADze+W5aM343wCc0mu3776zBVY98esP1Gdxu04t9/vih1t0X0z/
4nTHn2aOssP5qOvuqZx08wCWTLlmFzfhj+SfL6Pzr4I7wiuuvfXEV9v37Shr
8kMr+VQnQf769p9/bKwC8GDcO9ZlqZ7IJETYEvTJ6I8xWJR3BN/smdy//JYj
mm5UbHhI0XU23lqfNXgEr/QLX9TWuBrHFKTeBb8aZmHcIN4XjCUYpI7czLPD
G56tmYPzqKdqpkEm9zDOyrO/dvi1D3bZbsr3nKJzzBjkTeZ6YJEp0YqBjX54
YnIsAvS/cSOwcn+DJn4z6Bw44OWLxzflBNJ49Y2gyMroXdjRYaFD4YAfyu9z
tYX9GGc93TJRZ4FtS4Z+CX0JQgzL9lWB/m/8SxwWinvjw9du7dPLC0JsIbxf
2yn6WqXr7yLcgvDhVP2qviI/JN3csRD8IbPUpRoUFIVX3B18nzLnjpQ+OZlf
gnNf+Oa/gddRWG/RGuGVGzfgN0wjtnC+WIl3yTYPh2Mjh5X6Hvuc8bOIM1rg
r45MuYQIXw7GndMnZM0kArHsobWqtyEO/MCkfvamJ17txDewozQQ/4rmnH0B
cTtD+oX2RzaYv/H+siPHAnCYUroS7K97cgYeRdu34XJD/89lLf7YqPCfO8Tn
/dZF5oPrDVDgM6uulEu+aLV9VgTso862mhfOTo8bxKxKHKIjD6OWuAx+mHd5
q1GbQmkDbLIyLrXe7wiq6Ww72ErRi4Zi0oeWeeOWxXyL3k+Fo6hPt27Vwjko
oFXrPRCKP19X3/T0dTCydP4iUwpx7+1Cp4i6WGzEd1lYeoM/MtWZXOpP0fPq
r3v5Z8ThlfGdeypGpPCoXk5gJEVfMlE9k7YnGltIyD5k7PTGm/DaMji/wkry
P58eCMNtqQ/K2dvDcXLxixenwQ9PLjV0CvPEDxN3GZ8+dgTnzoRHgD3562q2
evOYY/8feTfWhAfjxBOfVcGfZ05Juirtk0Nj/nJ18P9rD+5vbaD/9+1tdoxR
nRWyFa1KtqjxQ6G3HfjBbq1ZQb//amkh1ivl+bK8wYiRX4u/i6L/27phbrtm
b8O454sOq9pINHpEkxv+h85U0jv0OrsHZrtq2SOzNgZpjG/YlEPRg96sl7fO
j8ByP3dGtI9FIrHyS4nhFP0ay5L1N/NO4HvSfm9arY8gzinn2WWwHt79VWI6
kowZw2Muzn1UxqvynvlvpOjDrU33VG9ScdFTBa8SvkDsKH411Q7W4ReXla2t
Efj2v8D8Ob9j+GXYDjH4P743FrqX0q+64YZkg00Kc1F44nZ1XQnEdYdWrL9o
rYNlcm9z/1wajm1LV0TD/+XVizBbrIvdj/r7GJte1gTjoEUi+8FuzlsP4Kh1
zkj7l7R2WJoHijsTG0L3j+1z/LRClvLXV7u1XY39UdQbx3zwM0b7mYOPcRxA
g59UbLtNQ1FxaOdq2L+d1zxZeuIskNZLFoXobTHIjXtIE/4n7jXvyh9Lwxxw
I/61tMosHp3oDjrmTNGTw9X3N45G4uGa/UK6t46jAdP05M3Ab1Pz1Pl3Grb/
FZ15WDoOTY7kiqtR8bOBUPJprmUZ+Knd8lYZrI0PrUtd7kXRw06X3dO8nYSX
dG1/zJEQiQcOmqt+p+g2/3iamaeO4qdLr60/m5WEJX69eTAGedyl+lxpUQdc
tvm5p21JHF60Svsa/F/hNs2XNva/tyC1h0pxuQxROH7EtayGokuaTj7xVHFE
q8yFRFXPhGK2Jwv+QVwxpVyyfRF2QGkXU8p0F/hjDdvSz7C/lmyPbN1/xgPx
+4xmzxW7oZHEhBfgl94zCrnHu3oh7pn9XHm//ZBX6GMm8LfiejZRqg7uiMv9
bt6pujDkf3oLZxNFX/mKZYjf9xAyXSH26YBQLAr8eu4j7KOlh3xHvOfGGmRH
WMW5g0+ivTrRn3kpOtPqquUeVlF4admriytmU5GYbduXU9R4V6Rzfi59fhr7
rT9y/kN+OpIeq83wovLffdsuStW/Povvb16xU7LKCmsu/fOjnqJ3tSdq3QxI
x9b1vas/cCditoxzeozwP9T6v7MceY7gjS86rfmlM/DmRaq/5Sn6w/42oeuv
ZPHFZzqN+cuScHXzyRU7KH1eBTu8u+p9AC3fes6a0SkGe7k+Msuj6IKbXPji
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
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.671013859946015*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Rxy", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "30"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{
       RowBox[{"ColorData", "[", "\"\<SouthwestColors\>\"", "]"}], "[", "z", 
       "]"}]}], "]"}]}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{"R0", "<", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]], "<", "R1"}]}], "]"}]}]}], 
  "]"}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["With Boundary Conditions (large radius)", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "\[Chi]", ",", "\[Chi]1", ",", "\[Chi]2", ",", "\[Chi]3", ",", "\[Chi]3"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"BCrhs", ",", "BC"}], "}"}], "=", 
  RowBox[{"Normal", "[", 
   RowBox[{"CoefficientArrays", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"sn", "-", "vnW"}], ")"}]}], "+", 
        RowBox[{"\[Chi]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Theta]", "-", "\[Theta]W"}], ")"}], "+", "Rnn"}], 
          ")"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"-", "Rnt"}], "+", 
        RowBox[{"\[Chi]", " ", "st"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\[Theta]", ",", "sn", ",", "st", ",", "Rnn", ",", "Rnt", ",", "Rtt"}], 
      "}"}]}], "]"}], "]"}]}], "\[IndentingNewLine]"}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"vnW", "-", 
      RowBox[{"\[Theta]W", " ", "\[Chi]"}]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Chi]", ",", 
       RowBox[{"-", "1"}], ",", "0", ",", "\[Chi]", ",", "0", ",", "0"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\[Chi]", ",", "0", ",", 
       RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"R0", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"R1", "=", "2.0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Zeta]", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Chi]", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]0", "=", "2.0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]1", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"uW0", "=", "0.0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A0", "=", "0.0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A1", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A2", "=", 
     RowBox[{"-", "0.1"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"scaling", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"C1", "\[Rule]", "C1"}], ",", 
       RowBox[{"C2", "\[Rule]", "C2"}], ",", 
       RowBox[{"K1", "\[Rule]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"BK", "[", 
           RowBox[{"1", ",", 
            RowBox[{"\[Lambda]1", " ", 
             FractionBox["R0", "\[Tau]"]}]}], "]"}], 
          RowBox[{"-", "1"}]], 
         RowBox[{"K1", "/", 
          RowBox[{"(", "\[Tau]", ")"}]}]}]}], ",", 
       RowBox[{"K2", "\[Rule]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"BI", "[", 
           RowBox[{"1", ",", 
            RowBox[{"\[Lambda]1", " ", 
             FractionBox["R1", "\[Tau]"]}]}], "]"}], 
          RowBox[{"-", "1"}]], 
         RowBox[{"K2", "/", 
          RowBox[{"(", "\[Tau]", ")"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"K3", "\[Rule]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"BK", "[", 
           RowBox[{"1", ",", 
            RowBox[{"\[Lambda]1", " ", 
             FractionBox["R0", "\[Tau]"]}]}], "]"}], 
          RowBox[{"-", "1"}]], "K3"}]}], ",", 
       RowBox[{"K4", "\[Rule]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"BI", "[", 
           RowBox[{"1", ",", 
            RowBox[{"\[Lambda]1", " ", 
             FractionBox["R1", "\[Tau]"]}]}], "]"}], 
          RowBox[{"-", "1"}]], "K4"}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"scaling1", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"U", "[", 
    RowBox[{"r_", ",", "\[Theta]_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"theta", "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"nn", "[", "r", "]"}], 
      RowBox[{"sr", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}]}], ",", 
     RowBox[{"s\[Theta]", "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
     RowBox[{"Rrr", "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"nn", "[", "r", "]"}], 
      RowBox[{"Rr\[Theta]", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}]}], ",", 
     RowBox[{"R\[Theta]\[Theta]", "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nn", "[", "R0", "]"}], "=", 
   RowBox[{"-", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"nn", "[", "R1", "]"}], "=", "1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"solbc", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Join", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"coef", "[", 
           RowBox[{
            RowBox[{"Expand", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"BC", ".", 
                RowBox[{"U", "[", 
                 RowBox[{"R0", ",", "\[Theta]"}], "]"}]}], "+", "BCrhs"}], "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Theta]W", "\[Rule]", "\[Theta]0"}], ",", 
                RowBox[{"vnW", "\[Rule]", "0"}], ",", 
                RowBox[{"vtW", "\[Rule]", "0"}], ",", 
                RowBox[{"\[Chi]1", "\[Rule]", "eps"}], ",", 
                RowBox[{"\[Chi]2", "\[Rule]", 
                 RowBox[{"1", "/", "eps"}]}]}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"coef", "[", 
           RowBox[{
            RowBox[{"Expand", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"BC", ".", 
                RowBox[{"U", "[", 
                 RowBox[{"R1", ",", "\[Theta]"}], "]"}]}], "+", "BCrhs"}], "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Theta]W", "\[Rule]", "\[Theta]1"}], ",", 
                RowBox[{"vnW", "\[Rule]", "0"}], ",", 
                RowBox[{"vtW", "\[Rule]", "0"}], ",", 
                RowBox[{"\[Chi]1", "\[Rule]", "eps"}], ",", 
                RowBox[{"\[Chi]2", "\[Rule]", 
                 RowBox[{"1", "/", "eps"}]}]}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}]}], 
         "\[IndentingNewLine]", "]"}], "/.", "scaling"}], ")"}], "\[Equal]", 
      "0"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "C1", ",", "C2", ",", "C3", ",", "C4", ",", "K1", ",", "K2", ",", "K3", 
       ",", "K4"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", "1", 
   "\[RightDoubleBracket]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"C1", "\[Rule]", 
    RowBox[{"-", "0.9351837633174386`"}]}], ",", 
   RowBox[{"C2", "\[Rule]", "0.07180825974284018`"}], ",", 
   RowBox[{"C3", "\[Rule]", "3.79149457833139`"}], ",", 
   RowBox[{"C4", "\[Rule]", 
    RowBox[{"-", "1.3083111049166367`"}]}], ",", 
   RowBox[{"K1", "\[Rule]", 
    RowBox[{"-", "0.00015049666674108245`"}]}], ",", 
   RowBox[{"K2", "\[Rule]", "9.007490134902125`*^-6"}], ",", 
   RowBox[{"K3", "\[Rule]", "0.`"}], ",", 
   RowBox[{"K4", "\[Rule]", "0.`"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CForm", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "C1", ",", "C2", ",", "C3", ",", "C4", ",", "K1", ",", "K2", ",", "K3", 
      ",", "K4"}], "}"}], "/.", "scaling"}], "/.", "solbc"}], "]"}]], "Input"],

Cell["\<\
List(-0.9351837633174386,0.07180825974284018,3.79149457833139,-1.\
3083111049166367,-3.577337931978802,
   6.33324623915661e-16,0.,0.)\
\>", "Output"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"basis", "[", "\[CurlyPhi]_", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], ",", 
        RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}], ",", 
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}]}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Theta]C", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"theta", "[", 
       RowBox[{
        SqrtBox[
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"]}]], ",", 
        RowBox[{"ArcTan", "[", 
         RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "/.", "scaling"}], "/.", 
     "solbc"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"sx", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}], ",", 
     RowBox[{"sy", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}]}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"sr", "[", 
         RowBox[{
          SqrtBox[
           RowBox[{
            SuperscriptBox["x", "2"], "+", 
            SuperscriptBox["y", "2"]}]], ",", 
          RowBox[{"ArcTan", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], "]"}], ",", 
        RowBox[{"s\[Theta]", "[", 
         RowBox[{
          SqrtBox[
           RowBox[{
            SuperscriptBox["x", "2"], "+", 
            SuperscriptBox["y", "2"]}]], ",", 
          RowBox[{"ArcTan", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}], "}"}], ".", 
      RowBox[{"basis", "[", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"x", ",", "y"}], "]"}], "]"}]}], "/.", "scaling"}], "/.", 
    "solbc"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Rxx", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}], ",", 
       RowBox[{"Rxy", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Ryx", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}], ",", 
       RowBox[{"Ryy", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}]}], "}"}]}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"basis", "[", 
        RowBox[{"ArcTan", "[", 
         RowBox[{"x", ",", "y"}], "]"}], "]"}], "]"}], ".", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Rrr", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]], ",", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}], "]"}], ",", 
            RowBox[{"Rr\[Theta]", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]], ",", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Rr\[Theta]", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]], ",", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}], "]"}], ",", 
            RowBox[{"R\[Theta]\[Theta]", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]], ",", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}], "}"}]}], "}"}], ".", 
        RowBox[{"basis", "[", 
         RowBox[{"ArcTan", "[", 
          RowBox[{"x", ",", "y"}], "]"}], "]"}]}], ")"}]}], "/.", "scaling"}],
     "/.", "solbc"}]}], ";"}], "\[IndentingNewLine]"}], "Input"],

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"\[Theta]C", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2.1"}], ",", "2.1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "2.1"}], ",", "2.1"}], "}"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "30"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{
       RowBox[{"ColorData", "[", "\"\<SouthwestColors\>\"", "]"}], "[", "z", 
       "]"}]}], "]"}]}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{"R0", "<", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]], "<", "R1"}]}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input"],

Cell[BoxData[" "], "Input"],

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"sx", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2.1"}], ",", "2.1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "2.1"}], ",", "2.1"}], "}"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "30"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{
       RowBox[{"ColorData", "[", "\"\<SouthwestColors\>\"", "]"}], "[", "z", 
       "]"}]}], "]"}]}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{"R0", "<", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]], "<", "R1"}]}], "]"}]}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Rxy", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "30"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{
       RowBox[{"ColorData", "[", "\"\<SouthwestColors\>\"", "]"}], "[", "z", 
       "]"}]}], "]"}]}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{"R0", "<", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]], "<", "R1"}]}], "]"}]}]}], 
  "]"}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["With Boundary Conditions (large, angular)", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"\[Chi]1", ",", "\[Chi]2", ",", "\[Chi]3", ",", "\[Chi]3"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"BCrhs", ",", "BC"}], "}"}], "=", 
  RowBox[{"Normal", "[", 
   RowBox[{"CoefficientArrays", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"sn", "-", "vnW"}], ")"}]}], "+", 
        RowBox[{"\[Chi]1", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Theta]", "-", "\[Theta]W"}], ")"}], "+", "Rnn"}], 
          ")"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"-", "Rnt"}], "+", 
        RowBox[{"\[Chi]2", 
         RowBox[{"(", 
          RowBox[{"st", "-", "vtW"}], ")"}]}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\[Theta]", ",", "sn", ",", "st", ",", "Rnn", ",", "Rnt", ",", "Rtt"}], 
      "}"}]}], "]"}], "]"}]}], "\[IndentingNewLine]"}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"vnW", "-", 
      RowBox[{"\[Theta]W", " ", "\[Chi]1"}]}], ",", 
     RowBox[{
      RowBox[{"-", "vtW"}], " ", "\[Chi]2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Chi]1", ",", 
       RowBox[{"-", "1"}], ",", "0", ",", "\[Chi]1", ",", "0", ",", "0"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\[Chi]2", ",", "0", ",", 
       RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"BCrhs", ",", "BC"}], "}"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"vnW", "\[Rule]", "0"}], ",", 
    RowBox[{"\[Theta]W", "\[Rule]", "0"}], ",", 
    RowBox[{"\[Chi]1", "\[Rule]", "\[Chi]"}], ",", 
    RowBox[{"\[Chi]2", "\[Rule]", "\[Chi]"}]}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"-", "vtW"}], " ", "\[Chi]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Chi]", ",", 
       RowBox[{"-", "1"}], ",", "0", ",", "\[Chi]", ",", "0", ",", "0"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\[Chi]", ",", "0", ",", 
       RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"R0", "=", 
     RowBox[{"1", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"R1", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]", "=."}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Chi]", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"v0", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A1", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A2", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"scaling", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"C1", "\[Rule]", "C1"}], ",", 
       RowBox[{"C2", "\[Rule]", "C2"}], ",", 
       RowBox[{"K1", "\[Rule]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"BK", "[", 
           RowBox[{"1", ",", 
            RowBox[{"\[Lambda]1", " ", 
             FractionBox["R0", "\[Tau]"]}]}], "]"}], 
          RowBox[{"-", "1"}]], 
         RowBox[{"K1", "/", 
          RowBox[{"(", "\[Tau]", ")"}]}]}]}], ",", 
       RowBox[{"K2", "\[Rule]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"BI", "[", 
           RowBox[{"1", ",", 
            RowBox[{"\[Lambda]1", " ", 
             FractionBox["R1", "\[Tau]"]}]}], "]"}], 
          RowBox[{"-", "1"}]], 
         RowBox[{"K2", "/", 
          RowBox[{"(", "\[Tau]", ")"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"K3", "\[Rule]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"BK", "[", 
           RowBox[{"1", ",", 
            RowBox[{"\[Lambda]1", " ", 
             FractionBox["R0", "\[Tau]"]}]}], "]"}], 
          RowBox[{"-", "1"}]], "K3"}]}], ",", 
       RowBox[{"K4", "\[Rule]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"BI", "[", 
           RowBox[{"1", ",", 
            RowBox[{"\[Lambda]1", " ", 
             FractionBox["R1", "\[Tau]"]}]}], "]"}], 
          RowBox[{"-", "1"}]], "K4"}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"scaling1", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"U", "[", 
    RowBox[{"r_", ",", "\[Theta]_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"theta", "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"nn", "[", "r", "]"}], 
      RowBox[{"sr", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}]}], ",", 
     RowBox[{"s\[Theta]", "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
     RowBox[{"Rrr", "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"nn", "[", "r", "]"}], 
      RowBox[{"Rr\[Theta]", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}]}], ",", 
     RowBox[{"R\[Theta]\[Theta]", "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nn", "[", "R0", "]"}], "=", 
   RowBox[{"-", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"nn", "[", "R1", "]"}], "=", "1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"solbc", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Join", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"coef", "[", 
           RowBox[{
            RowBox[{"Expand", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"BC", ".", 
                RowBox[{"U", "[", 
                 RowBox[{"R0", ",", "\[Theta]"}], "]"}]}], "+", "BCrhs"}], "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Theta]W", "\[Rule]", "0"}], ",", 
                RowBox[{"vnW", "\[Rule]", "0"}], ",", 
                RowBox[{"vtW", "\[Rule]", 
                 RowBox[{
                  RowBox[{"-", "v0"}], " ", 
                  RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ",", 
                RowBox[{"\[Chi]1", "\[Rule]", "\[Chi]"}], ",", 
                RowBox[{"\[Chi]2", "\[Rule]", "\[Chi]"}]}], "}"}]}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"coef", "[", 
           RowBox[{
            RowBox[{"Expand", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"BC", ".", 
                RowBox[{"U", "[", 
                 RowBox[{"R1", ",", "\[Theta]"}], "]"}]}], "+", "BCrhs"}], "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Theta]W", "\[Rule]", "0"}], ",", 
                RowBox[{"vnW", "\[Rule]", "0"}], ",", 
                RowBox[{"vtW", "\[Rule]", "0"}], ",", 
                RowBox[{"\[Chi]1", "\[Rule]", "\[Chi]"}], ",", 
                RowBox[{"\[Chi]2", "\[Rule]", "\[Chi]"}]}], "}"}]}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}]}], 
         "\[IndentingNewLine]", "]"}], "/.", "scaling"}], ")"}], "\[Equal]", 
      "0"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "C1", ",", "C2", ",", "C3", ",", "C4", ",", "K1", ",", "K2", ",", "K3", 
       ",", "K4"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", "1", 
   "\[RightDoubleBracket]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"C1", "\[Rule]", "0.802317082510476`"}], ",", 
   RowBox[{"C2", "\[Rule]", 
    RowBox[{"-", "0.0018243621490365378`"}]}], ",", 
   RowBox[{"C3", "\[Rule]", "0.`"}], ",", 
   RowBox[{"C4", "\[Rule]", "0.`"}], ",", 
   RowBox[{"K1", "\[Rule]", 
    RowBox[{"-", "0.025715520724387365`"}]}], ",", 
   RowBox[{"K2", "\[Rule]", "5.828997268003255`*^-7"}], ",", 
   RowBox[{"K3", "\[Rule]", "0.`"}], ",", 
   RowBox[{"K4", "\[Rule]", "0.`"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"C3", "=", 
   RowBox[{"C4", "=", 
    RowBox[{"K3", "=", 
     RowBox[{"K4", "=", "0"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"bBC", ",", "ABC"}], "}"}], "=", 
   RowBox[{"FunctionExpand", "[", 
    RowBox[{"Simplify", "[", 
     RowBox[{"Normal", "[", 
      RowBox[{"CoefficientArrays", "[", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Join", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"coef", "[", 
             RowBox[{
              RowBox[{"Expand", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"BC", ".", 
                  RowBox[{"U", "[", 
                   RowBox[{"R0", ",", "\[Theta]"}], "]"}]}], "+", "BCrhs"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Theta]W", "\[Rule]", "0"}], ",", 
                  RowBox[{"vnW", "\[Rule]", "0"}], ",", 
                  RowBox[{"vtW", "\[Rule]", 
                   RowBox[{
                    RowBox[{"-", "v0"}], " ", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ",", 
                  RowBox[{"\[Chi]1", "\[Rule]", "\[Chi]"}], ",", 
                  RowBox[{"\[Chi]2", "\[Rule]", "\[Chi]"}]}], "}"}]}], "]"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"coef", "[", 
             RowBox[{
              RowBox[{"Expand", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"BC", ".", 
                  RowBox[{"U", "[", 
                   RowBox[{"R1", ",", "\[Theta]"}], "]"}]}], "+", "BCrhs"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Theta]W", "\[Rule]", "0"}], ",", 
                  RowBox[{"vnW", "\[Rule]", "0"}], ",", 
                  RowBox[{"vtW", "\[Rule]", "0"}], ",", 
                  RowBox[{"\[Chi]1", "\[Rule]", "\[Chi]"}], ",", 
                  RowBox[{"\[Chi]2", "\[Rule]", "\[Chi]"}]}], "}"}]}], "]"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "]"}]}], 
           "\[IndentingNewLine]", "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "#", "]"}], ">", "0"}], "&"}]}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"C1", ",", "C2", ",", "K1", ",", "K2"}], "}"}]}], "]"}], 
      "]"}], "]"}], "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scale1", "=", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox["\[Tau]", "0"], ",", 
      SuperscriptBox["\[Tau]", 
       RowBox[{"-", "1"}]], ",", "1", ",", "1"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scale2", "=", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox["\[Tau]", 
       RowBox[{"-", "3"}]], ",", 
      SuperscriptBox["\[Tau]", "0"], ",", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Tau]", "2"], 
         RowBox[{"BesselK", "[", 
          RowBox[{"0", ",", 
           FractionBox["\[Lambda]1", 
            RowBox[{"R1", " ", "\[Tau]"}]]}], "]"}]}], ")"}], 
       RowBox[{"-", "1"}]], ",", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"BesselI", "[", 
         RowBox[{"0", ",", 
          FractionBox["\[Lambda]1", 
           RowBox[{"R0", " ", "\[Tau]"}]]}], "]"}], ")"}], 
       RowBox[{"-", "1"}]]}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{"scale1", ".", "ABC", ".", "scale2"}], "/.", 
    RowBox[{"{", 
     RowBox[{"\[Tau]", "\[Rule]", "0.01"}], "}"}]}], "]"}], "]"}]}], "Input"],

Cell[BoxData["\[IndentingNewLine]"], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"basis", "[", "\[CurlyPhi]_", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], ",", 
        RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}], ",", 
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}]}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Theta]C", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"theta", "[", 
       RowBox[{
        SqrtBox[
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"]}]], ",", 
        RowBox[{"ArcTan", "[", 
         RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "/.", "scaling"}], "/.", 
     "solbc"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"sx", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}], ",", 
     RowBox[{"sy", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}]}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"sr", "[", 
         RowBox[{
          SqrtBox[
           RowBox[{
            SuperscriptBox["x", "2"], "+", 
            SuperscriptBox["y", "2"]}]], ",", 
          RowBox[{"ArcTan", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], "]"}], ",", 
        RowBox[{"s\[Theta]", "[", 
         RowBox[{
          SqrtBox[
           RowBox[{
            SuperscriptBox["x", "2"], "+", 
            SuperscriptBox["y", "2"]}]], ",", 
          RowBox[{"ArcTan", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}], "}"}], ".", 
      RowBox[{"basis", "[", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"x", ",", "y"}], "]"}], "]"}]}], "/.", "scaling"}], "/.", 
    "solbc"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Rxx", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}], ",", 
       RowBox[{"Rxy", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Ryx", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}], ",", 
       RowBox[{"Ryy", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}]}], "}"}]}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"basis", "[", 
        RowBox[{"ArcTan", "[", 
         RowBox[{"x", ",", "y"}], "]"}], "]"}], "]"}], ".", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Rrr", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]], ",", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}], "]"}], ",", 
            RowBox[{"Rr\[Theta]", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]], ",", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Rr\[Theta]", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]], ",", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}], "]"}], ",", 
            RowBox[{"R\[Theta]\[Theta]", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]], ",", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}], "}"}]}], "}"}], ".", 
        RowBox[{"basis", "[", 
         RowBox[{"ArcTan", "[", 
          RowBox[{"x", ",", "y"}], "]"}], "]"}]}], ")"}]}], "/.", "scaling"}],
     "/.", "solbc"}]}], ";"}], "\[IndentingNewLine]"}], "Input"],

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"\[Theta]C", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2.1"}], ",", "2.1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "2.1"}], ",", "2.1"}], "}"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "30"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{
       RowBox[{"ColorData", "[", "\"\<SouthwestColors\>\"", "]"}], "[", "z", 
       "]"}]}], "]"}]}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{"R0", "<", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]], "<", "R1"}]}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"sx", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2.1"}], ",", "2.1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "2.1"}], ",", "2.1"}], "}"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "30"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{
       RowBox[{"ColorData", "[", "\"\<SouthwestColors\>\"", "]"}], "[", "z", 
       "]"}]}], "]"}]}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{"R0", "<", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]], "<", "R1"}]}], "]"}]}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Rxy", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "30"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{
       RowBox[{"ColorData", "[", "\"\<SouthwestColors\>\"", "]"}], "[", "z", 
       "]"}]}], "]"}]}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{"R0", "<", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]], "<", "R1"}]}], "]"}]}]}], 
  "]"}]], "Input"]
}, Closed]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{104, Automatic}, {Automatic, 47}},
Visible->True,
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 68, 0, 95, "Section"],
Cell[651, 24, 221, 7, 105, "Text"],
Cell[875, 33, 141, 3, 105, "Text"],
Cell[1019, 38, 333, 11, 105, "Text"],
Cell[1355, 51, 171, 5, 105, "Text"],
Cell[1529, 58, 208, 6, 105, "Input"],
Cell[CellGroupData[{
Cell[1762, 68, 67, 0, 105, "Subsection"],
Cell[1832, 70, 1001, 30, 105, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2870, 105, 142, 3, 105, "Subsection"],
Cell[CellGroupData[{
Cell[3037, 112, 3708, 107, 105, "Input"],
Cell[6748, 221, 327, 10, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7112, 236, 28, 0, 105, "Input"],
Cell[7143, 238, 354, 11, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7534, 254, 41, 0, 105, "Input"],
Cell[7578, 256, 944, 30, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8559, 291, 326, 8, 105, "Input"],
Cell[8888, 301, 347, 11, 70, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9284, 318, 66, 0, 105, "Subsection"],
Cell[9353, 320, 104, 3, 105, "Input"],
Cell[9460, 325, 496, 17, 105, "Input"],
Cell[9959, 344, 1036, 32, 105, "Input"],
Cell[CellGroupData[{
Cell[11020, 380, 127, 3, 105, "Input"],
Cell[11150, 385, 826, 28, 70, "Output"]
}, Open  ]],
Cell[11991, 416, 2120, 60, 105, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14148, 481, 76, 0, 105, "Subsection"],
Cell[14227, 483, 530, 17, 105, "Input"],
Cell[14760, 502, 1155, 34, 105, "Input"],
Cell[15918, 538, 818, 22, 105, "Input"],
Cell[16739, 562, 2597, 71, 105, "Input"],
Cell[19339, 635, 2102, 59, 105, "Input"],
Cell[21444, 696, 4487, 120, 105, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[25968, 821, 63, 0, 105, "Subsection"],
Cell[26034, 823, 896, 26, 105, "Input"],
Cell[26933, 851, 1949, 54, 105, "Input"],
Cell[28885, 907, 1076, 28, 105, "Input"],
Cell[29964, 937, 697, 20, 105, "Input"],
Cell[30664, 959, 2852, 68, 105, "Input"],
Cell[33519, 1029, 1160, 30, 105, "Input"],
Cell[34682, 1061, 3621, 92, 105, "Input"],
Cell[CellGroupData[{
Cell[38328, 1157, 397, 12, 105, "Input"],
Cell[38728, 1171, 1364, 45, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40129, 1221, 57, 1, 105, "Input"],
Cell[40189, 1224, 2542, 91, 70, "Output"]
}, Open  ]],
Cell[42746, 1318, 4089, 103, 105, "Input"],
Cell[46838, 1423, 45, 0, 105, "Input"],
Cell[46886, 1425, 6969, 169, 105, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[53892, 1599, 63, 0, 105, "Subsection"],
Cell[53958, 1601, 5142, 125, 105, "Input"],
Cell[CellGroupData[{
Cell[59125, 1730, 406, 12, 105, "Input"],
Cell[59534, 1744, 3809, 117, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63380, 1866, 57, 1, 105, "Input"],
Cell[63440, 1869, 5008, 148, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68485, 2022, 471, 16, 105, "Input"],
Cell[68959, 2040, 518, 17, 70, "Output"]
}, Open  ]],
Cell[69492, 2060, 5675, 136, 105, "Input"],
Cell[75170, 2198, 45, 0, 105, "Input"],
Cell[75218, 2200, 9369, 216, 105, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[84636, 2422, 45, 0, 65, "Subchapter"],
Cell[CellGroupData[{
Cell[84706, 2426, 67, 0, 95, "Section"],
Cell[CellGroupData[{
Cell[84798, 2430, 34, 0, 65, "Subsection"],
Cell[84835, 2432, 10307, 294, 105, "Input"],
Cell[95145, 2728, 17736, 554, 105, "Input"],
Cell[112884, 3284, 45, 0, 105, "Input"],
Cell[112932, 3286, 2754, 80, 105, "Input"],
Cell[115689, 3368, 3391, 94, 105, "Input"],
Cell[119083, 3464, 763, 18, 105, "Input"],
Cell[119849, 3484, 763, 18, 105, "Input"],
Cell[120615, 3504, 121, 3, 105, "Input"],
Cell[CellGroupData[{
Cell[120761, 3511, 1683, 51, 105, "Input"],
Cell[122447, 3564, 1266, 40, 105, "Output"],
Cell[123716, 3606, 10979, 321, 105, "Output"],
Cell[134698, 3929, 3105, 92, 105, "Output"],
Cell[137806, 4023, 12931, 371, 105, "Output"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[150786, 4400, 61, 0, 51, "Subsection"],
Cell[CellGroupData[{
Cell[150872, 4404, 1261, 36, 105, "Input"],
Cell[152136, 4442, 1030, 27, 105, "Output"]
}, Open  ]],
Cell[153181, 4472, 941, 29, 105, "Input"],
Cell[CellGroupData[{
Cell[154147, 4505, 383, 12, 105, "Input"],
Cell[154533, 4519, 1624, 46, 105, "Output"],
Cell[156160, 4567, 1564, 48, 105, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[157761, 4620, 1081, 33, 105, "Input"],
Cell[158845, 4655, 2269, 81, 105, "Output"],
Cell[161117, 4738, 729, 25, 105, "Output"]
}, Closed]],
Cell[161861, 4766, 4058, 115, 105, "Input"],
Cell[CellGroupData[{
Cell[165944, 4885, 3764, 105, 105, "Input"],
Cell[169711, 4992, 469, 11, 105, "Output"]
}, Open  ]],
Cell[170195, 5006, 2375, 61, 105, "Input"],
Cell[CellGroupData[{
Cell[172595, 5071, 2275, 67, 105, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[174873, 5140, 567, 14, 105, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[175477, 5159, 275, 8, 105, "Input"],
Cell[175755, 5169, 241, 5, 105, "Output"]
}, Closed]],
Cell[176011, 5177, 80, 1, 105, "Input"],
Cell[176094, 5180, 4355, 132, 105, "Input"],
Cell[180452, 5314, 1026, 30, 105, "Input"],
Cell[181481, 5346, 1029, 31, 105, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[182559, 5383, 65, 0, 95, "Section"],
Cell[CellGroupData[{
Cell[182649, 5387, 34, 0, 65, "Subsection"],
Cell[182686, 5389, 3039, 89, 105, "Input"],
Cell[185728, 5480, 10154, 293, 105, "Input"],
Cell[195885, 5775, 3236, 89, 105, "Input"],
Cell[199124, 5866, 12555, 398, 105, "Input"],
Cell[CellGroupData[{
Cell[211704, 6268, 103, 2, 105, "Input"],
Cell[211810, 6272, 764, 18, 105, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[212623, 6296, 61, 0, 51, "Subsection"],
Cell[212687, 6298, 3571, 102, 105, "Input"],
Cell[CellGroupData[{
Cell[216283, 6404, 6549, 160, 105, "Input"],
Cell[222835, 6566, 918, 20, 105, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[223790, 6591, 84, 2, 105, "Input"],
Cell[223877, 6595, 847, 24, 105, "Output"]
}, Closed]],
Cell[224739, 6622, 4355, 132, 105, "Input"],
Cell[229097, 6756, 979, 30, 105, "Input"],
Cell[230079, 6788, 1029, 31, 105, "Input"],
Cell[231111, 6821, 987, 30, 105, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[232135, 6856, 61, 0, 51, "Subsection"],
Cell[CellGroupData[{
Cell[232221, 6860, 3241, 94, 105, "Input"],
Cell[235465, 6956, 11468, 201, 105, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[246970, 7162, 1457, 41, 105, "Input"],
Cell[248430, 7205, 1016, 27, 105, "Output"]
}, Open  ]],
Cell[249461, 7235, 3753, 108, 105, "Input"],
Cell[CellGroupData[{
Cell[253239, 7347, 4828, 123, 105, "Input"],
Cell[258070, 7472, 979, 23, 105, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[259086, 7500, 298, 8, 105, "Input"],
Cell[259387, 7510, 178, 3, 105, "Output"]
}, Open  ]],
Cell[259580, 7516, 80, 1, 105, "Input"],
Cell[259663, 7519, 4423, 133, 105, "Input"],
Cell[264089, 7654, 979, 30, 105, "Input"],
Cell[265071, 7686, 1029, 31, 105, "Input"],
Cell[266103, 7719, 1179, 36, 105, "Input"]
}, Closed]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[267343, 7762, 43, 0, 65, "Subchapter"],
Cell[CellGroupData[{
Cell[267411, 7766, 61, 0, 95, "Section"],
Cell[CellGroupData[{
Cell[267497, 7770, 34, 0, 65, "Subsection"],
Cell[267534, 7772, 971, 28, 105, "Input"],
Cell[268508, 7802, 4269, 119, 105, "Input"],
Cell[272780, 7923, 3850, 134, 105, "Input"],
Cell[CellGroupData[{
Cell[276655, 8061, 1714, 52, 105, "Input"],
Cell[278372, 8115, 50, 1, 105, "Output"],
Cell[278425, 8118, 83, 2, 105, "Output"],
Cell[278511, 8122, 338, 6, 105, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[278886, 8133, 857, 26, 105, "Input"],
Cell[279746, 8161, 619, 18, 105, "Output"],
Cell[280368, 8181, 821, 24, 105, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[281238, 8211, 46, 0, 51, "Subsection"],
Cell[281287, 8213, 787, 22, 105, "Input"],
Cell[CellGroupData[{
Cell[282099, 8239, 3695, 93, 105, "Input"],
Cell[285797, 8334, 504, 12, 105, "Output"]
}, Closed]],
Cell[286316, 8349, 4355, 132, 105, "Input"],
Cell[290674, 8483, 979, 30, 105, "Input"],
Cell[291656, 8515, 1029, 31, 105, "Input"],
Cell[292688, 8548, 987, 30, 105, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[293712, 8583, 54, 0, 51, "Subsection"],
Cell[CellGroupData[{
Cell[293791, 8587, 1027, 30, 105, "Input"],
Cell[294821, 8619, 553, 17, 105, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[295411, 8641, 806, 24, 105, "Input"],
Cell[296220, 8667, 522, 16, 105, "Output"]
}, Open  ]],
Cell[296757, 8686, 1260, 37, 105, "Input"],
Cell[CellGroupData[{
Cell[298042, 8727, 3870, 101, 105, "Input"],
Cell[301915, 8830, 1259, 19, 105, "Message"],
Cell[303177, 8851, 504, 12, 105, "Output"]
}, Open  ]],
Cell[303696, 8866, 45, 0, 105, "Input"],
Cell[303744, 8868, 4310, 132, 105, "Input"],
Cell[308057, 9002, 1033, 30, 105, "Input"],
Cell[309093, 9034, 1029, 31, 105, "Input"],
Cell[310125, 9067, 980, 30, 105, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[311154, 9103, 63, 0, 95, "Section"],
Cell[CellGroupData[{
Cell[311242, 9107, 34, 0, 65, "Subsection"],
Cell[311279, 9109, 4589, 138, 496, "Input"],
Cell[315871, 9249, 9341, 288, 1201, "Input"],
Cell[325215, 9539, 456, 15, 97, "Input"],
Cell[CellGroupData[{
Cell[325696, 9558, 1724, 50, 255, "Input"],
Cell[327423, 9610, 675, 16, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[328135, 9631, 897, 26, 155, "Input"],
Cell[329035, 9659, 194, 5, 77, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[329278, 9670, 46, 0, 65, "Subsection"],
Cell[329327, 9672, 1127, 30, 394, "Input"],
Cell[CellGroupData[{
Cell[330479, 9706, 4643, 120, 369, "Input"],
Cell[335125, 9828, 895, 16, 95, "Message"],
Cell[336023, 9846, 582, 12, 82, "Output"]
}, Open  ]],
Cell[336620, 9861, 80, 1, 94, "Input"],
Cell[336703, 9864, 4310, 132, 429, "Input"],
Cell[CellGroupData[{
Cell[341038, 10000, 1093, 31, 131, "Input"],
Cell[342134, 10033, 323115, 5320, 313, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[665286, 15358, 1029, 31, 131, "Input"],
Cell[666318, 15391, 229424, 3773, 444, "Output"]
}, Open  ]],
Cell[895757, 19167, 980, 30, 131, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[896774, 19202, 61, 0, 65, "Subsection"],
Cell[CellGroupData[{
Cell[896860, 19206, 985, 29, 105, "Input"],
Cell[897848, 19237, 493, 15, 105, "Output"]
}, Open  ]],
Cell[898356, 19255, 2535, 72, 105, "Input"],
Cell[CellGroupData[{
Cell[900916, 19331, 3339, 89, 105, "Input"],
Cell[904258, 19422, 559, 13, 105, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[904854, 19440, 249, 7, 105, "Input"],
Cell[905106, 19449, 160, 4, 105, "Output"]
}, Open  ]],
Cell[905281, 19456, 4310, 132, 105, "Input"],
Cell[909594, 19590, 1033, 30, 105, "Input"],
Cell[910630, 19622, 27, 0, 105, "Input"],
Cell[910660, 19624, 1029, 31, 105, "Input"],
Cell[911692, 19657, 980, 30, 105, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[912709, 19692, 63, 0, 51, "Subsection"],
Cell[CellGroupData[{
Cell[912797, 19696, 1027, 30, 105, "Input"],
Cell[913827, 19728, 553, 17, 105, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[914417, 19750, 325, 9, 105, "Input"],
Cell[914745, 19761, 480, 15, 105, "Output"]
}, Open  ]],
Cell[915240, 19779, 2331, 68, 105, "Input"],
Cell[CellGroupData[{
Cell[917596, 19851, 3411, 92, 105, "Input"],
Cell[921010, 19945, 508, 12, 105, "Output"]
}, Open  ]],
Cell[921533, 19960, 4107, 109, 105, "Input"],
Cell[925643, 20071, 45, 0, 105, "Input"],
Cell[925691, 20073, 4310, 132, 105, "Input"],
Cell[930004, 20207, 1033, 30, 105, "Input"],
Cell[931040, 20239, 1029, 31, 105, "Input"],
Cell[932072, 20272, 980, 30, 105, "Input"]
}, Closed]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

