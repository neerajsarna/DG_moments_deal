(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     83507,       1660]
NotebookOptionsPosition[     81364,       1580]
NotebookOutlinePosition[     81724,       1596]
CellTagsIndexPosition[     81681,       1593]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]], "Input"],

Cell[BoxData["\<\"/Users/neerajsarna/sciebo/DG_moments_deal/Mathematica_files\
\"\>"], "Output",
 CellChangeTimes->{3.698660268222497*^9, 3.69876482794238*^9, 
  3.699094818131465*^9, 3.699094862189692*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Importing data", "Section",
 CellChangeTimes->{{3.669612040340261*^9, 3.669612043088347*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"numerical", " ", "solution"}], ",", " ", 
    RowBox[{"flag", " ", "\[Equal]", " ", "0"}], ",", "\[IndentingNewLine]", 
    " ", 
    RowBox[{"exact", " ", "solution"}], ",", " ", 
    RowBox[{"flag", " ", "\[Equal]", " ", 
     RowBox[{
     "1", " ", "and", " ", "\[IndentingNewLine]", "error", " ", "flag"}], " ",
      "\[Equal]", " ", "2"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"importdata", "[", 
    RowBox[{
    "dof_", ",", "p_", ",", "refinetype_", ",", "flag_", ",", "outputdir_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"result", ",", "filename"}], "}"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{"flag", " ", "\[Equal]", " ", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"filename", "=", 
         RowBox[{"StringJoin", "[", 
          RowBox[{
          "\"\<../\>\"", ",", "outputdir", ",", 
           "\"\</solution/numerical_solution\>\"", ",", "refinetype", ",", 
           "\"\<degree_\>\"", ",", 
           RowBox[{"ToString", "[", "p", "]"}], ",", "\"\<_DOF_\>\"", ",", 
           RowBox[{"ToString", "[", "dof", "]"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"flag", " ", "\[Equal]", " ", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"filename", "=", 
         RowBox[{"StringJoin", "[", 
          RowBox[{
          "\"\<../\>\"", ",", "outputdir", ",", 
           "\"\</solution/exact_solution\>\"", ",", "refinetype", ",", 
           "\"\<degree_\>\"", ",", 
           RowBox[{"ToString", "[", "p", "]"}], ",", "\"\<_DOF_\>\"", ",", 
           RowBox[{"ToString", "[", "dof", "]"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"flag", " ", "\[Equal]", " ", "2"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"filename", "=", 
         RowBox[{"StringJoin", "[", 
          RowBox[{
          "\"\<../\>\"", ",", "outputdir", ",", "\"\</solution/error\>\"", 
           ",", "refinetype", ",", "\"\<degree_\>\"", ",", 
           RowBox[{"ToString", "[", "p", "]"}], ",", "\"\<_DOF_\>\"", ",", 
           RowBox[{"ToString", "[", "dof", "]"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"result", " ", "=", " ", 
       RowBox[{
        RowBox[{"Import", "[", 
         RowBox[{"filename", ",", "\"\<Table\>\""}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"2", ";;", 
           RowBox[{"-", "1"}]}], ",", "All"}], "]"}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.669612046359902*^9, 3.669612413807294*^9}, {
   3.669612466093939*^9, 3.669612468874626*^9}, {3.669612505973831*^9, 
   3.66961259319687*^9}, {3.6710127938561897`*^9, 3.671012876199942*^9}, {
   3.68769289985107*^9, 3.687692900977291*^9}, 3.687693330393715*^9, {
   3.698386119765111*^9, 3.698386122354374*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["IDs for different variables", "Section",
 CellChangeTimes->{{3.696580055896234*^9, 3.696580059992462*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "we", " ", "declare", " ", "the", " ", "IDs", " ", "for", " ", 
     "different", " ", "variables"}], ",", " ", 
    RowBox[{
    "this", " ", "will", " ", "help", " ", "us", " ", "with", " ", 
     "plotting"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"IDSpace", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"IDRho", " ", "=", " ", 
     RowBox[{"1", "+", "IDSpace"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"IDvx", " ", "=", " ", 
     RowBox[{"2", "+", "IDSpace"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"IDtheta", " ", "=", " ", 
     RowBox[{"3", "+", "IDSpace"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.696580065109486*^9, 3.6965801391978893`*^9}, {
  3.69658115056069*^9, 3.6965811599769897`*^9}, {3.697960331352499*^9, 
  3.69796036750634*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Mapping to Primitive variables", "Section",
 CellChangeTimes->{{3.696583691326552*^9, 3.696583703117042*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "we", " ", "change", " ", "the", " ", "numerical", " ", "solution", " ", 
    "obtained", " ", "to", " ", "the", " ", "primitive", " ", 
    RowBox[{"variables", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ConvToPrim", "[", "sol_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "factor\[Theta]", ",", "factor\[Sigma]", ",", "factorq", ",", 
       "trialsol"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"trialsol", " ", "=", " ", "sol"}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"factor\[Theta]", " ", "=", " ", 
       SqrtBox["2"]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"trialsol", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "IDtheta"}], "\[RightDoubleBracket]"}], " ", "=", 
       
       RowBox[{"factor\[Theta]", " ", "*", " ", 
        RowBox[{"sol", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "IDtheta"}], "\[RightDoubleBracket]"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "trialsol"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6965837061069403`*^9, 3.696583717514237*^9}, {
  3.696583908798395*^9, 3.6965840901636267`*^9}, {3.696585459745919*^9, 
  3.696585482490589*^9}, {3.696585613969385*^9, 3.6965857085399733`*^9}, {
  3.697960379434245*^9, 3.69796039531357*^9}, {3.6979604303097363`*^9, 
  3.6979604306195602`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Poisson Heat conduction", "Section",
 CellChangeTimes->{{3.697960441066794*^9, 3.6979604452417173`*^9}}],

Cell[CellGroupData[{

Cell["G20", "Subsection",
 CellChangeTimes->{{3.6979604494583817`*^9, 3.6979604501295*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ndof", "=", "3072"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "foldername", " ", "=", " ", 
   "\"\<Tests/build/output_N6_poisson_heat_1D_Kn0p1\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"importdata", "[", 
    RowBox[{
    "ndof", ",", "1", ",", "\"\<_global_\>\"", ",", "0", ",", "foldername"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", " ", "=", " ", 
   RowBox[{"ConvToPrim", "[", "sol", "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.697960452310875*^9, 3.697960520417783*^9}, {
  3.697960711101891*^9, 3.697960712807272*^9}, {3.698385615776208*^9, 
  3.698385631404853*^9}, {3.698386096548395*^9, 3.698386148074709*^9}, {
  3.6987648578150053`*^9, 3.698764875173214*^9}, {3.698764906003867*^9, 
  3.698764947144506*^9}, {3.699675311056466*^9, 3.699675358477211*^9}}],

Cell[CellGroupData[{

Cell["\[Theta]", "Subsubsection",
 CellChangeTimes->{{3.69796052986224*^9, 3.697960530413341*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"plot1", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Error20", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "IDtheta"}], "}"}]}], "\[RightDoubleBracket]"}], 
     ",", 
     RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6979605324657717`*^9, 3.697960572875208*^9}, {
  3.6979684735081787`*^9, 3.6979684763541517`*^9}, {3.6979686304444857`*^9, 
  3.6979686473487053`*^9}, {3.698385744871746*^9, 3.6983857504842443`*^9}, {
  3.698386153797813*^9, 3.698386165988146*^9}, {3.698764959401079*^9, 
  3.698764983810912*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["G26", "Subsection",
 CellChangeTimes->{{3.6979604494583817`*^9, 3.6979604501295*^9}, {
  3.699675377744285*^9, 3.699675378026298*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ndof", "=", "4096"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "foldername", " ", "=", " ", 
   "\"\<Tests/build/output_N8_poisson_heat_1D_Kn0p1\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol26", "=", 
   RowBox[{"importdata", "[", 
    RowBox[{
    "ndof", ",", "1", ",", "\"\<_global_\>\"", ",", "0", ",", "foldername"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol26", " ", "=", " ", 
   RowBox[{"ConvToPrim", "[", "sol26", "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.697960452310875*^9, 3.697960520417783*^9}, {
  3.697960711101891*^9, 3.697960712807272*^9}, {3.698385615776208*^9, 
  3.698385631404853*^9}, {3.698386096548395*^9, 3.698386148074709*^9}, {
  3.6987648578150053`*^9, 3.698764875173214*^9}, {3.698764906003867*^9, 
  3.698764947144506*^9}, {3.699675311056466*^9, 3.699675358477211*^9}, {
  3.6996753915347223`*^9, 3.699675405804161*^9}}],

Cell[CellGroupData[{

Cell["\[Theta]", "Subsubsection",
 CellChangeTimes->{{3.69796052986224*^9, 3.697960530413341*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"plot1", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Error20", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "IDtheta"}], "}"}]}], "\[RightDoubleBracket]"}], 
     ",", 
     RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6979605324657717`*^9, 3.697960572875208*^9}, {
  3.6979684735081787`*^9, 3.6979684763541517`*^9}, {3.6979686304444857`*^9, 
  3.6979686473487053`*^9}, {3.698385744871746*^9, 3.6983857504842443`*^9}, {
  3.698386153797813*^9, 3.698386165988146*^9}, {3.698764959401079*^9, 
  3.698764983810912*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Error G20 and G26", "Subsection",
 CellChangeTimes->{{3.699675429033799*^9, 3.699675432778133*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ErrorG20G26", " ", "=", " ", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Length", "[", "sol", "]"}], ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
     "ErrorG20G26", "\[LeftDoubleBracket]", "ii", "\[RightDoubleBracket]"}], 
     "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"sol", "\[LeftDoubleBracket]", 
        RowBox[{"ii", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"sol", "\[LeftDoubleBracket]", 
          RowBox[{"ii", ",", "IDtheta"}], "\[RightDoubleBracket]"}], "-", 
         RowBox[{"sol26", "\[LeftDoubleBracket]", 
          RowBox[{"ii", ",", "IDtheta"}], "\[RightDoubleBracket]"}]}], 
        "]"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"ii", ",", "1", ",", 
      RowBox[{"Length", "[", "sol", "]"}]}], "}"}]}], "]"}], ";"}]}], "Input",\

 CellChangeTimes->{{3.6996754371965857`*^9, 3.69967554632521*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "ErrorG20G26", "]"}]], "Input",
 CellChangeTimes->{{3.699675552872946*^9, 3.699675563749503*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJyF2XlQV9cVB/Ar0eCCcWvVRBs1TTPGggJq3JDzE2NkcUEUXBAREEUBBUSL
0uhrio67TLRtqkZcJhrFEBEVIuh9CoISRAXcUJG6NC5N3GKtW+gN5+TOcM90
yvjPZ+Yn33d+vHffved0i5wTFO0k1I9T/T/6qZVW5c1/tRhiQYuFc1wa2dek
5VixL/j6x8wdfqzp6GQpv7HrXta0VOYnS9If/wTKvRvdKn2Rwox5ys82L+q8
Zz4z5tVI4buoY/fkZOY7Lbp992pxjbS6ZOz7fmwSM+apz894teehXwIz5ik3
63E6YVccM+ZdleK9qsap92KYsV5l+/bCduOimTFPuWlCosc/I5gxT9kr50xZ
vzBmzLsihQiQ0+6GMGO9ykdye755N5AZ85Tjsge/FfIRM+Ypt37mXVD2ATPm
XVZ5r4V0fbfO2zTWq3z7rkdWW08wjXnK6z17By73YcY85abdR+z8NIAZ86ql
GPEie1PHIGasV7nA+/B61xBmzFN+u66kY5tJzJin7OIaNNAOY8a8S1I8ufv9
44ypzFivcuiifa19I5kxTzn24sFZl6OYMe+Svl9MY95FKe6XHHlwaDoz1qv8
t2inXzWPYcY85fYVx2OHz2TGPGVoclIkzGLGvAtSDHUeUbo0lhnrVe5ycdSJ
lXHMmKf8utXm0Z/imTFP+a8/tJsYNZsZ885L4dHn/L2+c5ixXuXzgRN2P+PG
POWh74z0H5/AjHnnpbXFeVTwbm7MOyetjVfKE59yY73npKPx39d+OSiRGfOU
mw8782ABN+ap35dVm+6/jxvzqtR69PN6wY31Vkmr/nlLYsY89fnpwUleA7gx
r0o6NuRUjA/lxrxKaac1GSsWcGO9ldL60SfHey035lVKR++UyiXbuDFPfb77
1naTsrkxr0La+d9UwiFurLdCPc+lY3va3JinPv9B+eNdR7kxr0I6mhTn7DvC
jXlnpbUie51vLjfWq/z0s8rILG7MU3ZKWLcmgxvzzurvyzTmnZHW580epy7k
xnqV3co+HTyNG/OU534StMqPG/OUl7tX3Pg9N9ZzWjqWVmdLF26324c9GovT
0hqQkt39TiIzXk+5tKvatGlfxI155ep9mpGevoEb805Je6373qVJ3JUdfMpf
1JVJ++sD95t9xI15ZVJkeN7/S3tuzFOfn5c5asetBGbM+1aKPl3fGJTDjfV+
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
ZsyrhV/m/f8F6ZSjlw==
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.5, 0.5}, {0, 0.00793656651203789}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6996755554912777`*^9, 3.6996755641346483`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["M Adaptive", "Subsection",
 CellChangeTimes->{{3.698660347503825*^9, 3.6986603494822903`*^9}}],

Cell[CellGroupData[{

Cell["Single system", "Subsubsection",
 CellChangeTimes->{{3.699097062883103*^9, 3.699097065440712*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ndof", "=", "4096"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "foldername", " ", "=", " ", 
   "\"\<Tests/build/output_N6_N8_N12_poisson_heat_1D_Kn0p1\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SolN8", "=", 
   RowBox[{"importdata", "[", 
    RowBox[{
    "ndof", ",", "1", ",", "\"\<_global_\>\"", ",", "0", ",", "foldername"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SolN8", " ", "=", " ", 
   RowBox[{"ConvToPrim", "[", "SolN8", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6986603511123667`*^9, 3.698660402582191*^9}, {
   3.6986957220539513`*^9, 3.698695793958612*^9}, {3.698764993086005*^9, 
   3.6987650594045277`*^9}, {3.699094838175522*^9, 3.699094908879017*^9}, {
   3.699095047774976*^9, 3.699095048470544*^9}, 3.699095203155142*^9, {
   3.6990954568814497`*^9, 3.699095461336258*^9}, 3.699095502003684*^9, {
   3.699095570303081*^9, 3.699095570920741*^9}, {3.699097035112191*^9, 
   3.699097055813624*^9}, {3.699097087965869*^9, 3.6990970997617083`*^9}, {
   3.699118374111905*^9, 3.69911837461801*^9}, {3.6991185714161873`*^9, 
   3.6991185719225597`*^9}, {3.6991191115517693`*^9, 3.699119131856247*^9}, {
   3.699119488317264*^9, 3.699119489623005*^9}, {3.699127148091915*^9, 
   3.699127165109902*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Adapted system", "Subsubsection",
 CellChangeTimes->{{3.6990971118073874`*^9, 3.699097114367577*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ndof", "=", "96"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "foldername", " ", "=", " ", 
   "\"\<Tests/build/output_N6_poisson_heat_1D_Kn0p1\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ErrorAdapted", "=", 
   RowBox[{"importdata", "[", 
    RowBox[{
    "ndof", ",", "1", ",", "\"\<_global_\>\"", ",", "2", ",", "foldername"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ErrorAdapted", " ", "=", " ", 
   RowBox[{"ConvToPrim", "[", "ErrorAdapted", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.699097125821981*^9, 3.6990971417675743`*^9}, 
   3.699118517308269*^9, 3.699118567840013*^9, {3.699119139670281*^9, 
   3.699119141530073*^9}, {3.699119501189946*^9, 3.6991195021557503`*^9}, 
   3.699123175437714*^9, 3.6991232725156593`*^9, {3.6996159233323936`*^9, 
   3.69961595394531*^9}, {3.6996256921241827`*^9, 3.699625720251006*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.698660420127873*^9, 3.6986605313349323`*^9}, {
   3.698660714570568*^9, 3.698660719948984*^9}, 3.698660764979479*^9, {
   3.6986947772687683`*^9, 3.6986947797510157`*^9}, {3.698694843440844*^9, 
   3.6986948752212753`*^9}, {3.6986958038339663`*^9, 3.698695830863113*^9}, {
   3.69869587877562*^9, 3.698695882541667*^9}, 3.698765066303916*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotSingle", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"ErrorAdapted", "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "IDtheta"}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.69876507229461*^9, 3.698765090447268*^9}, {
  3.699097146669202*^9, 3.699097160090185*^9}, {3.6991185558244343`*^9, 
  3.699118576534458*^9}, {3.699615958876162*^9, 3.699615963001927*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     LineBox[{{-0.4375, 0.0011045007922133874`}, {-0.3125, 
      0.00045396255352176356`}, {-0.1875, 0.0002135462479183374}, {-0.0625, 
      0.00006222539674441619}, {0.0625, 0.00006222539674441619}, {0.1875, 
      0.0002135462479183374}, {0.3125, 0.00045396255352176356`}, {0.4375, 
      0.0011045007922133874`}}]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.4375, 0.4375}, {0, 0.0011045007922133874`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6987650908764973`*^9, 3.699094960385998*^9, 3.699095051982026*^9, 
   3.69909520633849*^9, 3.699095465350595*^9, 3.699095504881428*^9, 
   3.699095574189583*^9, {3.699097157983213*^9, 3.6990971606555433`*^9}, 
   3.699118378232625*^9, 3.699118519673119*^9, {3.699118557157926*^9, 
   3.699118577043538*^9}, 3.699119147279838*^9, 3.699119506645277*^9, 
   3.699615964001216*^9, 3.69962572694696*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotAdaptive", " ", "=", " ", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"ErrorN6N8", "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "IDtheta"}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
    RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.698765110222062*^9, 3.6987651151102858`*^9}, {
  3.699097167012896*^9, 3.6990971888032093`*^9}, {3.699097337831091*^9, 
  3.699097341591587*^9}, {3.69911920833587*^9, 3.699119211053145*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[1, 0, 0], PointSize[0.004583333333333334], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1: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
1Jqr/PliYtU6pnWI8ufLtO3mkWcClD9fBpo/OnlzovLni+Xcgkd3PZU/n/OK
8udLkuuBiFb2yp8v311cf7L/QOXPN75fNfz5MjTA+9GcDsqfLxviB2xs3Fz5
8+V2g5a9Tlkof7708Xub5Wam/PnybkdZVtQLff/zxb1Kwi0f6vufJy277w7v
+2Mk+fPk7szPw8flR5I/T07vmxK+6EYk+fNkcaVt+M7LkeTPE6dWrcPltJ5/
ebLe7kXmjP16/uWJ76cFmWu+1fMvT3buOt2j9zo9//LkduL6r4qW6PmXJx1/
nvlwaaSef3kSbD7ctUuAnn95cqLbh8ezfPT8y5PQ/s9DX43U8+/vzzvecHPv
ID3/8uTPz452d+6u/HlydtWy3+e2Uf5cmbNpwrE9DZU/V6bZ+Bd9W63nf66U
ujYaX/Wjnv+54htwudDpmp7/uZK7MMR398EI8ueK+4YWhX+ujiB/rmTsSx3n
FhJB/lwZtDps2wmXCPLnStyuVv+q0yOC/LnSaVmSz4z3df7Pla9nzNya8iCc
/LnG+6yGP1eW+iWM/fy43n+58tDRf0vFer3/cmXyR+Z5dqF6//39eSyON909
Opz8OTL4iZd3dbdw8ufI4YKXm6fVDyd/jtRfu21z2t0w8ufIwnDbnK4pYeTP
kXtedxqvORBG/hxxrhPd+MkXYeTPkQv3O3l6+YeRP8d439fw58iaZcExrdro
/Z8jD/qbx6z4K5T8OTLmt/0bH+aHkj9HLmW63HKN0/0nR1p/cS/r3KZQ8ufI
5/1WZbUNDyV/jvz467+zVruEkj9Hhu1IynzcOZT82bLPbVrmRLNQ8mdLnVpv
byZX6vyTLTPitt/sfknnn2xJm2Vzc+u3Ov9kS7fWBRnv5oaQP1vW3fokY6Zn
CPmz5eGyxhmGHiHkzzbOVzX82bL/vOPaoz/NJn+21A69s+aDxNnkz5aZbaPX
LNk5m/zZkrDXyvnRvNnkz5Y2PrGjxnvp/pfN/Wc2+bMlZ+1d8751Z5M/W/rb
rTDf+XMw+Q2yJrFFqsWVYPIbjPNjDb9BxnTxSamcH0x+g+w5cn+lp0cw+Q1S
a8rqlRe7B5PfIL6VbUZ0rxNMfoMc9Y997/vKWeQ3SEMrz/fML80iv0Gmf3M3
eeHWWeQ3SLLLiuQfo3T+NUizzBbLvUfr/GuQRdHxyy510fnXYJyXa/gN0mHl
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
VI+mXg3Vq6lnQ/Vs6t1QvZt6OFQPp14O1cupp0P1dOrtUL2dejxUj6deD9Xr
qedD9Xzq/VC9n34A1A+gXwD1C+gnQP0E+g1Qv4F+BNSPoF8B9SvoZ0D9DPod
UL+DfgjUD6FfAvVL6KdA/RT6LVC/hX4M1I+hXwP1a+jnQP0c+j1Qv4d+ENQP
ol8E9YvoJ0H9JPpNUL+JfhTUj6JfBfWr6GdB/Sz6XVC/i34Y1A+jXwb1y+in
Qf00+m1Qv41+HNSPo18H9evo50H9PPp9UL+PfiDUD6RfCPUL6SdC/UT6jVC/
kX4k1I+kXwn1K+lnQv1M+p1Qv5N+KNQPpV8K9Uvpp0L9VPqtUL+VfizUj6Vf
C/Vr6edC/Vz6vVC/l34w1A+mXwz1i+knQ/1k+s1Qv5l+NNSPpl8N9avpZ0P9
bPrdUL+bfjjUD6dfDvXL6adD/XT67VC/nX481I+nXw/16+nnQ/18+v1Qv595
AGgegHkBaF6AeQJonoB5A2jegHkEaB6BeQVoXoF5BmiegXkHaN6BeQhoHoJ5
CWhegnkKaJ6CeQto3oJ5DGgeg3kNaF6DeQ5onoN5D2jeg3kQaB6EeRFoXoR5
EmiehHkTaN6EeRRoHoV5FWhehXkWaJ6FeRdo3oV5GGgehnkZaF6GeRponoZ5
G2jehnkcaB6HeR1oXod5Hmieh3kfaN6HeSBoHoh5IWheiHkiaJ6IeSNo3oh5
JGgeiXklaF6JeSZonol5J2jeiXkoaB6KeSloXop5KmieinkraN6KeSxoHot5
LWhei3kuaJ6LeS9o3ot5MGgejHkxaF6MeTJonox5M2jejHk0aB6NeTVoXo15
NmiejXk3aN6NeThoHo55OWhejnk6aJ6OeTto3o55PGgej3k9aF6PeT5ono95
P2jej3lAaB6QeUFoXpB5QmiekHlDaN6QeURoHpF5RWhekXlGaJ6ReUdo3pF5
SGgeknlJaF6SeUponpJ5S2jeknlMaB6TeU1oXpN5Tmiek3lPaN6TeVBoHpR5
UWhelHlSaJ6UeVNo3pR5VGgelXlVaF6VeVZonpV5V2jelXlYaB6WeVloXpZ5
WmielnlbaN6WeVxoHpd5XWhel3leaJ6XeV9o3pd5YGgemHlhaF6YeWJonph5
Y2jemHlkaB6ZeWVoXpl5ZmiemXlnaN6ZeWhoHpp5aWhemnlqaJ6aeWto3pp5
bGgem3ltaF6beW5onpt5b2jem3lwaB6ceXFoXpx5cvxX3hyaN2ce3fjvmVc3
/sw8u/HPZ97d+PczD2/8fMzLGz8/8/T4/3nzwv/iL4Tm8ZnXh+b1meeH5vmZ
94fm/dkHgPYB2BeA9gXYJzB+3+wbQPsG7CNA+wjsK0D7CuwzQPsM7DtA+w7s
Q0D7EOxLQPsS7FNA+xTsW0D7FuxjGN8v9jWgfQ32OaB9DvY9oH0P9kGgfRD2
RaB9EfZJoH0S9k2gfRP2UaB9FPZVoH0V9lmgfRb2XaB9F/ZhoH0Y9mWgfRn2
aaB9GvZtoH0b9nGgfRz2daB9HfZ5oH0e9n2gfR/2gaB9IPaFjPcZ+0TQPhH7
RtC+EftI0D4S+0rQvhL7TNA+E/tOxvuefShoH4p9KWhfin0qaJ+KfSto34p9
LGgfi30taF+LfS7jfMW+F7TvxT4YtA/Gvhi0L8Y+mXF+ZN8M2jdjHw3aR2Nf
DdpXY5/NOC+z7wbtu7EPB+3DsS8H7cuxT2fcF9i3g/bt2MeD9vHY14P29djn
g/b52PeD9v3YB4T2AdkXhPYF2SeE9gnZN4T2DdlHhPYR2VeE9hXZZzTu6+w7
QvuO7ENC+5DsS0L7kuxTQvuU7Fsa9Rb2MY16Dvua0L4m+5zQPif7ntC+J/ug
0D4o+6LQvij7pNA+Kfum0L4p+6jQPir7qkZ9ln1WaJ+VfVdo35V9WGgfln1Z
aF+WfVqjf8K+LbRvyz4utI/Lvi60r8s+L7TPy76vUS9nH9ioX7MvDO0Ls08M
7ROzbwztG7OPDO0js68M7SuzzwztM7PvDO07sw8N7UOzL23Up9inhvap2bc2
6jXsY0P72OxrQ/va7HND+9zse0P73uyDQ/vg7ItD++Lsk0P75OybQ/vm7KND
++jsq0P76uyzQ/vs7LtD++7sw0P78OzLQ/vy7NND+/Ts20P79uzjQ/v47OtD
+/rs80P7/Oz7Q/v+/wPY5gx7
       "]]}}, {
     {RGBColor[1, 0, 0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->8.96], {0., 0.}], CompressedData["
1:eJxdmwl0zue2xhMpMTQEzTHXcExVQ8xB5CFCJGQWMVYiCSKzmkulpqJKKNoa
ipqPWUQQ7ERIIpH4Ms+JaqtKEVPNct2bZ39d95y1zjrLak98v3z///vu/Qxt
p4Z7BpqZvP/PByYmpu//p8b7/7oEve1m+qJCan8bZ1cjdi7OeQ0cV/VHhaQf
DNz+pmwOPDv2PW1aWCHbnrUY+KDOHIjlrPKqlAoxWVse5zlwNj59faz2u7gK
eRF81KpL+Oe4knEowORghcwLiGq8eN8sWJ+9ve7d9xWyev+UR/Y3I5G25pe7
JqsqpJ3psPDlLSPRb87HVlXzKsRtX68Mm8kRMDg2izSdUSGNno3JTx0aDtte
Y7dV+VTIblPvjfVvhCLvA4/npiMrxGd3aP2BgSEY+vDbtiY2FdJ81rq0Se9m
4lhR2qh3nSrk+V6pFbYjCI5Hrh4waVohb2fWMQscPgMxW2pkvzOvEMupE+FV
OQ3V/OViG3/xdY/dgeQvl+VzrW1e+wSQv1xufxfz9PRH/uQvF7/Gjj0nF/iR
v1zuJd06+ma7L/nLpX+D7nlmBZ+Rv1xOv9if+WbBJPKXS8D+IanZnSeQv1yc
m75OXPGrD/nf//mvq4M67fUmf7n8eDux76a5XuQvlzs3L/YwdfIgf7lYmOV7
fT7Blfzl8mVtj5GJ3Z3JXy7jt1gMvtZ8BPnLJejO3Z7HGtmTv0yurmjsutXB
lvxl0i5po83GL/qQv0z2tOvi+CbpE/KXiUdikO38Civyl8nfy+56RB18a1fN
XyY5EV17zejSjvxlkhi3pmtIG2vyl8nRYxdxt3F/8pfJtU2hnk8LBpO/TGxf
hvZqZ29P/jK56b98UOja4eQvk+Yjxju8uzSS/GXSOsDC5dTvo8hfJpUXd3mv
NnEjf5kcdnzZPcfUg/xl4pDZsPfniz3JXypJj5vFtX/iRf5S6RTbMP6Pqd7k
L5WxMXcuZSSPJX+phLgdt7/afhz5S2X66sARmYvG8/svFUe/eml3MieQv1Tq
F+zK+KiFfv+lsmOVVZb/xMnkL5UeA9fkntr2GflLZW2n8oL2hinkf//zi6K7
jVniS/5SeR3a5fhPjf3IXypfZcVXPtrrR/5SeWU2/LFL76nkf///r5kcc+rS
VPKXytU8u75tHP3JXyJN5xyfu+W6P/lLZNKvTeZbuenzXyK7PaIWbMoKIH+J
pE8ufNXeNZD8JXLHprPtpZRA8pfIi1vhg33tppG/RF5NPP6u7qlp5C+Rd7kP
JLbDdPKXyO/3WpnO+m46+Usks4aLfXfTGeQvkW1xwWZvZswgf4kEhay5cs0w
g/wl0qVy1/BdfYPIXyL3Po9LnrtV3/8S2bD5YspnL4PIXyL945JSR4ybSf5i
SZp7zmnIyZnkLxa3fsfTBtQNJn+xlD7bO6q3fzD5i2W015rRdmeCyV8sF0+E
uzjVCSF/sbQrG11/8vgQ8hfLgsK26xfsDyF/sRhy/m6w5UkI+YulxU9J7vGD
Q8lfLD79V3n8uTyU/MWycqdDozbX9PwrljPmpjljLcLIXyyFdrFeW1zDyF8s
r+cE5eatDyN/sTRYZGX1cWYY+Yulicc5q/A64eQvktYdJ/8rwSGc/EXSPO1F
frPF4eQvktqD1/osOhVO/iJ5drx1Yfkf4eQvknvzvT/sYBFB/iIpabbtyISO
EeQvkuE/lx75yC6C/EXSqVFzC68xEeQvknpLfUI3zNTzv0juP9qUcSMqgvxF
4uyU+e3GzRHkL5I2q8yOFR2MIP/7z5Nsk9nmQgT5i8ThfpDrXxkR5C+S7xpv
y4yriCB/kUxqm3rMvDKC/IXSocezdT4mkeQvlPu27cIPWEaSv1AONXNsYPJx
JPkL5V79CLfcrpHkL5T99zY97DowkvyFUnI89mGdEZHkL5Tv1xavn+ql91+h
ONg8f5g0We+/QlnwpknlrqBI8hfK7vXWJ1bOiiR/obgNcrG8syiS/IUyNzPQ
kLEikvyF0tRpYWX/byPJXygo3Xii1ZZI8hfKzbEHDF/viCR/obw+G+c+d08k
+QvEqkWqIeCQ8heI9eJCd6/jyl8gScm/WSfHKH+B+Fg+shxwVvkL5N74t5WH
Lyh/gbxYU7PnHlH+Aql5wSJy62XlL5BG961Obriq/AXyY83mHhYpyl8grT/+
+NGqVOUvkP392m34IE35//lzNX+BdHPr2DMqXfn/+efV/P/8uZr/n59fzZ9v
/Pur+fONn6+aP9/4+av584181fz5/8WfL2Wdn504fU7588Wp4o5haKzy58uZ
zaWVmSeUP1/ajTZYTjqi/PmyrsYV6z8PKH++zN4Vc+LVbuXPlwl2e6w/3K78
+cbvu5o/XzosXGrdI1r582V5Vajl1VXKny8zd0yOzl+q/HmS2s4pIuQL5c+T
zgf7uNeYrfx5YmLVMrplsPLnyZSt5hGn/JU/T/qbPzx+fYLy54nl7PyHtz2U
P4/zivLnSaLLvvAWQ5Q/T348v/Z43/7Kn2d8v6r582Swv9fDWe2UP0/WxfVb
37Cp8ufJzXrNe5ywUP486eX7NtPVTPnz5N220szI5/r+54lbpYRZ3tf3P1ea
d90Z1vuXCPLnyu3pX4aNzYsgf66c3DM5bMG1CPLnyqIK27DtFyPInyuOLVqG
yUk9/3Jlrd3zjGl79fzLFZ+F+Rmrf9DzL1e27zjZrec3ev7lys2Etd8WLtbz
L1fa/zb9/pIIPf9yJch8mEsnfz3/cuVYl4+PZnrr+ZcrIX2fhbwaoeff+887
znB99wA9/3Ll7y8Od3Xqqvy5cnrl0r9mt1L+HJm1YfyRXfWVP0em2PgV/lCl
53+OlLg0GFf5i57/OeLjf7HA8Yqe/zmSMz/YZ+f+cPLniNu6ZgV/rwonf46k
70kZ6xocTv4cGbAqdMsx53Dy50jsjhb/qtUtnPw50mFpove0D3X+z5Hvpk3f
nHwvjPw5xvusmj9HlvjGj/nyqN5/OXLfwW9T+Vq9/3Jk0ifmuXYhev+9/zwW
RxvvHBVG/mwZ+NjTq6pLGPmz5WD+i41T6oaRP1vqrtmyMfV2KPmzZX6YbXbn
5FDyZ8sdz1sNV+8LJX+2ONWKavj4q1DyZ8u5ux08PP1CyZ9tvO+r+bNl9dKg
6Bat9P7Plnt9zaOXvwwhf7aM/nPv+vt5IeTPlgsZzjdcYnX/yZaWX93JPLMh
hPzZ8mWflZmtw0LIny2//PHvzFXOIeTPlqHbEjMedQwhf5bscZ2SMcEshPxZ
UqvG2+tJFTr/ZMm02K3Xu17Q+SdLUmfYXN/8g84/WdKlZX76u9nB5M+Sb258
nj7dI5j8WXJ/acN0Q7dg8mcZ56tq/izZe9ZhzeFfZ5I/S2qG3Fr9UcJM8mfJ
9NZRqxdvn0n+LInfbeX0cM5M8mdJK++YkeM8df/L4v4zk/xZkr3mtnnv2jPJ
nyV97Zabb/8tiPwGWZ3QLMXiUhD5Dcb5sZrfIKM7eSdXzA0iv0F2Hbq7wsM9
iPwGqTF51YrzXYPIbxCfilbDu9YKIr9BDvvFfPBTxQzyG6S+lccH5hdmkN8g
U7+/nTR/8wzyGyTJeXnSL5E6/xqkSUazZV6jdP41yIKouKUXOun8azDOy9X8
Bmm34pbpruLp5DfIcpso0zpx08lvkMLzVokLo6dja/ariTUqb8jAsJiEX0Om
Y9aB2Sfe3bgh6ypHRnmPmI59o2fOMDtxQ36dVY6U1tOxuO1vF6rW35DhHRfB
+s00eP89ueGb8Bvy48GGVbvzpmH1Nq9rJu435EGXA5caH58Gv4iMVm973BC3
codLi76Zhk1WSXmmljdkr2/x4gcB0xBy17bLu4eZxn1h5/pet2oYMrmvTsO8
gCP9qo5nyrGme94MfBqIw3V+fmAWnSkNrg95s8cQiGXlLYaZRGRKgGt+vNV/
AjExZvP3b9wy5awh+IuvlwVi3bhv3EytM6X58jpfVE4JxLRuNfe+bZAp4bV2
Dpw6IJD8GZK0qs+rnEaB5M+QDrbZL20fBpA/QxZcmn7uWGoA+TOkJLLmuSb7
AsifIT2ebp2/+ssA8mfIhgM28x9PCCB/htz+JLN/QJ8A8mfIwCP+z/MsAsh/
XbZPMX1ud9ef/Nel8pctZ04k+ZP/unhu7nOm2S5/8l+X/U3S5nyzwJ/818U8
ffqcp97+5L8uk1ze9pnWw5/81+WSybY+N+r5k/+6NF5m/XTI71PJny6z+2U+
OZQ4lfzpkvdn8JNGP00lf7p0CTGNWT5vKvnTZW3rnafue00lf7rc3N1n1pRu
U8mfLvbe2ZGpdaaSP1321I6I7Hnbj/zpnJ/8yJ/GecaP/GkS/2iI9Zz5fuRP
4zzhR/40iew0+6Fbdz/yp0lOccOHZ+v6kT9N+q47/qDtH77kT5PVlsOPfZfg
S/40o15TzX9NXOZFHQ1c4Ev+a7xffcl/TRqUxx/p38uX/NckwNcj5FA9X/Jf
M+7r1fzXeP9NIf816llTyH9N8idG52199Rn5U+XHy+m5ITGfkT+V99Vn5E+V
NtH2OZYdPiN/qvz69+LsW2WTyZ8q+yefyzq9ZTL5U2XmlaeGlW6TyZ8q3T61
NoyrPZn8qfJwQ/CNLomTyJ9i1Keq+VMkOvGxy0WbSeRPkTGdu7usfzSR/CnS
ZH3QaL//TCR/CvfjieRPkZ8m3XSu2XIi+VNkUYeuaVeLJ5A/RbB2+rXvv5tA
/mSp8eTn1KDRE8ifLMnjy1MG1ZxA/mTqT+PJn2zUW6r5k7n/jyd/stQ+99cV
36fjyJ8s6a07X+l1dBz5k+XQnc+HPQkeR/6rRj2nmv+qWJ+5O/T7Mh/yXxWL
Jf0Sfbb7kP+qZP0emfCJtw/5r1LP8iH/VZll9dLuwvWx5L/K828s+a9K1wPR
gwc7jyX/Fam0uG7bwGws+a9IRn6TCzcSvcl/RTYM9orfvdCb/Fd4fnmT/4qM
vnH3XLsXY8h/RSz7dTz39MQY8l+R++8ibWLDx5D/iqSnXIyb030M+ZPkUHSd
/v3ue5E/SUKeO/Srvd+L/EnilBAdmxrgRf4k6by6tM/qf3uRP0lqenY+7XTL
k/xJ8mvz2b3r7vYkf5Ls/+p4r9LxnuRPkuXOr09ub+pJ/svUUz3If5n7jAf5
L0urfeU9ysd4kP8y9S8P8l+Wwn5zu0/Jdif/ZTlTlXi09QZ38l+WTakW3W66
uZP/Muddd/Inyk+nnX0ub3Ujf6JMGHHLe1hTN/InilXhgjFXNruSP1EMQQ29
hjd2JX+irH190CM52oX8iTLi2yHujvVdyJ8oZq0LXVO/GU3+ROpFo8mfIAvs
zUenrRxF/gTpk/uT86gPRpE/QTp08XE69K0z+RPkZvwDxy71nMmfINtcVo44
vMqJ/AmcP5zInyCNImOHHV02kvwJYpYSal/PYiR673sW98FNkUvjag5du8YR
v7n+6ft2p8jCu9thUdsRzj/mGmr5ivRd1Mdu3YoReGWfuqCqtUiH7L9s/6o/
Aof/im/3ouKSUZ9t2P/ARtNdl+gXDEfiza2DXk25JD5fx9iEf+2Azp+uPGzW
5pI4lgX3z7B0QGHugjFvKi6KWbhZP9d1w4DWgVdq7rrI+2oYHqaOC3035aIc
G+vVu9tme3g3digzb3PRqF/Xuth/pcnNC9x3h+LMtE97vNx5QawMA3t822wo
Wp78184avhfE4Jfdrf73Q5Axoe7I160vyDdPgrqu/2gI+ePlxUaHscWDQP54
CT/zuVdpPzvyx8vtop/dy3sOJn+8US+v5j8vtofsR23HIPKf5zw6kPznZdP8
W8MnuAwg/3mpt73hsEkjbch/Tu45Lh3SdGJ/8p+TqcEnBzcf24/858S+SbtB
+TP6kv+cnBvoYVPo34f8Z+kP9Cb/WbGs+6jXlshe5D8rK7u1sf4hpCf5z1JP
tiZ/nMS/XOJ95Gl38sfJFx5+7u2bdyN/nAT9IM6dLT8lfxzP20/If0aa9q/C
3k87kf+M1Pxy8sCDbTuQ/wz15n+T/4zEtNzRo/3gtuSPlTt33oyxufox+WOp
xzYnfyznzX+RP1Zan7bpY3OnEflP03+wIP9pzpO1yH9aJr/NcrnZ9Y1dNf9p
/vy7dtX8MbIhaNVQk/MpdtX8Mfy8T+yq+WOoL5iSP4b8dch/iueLJflP8fv5
iPynpPzIpmGGeU3Jf4qfpyX5T9IfaUP+k0b/pJr/pDRqNqp/5QftyX+S719H
8p+Q/t+ss7/TtDP5T8jc3kcdI558Qv4TsuYvV5eQt5/y+z8h2/dVes4w745p
zvfC6yQcF58eTl1P1bZGyo7sxFc4LvOWFXb/+5k1NvU6tNsi4ZiY+B7q+fRV
TzxbEf3kHY7JatuFfR5X9YJ30bzhlXKUn68P2oW5djAbclR6hRYP6PO4D5Yl
9p33VI5IvNNh217P+8J97Ic+5kOO8PvshxOHnhx8IYe5v9hgsV3aqnpDDvP8
GoDyDSeL38h/eN4NxOGOq843GPIfPo+DUG9h+IemCYfk8exol45WtgjJGPvZ
YxySxtdau8+sMRgDpnazq5lwkLx22Br7UfTfOEh9AeQ/QP4h5D9AfWYI+ffz
+x9K/v3G86aaf5/xPKrm38f7z578e3lfDiP/Xt6vw8i/R04GHu3/dWcH8u+R
ZzlWA2oddiD/zzLQ/suBK7oNJ//PEjPb3PaX+OHk383nfQT5d8tgj0K7ioQR
5N8lUTJkyGfDHMm/S14/ujb0fJYjMjblVzSK2inw7TVswJiRWDdo37JnS36S
5ZlbHc7mj0TnQM9hLaJ2yFuT9iM+CnTCn/Xa/vF2yXaxD1/r+N0fTjh86uGa
m0u2cR93hkPpdudaUVvFxPJL57AXzqi1LPjBnSU//nO/HWl6rH7UD8b7z8/r
D49HS74Xm19fuO77fjReLdrUsEnUFjlptdTdtKMLLvzbP/blks18v13g7WI5
p3XUJp7PrmjytLxpjajveH64onDr0Qu/Ldko3XwCx8Y5vr/Pr0xYVDdqg+xf
/cCncb4begd/0ub+kmjO8+748ZOj0sFkPed/d7Sa52x+r2ot9wV3uKXtXdnP
5BtJPlTneKK5B3Ka2Ge+rlolZsMyjz909cDYwAqrxKqVxnll1dkBmz80WSGL
5vicHFXmgQ9rFZRmVS2Vs/VbnlrQ3hN243tOamXylTw7cPPUgWBPLHPZ4Xi1
arH0GrovJu+UJ/584jFikslCCSsOOm32yhMP163Nu101R4583j2251AvjOk7
NHexySzel144s+t5sqVJiKB2ar9FeV5Iyg/5vUOVv/E8avF/AsA4vp8fIO/6
/x4AMJ5//DP0z/z3of8+fx705/Hvg/59/DzQz8PPC/285IHykBfKy98H9PfB
3xf098XfJ/T3yd839PfN7wP6ffD7gn5f/D6h3ye/b+j3zecB+jzweYE+L3ye
oM8Tnzfo88bnEfo88nmFPq98nqHPM5936PPO9wH6PvB9gb4vfJ+g7xPfN+j7
xvcR+j7yfYW+r3yfoe8z33fo+87zAHoe8LyAnhc8T6DnCc8b6HnD8wh6HvG8
gp5XPM+g5xnPO+h5x/MQeh7yvISelzxPoecpz1voecvzGHoe87yGntc8z6Hn
Oc976HnP+wB6H/C+gN4XvE+g9wnvG+h9w/sIeh/xvoLeV7zPoPcZ7zvofcf7
EHof8r6E3pe8T6H3Ke9b6H3L+xh6H/O+ht7XvM+h9znve+h9z3kAOg9wXoDO
C5wnoPME5w3ovMF5BDqPcF6BziucZ6DzDOcd6LzDeQg6D3Fegs5LnKeg8xTn
LeN5xHkMOo9xXoPOa5znoPMc5z3ovMd50Hj+cV6EzoucJ6HzJOdN6LzJeRQ6
j3Jehc6rnGeh8yznXei8y3kYOg9zXobOy5ynofM0523ovM15HDqPc16Hzuuc
56HzPOd96LzPfQC6D3BfgO4L3Ceg+wT3Dei+wX0Euo9wX4HuK9xnoPsM9x3o
vsN9CLoPcV+C7kvcp6D7FPct6L7FfQy6j3Ffg+5r3Oeg+xz3Pei+x30Qug9y
X4Tui9wnofsk903jecN91HgecV+F7qvcZ6H7LPdd6L7LfRi6D3Nfhu7L3Keh
+zT3bei+zX0cuo9zX4fu69znofs8933ovk89AKoHUC+A6gXUE6B6AvUGqN5A
PQKqR1CvgOoV1DOgegb1DuP9Rj3EeP9RL4HqJdRToHoK9Rao3kI9BqrHUK+B
6jXUc6B6DvUeqN5DPQiqB1EvgupF1JOgehL1JqjeRD0KqkdRr4LqVdSzjPMK
9S6o3kU9DKqHUS+D6mXU06B6GvU2qN5GPQ6qx1Gvg+p11POgeh71PqjeRz0Q
qgdSL4TqhdQToXoi9Uao3kg9EqpHUq+E6pXUM6F6JvVOqN5JPRSqh1Ivheql
1FOheir1VqjeSj0WqsdSr4XqtdRzoXou9V6o3ks9GKoHUy+G6sXUk6F6MvVm
qN5MPRqqR1OvhurV1LOhejb1bqjeTT0cqodTL4fq5dTToXo69Xao3k49HqrH
U6+H6vXU86F6PvV+qN5PPwDqB9AvgPoF9BOgfgL9BqjfQD8C6kfQr4D6FfQz
oH4G/Q6o30E/BOqH0C+B+iX0U6B+Cv0WqN9CPwbqx9Cvgfo19HOgfg79Hqjf
Qz8I6gfRL4L6RfSToH4S/Sao30Q/CupH0a+C+lX0s6B+Fv0uqN9FPwzqh9Ev
g/pl9NOgfhr9NqjfRj8O6sfRr4P6dfTzoH4e/T6o30c/EOoH0i+E+oX0E6F+
Iv1GqN9IPxLqR9KvhPqV9DOhfib9TqjfST8U6ofSL4X6pfRToX4q/Vao30o/
FurH0q+F+rX0c6F+Lv1eqN9LPxjqB9MvhvrF9JOhfjL9ZqjfTD8a6kfTr4b6
1fSzoX42/W6o300/HOqH0y+H+uX006F+Ov12qN9OPx7qx9Ovh/r19POhfj79
fqjfzzwANA/AvAA0L8A8ATRPwLwBNG/APAI0j8C8AjSvwDwDNM/AvAM078A8
BDQPwbwENC/BPAU0T8G8BTRvwTwGNI/BvAY0r8E8BzTPwbwHNO/BPAg0D8K8
CDQvwjwJNE/CvAk0b8I8CjSPwrwKNK/CPAs0z8K8CzTvwjwMNA/DvAw0L8M8
DTRPw7wNNG/DPA40j8O8DjSvwzwPNM/DvA8078M8EDQPxLwQNC/EPBE0T8S8
ETRvxDwSNI/EvBI0r8Q8EzTPxLwTNO/EPBQ0D8W8FDQvxTwVNE/FvBU0b8U8
FjSPxbwWNK/FPBc0z8W8FzTvxTwYNA/GvBg0L8Y8GTRPxrwZNG/GPBo0j8a8
GjSvxjwbNM/GvBs078Y8HDQPx7wcNC/HPB00T8e8HTRvxzweNI/HvB40r8c8
HzTPx7wfNO/HPCA0D8i8IDQvyDwhNE/IvCE0b8g8IjSPyLwiNK/IPCM0z8i8
IzTvyDwkNA/JvCQ0L8k8JTRPybwlNG/JPCY0j8m8JjSvyTwnNM/JvCc078k8
KDQPyrwoNC/KPCk0T8q8KTRvyjwqNI/KvCo0r8o8KzTPyrwrNO/KPCw0D8u8
LDQvyzwtNE/LvC00b8s8LjSPy7wuNK/LPC80z8u8LzTvyzwwNA/MvDA0L8w8
MTRPzLwxNG/MPDI0j8y8MjSvzDwzNM/MvDM078w8NDQPzbw0NC/NPDU0T828
NTRvzTw2NI/NvDY0r808NzTPzbw3NO/NPDg0D868ODQvzjw5/itvDs2bM49u
/OfMqxv/zDy78ecz7278+5mHN34+5uWNn595evz/vHnBf/EXQPP4zOtD8/rM
80Pz/Mz7Q/P+7ANA+wDsC0D7AuwTGL9v9g2gfQP2EaB9BPYVoH0F9hmgfQb2
HaB9B/YhoH0I9iWgfQn2KaB9CvYtoH0L9jGM7xf7GtC+Bvsc0D4H+x7Qvgf7
INA+CPsi0L4I+yTQPgn7JtC+Cfso0D4K+yrQvgr7LNA+C/su0L4L+zDQPgz7
MtC+DPs00D4N+zbQvg37ONA+Dvs60L4O+zzQPg/7PtC+D/tA0D4Q+0LG+4x9
ImifiH0jaN+IfSRoH4l9JWhfiX0maJ+JfSfjfc8+FLQPxb4UtC/FPhW0T8W+
FbRvxT4WtI/Fvha0r8U+l3G+Yt8L2vdiHwzaB2NfDNoXY5/MOD+ybwbtm7GP
Bu2jsa8G7auxz2acl9l3g/bd2IeD9uHYl4P25dinM+4L7NtB+3bs40H7eOzr
Qft67PNB+3zs+0H7fuwDQvuA7AtC+4LsE0L7hOwbQvuG7CNC+4jsK0L7iuwz
Gvd19h2hfUf2IaF9SPYloX1J9imhfUr2LY16C/uYRj2HfU1oX5N9Tmifk31P
aN+TfVBoH5R9UWhflH1SaJ+UfVNo35R9VGgflX1Voz7LPiu0z8q+K7Tvyj4s
tA/Lviy0L8s+rdE/Yd8W2rdlHxfax2VfF9rXZZ8X2udl39eol7MPbNSv2ReG
9oXZJ4b2idk3hvaN2UeG9pHZV4b2ldlnhvaZ2XeG9p3Zh4b2odmXNupT7FND
+9TsWxv1GvaxoX1s9rWhfW32uaF9bva9oX1v9sGhfXD2xaF9cfbJoX1y9s2h
fXP20aF9dPbVoX119tmhfXb23aF9d/bhoX149uWhfXn26aF9evbtoX179vGh
fXz29aF9ffb5oX1+9v2hff//AV/NDH0=
       "]]}, {}}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.499512, 0.499512}, {0, 0.005543717164502533}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.698765115734774*^9, 3.699097190009691*^9, 
  3.699097341899907*^9, 3.69911915105383*^9, 3.699119211388111*^9, 
  3.6991195095719357`*^9, 3.699123180558593*^9, 3.699123277981503*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"plotAdaptive", ",", "plotSingle"}], "]"}]], "Input",
 CellChangeTimes->{{3.6990972140620127`*^9, 3.699097225659926*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {}, 
      {RGBColor[1, 0, 0], PointSize[0.004583333333333334], AbsoluteThickness[
       1.6], LineBox[CompressedData["
1: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
1Jqr/PliYtU6pnWI8ufLtO3mkWcClD9fBpo/OnlzovLni+Xcgkd3PZU/n/OK
8udLkuuBiFb2yp8v311cf7L/QOXPN75fNfz5MjTA+9GcDsqfLxviB2xs3Fz5
8+V2g5a9Tlkof7708Xub5Wam/PnybkdZVtQLff/zxb1Kwi0f6vufJy277w7v
+2Mk+fPk7szPw8flR5I/T07vmxK+6EYk+fNkcaVt+M7LkeTPE6dWrcPltJ5/
ebLe7kXmjP16/uWJ76cFmWu+1fMvT3buOt2j9zo9//LkduL6r4qW6PmXJx1/
nvlwaaSef3kSbD7ctUuAnn95cqLbh8ezfPT8y5PQ/s9DX43U8+/vzzvecHPv
ID3/8uTPz452d+6u/HlydtWy3+e2Uf5cmbNpwrE9DZU/V6bZ+Bd9W63nf66U
ujYaX/Wjnv+54htwudDpmp7/uZK7MMR398EI8ueK+4YWhX+ujiB/rmTsSx3n
FhJB/lwZtDps2wmXCPLnStyuVv+q0yOC/LnSaVmSz4z3df7Pla9nzNya8iCc
/LnG+6yGP1eW+iWM/fy43n+58tDRf0vFer3/cmXyR+Z5dqF6//39eSyON909
Opz8OTL4iZd3dbdw8ufI4YKXm6fVDyd/jtRfu21z2t0w8ufIwnDbnK4pYeTP
kXtedxqvORBG/hxxrhPd+MkXYeTPkQv3O3l6+YeRP8d439fw58iaZcExrdro
/Z8jD/qbx6z4K5T8OTLmt/0bH+aHkj9HLmW63HKN0/0nR1p/cS/r3KZQ8ufI
5/1WZbUNDyV/jvz467+zVruEkj9Hhu1IynzcOZT82bLPbVrmRLNQ8mdLnVpv
byZX6vyTLTPitt/sfknnn2xJm2Vzc+u3Ov9kS7fWBRnv5oaQP1vW3fokY6Zn
CPmz5eGyxhmGHiHkzzbOVzX82bL/vOPaoz/NJn+21A69s+aDxNnkz5aZbaPX
LNk5m/zZkrDXyvnRvNnkz5Y2PrGjxnvp/pfN/Wc2+bMlZ+1d8751Z5M/W/rb
rTDf+XMw+Q2yJrFFqsWVYPIbjPNjDb9BxnTxSamcH0x+g+w5cn+lp0cw+Q1S
a8rqlRe7B5PfIL6VbUZ0rxNMfoMc9Y997/vKWeQ3SEMrz/fML80iv0Gmf3M3
eeHWWeQ3SLLLiuQfo3T+NUizzBbLvUfr/GuQRdHxyy510fnXYJyXa/gN0mHl
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
VI+mXg3Vq6lnQ/Vs6t1QvZt6OFQPp14O1cupp0P1dOrtUL2dejxUj6deD9Xr
qedD9Xzq/VC9n34A1A+gXwD1C+gnQP0E+g1Qv4F+BNSPoF8B9SvoZ0D9DPod
UL+DfgjUD6FfAvVL6KdA/RT6LVC/hX4M1I+hXwP1a+jnQP0c+j1Qv4d+ENQP
ol8E9YvoJ0H9JPpNUL+JfhTUj6JfBfWr6GdB/Sz6XVC/i34Y1A+jXwb1y+in
Qf00+m1Qv41+HNSPo18H9evo50H9PPp9UL+PfiDUD6RfCPUL6SdC/UT6jVC/
kX4k1I+kXwn1K+lnQv1M+p1Qv5N+KNQPpV8K9Uvpp0L9VPqtUL+VfizUj6Vf
C/Vr6edC/Vz6vVC/l34w1A+mXwz1i+knQ/1k+s1Qv5l+NNSPpl8N9avpZ0P9
bPrdUL+bfjjUD6dfDvXL6adD/XT67VC/nX481I+nXw/16+nnQ/18+v1Qv595
AGgegHkBaF6AeQJonoB5A2jegHkEaB6BeQVoXoF5BmiegXkHaN6BeQhoHoJ5
CWhegnkKaJ6CeQto3oJ5DGgeg3kNaF6DeQ5onoN5D2jeg3kQaB6EeRFoXoR5
EmiehHkTaN6EeRRoHoV5FWhehXkWaJ6FeRdo3oV5GGgehnkZaF6GeRponoZ5
G2jehnkcaB6HeR1oXod5Hmieh3kfaN6HeSBoHoh5IWheiHkiaJ6IeSNo3oh5
JGgeiXklaF6JeSZonol5J2jeiXkoaB6KeSloXop5KmieinkraN6KeSxoHot5
LWhei3kuaJ6LeS9o3ot5MGgejHkxaF6MeTJonox5M2jejHk0aB6NeTVoXo15
NmiejXk3aN6NeThoHo55OWhejnk6aJ6OeTto3o55PGgej3k9aF6PeT5ono95
P2jej3lAaB6QeUFoXpB5QmiekHlDaN6QeURoHpF5RWhekXlGaJ6ReUdo3pF5
SGgeknlJaF6SeUponpJ5S2jeknlMaB6TeU1oXpN5Tmiek3lPaN6TeVBoHpR5
UWhelHlSaJ6UeVNo3pR5VGgelXlVaF6VeVZonpV5V2jelXlYaB6WeVloXpZ5
WmielnlbaN6WeVxoHpd5XWhel3leaJ6XeV9o3pd5YGgemHlhaF6YeWJonph5
Y2jemHlkaB6ZeWVoXpl5ZmiemXlnaN6ZeWhoHpp5aWhemnlqaJ6aeWto3pp5
bGgem3ltaF6beW5onpt5b2jem3lwaB6ceXFoXpx5cvxX3hyaN2ce3fjvmVc3
/sw8u/HPZ97d+PczD2/8fMzLGz8/8/T4/3nzwv/iL4Tm8ZnXh+b1meeH5vmZ
94fm/dkHgPYB2BeA9gXYJzB+3+wbQPsG7CNA+wjsK0D7CuwzQPsM7DtA+w7s
Q0D7EOxLQPsS7FNA+xTsW0D7FuxjGN8v9jWgfQ32OaB9DvY9oH0P9kGgfRD2
RaB9EfZJoH0S9k2gfRP2UaB9FPZVoH0V9lmgfRb2XaB9F/ZhoH0Y9mWgfRn2
aaB9GvZtoH0b9nGgfRz2daB9HfZ5oH0e9n2gfR/2gaB9IPaFjPcZ+0TQPhH7
RtC+EftI0D4S+0rQvhL7TNA+E/tOxvuefShoH4p9KWhfin0qaJ+KfSto34p9
LGgfi30taF+LfS7jfMW+F7TvxT4YtA/Gvhi0L8Y+mXF+ZN8M2jdjHw3aR2Nf
DdpXY5/NOC+z7wbtu7EPB+3DsS8H7cuxT2fcF9i3g/bt2MeD9vHY14P29djn
g/b52PeD9v3YB4T2AdkXhPYF2SeE9gnZN4T2DdlHhPYR2VeE9hXZZzTu6+w7
QvuO7ENC+5DsS0L7kuxTQvuU7Fsa9Rb2MY16Dvua0L4m+5zQPif7ntC+J/ug
0D4o+6LQvij7pNA+Kfum0L4p+6jQPir7qkZ9ln1WaJ+VfVdo35V9WGgfln1Z
aF+WfVqjf8K+LbRvyz4utI/Lvi60r8s+L7TPy76vUS9nH9ioX7MvDO0Ls08M
7ROzbwztG7OPDO0js68M7SuzzwztM7PvDO07sw8N7UOzL23Up9inhvap2bc2
6jXsY0P72OxrQ/va7HND+9zse0P73uyDQ/vg7ItD++Lsk0P75OybQ/vm7KND
++jsq0P76uyzQ/vs7LtD++7sw0P78OzLQ/vy7NND+/Ts20P79uzjQ/v47OtD
+/rs80P7/Oz7Q/v+/wPY5gx7
        "]]}}, {
      {RGBColor[1, 0, 0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
       GeometricTransformationBox[InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->8.96], {0., 0.}], CompressedData["
1:eJxdmwl0zue2xhMpMTQEzTHXcExVQ8xB5CFCJGQWMVYiCSKzmkulpqJKKNoa
ipqPWUQQ7ERIIpH4Ms+JaqtKEVPNct2bZ39d95y1zjrLak98v3z///vu/Qxt
p4Z7BpqZvP/PByYmpu//p8b7/7oEve1m+qJCan8bZ1cjdi7OeQ0cV/VHhaQf
DNz+pmwOPDv2PW1aWCHbnrUY+KDOHIjlrPKqlAoxWVse5zlwNj59faz2u7gK
eRF81KpL+Oe4knEowORghcwLiGq8eN8sWJ+9ve7d9xWyev+UR/Y3I5G25pe7
JqsqpJ3psPDlLSPRb87HVlXzKsRtX68Mm8kRMDg2izSdUSGNno3JTx0aDtte
Y7dV+VTIblPvjfVvhCLvA4/npiMrxGd3aP2BgSEY+vDbtiY2FdJ81rq0Se9m
4lhR2qh3nSrk+V6pFbYjCI5Hrh4waVohb2fWMQscPgMxW2pkvzOvEMupE+FV
OQ3V/OViG3/xdY/dgeQvl+VzrW1e+wSQv1xufxfz9PRH/uQvF7/Gjj0nF/iR
v1zuJd06+ma7L/nLpX+D7nlmBZ+Rv1xOv9if+WbBJPKXS8D+IanZnSeQv1yc
m75OXPGrD/nf//mvq4M67fUmf7n8eDux76a5XuQvlzs3L/YwdfIgf7lYmOV7
fT7Blfzl8mVtj5GJ3Z3JXy7jt1gMvtZ8BPnLJejO3Z7HGtmTv0yurmjsutXB
lvxl0i5po83GL/qQv0z2tOvi+CbpE/KXiUdikO38Civyl8nfy+56RB18a1fN
XyY5EV17zejSjvxlkhi3pmtIG2vyl8nRYxdxt3F/8pfJtU2hnk8LBpO/TGxf
hvZqZ29P/jK56b98UOja4eQvk+Yjxju8uzSS/GXSOsDC5dTvo8hfJpUXd3mv
NnEjf5kcdnzZPcfUg/xl4pDZsPfniz3JXypJj5vFtX/iRf5S6RTbMP6Pqd7k
L5WxMXcuZSSPJX+phLgdt7/afhz5S2X66sARmYvG8/svFUe/eml3MieQv1Tq
F+zK+KiFfv+lsmOVVZb/xMnkL5UeA9fkntr2GflLZW2n8oL2hinkf//zi6K7
jVniS/5SeR3a5fhPjf3IXypfZcVXPtrrR/5SeWU2/LFL76nkf///r5kcc+rS
VPKXytU8u75tHP3JXyJN5xyfu+W6P/lLZNKvTeZbuenzXyK7PaIWbMoKIH+J
pE8ufNXeNZD8JXLHprPtpZRA8pfIi1vhg33tppG/RF5NPP6u7qlp5C+Rd7kP
JLbDdPKXyO/3WpnO+m46+Usks4aLfXfTGeQvkW1xwWZvZswgf4kEhay5cs0w
g/wl0qVy1/BdfYPIXyL3Po9LnrtV3/8S2bD5YspnL4PIXyL945JSR4ybSf5i
SZp7zmnIyZnkLxa3fsfTBtQNJn+xlD7bO6q3fzD5i2W015rRdmeCyV8sF0+E
uzjVCSF/sbQrG11/8vgQ8hfLgsK26xfsDyF/sRhy/m6w5UkI+YulxU9J7vGD
Q8lfLD79V3n8uTyU/MWycqdDozbX9PwrljPmpjljLcLIXyyFdrFeW1zDyF8s
r+cE5eatDyN/sTRYZGX1cWYY+Yulicc5q/A64eQvktYdJ/8rwSGc/EXSPO1F
frPF4eQvktqD1/osOhVO/iJ5drx1Yfkf4eQvknvzvT/sYBFB/iIpabbtyISO
EeQvkuE/lx75yC6C/EXSqVFzC68xEeQvknpLfUI3zNTzv0juP9qUcSMqgvxF
4uyU+e3GzRHkL5I2q8yOFR2MIP/7z5Nsk9nmQgT5i8ThfpDrXxkR5C+S7xpv
y4yriCB/kUxqm3rMvDKC/IXSocezdT4mkeQvlPu27cIPWEaSv1AONXNsYPJx
JPkL5V79CLfcrpHkL5T99zY97DowkvyFUnI89mGdEZHkL5Tv1xavn+ql91+h
ONg8f5g0We+/QlnwpknlrqBI8hfK7vXWJ1bOiiR/obgNcrG8syiS/IUyNzPQ
kLEikvyF0tRpYWX/byPJXygo3Xii1ZZI8hfKzbEHDF/viCR/obw+G+c+d08k
+QvEqkWqIeCQ8heI9eJCd6/jyl8gScm/WSfHKH+B+Fg+shxwVvkL5N74t5WH
Lyh/gbxYU7PnHlH+Aql5wSJy62XlL5BG961Obriq/AXyY83mHhYpyl8grT/+
+NGqVOUvkP392m34IE35//lzNX+BdHPr2DMqXfn/+efV/P/8uZr/n59fzZ9v
/Pur+fONn6+aP9/4+av584181fz5/8WfL2Wdn504fU7588Wp4o5haKzy58uZ
zaWVmSeUP1/ajTZYTjqi/PmyrsYV6z8PKH++zN4Vc+LVbuXPlwl2e6w/3K78
+cbvu5o/XzosXGrdI1r582V5Vajl1VXKny8zd0yOzl+q/HmS2s4pIuQL5c+T
zgf7uNeYrfx5YmLVMrplsPLnyZSt5hGn/JU/T/qbPzx+fYLy54nl7PyHtz2U
P4/zivLnSaLLvvAWQ5Q/T348v/Z43/7Kn2d8v6r582Swv9fDWe2UP0/WxfVb
37Cp8ufJzXrNe5ywUP486eX7NtPVTPnz5N220szI5/r+54lbpYRZ3tf3P1ea
d90Z1vuXCPLnyu3pX4aNzYsgf66c3DM5bMG1CPLnyqIK27DtFyPInyuOLVqG
yUk9/3Jlrd3zjGl79fzLFZ+F+Rmrf9DzL1e27zjZrec3ev7lys2Etd8WLtbz
L1fa/zb9/pIIPf9yJch8mEsnfz3/cuVYl4+PZnrr+ZcrIX2fhbwaoeff+887
znB99wA9/3Ll7y8Od3Xqqvy5cnrl0r9mt1L+HJm1YfyRXfWVP0em2PgV/lCl
53+OlLg0GFf5i57/OeLjf7HA8Yqe/zmSMz/YZ+f+cPLniNu6ZgV/rwonf46k
70kZ6xocTv4cGbAqdMsx53Dy50jsjhb/qtUtnPw50mFpove0D3X+z5Hvpk3f
nHwvjPw5xvusmj9HlvjGj/nyqN5/OXLfwW9T+Vq9/3Jk0ifmuXYhev+9/zwW
RxvvHBVG/mwZ+NjTq6pLGPmz5WD+i41T6oaRP1vqrtmyMfV2KPmzZX6YbXbn
5FDyZ8sdz1sNV+8LJX+2ONWKavj4q1DyZ8u5ux08PP1CyZ9tvO+r+bNl9dKg
6Bat9P7Plnt9zaOXvwwhf7aM/nPv+vt5IeTPlgsZzjdcYnX/yZaWX93JPLMh
hPzZ8mWflZmtw0LIny2//PHvzFXOIeTPlqHbEjMedQwhf5bscZ2SMcEshPxZ
UqvG2+tJFTr/ZMm02K3Xu17Q+SdLUmfYXN/8g84/WdKlZX76u9nB5M+Sb258
nj7dI5j8WXJ/acN0Q7dg8mcZ56tq/izZe9ZhzeFfZ5I/S2qG3Fr9UcJM8mfJ
9NZRqxdvn0n+LInfbeX0cM5M8mdJK++YkeM8df/L4v4zk/xZkr3mtnnv2jPJ
nyV97Zabb/8tiPwGWZ3QLMXiUhD5Dcb5sZrfIKM7eSdXzA0iv0F2Hbq7wsM9
iPwGqTF51YrzXYPIbxCfilbDu9YKIr9BDvvFfPBTxQzyG6S+lccH5hdmkN8g
U7+/nTR/8wzyGyTJeXnSL5E6/xqkSUazZV6jdP41yIKouKUXOun8azDOy9X8
Bmm34pbpruLp5DfIcpso0zpx08lvkMLzVokLo6dja/ariTUqb8jAsJiEX0Om
Y9aB2Sfe3bgh6ypHRnmPmI59o2fOMDtxQ36dVY6U1tOxuO1vF6rW35DhHRfB
+s00eP89ueGb8Bvy48GGVbvzpmH1Nq9rJu435EGXA5caH58Gv4iMVm973BC3
codLi76Zhk1WSXmmljdkr2/x4gcB0xBy17bLu4eZxn1h5/pet2oYMrmvTsO8
gCP9qo5nyrGme94MfBqIw3V+fmAWnSkNrg95s8cQiGXlLYaZRGRKgGt+vNV/
AjExZvP3b9wy5awh+IuvlwVi3bhv3EytM6X58jpfVE4JxLRuNfe+bZAp4bV2
Dpw6IJD8GZK0qs+rnEaB5M+QDrbZL20fBpA/QxZcmn7uWGoA+TOkJLLmuSb7
AsifIT2ebp2/+ssA8mfIhgM28x9PCCB/htz+JLN/QJ8A8mfIwCP+z/MsAsh/
XbZPMX1ud9ef/Nel8pctZ04k+ZP/unhu7nOm2S5/8l+X/U3S5nyzwJ/818U8
ffqcp97+5L8uk1ze9pnWw5/81+WSybY+N+r5k/+6NF5m/XTI71PJny6z+2U+
OZQ4lfzpkvdn8JNGP00lf7p0CTGNWT5vKvnTZW3rnafue00lf7rc3N1n1pRu
U8mfLvbe2ZGpdaaSP1321I6I7Hnbj/zpnJ/8yJ/GecaP/GkS/2iI9Zz5fuRP
4zzhR/40iew0+6Fbdz/yp0lOccOHZ+v6kT9N+q47/qDtH77kT5PVlsOPfZfg
S/40o15TzX9NXOZFHQ1c4Ev+a7xffcl/TRqUxx/p38uX/NckwNcj5FA9X/Jf
M+7r1fzXeP9NIf816llTyH9N8idG52199Rn5U+XHy+m5ITGfkT+V99Vn5E+V
NtH2OZYdPiN/qvz69+LsW2WTyZ8q+yefyzq9ZTL5U2XmlaeGlW6TyZ8q3T61
NoyrPZn8qfJwQ/CNLomTyJ9i1Keq+VMkOvGxy0WbSeRPkTGdu7usfzSR/CnS
ZH3QaL//TCR/CvfjieRPkZ8m3XSu2XIi+VNkUYeuaVeLJ5A/RbB2+rXvv5tA
/mSp8eTn1KDRE8ifLMnjy1MG1ZxA/mTqT+PJn2zUW6r5k7n/jyd/stQ+99cV
36fjyJ8s6a07X+l1dBz5k+XQnc+HPQkeR/6rRj2nmv+qWJ+5O/T7Mh/yXxWL
Jf0Sfbb7kP+qZP0emfCJtw/5r1LP8iH/VZll9dLuwvWx5L/K828s+a9K1wPR
gwc7jyX/Fam0uG7bwGws+a9IRn6TCzcSvcl/RTYM9orfvdCb/Fd4fnmT/4qM
vnH3XLsXY8h/RSz7dTz39MQY8l+R++8ibWLDx5D/iqSnXIyb030M+ZPkUHSd
/v3ue5E/SUKeO/Srvd+L/EnilBAdmxrgRf4k6by6tM/qf3uRP0lqenY+7XTL
k/xJ8mvz2b3r7vYkf5Ls/+p4r9LxnuRPkuXOr09ub+pJ/svUUz3If5n7jAf5
L0urfeU9ysd4kP8y9S8P8l+Wwn5zu0/Jdif/ZTlTlXi09QZ38l+WTakW3W66
uZP/Muddd/Inyk+nnX0ub3Ujf6JMGHHLe1hTN/InilXhgjFXNruSP1EMQQ29
hjd2JX+irH190CM52oX8iTLi2yHujvVdyJ8oZq0LXVO/GU3+ROpFo8mfIAvs
zUenrRxF/gTpk/uT86gPRpE/QTp08XE69K0z+RPkZvwDxy71nMmfINtcVo44
vMqJ/AmcP5zInyCNImOHHV02kvwJYpYSal/PYiR673sW98FNkUvjag5du8YR
v7n+6ft2p8jCu9thUdsRzj/mGmr5ivRd1Mdu3YoReGWfuqCqtUiH7L9s/6o/
Aof/im/3ouKSUZ9t2P/ARtNdl+gXDEfiza2DXk25JD5fx9iEf+2Azp+uPGzW
5pI4lgX3z7B0QGHugjFvKi6KWbhZP9d1w4DWgVdq7rrI+2oYHqaOC3035aIc
G+vVu9tme3g3digzb3PRqF/Xuth/pcnNC9x3h+LMtE97vNx5QawMA3t822wo
Wp78184avhfE4Jfdrf73Q5Axoe7I160vyDdPgrqu/2gI+ePlxUaHscWDQP54
CT/zuVdpPzvyx8vtop/dy3sOJn+8US+v5j8vtofsR23HIPKf5zw6kPznZdP8
W8MnuAwg/3mpt73hsEkjbch/Tu45Lh3SdGJ/8p+TqcEnBzcf24/858S+SbtB
+TP6kv+cnBvoYVPo34f8Z+kP9Cb/WbGs+6jXlshe5D8rK7u1sf4hpCf5z1JP
tiZ/nMS/XOJ95Gl38sfJFx5+7u2bdyN/nAT9IM6dLT8lfxzP20/If0aa9q/C
3k87kf+M1Pxy8sCDbTuQ/wz15n+T/4zEtNzRo/3gtuSPlTt33oyxufox+WOp
xzYnfyznzX+RP1Zan7bpY3OnEflP03+wIP9pzpO1yH9aJr/NcrnZ9Y1dNf9p
/vy7dtX8MbIhaNVQk/MpdtX8Mfy8T+yq+WOoL5iSP4b8dch/iueLJflP8fv5
iPynpPzIpmGGeU3Jf4qfpyX5T9IfaUP+k0b/pJr/pDRqNqp/5QftyX+S719H
8p+Q/t+ss7/TtDP5T8jc3kcdI558Qv4TsuYvV5eQt5/y+z8h2/dVes4w745p
zvfC6yQcF58eTl1P1bZGyo7sxFc4LvOWFXb/+5k1NvU6tNsi4ZiY+B7q+fRV
TzxbEf3kHY7JatuFfR5X9YJ30bzhlXKUn68P2oW5djAbclR6hRYP6PO4D5Yl
9p33VI5IvNNh217P+8J97Ic+5kOO8PvshxOHnhx8IYe5v9hgsV3aqnpDDvP8
GoDyDSeL38h/eN4NxOGOq843GPIfPo+DUG9h+IemCYfk8exol45WtgjJGPvZ
YxySxtdau8+sMRgDpnazq5lwkLx22Br7UfTfOEh9AeQ/QP4h5D9AfWYI+ffz
+x9K/v3G86aaf5/xPKrm38f7z578e3lfDiP/Xt6vw8i/R04GHu3/dWcH8u+R
ZzlWA2oddiD/zzLQ/suBK7oNJ//PEjPb3PaX+OHk383nfQT5d8tgj0K7ioQR
5N8lUTJkyGfDHMm/S14/ujb0fJYjMjblVzSK2inw7TVswJiRWDdo37JnS36S
5ZlbHc7mj0TnQM9hLaJ2yFuT9iM+CnTCn/Xa/vF2yXaxD1/r+N0fTjh86uGa
m0u2cR93hkPpdudaUVvFxPJL57AXzqi1LPjBnSU//nO/HWl6rH7UD8b7z8/r
D49HS74Xm19fuO77fjReLdrUsEnUFjlptdTdtKMLLvzbP/blks18v13g7WI5
p3XUJp7PrmjytLxpjajveH64onDr0Qu/Ldko3XwCx8Y5vr/Pr0xYVDdqg+xf
/cCncb4begd/0ub+kmjO8+748ZOj0sFkPed/d7Sa52x+r2ot9wV3uKXtXdnP
5BtJPlTneKK5B3Ka2Ge+rlolZsMyjz909cDYwAqrxKqVxnll1dkBmz80WSGL
5vicHFXmgQ9rFZRmVS2Vs/VbnlrQ3hN243tOamXylTw7cPPUgWBPLHPZ4Xi1
arH0GrovJu+UJ/584jFikslCCSsOOm32yhMP163Nu101R4583j2251AvjOk7
NHexySzel144s+t5sqVJiKB2ar9FeV5Iyg/5vUOVv/E8avF/AsA4vp8fIO/6
/x4AMJ5//DP0z/z3of8+fx705/Hvg/59/DzQz8PPC/285IHykBfKy98H9PfB
3xf098XfJ/T3yd839PfN7wP6ffD7gn5f/D6h3ye/b+j3zecB+jzweYE+L3ye
oM8Tnzfo88bnEfo88nmFPq98nqHPM5936PPO9wH6PvB9gb4vfJ+g7xPfN+j7
xvcR+j7yfYW+r3yfoe8z33fo+87zAHoe8LyAnhc8T6DnCc8b6HnD8wh6HvG8
gp5XPM+g5xnPO+h5x/MQeh7yvISelzxPoecpz1voecvzGHoe87yGntc8z6Hn
Oc976HnP+wB6H/C+gN4XvE+g9wnvG+h9w/sIeh/xvoLeV7zPoPcZ7zvofcf7
EHof8r6E3pe8T6H3Ke9b6H3L+xh6H/O+ht7XvM+h9znve+h9z3kAOg9wXoDO
C5wnoPME5w3ovMF5BDqPcF6BziucZ6DzDOcd6LzDeQg6D3Fegs5LnKeg8xTn
LeN5xHkMOo9xXoPOa5znoPMc5z3ovMd50Hj+cV6EzoucJ6HzJOdN6LzJeRQ6
j3Jehc6rnGeh8yznXei8y3kYOg9zXobOy5ynofM0523ovM15HDqPc16Hzuuc
56HzPOd96LzPfQC6D3BfgO4L3Ceg+wT3Dei+wX0Euo9wX4HuK9xnoPsM9x3o
vsN9CLoPcV+C7kvcp6D7FPct6L7FfQy6j3Ffg+5r3Oeg+xz3Pei+x30Qug9y
X4Tui9wnofsk903jecN91HgecV+F7qvcZ6H7LPdd6L7LfRi6D3Nfhu7L3Keh
+zT3bei+zX0cuo9zX4fu69znofs8933ovk89AKoHUC+A6gXUE6B6AvUGqN5A
PQKqR1CvgOoV1DOgegb1DuP9Rj3EeP9RL4HqJdRToHoK9Rao3kI9BqrHUK+B
6jXUc6B6DvUeqN5DPQiqB1EvgupF1JOgehL1JqjeRD0KqkdRr4LqVdSzjPMK
9S6o3kU9DKqHUS+D6mXU06B6GvU2qN5GPQ6qx1Gvg+p11POgeh71PqjeRz0Q
qgdSL4TqhdQToXoi9Uao3kg9EqpHUq+E6pXUM6F6JvVOqN5JPRSqh1Ivheql
1FOheir1VqjeSj0WqsdSr4XqtdRzoXou9V6o3ks9GKoHUy+G6sXUk6F6MvVm
qN5MPRqqR1OvhurV1LOhejb1bqjeTT0cqodTL4fq5dTToXo69Xao3k49HqrH
U6+H6vXU86F6PvV+qN5PPwDqB9AvgPoF9BOgfgL9BqjfQD8C6kfQr4D6FfQz
oH4G/Q6o30E/BOqH0C+B+iX0U6B+Cv0WqN9CPwbqx9Cvgfo19HOgfg79Hqjf
Qz8I6gfRL4L6RfSToH4S/Sao30Q/CupH0a+C+lX0s6B+Fv0uqN9FPwzqh9Ev
g/pl9NOgfhr9NqjfRj8O6sfRr4P6dfTzoH4e/T6o30c/EOoH0i+E+oX0E6F+
Iv1GqN9IPxLqR9KvhPqV9DOhfib9TqjfST8U6ofSL4X6pfRToX4q/Vao30o/
FurH0q+F+rX0c6F+Lv1eqN9LPxjqB9MvhvrF9JOhfjL9ZqjfTD8a6kfTr4b6
1fSzoX42/W6o300/HOqH0y+H+uX006F+Ov12qN9OPx7qx9Ovh/r19POhfj79
fqjfzzwANA/AvAA0L8A8ATRPwLwBNG/APAI0j8C8AjSvwDwDNM/AvAM078A8
BDQPwbwENC/BPAU0T8G8BTRvwTwGNI/BvAY0r8E8BzTPwbwHNO/BPAg0D8K8
CDQvwjwJNE/CvAk0b8I8CjSPwrwKNK/CPAs0z8K8CzTvwjwMNA/DvAw0L8M8
DTRPw7wNNG/DPA40j8O8DjSvwzwPNM/DvA8078M8EDQPxLwQNC/EPBE0T8S8
ETRvxDwSNI/EvBI0r8Q8EzTPxLwTNO/EPBQ0D8W8FDQvxTwVNE/FvBU0b8U8
FjSPxbwWNK/FPBc0z8W8FzTvxTwYNA/GvBg0L8Y8GTRPxrwZNG/GPBo0j8a8
GjSvxjwbNM/GvBs078Y8HDQPx7wcNC/HPB00T8e8HTRvxzweNI/HvB40r8c8
HzTPx7wfNO/HPCA0D8i8IDQvyDwhNE/IvCE0b8g8IjSPyLwiNK/IPCM0z8i8
IzTvyDwkNA/JvCQ0L8k8JTRPybwlNG/JPCY0j8m8JjSvyTwnNM/JvCc078k8
KDQPyrwoNC/KPCk0T8q8KTRvyjwqNI/KvCo0r8o8KzTPyrwrNO/KPCw0D8u8
LDQvyzwtNE/LvC00b8s8LjSPy7wuNK/LPC80z8u8LzTvyzwwNA/MvDA0L8w8
MTRPzLwxNG/MPDI0j8y8MjSvzDwzNM/MvDM078w8NDQPzbw0NC/NPDU0T828
NTRvzTw2NI/NvDY0r808NzTPzbw3NO/NPDg0D868ODQvzjw5/itvDs2bM49u
/OfMqxv/zDy78ecz7278+5mHN34+5uWNn595evz/vHnBf/EXQPP4zOtD8/rM
80Pz/Mz7Q/P+7ANA+wDsC0D7AuwTGL9v9g2gfQP2EaB9BPYVoH0F9hmgfQb2
HaB9B/YhoH0I9iWgfQn2KaB9CvYtoH0L9jGM7xf7GtC+Bvsc0D4H+x7Qvgf7
INA+CPsi0L4I+yTQPgn7JtC+Cfso0D4K+yrQvgr7LNA+C/su0L4L+zDQPgz7
MtC+DPs00D4N+zbQvg37ONA+Dvs60L4O+zzQPg/7PtC+D/tA0D4Q+0LG+4x9
ImifiH0jaN+IfSRoH4l9JWhfiX0maJ+JfSfjfc8+FLQPxb4UtC/FPhW0T8W+
FbRvxT4WtI/Fvha0r8U+l3G+Yt8L2vdiHwzaB2NfDNoXY5/MOD+ybwbtm7GP
Bu2jsa8G7auxz2acl9l3g/bd2IeD9uHYl4P25dinM+4L7NtB+3bs40H7eOzr
Qft67PNB+3zs+0H7fuwDQvuA7AtC+4LsE0L7hOwbQvuG7CNC+4jsK0L7iuwz
Gvd19h2hfUf2IaF9SPYloX1J9imhfUr2LY16C/uYRj2HfU1oX5N9Tmifk31P
aN+TfVBoH5R9UWhflH1SaJ+UfVNo35R9VGgflX1Voz7LPiu0z8q+K7Tvyj4s
tA/Lviy0L8s+rdE/Yd8W2rdlHxfax2VfF9rXZZ8X2udl39eol7MPbNSv2ReG
9oXZJ4b2idk3hvaN2UeG9pHZV4b2ldlnhvaZ2XeG9p3Zh4b2odmXNupT7FND
+9TsWxv1GvaxoX1s9rWhfW32uaF9bva9oX1v9sGhfXD2xaF9cfbJoX1y9s2h
fXP20aF9dPbVoX119tmhfXb23aF9d/bhoX149uWhfXn26aF9evbtoX179vGh
fXz29aF9ffb5oX1+9v2hff//AV/NDH0=
        
        "]]}, {}}}, {}, {}, {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxdm3dUlWfWxVFj72aIRqNGo8bYQOxYNqKoIEgTULFQBJQiYIzGBBVrbLES
NbbYjb1XlEORIghcei9pxpJYo7HzZT72ubNW5p9ZrDWD/O773uc5Z5cOPqEu
fjVN/vnPeyYm//1vh5lve9Z4USEW45a0i947F1dcLSdU/V4hz2eaR1xI/QIu
Xfqdr1FYIfaZ9650fDEH0mx2eVVyhXRzOLK14adz0P31yXrvLlVIx55fPvvZ
83PcSD8y3eTHCtnbeezTfptmw/zy7XXvtlZIT8cuvSPTwpG6+qd7Jiv/+X3x
jR2H1g9H/y/amVbNq5D5/m+PP7YNg2H0h+E1ZlSI/7x731m2CcUQC/cdVR7/
/D1L7zlH/hiCvPec/64xpkJ2P3n17fnBwRj+8NsOJgMrxDuhjV1BbiBOFqWO
fffpP7//U7ekirkzMfp44mGTVhUy8tqWJRVtZuDclprZ7+pWiPu5OzHpSf6o
5i+XZY3Gfn10nh/5yyUt+fqlL3pNJ3+59PjNao7ZfR/yl8uR6bmnC054k79c
LEzDes773Iv85ZJ0Zkzui6VTyV8uw3fEpT/uMpn85fJ0jGdyct5E8pdLzITa
w9eu9iB/uRSuq7T8yNmN/OXS+NNb57e3dSV/uUzukHKy7iMn8pfz83Egf7kE
rPIblRFhS/5//v+uNQa/nGxD/nJxmVllFu01nPxl0qPqle2rFEvyl8mTG9F9
j7fsQ/4ysekSAfM3XchfJiUOTSc8+qkp+cskYe4VW6szDchfJrUXTrH8sUNn
8pfJpGH7zRvt7E3+MhndL3/E6vUDyV8mafuT3ccFgfxlEmOyo29mwxHkLxOf
oDNDW7uPIn+Z7HBYMerYSlvyl8meIEvHaafsyV8m4YnpHv1THclfJit6fmy+
LdiZ/GXS/vzAvgPvuJC/VHYXWl2+O2U8+Uul5o6B146nu5G/VCy+bxq7qbcH
+Uv5908gf6lMztqZvPjPieQvlSFHrMfuhCf5S+XuteSMouX6/EslymDv0vLW
FPKXSuclcW7+jaaRv1TiLq3uEfyxF/lLJfRk314Hr3qRv1Rqjcg49XCcN/lL
ZdWhaY+tK73J/8/fX3Tnye5ZPuQvlYiGs/969caH/KVSUnLvixnLfclfIj2/
9rxU3mA6+Usk/G7C5Snf6vtfIke6dPrqt0Z+5C+RSt9lg0PW+pG/RN4Oy42o
U8ef/CXS+G6bhT9G+JO/RNpu9l1k99Sf/CXSomS7yTvfAPKXSN1PshefyQ0g
f4k8GlQjIcR6BvlLJK191xsWJ2aQv0S25Y5abmI6k/wlMmnClDoF82eSv0Ta
lH7+zYly/f6XSNzb+Su/GxpI/hIJaB+5asHOQPIXi0mzhXazXgSSv1jWZH6e
FuAcRP5iabl+pr330SDyF8uWth7f+poEk79Y6n09ZN0s12DyF0vQ4Q8dl+wP
Jn+xxO97kLn7UTD5i6XN7gSn6KEh5C+W6TM2bKz8JoT8xXLSYkp27ewQ8hfL
/bQOOX0+nEX+Ymndt3xz4JRZ5C+WIUGb/nN09yzyF8vUfaO+u1sxi/zFMufH
J3m924WSv1giFmzJXzIxlPxFsszFsiAnKpT8RbL20/KCToZQ8hfJ0PSBxxNq
hpG/SM6vWPLHnLZh5C+Sbla3enQZGEb+Imn9U/N0T+cw8v/z+2e6ppvODCN/
kfz5OCo9MzKM/EVi8M7u2WSrnv9Fci6r6Tr7E2HkL5Jmn9mOaxofRv4iCY5c
0iQ7P4z8RWItl3p9eC+M/EXS8t0f47zehpG/SAI6tcvs3jSc/EViZjH21Nft
w8lfKIsmRJiN7h1O/kKJczgY2sYqnPyFssoz2zHIKZz8hTJy4N8PE6aEk7+Q
50s4+QvFuoGN4dH8cPIXytwMP0P6cr3/CuX4phWGoxv1/iuUSvfDhm92hZO/
UNbVvGF+93A4+Qtl6MnKDXZnw8lfKNOHv3Qyjw4nf6GsyW3e/IMb4eQvlPMB
3bJe3wonf6GM/3nYY79c5S+UZ5NdmxtKlL9AmonvxpiflL9AunWY0/zE78pf
IDZLl23c8afyF0jhrQ3hTZ4of4EEf7DLefFz5S8QE68jvf96pfwFEnXkQvOA
KuUvkD3F152n1pxN/gL59Gnc46Jas8lfIP06pfbOqjOb/AUSPSQjy77ebPIX
iLVbdnhK/dnk/9/P1fz/+7ma/38/V/P/7+dq/nzj76/mzzf++9X8+XKyYdJG
t9qzyZ9v/Hur+fOldfyVMz+bzCZ/vjTeeCb8/lvlzzd+HtX8+fK0197Hb/7W
558v036Lar76qT7/fEnbsbJ3y4f6/PNlgEuE84F7+vzzZX+9sPDet/X55/P8
1+efL6EjHcPHF+vzz//X888Xy8he4fMy9PnnSft27R6vTNHnnyeL9tfPahen
zz9Pyro+O33+ij7/POP7WM2fJzv73AqrPKrPP09eX77kNHe/8udJTucfNmzY
rvx5/3r/82RZVUizxJXKnyeTg92cKhYpf570LRqy4eVc5c+TxqM6Gd6fpfx5
Mm173bCzvsqfJ6cf3GvqPFH583hfKn+euG0947hupPLnyqH7UQ97WCp/rrzA
l+vTzJQ/VxK+9lj/4BPlzxVTg6XZtx8qf65UNmxtdrqx8ufKsdEve+XUUP5c
mbe0sNfzZ3r+5RrPq2r+XGn8ekuvIeV6/uVKYf+5vaZl6/mXK20nOa+rk6jn
X674LOjx4MQlPf9ypeeVhg8Mx/T8y5Xw0tsOX+7W8y9XLlbFnWi/MYz8ufKq
467GyUvDyJ8jGPVlyKy5YeTPMZ7X1fw5Yj2n27fDJ+n5nyPfbK395x17Pf9z
JO1qpf0G6PmfI6sSLzW6Zq7nf46MNqy79XsH5c+RNU9n9lj/H+XPEdt3Vn9c
ra38OdKshfmE9D91/s8x3kfV/DlSb+haj4izoeTPMd5f1fw5YjLjjnv3eaHk
z5FZ9uu2rHHX+y9H7nkP+eCXgXr/ZRv3jWr+bMn33JC3/dUs8meLS/gwtyel
s8ifLbFuv0a5XJtF/mzj/VvNny3HHAeOb7BwFvmzjfd1NX+2bLFd+348ZpE/
W2r3snDt2H4W+bNlTovCTUve6f2fLb88X5D9c5nuP9niXPJJixHXQ8ifLXFy
03n/zhDyZ4vZgdCNtSJCyJ8tu1aaZvl6hpA/WxqHRDe7YRlC/iz52tnbqVPr
EPJnyf1+dTcsexlM/iyxv3tg/Z95weTPkmvpdpkOF3T+yZJuZx81ORml80+W
bNuyZVyTOTr/ZMkr277j5jnp/JMlM3sVf1tgFkz+LClqEZk+oGkw+bNkUFLb
9D33g8ifJUeOJjSqkRZE/ixpMNW7UeDhIPJnyXzruvapK4LInyWlzw6M7eMb
RP4ssSu2W7PZOoj8WXL82zur37QLIr9BWs9elzr5nc5/Bono3CM1sTiQ/Aa5
Xz+7fpergeQ3iMP10PrrtwSS3yDRe01tH34RSH6DtHU7N2aCSyD5DbJ20MSV
l3sHkt8gD/54/k2HJoHkN3B/mEl+g8Qss0y+d3Mm+Q3SfmBhkuuhmeQ3yPqP
FtY5v1znX4M8zGxTp62Pzr8GmXY+zmbBcJ1/DRIbMM3mdtuZ5DeImX3t5aPe
zsD27FeeNR9lyqaqfctOFc3A7MNzTr/LzJQnZ62Wtbo4AwftA2fUOp0pPltv
J3z53Qws6PDrtar1mZJgtyzhp/AZcHs+pfmb0EyxMOtWy9p5BlbtcL1p4pQp
m39Ornms5wx4h6W3fWuWKbWSQ6wbNp6BKNOEvBrNMmX6Vw2t59wNQPC9Id3e
PcyQnKlnFuemBOCH9RY/1zRkSN8WjouHHgzAvOnH+1edypADz/+K3bUsAMfq
73tQa0OG1D66KbaOdwCWlrcZYRKWIXPWDTQJsAqA57nvtr5xzJC84flVmR8F
YN2ENY41zDO4v/rDv2ftA2+bZsjBog/xfaE/+dPFNEYWvrzkT/50WbrPL2bi
Vn/yp8ttt1ox8Z/7kz9dxlseedvR1Z/86ZLQznHoUgt/8qdL5+w/hvzRxJ/8
6bL54qYI+wd+5E/nfulH/lsyfVx+tOlRP/LfkhyLiNdfrPIj/y2xbtlxcP4M
P/LfkjOvk7/qP8aP/LekxSm/r37o5Ef+W7J4c8OrVbX8yH9LHs0783LaL9PJ
f0umTfYYFBs/nfxpkmH19suP900nf5oM7bz/cuTi6eRPk2P1bV9Uek0nf5q0
fvBgwHCr6eRPk1XZUfP2tp9O/jR5cdHyUo0qX/KnScCOyufe5b7kT5P8RSv6
x1/3JX+q2EzvMbfjLl/yp8q5MdkXlkT4kj+V+pIv+VNlY/N2/UYM9iV/KvUR
X/KnGvfdav5Uuf+wZV/PUh/yp8rE3OufR0f7kP+m5N0Netpitw/5b8rIjOZ9
Pl/gQ/6bEvuLnE2d5kP+m2KW4vekG3zIf1N2H29osaadD/lvch70If9N435e
zX9Tal9rHL493pv8KTJnz7nTr/Z6kz9FHl3wNndZ5k3+FAlOa3r6iL83+VOk
5NSFh/VHeZM/RTwSfUO9u3qTP0Vyips/vNzAm/wpnDe8yJ8iMbl+J8NueZE/
WSzvvd8r5aQX+ZM5L3iRP9mob1XzJ8vJbu1OZLh5kT+Z+58X+ZPlkNtXxxe0
9iJ/sozMd5pw9OU08ifLkBonPCbGTCN/kvTrUd+j3tJp5E+Snh5+7pdGTyN/
klEfqeZPkrYn2rqZZk0lf5KYFs4ff+O7qeRPkq5+t3O8vaaSP0k+3mCd06zz
VPInSavo3dlydwr5E6XZ7VdZs05OIX+idPg8wLnR/CnkT+S+PoX8idKzu7lh
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
6sVQvZh6MlRPpt4M1ZupR0P1aOrVUL2aejZUz6beDdW7qYdD9XDq5VC9nHo6
VE+n3g7V26nHQ/V46vVQvZ56PlTPp94P1fvpB0D9APoFUL+AfgLUT6DfAPUb
6EdA/Qj6FVC/gn4G1M+g3wH1O+iHQP0Q+iVQv4R+CtRPod8C9Vvox0D9GPo1
UL+Gfg7Uz6HfA/V76AdB/SD6RVC/iH4S1E+i3wT1m+hHQf0o+lVQv4p+FtTP
ot8F9bvoh0H9MPplUL+MfhrUT6PfBvXb6MdB/Tj6dVC/jn4e1M+j3wf1++gH
Qv1A+oVQv5B+ItRPpN8I9RvpR0L9SPqVUL+SfibUz6TfCfU76YdC/VD6pVC/
lH4q1E+l3wr1W+nHQv1Y+rVQv5Z+LtTPpd8L9XvpB0P9YPrFUL+YfjLUT6bf
DPWb6UdD/Wj61VC/mn421M+m3w31u+mHQ/1w+uVQv5x+OtRPp98O9dvpx0P9
ePr1UL+efj7Uz6ffD/X7mQeA5gGYF4DmBZgngOYJmDeA5g2YR4DmEZhXgOYV
mGeA5hmYd4DmHZiHgOYhmJeA5iWYp4DmKZi3gOYtmMeA5jGY14DmNZjngOY5
mPeA5j2YB4HmQZgXgeZFmCeB5kmYN4HmTZhHgeZRmFeB5lWYZ4HmWZh3geZd
mIeB5mGYl4HmZZingeZpmLeB5m2Yx4HmcZjXgeZ1mOeB5nmY94HmfZgHguaB
mBeC5oWYJ4LmiZg3guaNmEeC5pGYV4LmlZhnguaZmHeC5p2Yh4LmoZiXgual
mKeC5qmYt4LmrZjHguaxmNeC5rWY54LmuZj3gua9mAeD5sGYF4PmxZgng+bJ
mDeD5s2YR4Pm0ZhXg+bVmGeD5tmYd4Pm3ZiHg+bhmJeD5uWYp4Pm6Zi3g+bt
mMeD5vGY14Pm9Zjng+b5mPeD5v2YB4TmAZkXhOYFmSeE5gmZN4TmDZlHhOYR
mVeE5hWZZ4TmGZl3hOYdmYeE5iGZl4TmJZmnhOYpmbeE5i2Zx4TmMZnXhOY1
meeE5jmZ94TmPZkHheZBmReF5kWZJ4XmSZk3heZNmUeF5lGZV4XmVZlnheZZ
mXeF5l2Zh4XmYZmXheZlmaeF5mmZt4XmbZnHheZxmdeF5nWZ54XmeZn3heZ9
mQeG5oGZF4bmhZknhuaJmTeG5o2ZR4bmkZlXhuaVmWeG5pmZd4bmnZmHhuah
mZeG5qWZp4bmqZm3huatmceG5rGZ14bmtZnnhua5mfeG5r2ZB8e/8uL4V54c
/8qbG39mHt34M/Pqxt/PPLvx32fe3fj3Mg8PzcMzLw/NyzNPb/w8mLeH5u2Z
x4fm8ZnXh+b1meeH5vmZ94fm/dkHgPYB2Bf41/MvhPYJ2DeA9g3YR4D2EdhX
ML6P7DNA+wzsO0D7DuxD/Ov9L4T2JdingPYp2LeA9i3Yx4D2MdjXgPY12OeA
9jnY94D2PdgHgfZB2BeB9kXYJ4H2Sdg3MZ5X7KNA+yjsq0D7KuyzQPss7LtA
+y7sw0D7MOzLGM9r9mmgfRr2baB9G/ZxoH0c9nWgfR32eYz3Efs+xvuLfSBo
H4h9IWhfiH0iaJ+IfSPj/cs+kvG+Zl8J2ldinwnaZ2LfCdp3Yh8K2odiXwra
l2KfCtqnYt8K2rdiHwvax2JfC9rXYp8L2udi3wva92IfDNoHY18M2hdjnwza
J2PfDNo3Yx8N2kdjXw3aV2OfDdpnY98N2ndjHw7ah2NfDtqXY58O2qdj3w7a
t2MfD9rHY18P2tdjnw/a52PfD9r3Yx8Q2gdkX9C477JPCO0Tsm9o3M/ZR4T2
EdlXhPYV2WeE9hnZdzTqI+xDQvuQ7EtC+5LsU0L7lOxbQvuW7GMa9TT2NaF9
TfY5oX1O9j2hfU/2QaF9UPZFoX1R9kmNejT7ptC+Kfuo0D4q+6rQvir7rNA+
K/uu0L4r+7BGP4t9WWhfln1aaJ+WfVto35Z9XGgfl31dox/JPi+0z8u+L7Tv
yz4wtA/MvjC0L8w+MbRPzL4xtG/MPrJRT2df2ahPs88M7TOz72zUU9mHhvah
2Zc26oHsU0P71OxbG/Ut9rGhfWz2taF9bfa5oX1u9r2hfW/2waF9cPbFoX1x
9smhfXL2zaF9c/bRoX109tWhfXX22Y37Bvvu0L47+/DQPjz78tC+PPv00D49
+/bQvj37+NA+Pvv60L4++/zQPj/7/tC+//8BgYJDfw==
       "]]}}, {}, {}, {{}, {}}}},
  
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.499512, 0.499512}, {0, 0.005543717164502533}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.699097225981105*^9, 3.699097344912569*^9, 
  3.6991191606959133`*^9, 3.699119520334633*^9, 3.699123291640767*^9}]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Open  ]]
},
WindowSize->{808, 651},
WindowMargins->{{111, Automatic}, {Automatic, 30}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 104, 2, 32, "Input"],
Cell[687, 26, 206, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[930, 34, 99, 1, 64, "Section"],
Cell[1032, 37, 3104, 71, 411, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[4173, 113, 112, 1, 50, "Section"],
Cell[4288, 116, 926, 24, 117, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[5251, 145, 115, 1, 50, "Section"],
Cell[5369, 148, 1485, 33, 195, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[6891, 186, 110, 1, 50, "Section"],
Cell[CellGroupData[{
Cell[7026, 191, 91, 1, 44, "Subsection"],
Cell[7120, 194, 924, 22, 117, "Input"],
Cell[CellGroupData[{
Cell[8069, 220, 98, 1, 35, "Subsubsection"],
Cell[8170, 223, 666, 15, 32, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[8885, 244, 140, 2, 36, "Subsection"],
Cell[9028, 248, 981, 23, 117, "Input"],
Cell[CellGroupData[{
Cell[10034, 275, 98, 1, 35, "Subsubsection"],
Cell[10135, 278, 666, 15, 32, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[10850, 299, 105, 1, 36, "Subsection"],
Cell[10958, 302, 1100, 31, 75, "Input"],
Cell[CellGroupData[{
Cell[12083, 337, 137, 2, 32, "Input"],
Cell[12223, 341, 4910, 92, 249, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17182, 439, 100, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[17307, 444, 104, 1, 35, "Subsubsection"],
Cell[17414, 447, 1318, 27, 96, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[18769, 479, 107, 1, 29, "Subsubsection"],
Cell[18879, 482, 930, 21, 96, "Input"],
Cell[19812, 505, 391, 5, 32, "Input"],
Cell[CellGroupData[{
Cell[20228, 514, 536, 11, 32, "Input"],
Cell[20767, 527, 2055, 44, 249, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22859, 576, 657, 13, 54, "Input"],
Cell[23519, 591, 23332, 396, 249, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46888, 992, 168, 3, 32, "Input"],
Cell[47059, 997, 34253, 577, 249, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Open  ]]
}
]
*)

