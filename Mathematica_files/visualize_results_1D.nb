(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     32332,        720]
NotebookOptionsPosition[     31045,        669]
NotebookOutlinePosition[     31405,        685]
CellTagsIndexPosition[     31362,        682]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell["Importing data", "Section",
 CellChangeTimes->{{3.669612040340261*^9, 3.669612043088347*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"numerical", " ", "solution"}], ",", " ", 
    RowBox[{"flag", " ", "\[Equal]", " ", "0"}], ",", "\[IndentingNewLine]", 
    " ", 
    RowBox[{"exact", " ", "solution"}], ",", " ", 
    RowBox[{"flag", " ", "\[Equal]", " ", 
     RowBox[{
     "1", " ", "and", " ", "\[IndentingNewLine]", "error", " ", "flag"}], " ",
      "\[Equal]", " ", "2"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"importdata", "[", 
    RowBox[{
    "dof_", ",", "p_", ",", "refinetype_", ",", "flag_", ",", "outputdir_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"result", ",", "filename"}], "}"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{"flag", " ", "\[Equal]", " ", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"filename", "=", 
         RowBox[{"StringJoin", "[", 
          RowBox[{
          "\"\<../\>\"", ",", "outputdir", ",", 
           "\"\</solution/numerical_solution\>\"", ",", "refinetype", ",", 
           "\"\<degree_\>\"", ",", 
           RowBox[{"ToString", "[", "p", "]"}], ",", "\"\<_DOF_\>\"", ",", 
           RowBox[{"ToString", "[", "dof", "]"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"flag", " ", "\[Equal]", " ", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"filename", "=", 
         RowBox[{"StringJoin", "[", 
          RowBox[{
          "\"\<../\>\"", ",", "outputdir", ",", 
           "\"\</solution/exact_solution\>\"", ",", "refinetype", ",", 
           "\"\<degree_\>\"", ",", 
           RowBox[{"ToString", "[", "p", "]"}], ",", "\"\<_DOF_\>\"", ",", 
           RowBox[{"ToString", "[", "dof", "]"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"flag", " ", "\[Equal]", " ", "2"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"filename", "=", 
         RowBox[{"StringJoin", "[", 
          RowBox[{
          "\"\<../\>\"", ",", "outputdir", ",", "\"\</solution/error\>\"", 
           ",", "refinetype", ",", "\"\<degree_\>\"", ",", 
           RowBox[{"ToString", "[", "p", "]"}], ",", "\"\<_DOF_\>\"", ",", 
           RowBox[{"ToString", "[", "dof", "]"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"result", " ", "=", " ", 
       RowBox[{
        RowBox[{"Import", "[", 
         RowBox[{"filename", ",", "\"\<Table\>\""}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"2", ";;", 
           RowBox[{"-", "1"}]}], ",", "All"}], "]"}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.669612046359902*^9, 3.669612413807294*^9}, {
   3.669612466093939*^9, 3.669612468874626*^9}, {3.669612505973831*^9, 
   3.66961259319687*^9}, {3.6710127938561897`*^9, 3.671012876199942*^9}, {
   3.68769289985107*^9, 3.687692900977291*^9}, 3.687693330393715*^9, {
   3.698386119765111*^9, 3.698386122354374*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["IDs for different variables", "Section",
 CellChangeTimes->{{3.696580055896234*^9, 3.696580059992462*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "we", " ", "declare", " ", "the", " ", "IDs", " ", "for", " ", 
     "different", " ", "variables"}], ",", " ", 
    RowBox[{
    "this", " ", "will", " ", "help", " ", "us", " ", "with", " ", 
     "plotting"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"IDSpace", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"IDRho", " ", "=", " ", 
     RowBox[{"1", "+", "IDSpace"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"IDvx", " ", "=", " ", 
     RowBox[{"2", "+", "IDSpace"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"IDtheta", " ", "=", " ", 
     RowBox[{"3", "+", "IDSpace"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.696580065109486*^9, 3.6965801391978893`*^9}, {
  3.69658115056069*^9, 3.6965811599769897`*^9}, {3.697960331352499*^9, 
  3.69796036750634*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Mapping to Primitive variables", "Section",
 CellChangeTimes->{{3.696583691326552*^9, 3.696583703117042*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "we", " ", "change", " ", "the", " ", "numerical", " ", "solution", " ", 
    "obtained", " ", "to", " ", "the", " ", "primitive", " ", 
    RowBox[{"variables", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ConvToPrim", "[", "sol_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "factor\[Theta]", ",", "factor\[Sigma]", ",", "factorq", ",", 
       "trialsol"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"trialsol", " ", "=", " ", "sol"}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"factor\[Theta]", " ", "=", " ", 
       SqrtBox["2"]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"trialsol", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "IDtheta"}], "\[RightDoubleBracket]"}], " ", "=", 
       
       RowBox[{"factor\[Theta]", " ", "*", " ", 
        RowBox[{"sol", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "IDtheta"}], "\[RightDoubleBracket]"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "trialsol"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6965837061069403`*^9, 3.696583717514237*^9}, {
  3.696583908798395*^9, 3.6965840901636267`*^9}, {3.696585459745919*^9, 
  3.696585482490589*^9}, {3.696585613969385*^9, 3.6965857085399733`*^9}, {
  3.697960379434245*^9, 3.69796039531357*^9}, {3.6979604303097363`*^9, 
  3.6979604306195602`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Poisson Heat conduction", "Section",
 CellChangeTimes->{{3.697960441066794*^9, 3.6979604452417173`*^9}}],

Cell[CellGroupData[{

Cell["G20", "Subsection",
 CellChangeTimes->{{3.6979604494583817`*^9, 3.6979604501295*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ndof", "=", "384"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "foldername", " ", "=", " ", 
   "\"\<Tests/build/output_N6_poisson_heat_conduction_1D_Kn0p1\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numsol20", "=", 
   RowBox[{"importdata", "[", 
    RowBox[{
    "ndof", ",", "1", ",", "\"\<_global_\>\"", ",", "0", ",", "foldername"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"exactsol20", " ", "=", " ", 
   RowBox[{"importdata", "[", 
    RowBox[{
    "ndof", ",", "1", ",", "\"\<_global_\>\"", ",", "1", ",", "foldername"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numsol20", " ", "=", " ", 
   RowBox[{"ConvToPrim", "[", "numsol20", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"exactsol20", " ", "=", " ", 
   RowBox[{"ConvToPrim", "[", "exactsol20", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.697960452310875*^9, 3.697960520417783*^9}, {
  3.697960711101891*^9, 3.697960712807272*^9}, {3.698385615776208*^9, 
  3.698385631404853*^9}, {3.698386096548395*^9, 3.698386148074709*^9}}],

Cell[CellGroupData[{

Cell["\[Theta]", "Subsubsection",
 CellChangeTimes->{{3.69796052986224*^9, 3.697960530413341*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plot1", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"numsol20", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "IDtheta"}], "}"}]}], "\[RightDoubleBracket]"}], 
      ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}]}], "]"}], ",", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"exactsol20", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "IDtheta"}], "}"}]}], "\[RightDoubleBracket]"}], 
      ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6979605324657717`*^9, 3.697960572875208*^9}, {
  3.6979684735081787`*^9, 3.6979684763541517`*^9}, {3.6979686304444857`*^9, 
  3.6979686473487053`*^9}, {3.698385744871746*^9, 3.6983857504842443`*^9}, {
  3.698386153797813*^9, 3.698386165988146*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.011000000000000001`], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJx1088rgwEcBvA3WhzmMG5OHCQ7OQmlr1+JkoPbDg7IYSiHrURKI5EssUKZ
vJfZQbLVejcL33eZNvm1l9mrt23e2EY2icJqtdAcfZ96evr8AU9530j3QB7D
MI0//d1cZNS5BWXS+IQ5R/G9ZZCbjyYIh3HZ2DvbWR8nLGHH4rbmxvxA+BZr
L2ZtacU94RAOn+pqLvUy4SB+LUubxUKE8BUKe7GSZ14iHED7St54zCkSPsO1
Snth0hEk7Met9RdPmhMIe/H6cZDtHD8nzGNLe5FvyOgj7MLjyAG/a/EQtiHE
3goN007CLM40p5SjBithhlnSzjUxbvHwf7OQrXoazkxa4X/bICO+1h5NOQm7
IMrtZ1otHsI8rDHKio8FH2EvqFlt9mbsnLAflGLKZOcEwmdg7q5ObTiChAPA
eQw9q06R8BWovP2lS7xEOAj6Cc3JTiBCOASrlbq4SS8TvoVLlW/MobgnLEGX
W90wZ34gHIZ8tmzmsy5OOArZ9WRbwV2CsAx/f4dvjRJ9JQ==
        "]]}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->8.96], {0., 0.}], CompressedData["
1:eJx1088rgwEcx/EHicMcxs2Jg2QnJ43S169EycFtBwfkYFYOW4mURiJZYsXK
5LngINlqPZuF77NMm/zYntn26MlmsSGbRGG1Wla4+X7qfXj9AZ/K/pGewQKG
YZpy5eXKZ/4WQ61TkCUNT/jjKL63qrn56APhG1w29M12NSQIS9i5uKMKme8J
X6PyctaSLrwjHEbNmbbOp4sRDuLXsrRRKkQIB1DYj5c98xJhP1pX8sfjdpHw
OZqqrcVJW5CwF7fWXlxpTiDsxqtHNds1fkGYx9aOEs+wwUPYgSeRQ35v00XY
ghB/K9ZP2wmzONOSko3qtwkzzNLQXDPjFI/+NwvZmidNZnIb/rcFMuKr8njK
TtgBUe4g07bpIsyDiZFVfSx4CLtBwQ5lQ2MXhL0gE1NGKycQPgdzT21q3RYk
7AfOpe9dtYuEAyB3D5Qv8RLhIOgmVKe7/gjhMKxWaxNGXYzwNfjknjFb4R1h
CbqdisY58z3hGyhgK2Y+6xOEo5BdS7YX3T4QjsHv3+EbnNp9Jw==
        
        "]]}, {}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.011000000000000001`], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJyFx7EJgDAURdGPmziJzuAIgrUrZYSU6bSwsEgRQgghhOAoKoJg473weJx2
nIepEZH+2v1PxyKfKriAMziBIziAPdiBLXgHb+AVbMAarMCU6v6twQa8gjfw
DrZgB/bgAI7gBM7gAq7g4/UJHmpR0A==
        "]]}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
       AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->8.96], {0., 0.}], CompressedData["
1:eJyFx7EJgDAUANGvTuIkOoMjCNaulBEs02lhkSJFEAkhBMkoplGw8Q6ueO04
D1MjIn25KtfylFf5dIETOIID2INP8AF2YAs24B28gTV4ASswpbp/L2AN3sA7
2IAt2IEP8An24ACO4AS+wPn1DS4yUdI=
        "]]}, {}}}, {}, {}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.5, 0.5}, {-0.7673239946723939, 0.7673239946723939}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.697968630836652*^9, 3.697968647778511*^9}, 
   3.698385636167609*^9, 3.698385751012361*^9, 3.69838579848829*^9, 
   3.698386166635689*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["G26", "Subsection",
 CellChangeTimes->{{3.6979604494583817`*^9, 3.6979604501295*^9}, {
  3.697962094289034*^9, 3.697962094823597*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ndof", "=", "16384"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "foldername", " ", "=", " ", 
   "\"\<Tests/build/output_G26_odd_poisson_1D_Kn0p1\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numsol26", "=", 
   RowBox[{"importdata", "[", 
    RowBox[{
    "ndof", ",", "1", ",", "\"\<_global_\>\"", ",", "0", ",", "foldername"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numsol26", " ", "=", " ", 
   RowBox[{"ConvToPrim", "[", "numsol26", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.697960452310875*^9, 3.697960520417783*^9}, {
  3.697960711101891*^9, 3.697960712807272*^9}, {3.6979621070675287`*^9, 
  3.69796212277055*^9}}],

Cell[CellGroupData[{

Cell["\[Theta]", "Subsubsection",
 CellChangeTimes->{{3.69796052986224*^9, 3.697960530413341*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"numsol26", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "IDtheta"}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
   
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6979605324657717`*^9, 3.697960572875208*^9}, {
  3.697962126010499*^9, 3.697962126762464*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxl3HdYDf7/xvHGB1nZssnOXtncspKV7L0+kRU+ZI+QvUNkJiPJKlRKVNqk
vffep1OUZPU7X6/ff3f/uB7Xda7OOe/7/TzXRVd0V2+ZvUZDTfWlpab298//
//I007IYH1qOvMst/GLVZ2GT66Vtv8PZJj/GB++pWYE6Nfsr3aLZbQ2fBjxS
W4et43ocNo9ny+O3IOFwZIOuyezOWXlzB6lZoPHbUfbxaWyvUYPm36zZhSkV
D/XPZLHd7lYFNlbbD+NuEVGj8tjyfJaYP//HlpJC9sP+R29V1RzGJKuj1jcV
bHk9R6HhGPbWsJytPH82Nq/mGLxDW+V9rWBvMlCe01U7CVPFhyt3vrNHlF7R
jqs5hbK6n4MMf7Hl/ZyFaedhlsoattWM24YBNefgPVT9rY3mF7KsfREahr33
jazDHrto4NL2ataYuGDeqPR6bDkPa8xfgX8Oa7OzT7p+b652GevM9D53bsqe
ukJrhLLmMozMou/4tmCffDPCpoGaDfTMDmxd2Zot52mD8tUnAn+3Y/cteDfw
H7VrsF9cfvd6J7acty2Gz3xbM7grO1pnfNjPGlu4j8nNCu3BbvLf9l6t1W5A
v2+jwDW92bsNAzd8rbkBq+bVLj/7sWWvW4j4mXXbehC7/a6pdYprbqFWeh/t
7kPZSyL2/auldge67+M0PEawPziE3c+quYNu1zP2TR3Dlr3vQs+iqCJ5HNvu
aavn2ofu4ufk1zs3TGTLedxFWOuD378bsrf5L95f75A9ThY8+nNsGlvuiz0m
uEf+08yYPTHl1tTah+4h9MDbZrdns+U872HexIede8xn61SktdI4dB/PNIxH
Pl/Elvt2H7V9v5voL2MX1tfN/235AMst7633WsmW+/gQx/UbnB5nyvbq8q9r
teVDPCve4eRvxpa9HPD2NowNN7LPj3poVWnpAJdp63cHb2bLfX6ER9WX7I22
sVfNyTcpt3yEY/fbGYfsYMvejphqVPuw4R627O2IqiLjYf772bK3I+6fva4Y
d4gtez9Gh+73n3pasWXvx7jh/XTjkBNs2dsJLRe59Xp+mi17O2F3acfN3c+z
Ze8n+GBZqH/bmi29PUVlg2ZHmtqwZe+n0L56a/ZxW7bs/Qw9Onbv8uMmW/Z+
BgPHF1/N7diy93Po6VWHpt1jy97P0cRpvIOxA1v2foHM7iWa3o/ZsvcLuNy3
WdXvGVv2dsa6dnYTbjmzZ81vsKDOOGfUttZy0nrNlvNwxjn1qCvb3dkjVvcd
W8vHGc223bRM82TLfXHG4TT/UsP37M6bZ3bTHOcC5dTSZS6+bDlPF0x4tcuk
dQC7/t4tDdR9XHBIZ1WIZTBb7psL3u2bapD3iV157OLXP3iJzOTLY6aFs+U+
voRi2Jj3z6PYadYuSb+8X6L6ct7YpnFs2esViouVEywS2UG3o3x/4BXSJlRP
iUthy31+BY9rq6OGZrCdH391/O79Cvvye2fYZLNl79cYM6xSUZHHlr1fI+9I
h0Ozi9iy92tcDDNs6qxgy96vodsysmeDcrbs/RrXF3n6ra1gy96uaHL7/nLf
Krbs7YptKSUH2vxky96uiGw79Pb2P2zpzQ2tF6SP+6T+lSx7u8HwfME63Vps
2dsNOwPKL+7SYsvebnj468ebz/XZsrc7vPqbrunciC17u8Njed+rO5qyZW93
uJ/7Fhjcgi17u+PWm47727Rmy95vcCR7ysBN7diy9xsY14va4NWRLXu/gWbf
tz3rd2HL3m8QMWfi6iXd2bL3G2zcdu6Box5b9vZAHeu4vMo+bNnbA/dfdNSb
MIAte3ug28dg5fnBbOndAxczIkcmDmXL3p74+S3pWJeRbNnbE2sb5kSYj2HL
3p5403HGXbdxbNn7Lb70bVnxewJb9n6L3qPTDScZsmXvt5g+WavTmals2fst
zGcN/B4xgy17e+H84sURLU3YsrcXrq3M7rNkLlv29oLd2k2n7BawZW8vXFg3
b0PWYrbs7YW1a++Ed1nOlr3fYaxp/pA1q9iy9zu0WD3ghoMpW/Z+h9gliVZ5
Zmzp/T2uzDti3n0jW/Z+j5HTziSbbmbL3u+ROe6K0f3/2LL3e2we9HtUhgVb
9vbGry5r+7XfzZa9vXG6RXinxfvYsrc31DRtr9kcZMve3lha4nMp/DBb9vaB
R2zhubrH2D17H3+i2ckHLb2bnppwki3n4YPFD25q7T/DbufS0k5jpQ/sTnU9
+fo8W+6LD7I3P6ujsGY3GfbokvpdH3yb9u1CZxu2nKcPOvdNv7zIll373bDj
ahk+0K/Xs92Fm2y5bz4wyt/6wP8O++8/B3T0xQSf1i7f7dlyH30x9vqHd30e
spXBC83/rPDFiG0bP650ZMtevmhraLHk8hN2zszClb/tfJGrk7rV/zlb7rMv
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
0bgwrNHdNq/Ysnc0jpruMm3sxpbeo7HbOr1nbQ+27B2NuZ6P/vvxli17R8Mo
v9HQsvds2Tsa3RonHMzxZcve0WgzZtyEJH+27B2Nb2u0zoYFsWXvaESdj4j5
8JEte0fjubtte/fPbNk7BqczVq59EsGWvWMws9apwXei2bJ3DHr1M9l/KY4t
e8dAMXuP0bFEtuwdg4/7DC7tSWHL3jE4d3f9ik3pbNk7BiYB1n1WZLFl7xi0
KPKoNsllS+8xSNDOCpxYwJa9Y3BrcL0rw4rZsncMDOdeyu1Zypa9Y1B/j+fL
tuVs2TsGbtfH/9Owgi17x2DP+w2RNd/YsncMuqV/6VxezZa9YxBes9ci6xdb
9o7Fvk6agdE1bNk7Ft0NzugEaHwjy96xiFzVbL1bLbbsHYv9R256PtJiy96x
0LazunitPlv2joWnd/2sk9ps2TsW01O+uu9uwpa9Y5H2PfncuuZs6T0Wp1ub
pi/SYcvesWg3dLqrURu27B2r+jwccmZEe7bsHYvxW9qt0uvElr1jEXPmn2Gt
u7Bl71jMfDDduk53tuwdi0yfIWZVPdmydyy2p7Ybk9+bLXvHQVFpei22H1v2
jsM67WflfgPZsnccfvSyCXo1hC17x8FiQqruvWFs2TsOpUu67b84ki17q57P
wjzu4Bi27B2HrLOuA8zHsWXvOCx9+Pv0kgls6T0Oce8m5RpNZsvecRgWpfAb
asSWvePwski/Q7fpbNk7Ds1qUn81MWbL3nE4p9N9gdpstuytOo/eYfqKuWzZ
W3UeE1teTF7Alr3j8Gnh+83Bi9mydzz6mK+d4bqMLXvH49xh7T73VrJl73go
bdzqXfiXLXvHY5bT8sJ9a9mydzyue66dbraeLXvH42eYdu+5m9iydzyWZrvV
NdjClr3j4fD1/aY+29jSezzqaJlNa72DLXurXm+rLc//2c2WvePxso/OufK9
bNk7Hj9GdyxLOcCWveMxcUaPOcGH2LJ3PM4u6+/2yoote8cj1nxYa7vjbNk7
Hh0OYv/pU2zZOwFm5w3Td5xly94JcL5jPH7VBbbsnYDq5wseTr/Elr0TMN57
hdZwG7bsnYBtn4KUurZs2TsBXsnhsxveZMveCSjJHzay6jZb9k6A/nfczrrL
lt4TsOYfx6Oh99mydwKeN3fOd3dgy94JSOvUKtz+MVv2TkDjvofczjxly94J
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
bOk9H3XOXm/U7gZbes/H8pDDH3Rus6X3fLyuvWFHs7ts6T0f9SfO7tnoPlt6
z8fqwyOT6zmwpfd8eLzvfL72Y7b0no+eak+8NJ+ypfd8WI65vKXmOVt6z0fp
wbZ3frmwpfd8LPO5H1r9mi295yNUvc/Pb+5s6T0foya81qvwZEvv+fA/mRL9
5R1belft/dFUo8yHLb3n422jc09L/djSez7Gz3OdrwhkS+/5+HQjVa0khC29
52N2Rq0nRaFs6T0fSd36zSsMZ0vv+di35dvewii29J6Pth7v7xbGsqX3fHhp
nAgsTGBL7/lYOt24pDCZLb3n46eNTtOiNLb0ng/XbMtXxZls6T0f8/pOSSzO
YUvv+dDe57xXkc+W3vMRGNyqnbKILb0X4FDLw+/KFGzpvQAm604lfS1jS+8F
qOtWvq/yK1t6L0BynR+237+xpfcCPFuk4fazmi29F+DAk3rRf36xpfcCGP9u
Wqau9pMsvRdgxJy3J2trsqX3AnR5/K9u/dps6b0AlT82jtWuy5beC1A19/Xs
5g3Y0nsBMp2WFrdqxJbeC/BJrdbR9k3Z0nsBwhbPsO3Sgi29FyDitc1TvVZs
6b0AUdppPv3bsqX3AsSu6x6r34EtvRegLFB7zRhdtvRegHrdqiomdmVL7wXo
bpV+dHoPtvReAIPMoOZze7Gl9wIshfODJX3Z0nsBLtgPdzYdwJbeC/CkptO4
TYPZ0nsB0lY9nrZjKFt6L4BecGSU5Qi29F6AZb0Wp50czZbeC/D44pE1l8GW
3lX36ZtTye3xbOlddR7Lorc7TmJL7wU45/fzx8spbOm9AOV9/X+/n8aW3gsx
3/as2qeZbOm9EG815mnGm7Cl90J0Mm9fO3suW3ovxNH4XC3lArb0Xgj1yTNP
/FrMlt4LcfC1W616y9nSeyF+de54VGcVW3ovhLVNj4PdTdnSeyEa/XPx12Az
tvReiAc7bb+N38CW3gsxWzFu0xxztvReiIIVRmtXb2VL74W4GleevG07W3ov
xMQZN0ysdrKl90J88RsfdHkPW3ovxN2RxaMf7GdL74Uwcx3cz82SLb0Xou+A
/R2Dj7Cl90JUOPk3TjrGlt4L4dmtoUbJSbb0XogbDyo315xhS++F2NslLbnp
Bbb0XoiF9wKndL/Elt4LYdzNeOAoG7b0XogpjvGtZ9mypfdCjOu9UmPNTbb0
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
wX/wf0g7DKE=
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 1.0736048927802913`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1.}, {1.112368062260869, 1.8876314518724253`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6979605563073263`*^9, 3.697960573375821*^9}, 
   3.697960716029868*^9, 3.697962127177247*^9, 3.697968179146687*^9, 
   3.697968257200136*^9, 3.697968295539509*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{808, 651},
WindowMargins->{{Automatic, 228}, {48, Automatic}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 104, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[687, 26, 99, 1, 64, "Section"],
Cell[789, 29, 3104, 71, 411, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3930, 105, 112, 1, 64, "Section"],
Cell[4045, 108, 926, 24, 117, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[5008, 137, 115, 1, 50, "Section"],
Cell[5126, 140, 1485, 33, 195, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[6648, 178, 110, 1, 50, "Section"],
Cell[CellGroupData[{
Cell[6783, 183, 91, 1, 44, "Subsection"],
Cell[6877, 186, 1131, 29, 138, "Input"],
Cell[CellGroupData[{
Cell[8033, 219, 98, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[8156, 224, 1075, 26, 75, "Input"],
Cell[9234, 252, 3700, 76, 238, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12995, 335, 140, 2, 44, "Subsection"],
Cell[13138, 339, 723, 19, 96, "Input"],
Cell[CellGroupData[{
Cell[13886, 362, 98, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[14009, 367, 404, 10, 32, "Input"],
Cell[14416, 379, 16577, 284, 247, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

