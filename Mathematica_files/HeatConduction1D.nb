(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[   2278732,      44462]
NotebookOptionsPosition[   2237763,      43276]
NotebookOutlinePosition[   2238202,      43293]
CellTagsIndexPosition[   2238159,      43290]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"Needs", "[", "\"\<NumericalDifferentialEquationAnalysis`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Off", "[", 
  StyleBox[
   RowBox[{"RowReduce", "::", "luc"}], "MessageName"], 
  StyleBox["]", "MessageName"]}], "\[IndentingNewLine]", 
 RowBox[{"Off", "[", 
  StyleBox[
   RowBox[{"Solve", "::", "svars"}], "MessageName"], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$Assumptions", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Theta]", ">", "0"}], ",", 
     RowBox[{"n", "\[Element]", "Integers"}], ",", 
     RowBox[{"m", "\[Element]", "Integers"}], ",", 
     RowBox[{"j", "\[Element]", "Integers"}], ",", 
     RowBox[{"i", "\[Element]", "Integers"}], ",", 
     RowBox[{"n", "\[GreaterEqual]", "0"}], ",", 
     RowBox[{"m", "\[GreaterEqual]", "0"}], ",", 
     RowBox[{"j", "\[GreaterEqual]", "0"}], ",", 
     RowBox[{"i", "\[GreaterEqual]", "0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"Plot", ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Red", ",", "Thick"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Purple", ",", "Thick"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Thick"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Cyan", ",", "Thick"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Medium", ",", 
        RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}]}], "}"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"colorlist", "=", 
  RowBox[{"{", 
   RowBox[{"Blue", ",", "Red", ",", 
    RowBox[{"Darker", "[", "Green", "]"}], ",", 
    RowBox[{"Darker", "[", "Yellow", "]"}], ",", "Orange", ",", 
    RowBox[{"Lighter", "[", "Green", "]"}], ",", 
    RowBox[{"Lighter", "[", "Brown", "]"}], ",", "Purple", ",", "Cyan"}], 
   "}"}]}]}], "Input",
 CellChangeTimes->{{3.5645027415786166`*^9, 3.564502749706231*^9}, {
  3.6227038840581217`*^9, 3.6227038958569813`*^9}, {3.6227050911723614`*^9, 
  3.622705115914846*^9}, {3.6228236371953974`*^9, 3.622823637419547*^9}, {
  3.6228311613224144`*^9, 3.622831161498531*^9}, {3.62287385171334*^9, 
  3.6228738626726418`*^9}, {3.622873967311365*^9, 3.6228739751055503`*^9}, {
  3.686299749041556*^9, 3.686299749588793*^9}, {3.687170776602983*^9, 
  3.687170777286228*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0., 0.6666666666666666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0, 0, 1]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0, 1],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 
          Rational[2, 3], 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.4444444444444444, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0, 2/3, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
           Rational[2, 3], 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 
     Rational[2, 3], 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
          Rational[2, 3], 
          Rational[2, 3], 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.4444444444444444, 0.4444444444444444, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[2/3, 2/3, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
           Rational[2, 3], 
           Rational[2, 3], 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[
     Rational[2, 3], 
     Rational[2, 3], 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.5, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.5, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
          Rational[1, 3], 1, 
          Rational[1, 3]], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.2222222222222222, 0.6666666666666666, 0.2222222222222222],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1/3, 1, 1/3]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
           Rational[1, 3], 1, 
           Rational[1, 3]]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[
     Rational[1, 3], 1, 
     Rational[1, 3]],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.7333333333333333, 0.6, 0.4666666666666667], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.4888888888888889, 0.4, 0.3111111111111111],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.7333333333333333, 0.6, 0.4666666666666667]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.7333333333333333, 0.6, 0.4666666666666667]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.7333333333333333, 0.6, 0.4666666666666667],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.5, 0, 0.5]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.5, 0, 0.5],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.6666666666666666, 0.6666666666666666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0, 1, 1]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 1, 1],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6862997500939417`*^9, {3.686543126598611*^9, 3.686543129136032*^9}, 
   3.686904153266632*^9, 3.687160060820116*^9, 3.687170777863718*^9, 
   3.691808681674865*^9, 3.691937981221005*^9, 3.697886725530703*^9, 
   3.699095667703396*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "WriteDirectory", "=", 
   "\"\</Users/neerajsarna/sciebo/DG_moments_deal/Mathematica_files/Optimal_\
Error_1D_Heat\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "WriteDirectoryResults", " ", "=", " ", 
   "\"\</Users/neerajsarna/Dropbox/my_papers/Publications/1D_Well_Posed_\
System/Results/\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.687233760079356*^9, 3.687233790719282*^9}, {
   3.68723493860773*^9, 3.687234947671283*^9}, 3.6872352143962927`*^9, {
   3.6919407874611673`*^9, 3.691940794739492*^9}, 3.692695801635508*^9}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\[Theta]W", "]"}]], "Input",
 CellChangeTimes->{{3.697966939092237*^9, 3.69796694330541*^9}}],

Cell[CellGroupData[{

Cell["develop sparsity and write matrix", "Section",
 CellChangeTimes->{{3.6681731720116997`*^9, 3.66817319332295*^9}, {
   3.668228151665504*^9, 3.668228156542235*^9}, 3.668228799380147*^9, {
   3.668228831468952*^9, 3.66822883407552*^9}}],

Cell["\<\
Use this function to create the entries of the sparse matrix. The first value \
written to the file is the number of non zeros. Incase of symbolic matrices, \
the entries are considered to be 1. flag = 0 for symbolic, flag = 1 for \
constant matrices.

1) flag = 0: in the case one only needs the location of the non zeros entries
2) flag = 1; in the case when one also needs the values of the entries

Caution: always send N[a].
CAUTION: not be used for symbolic matrices\
\>", "Text",
 CellChangeTimes->{{3.66822884187737*^9, 3.668228941383243*^9}, {
  3.668229646182706*^9, 3.668229661478045*^9}, {3.67605131615924*^9, 
  3.676051363867848*^9}, {3.68109883176829*^9, 3.6810988329113503`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"developsparsity2", "[", 
    RowBox[{"a_", ",", "filename_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nnz", ",", "indicies", ",", "rowindicies", ",", "colindicies", ",", 
       "entries", ",", "str", ",", "numzeros"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"total", " ", "number", " ", "of", " ", "non"}], "-", 
       RowBox[{"zeros", " ", "in", " ", "the", " ", "matrix"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"indicies", " ", "=", " ", 
       RowBox[{
        RowBox[{"ArrayRules", "[", "a", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"-", "2"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"nnz", " ", "=", " ", 
       RowBox[{"Length", "[", "indicies", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rowindicies", " ", "=", " ", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", 
         RowBox[{"Length", "[", "indicies", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"colindicies", " ", "=", " ", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", 
         RowBox[{"Length", "[", "indicies", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"entries", " ", "=", " ", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", 
         RowBox[{"Length", "[", "indicies", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"rowindicies", "[", 
          RowBox[{"[", "ii", "]"}], "]"}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"indicies", "[", 
             RowBox[{"[", "ii", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "1", ",", 
          RowBox[{"Length", "[", "indicies", "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"colindicies", "[", 
          RowBox[{"[", "ii", "]"}], "]"}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"indicies", "[", 
             RowBox[{"[", "ii", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "-", "1"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "1", ",", 
          RowBox[{"Length", "[", "indicies", "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"entries", "[", 
          RowBox[{"[", "ii", "]"}], "]"}], "=", 
         RowBox[{
          RowBox[{"indicies", "[", 
           RowBox[{"[", "ii", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "1", ",", 
          RowBox[{"Length", "[", "indicies", "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"str", " ", "=", " ", 
       RowBox[{"OpenWrite", "[", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"\"\<../system_matrices/\>\"", ",", "filename"}], "]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"WriteString", "[", 
       RowBox[{"str", ",", 
        RowBox[{"ToString", "[", "nnz", "]"}], ",", "\"\<\\n\>\""}], "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"WriteString", "[", 
         RowBox[{"str", ",", 
          RowBox[{"ToString", "[", 
           RowBox[{"rowindicies", "[", 
            RowBox[{"[", "ii", "]"}], "]"}], "]"}], ",", "\"\< \>\"", " ", 
          ",", 
          RowBox[{"ToString", "[", 
           RowBox[{"colindicies", "[", 
            RowBox[{"[", "ii", "]"}], "]"}], "]"}], ",", "\"\< \>\"", " ", 
          ",", 
          RowBox[{"ToString", "[", 
           RowBox[{"entries", "[", 
            RowBox[{"[", "ii", "]"}], "]"}], "]"}], ",", "\"\<\\n\>\""}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "1", ",", 
          RowBox[{"Length", "[", "rowindicies", "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Close", "[", "str", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "write", " ", "a", " ", "vector", " ", "to", " ", "a", " ", "file"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"writeVector", "[", 
   RowBox[{"vec_", ",", "filename_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"NumEntries", ",", "str", ",", "destination"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"NumEntries", " ", "=", " ", 
      RowBox[{"Length", "[", "vec", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"destination", " ", "=", " ", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"\"\<../system_matrices/\>\"", ",", "filename"}], "]"}]}], ";",
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "first", " ", "open", " ", "the", " ", "file", " ", "to", " ", 
       "write"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"str", " ", "=", " ", 
      RowBox[{"OpenWrite", "[", "destination", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "first", " ", "write", " ", "the", " ", "number", " ", "of", " ", 
       "entries", " ", "to", " ", "the", " ", "file"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"WriteString", "[", 
      RowBox[{"str", ",", 
       RowBox[{"ToString", "[", "NumEntries", "]"}], ",", "\"\<\\n\>\""}], 
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "write", " ", "the", " ", "vector", " ", "to", " ", "the", " ", 
       "opened", " ", "file"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Minus", " ", "1", " ", "to", " ", "take", " ", "care", " ", "of", " ", 
       "the", " ", "C", " ", "indices"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"WriteString", "[", 
        RowBox[{"str", ",", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"vec", "[", 
            RowBox[{"[", "ii", "]"}], "]"}], "-", "1"}], "]"}], ",", 
         "\"\<\\n\>\""}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"ii", ",", "1", ",", 
         RowBox[{"Length", "[", "vec", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Close", "[", "str", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.668173195704064*^9, 3.668173232725699*^9}, {
   3.668226970770607*^9, 3.6682270927202587`*^9}, {3.6682271428666363`*^9, 
   3.668227155768401*^9}, {3.668227193724353*^9, 3.668227323574191*^9}, {
   3.668227415971815*^9, 3.668227421857192*^9}, {3.668227680651102*^9, 
   3.668227718490542*^9}, {3.6682279731791277`*^9, 3.668228105520145*^9}, {
   3.6682289471772957`*^9, 3.668229088847966*^9}, {3.6682292584757767`*^9, 
   3.668229263653676*^9}, {3.6682295296762543`*^9, 3.66822953308567*^9}, {
   3.668229643177256*^9, 3.6682296763141413`*^9}, {3.6687889038876867`*^9, 
   3.668788918608638*^9}, {3.668788982206395*^9, 3.668788982557585*^9}, {
   3.669542397774646*^9, 3.6695424007824087`*^9}, {3.673546457950383*^9, 
   3.673546508015944*^9}, {3.673546540275446*^9, 3.673546541600737*^9}, {
   3.673546630590992*^9, 3.673546644517036*^9}, {3.673546700847164*^9, 
   3.6735467447817373`*^9}, {3.6735467809068527`*^9, 3.673546800850913*^9}, {
   3.6737833736618633`*^9, 3.6737833844718313`*^9}, {3.6737834589232492`*^9, 
   3.673783472382395*^9}, {3.673783544019918*^9, 3.673783550374506*^9}, {
   3.676051104710444*^9, 3.676051192186738*^9}, {3.6811033215469847`*^9, 
   3.681103385614745*^9}, {3.684816328390649*^9, 3.6848163547682447`*^9}, {
   3.684816407503681*^9, 3.6848164953687487`*^9}, {3.6848165429710073`*^9, 
   3.6848166261264467`*^9}, 3.684816930538732*^9, {3.684816974440692*^9, 
   3.684817079486958*^9}, {3.687501396233433*^9, 3.687501416097817*^9}, {
   3.687501595246122*^9, 3.68750160655971*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Some Testing with Hermite Functions (normalized)", "Section",
 CellChangeTimes->{{3.564503013409094*^9, 3.564503028915521*^9}, {
  3.6228735597388153`*^9, 3.6228735618802366`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f0", "[", "c_", "]"}], "=", 
   RowBox[{
    FractionBox["1", 
     SqrtBox[
      RowBox[{"2", "\[Pi]"}]]], 
    RowBox[{"Exp", "[", 
     FractionBox[
      RowBox[{"-", 
       SuperscriptBox["c", "2"]}], "2"], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fM", "[", "c_", "]"}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"c", " ", "v"}], "-", 
      FractionBox["\[Theta]", "2"], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["c", "2"], " ", "\[Theta]"}], "2"], "+", "\[Rho]"}], 
     ")"}], 
    RowBox[{"f0", "[", "c", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"H", "[", 
     RowBox[{"i_", ",", "c_"}], "]"}], "=", 
    RowBox[{
     FractionBox["1", 
      RowBox[{
       SqrtBox[
        RowBox[{"Gamma", "[", 
         RowBox[{"i", "+", "1"}], "]"}]], 
       SuperscriptBox["2", 
        RowBox[{"i", "/", "2"}]]}]], 
     RowBox[{"HermiteH", "[", 
      RowBox[{"i", ",", 
       RowBox[{"c", "/", 
        SqrtBox["2"]}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Distribution", " ", "with", " ", "respect", " ", "to", " ", "L2"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"H2", "[", 
    RowBox[{"i_", ",", "c_"}], "]"}], "=", 
   RowBox[{
    FractionBox[
     RowBox[{"1", " ", 
      SuperscriptBox["2", 
       RowBox[{"1", "/", "4"}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "\[Pi]"}], ")"}], 
       RowBox[{"1", "/", "4"}]]}], 
     RowBox[{
      SqrtBox[
       RowBox[{"Gamma", "[", 
        RowBox[{"i", "+", "1"}], "]"}]], 
      SuperscriptBox["2", 
       RowBox[{"i", "/", "2"}]]}]], 
    RowBox[{"HermiteH", "[", 
     RowBox[{"i", ",", "c"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fG", "[", 
    RowBox[{"c_", ",", "n_"}], "]"}], ":=", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"k", "=", "0"}], 
     RowBox[{"n", "-", "1"}]], 
    RowBox[{
     RowBox[{"\[Alpha]", "[", "k", "]"}], 
     RowBox[{"H", "[", 
      RowBox[{"k", ",", "c"}], "]"}], 
     RowBox[{"f0", "[", "c", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"fL2", "[", 
     RowBox[{"c_", ",", "n_"}], "]"}], ":=", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"k", "=", "0"}], 
      RowBox[{"n", "-", "1"}]], 
     RowBox[{
      RowBox[{"\[Alpha]", "[", "k", "]"}], 
      RowBox[{"H2", "[", 
       RowBox[{"k", ",", "c"}], "]"}], 
      RowBox[{"f0", "[", "c", "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "The", " ", "following", " ", "routine", " ", "integrates", " ", "the", 
    " ", "following", " ", "expressions", " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
     RowBox[{
      RowBox[{"H", "[", 
       RowBox[{"n", ",", "c"}], "]"}], 
      RowBox[{"H", "[", 
       RowBox[{"m", ",", "c"}], "]"}], 
      RowBox[{"f0", "[", "c", "]"}], 
      RowBox[{"\[DifferentialD]", "c"}]}]}]}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.558250542936406*^9, 3.5582505709072556`*^9}, {
   3.558250636926572*^9, 3.558250642932582*^9}, {3.564502590367551*^9, 
   3.564502611271588*^9}, {3.5645026596160727`*^9, 3.5645026600372734`*^9}, {
   3.564502747506627*^9, 3.5645027482710285`*^9}, 3.622873390163829*^9, {
   3.622873779762409*^9, 3.622873783330779*^9}, {3.686221981902993*^9, 
   3.6862220562821617`*^9}, {3.689662017405814*^9, 3.689662060627892*^9}, {
   3.689662129129434*^9, 3.6896621823284197`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HSpcInt", "[", 
     RowBox[{"n_", ",", "m_"}], "]"}], ":=", 
    RowBox[{"Which", "[", 
     RowBox[{
      RowBox[{"m", "\[Equal]", "n"}], ",", 
      FractionBox["1", "2"], ",", 
      RowBox[{"OddQ", "[", 
       RowBox[{"m", "-", "n"}], "]"}], ",", 
      RowBox[{
       FractionBox["1", 
        SqrtBox[
         RowBox[{"2", " ", "\[Pi]"}]]], 
       FractionBox[
        SqrtBox[
         RowBox[{
          RowBox[{"n", "!"}], 
          RowBox[{"m", "!"}]}]], 
        RowBox[{"n", "!"}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"i", "=", "1"}], "n"], 
          FractionBox[
           RowBox[{
            SuperscriptBox["2", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"2", " ", "i"}], "+", "m", "+", "n"}], ")"}]}]], " ", 
            "\[Pi]"}], 
           RowBox[{
            RowBox[{"Gamma", "[", 
             FractionBox[
              RowBox[{"i", "-", "m"}], "2"], "]"}], " ", 
            RowBox[{"Gamma", "[", 
             RowBox[{"2", "-", "i", "+", "m"}], "]"}], " ", 
            RowBox[{"Gamma", "[", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "i", "-", "n"}], ")"}]}], "]"}]}]]}], "+", 
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"m", "-", "n", "-", "2"}], ")"}], "!!"}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"m", "-", "n", "-", "1"}], ")"}], "/", "2"}]]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"m", "-", "n"}], ")"}], "!"}]]}], ")"}]}], ",", 
      RowBox[{"EvenQ", "[", 
       RowBox[{"m", "-", "n"}], "]"}], ",", "0"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Simplified", " ", "expression", " ", "for", " ", "half", " ", "space", 
    " ", "integral"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExplicitHSpcInt", "[", 
    RowBox[{"n_", ",", "m_"}], "]"}], ":=", 
   RowBox[{"Which", "[", 
    RowBox[{
     RowBox[{"m", "\[Equal]", "n"}], ",", 
     FractionBox["1", "2"], ",", 
     RowBox[{"OddQ", "[", 
      RowBox[{"m", "-", "n"}], "]"}], ",", 
     RowBox[{
      FractionBox["1", 
       SqrtBox[
        RowBox[{"2", " ", "\[Pi]"}]]], 
      FractionBox[
       SqrtBox[
        RowBox[{"m", "!"}]], 
       SqrtBox[
        RowBox[{"n", "!"}]]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"p", "=", "1"}], "n"], 
         FractionBox["1", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"p", "-", "m", "-", "2"}], ")"}], "!!"}], " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "p", "+", "m"}], ")"}], "!"}], " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"p", "-", "n", "-", "1"}], ")"}], "!!"}]}]]}], "+", 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"m", "-", "n", "-", "2"}], ")"}], "!!"}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"m", "-", "n", "-", "1"}], ")"}], "/", "2"}]]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"m", "-", "n"}], ")"}], "!"}]]}], ")"}]}], ",", 
     RowBox[{"EvenQ", "[", 
      RowBox[{"m", "-", "n"}], "]"}], ",", "0"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.622707252008712*^9, 3.622707267742193*^9}, {
   3.622708451977665*^9, 3.6227084542511797`*^9}, {3.622874527300454*^9, 
   3.622874541880173*^9}, {3.622874631228702*^9, 3.622874634010556*^9}, {
   3.622874704361429*^9, 3.622874714647275*^9}, {3.686212309350445*^9, 
   3.68621237224811*^9}, 3.68727632109155*^9, 3.6872767529326*^9, 
   3.687277461360812*^9, 3.687278248653742*^9, {3.687336325410145*^9, 
   3.687336349307458*^9}, {3.687346807312092*^9, 3.687346920728465*^9}, {
   3.6873481053748617`*^9, 3.687348130874475*^9}}],

Cell[CellGroupData[{

Cell["Permutation matrix", "Subsection",
 CellChangeTimes->{{3.680327984984622*^9, 3.680327987665279*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Returns", " ", "a", " ", "transformation", " ", "matrix", " ", "from", 
     " ", "var2", " ", "to", " ", "var1", " ", 
     RowBox[{"i", ".", "e", ".", " ", "var1"}]}], "=", 
    RowBox[{"Perm", " ", "v2"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"PermuteVar", "[", 
    RowBox[{"var1_", ",", "var2_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"result", ",", "nEqn", ",", "pos"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nEqn", " ", "=", " ", 
       RowBox[{"Length", "[", "var1", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"result", " ", "=", " ", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"nEqn", ",", "nEqn"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"pos", " ", "=", " ", 
          RowBox[{"Flatten", "[", 
           RowBox[{"Position", "[", 
            RowBox[{"var2", ",", 
             RowBox[{"var1", "[", 
              RowBox[{"[", "ii", "]"}], "]"}]}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"result", "\[LeftDoubleBracket]", 
           RowBox[{"ii", ",", "pos"}], "\[RightDoubleBracket]"}], "=", 
          "1"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "1", ",", "nEqn"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "result"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.68032799203395*^9, 3.680328159490745*^9}, {
  3.680328224863463*^9, 3.680328228463756*^9}, {3.680328262829427*^9, 
  3.6803282757897787`*^9}, {3.6803283197812233`*^9, 3.680328410397325*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Equations for ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", "j"], TraditionalForm]]],
 ", incl. Eigenvalues"
}], "Section",
 CellChangeTimes->{{3.564503013409094*^9, 3.5645030670887885`*^9}, {
  3.5645032758483553`*^9, 3.5645032916823826`*^9}, {3.5645045214707575`*^9, 
  3.5645045298782387`*^9}, {3.622821652846426*^9, 3.622821652910466*^9}, {
  3.6228713909898767`*^9, 3.6228713922026844`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"AA", "[", "n_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"i", "\[Equal]", 
        RowBox[{"j", "+", "1"}]}], ",", 
       SqrtBox["i"], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"i", "\[Equal]", 
          RowBox[{"j", "-", "1"}]}], ",", 
         SqrtBox[
          RowBox[{"i", "+", "1"}]], ",", "0"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", 
       RowBox[{"n", "-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", 
       RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"AA", "[", "4", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{"n", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"OddQ", "[", "n", "]"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", "n", ")"}], "/", "2"}], "+", "1"}], ",", 
               RowBox[{
                RowBox[{"(", "n", ")"}], "/", "2"}]}], "]"}]}], "}"}]}], 
          "]"}], ",", 
         RowBox[{"N", "[", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Eigenvalues", "[", 
             RowBox[{"AA", "[", "n", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"#", "\[GreaterEqual]", "0"}], "&"}]}], "]"}], "]"}]}], 
        "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "3", ",", "20"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Eigenvalues\>\""}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"Red", ",", "Thick", ",", 
       RowBox[{"PointSize", "[", "Large", "]"}]}], "}"}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.5582551304242315`*^9, 3.5582552172383842`*^9}, {
  3.558271500809478*^9, 3.5582715064702177`*^9}, {3.5582747900197*^9, 
  3.558274792538789*^9}, {3.564502680239309*^9, 3.564502699692543*^9}, {
  3.622200159750104*^9, 3.6222001715740013`*^9}, {3.622200359886774*^9, 
  3.622200360399109*^9}, {3.6222005523572893`*^9, 3.6222005741612515`*^9}, {
  3.6228195677739253`*^9, 3.622819576741893*^9}, {3.6228200043908215`*^9, 
  3.6228200048060937`*^9}, {3.6228216232697144`*^9, 3.622821665970164*^9}, {
  3.622870921554352*^9, 3.622870961478953*^9}, {3.6228710392497673`*^9, 
  3.62287103968606*^9}, {3.622871303072298*^9, 3.6228713096957097`*^9}, {
  3.6228741965781136`*^9, 3.622874281169469*^9}, {3.6228744133825626`*^9, 
  3.6228744277241163`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "1", "0", "0"},
     {"1", "0", 
      SqrtBox["2"], "0"},
     {"0", 
      SqrtBox["2"], "0", 
      SqrtBox["3"]},
     {"0", "0", 
      SqrtBox["3"], "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.5645027023445473`*^9, 3.5645028535556135`*^9, {3.622200338174118*^9, 
   3.622200361182638*^9}, 3.6222005747846746`*^9, 3.6227074764762573`*^9, 
   3.6227084309536505`*^9, {3.6228195689557066`*^9, 3.622819577249233*^9}, 
   3.622820005441518*^9, 3.6228216735452046`*^9, {3.6228709545022993`*^9, 
   3.6228709620643435`*^9}, 3.62287104028145*^9, 3.6228713122624145`*^9, 
   3.6228722150058737`*^9, {3.6228742442838974`*^9, 3.6228742840143633`*^9}, {
   3.6228744141070385`*^9, 3.6228744282804813`*^9}, 3.686217106025326*^9, 
   3.686295104375814*^9, 3.686543154720181*^9, 3.686904165524674*^9, 
   3.687159651561748*^9, 3.687159688113545*^9, 3.687160065981173*^9, 
   3.691808048421341*^9, 3.691937674852607*^9, 3.693654067445738*^9, 
   3.699095679260456*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[1, 0, 0], PointSize[Large], Thickness[Large], 
     PointBox[{{3., 1.7320508075688772`}, {3., 0.}}]}, 
    {RGBColor[1, 0, 0], PointSize[Large], Thickness[Large], 
     PointBox[{{4., 2.3344142183389773`}, {4., 0.741963784302726}}]}, 
    {RGBColor[1, 0, 0], PointSize[Large], Thickness[Large], 
     PointBox[{{5., 2.8569700138728056`}, {5., 1.3556261799742657`}, {5., 
      0.}}]}, 
    {RGBColor[1, 0, 0], PointSize[Large], Thickness[Large], 
     PointBox[{{6., 3.324257433552119}, {6., 1.8891758777537107`}, {6., 
      0.6167065901925941}}]}, 
    {RGBColor[1, 0, 0], PointSize[Large], Thickness[Large], 
     PointBox[{{7., 3.7504397177257425`}, {7., 2.366759410734541}, {7., 
      1.1544053947399682`}, {7., 0.}}]}, 
    {RGBColor[1, 0, 0], PointSize[Large], Thickness[Large], 
     PointBox[{{8., 4.1445471861258945`}, {8., 2.8024858612875416`}, {8., 
      1.636519042435108}, {8., 0.5390798113513752}}]}, 
    {RGBColor[1, 0, 0], PointSize[Large], Thickness[Large], 
     PointBox[{{9., 4.512745863399783}, {9., 3.20542900285647}, {9., 
      2.07684797867783}, {9., 1.0232556637891326`}, {9., 0.}}]}, 
    {RGBColor[1, 0, 0], PointSize[Large], Thickness[Large], 
     PointBox[{{10., 4.859462828332312}, {10., 3.581823483551927}, {10., 
      2.4843258416389546`}, {10., 1.4659890943911582`}, {10., 
      0.48493570751549764`}}]}, 
    {RGBColor[1, 0, 0], PointSize[Large], Thickness[Large], 
     PointBox[{{11., 5.188001224374871}, {11., 3.936166607129977}, {11., 
      2.865123160643645}, {11., 1.8760350201548457`}, {11., 
      0.928868997381064}, {11., 0.}}]}, 
    {RGBColor[1, 0, 0], PointSize[Large], Thickness[Large], 
     PointBox[{{12., 5.500901704467748}, {12., 4.2718258479322815`}, {12., 
      3.2237098287700974`}, {12., 2.2594644510007993`}, {12., 
      1.3403751971516167`}, {12., 0.44440300194413895`}}]}, 
    {RGBColor[1, 0, 0], PointSize[Large], Thickness[Large], 
     PointBox[{{13., 5.8001672523865}, {13., 4.591398448936521}, {13., 
      3.563444380281634}, {13., 2.620689973432215}, {13., 
      1.7254183795882392`}, {13., 0.85667949351945}, {13., 0.}}]}, 
    {RGBColor[1, 0, 0], PointSize[Large], Thickness[Large], 
     PointBox[{{14., 6.087409546901291}, {14., 4.896936397345565}, {14., 
      3.886924575059769}, {14., 2.9630365798386675`}, {14., 
      2.0883447457019444`}, {14., 1.2426889554854643`}, {14., 
      0.41259045795460186`}}]}, 
    {RGBColor[1, 0, 0], PointSize[Large], Thickness[Large], 
     PointBox[{{15., 6.363947888829839}, {15., 5.190093591304781}, {15., 
      4.1962077112690155`}, {15., 3.2890824243987664`}, {15., 
      2.432436827009758}, {15., 1.6067100690287297`}, {15., 
      0.799129068324548}, {15., 0.}}]}, 
    {RGBColor[1, 0, 0], PointSize[Large], Thickness[Large], 
     PointBox[{{16., 6.630878198393129}, {16., 5.472225705949343}, {16., 
      4.492955302520011}, {16., 3.600873624171548}, {16., 
      2.7602450476307014`}, {16., 1.9519803457163334`}, {16., 
      1.1638291005549648`}, {16., 0.3867606045005573}}]}, 
    {RGBColor[1, 0, 0], PointSize[Large], Thickness[Large], 
     PointBox[{{17., 6.889122439895332}, {17., 5.744460078659406}, {17., 
      4.778531589629984}, {17., 3.90006571719801}, {17., 
      3.0737971753281936`}, {17., 2.281019440252989}, {17., 
      1.5098833077967408`}, {17., 0.7518426007038962}, {17., 0.}}]}, 
    {RGBColor[1, 0, 0], PointSize[Large], Thickness[Large], 
     PointBox[{{18., 7.139464849146479}, {18., 6.0077459113595975`}, {18., 
      5.05407268544274}, {18., 4.1880202316294035`}, {18., 
      3.3747365357780907`}, {18., 2.5958336889112403`}, {18., 
      1.8397799215086454`}, {18., 1.0983955180915013`}, {18., 
      0.3652457555076976}}]}, 
    {RGBColor[1, 0, 0], PointSize[Large], Thickness[Large], 
     PointBox[{{19., 7.382579024030432}, {19., 6.262891156513252}, {19., 
      5.320536377336038}, {19., 4.465872626831032}, {19., 
      3.6644165474506383`}, {19., 2.898051276515753}, {19., 
      2.155502761316935}, {19., 1.4288766760783729`}, {19., 
      0.7120850440423799}, {19., 0.}}]}, 
    {RGBColor[1, 0, 0], PointSize[Large], Thickness[Large], 
     PointBox[{{20., 7.619048541679758}, {20., 6.510590157013655}, {20., 
      5.5787388058932015`}, {20., 4.734581334046055}, {20., 
      3.9439673506573163`}, {20., 3.1890148165533896`}, {20., 
      2.458663611172368}, {20., 1.7452473208141268`}, {20., 
      1.0429453488027511`}, {20., 
      0.3469641570813559}}]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Eigenvalues\"", TraditionalForm],
  PlotRange->{{0, 20.}, {0, 7.619048541679758}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.5645027023445473`*^9, 3.5645028535556135`*^9, {3.622200338174118*^9, 
   3.622200361182638*^9}, 3.6222005747846746`*^9, 3.6227074764762573`*^9, 
   3.6227084309536505`*^9, {3.6228195689557066`*^9, 3.622819577249233*^9}, 
   3.622820005441518*^9, 3.6228216735452046`*^9, {3.6228709545022993`*^9, 
   3.6228709620643435`*^9}, 3.62287104028145*^9, 3.6228713122624145`*^9, 
   3.6228722150058737`*^9, {3.6228742442838974`*^9, 3.6228742840143633`*^9}, {
   3.6228744141070385`*^9, 3.6228744282804813`*^9}, 3.686217106025326*^9, 
   3.686295104375814*^9, 3.686543154720181*^9, 3.686904165524674*^9, 
   3.687159651561748*^9, 3.687159688113545*^9, 3.687160065981173*^9, 
   3.691808048421341*^9, 3.691937674852607*^9, 3.693654067445738*^9, 
   3.69909568106742*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Boundary Matrices", "Section",
 CellChangeTimes->{{3.686195768268762*^9, 3.686195773881337*^9}, {
  3.686220195752063*^9, 3.686220200865979*^9}, {3.687182954169059*^9, 
  3.687182960861101*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "MatBoe", "]"}]], "Input",
 CellChangeTimes->{{3.686198119684236*^9, 3.6861981228488617`*^9}}],

Cell[CellGroupData[{

Cell["Mat Aoe", "Subsection",
 CellChangeTimes->{{3.687182756835018*^9, 3.687182758954239*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"construct", " ", "Aoe"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"MatAoe", "[", "n_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "result", ",", "numOdd", ",", "numEven", ",", "IDOdd", ",", "IDEven"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"IDOdd", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"EvenQ", "[", "n", "]"}], ",", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", 
           RowBox[{"n", "-", "1"}], ",", "2"}], "]"}], ",", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", 
           RowBox[{"n", "-", "2"}], ",", "2"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"IDEven", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"EvenQ", "[", "n", "]"}], ",", 
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", 
           RowBox[{"n", "-", "2"}], ",", "2"}], "]"}], ",", 
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", 
           RowBox[{"n", "-", "1"}], ",", "2"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"result", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Length", "[", "IDOdd", "]"}], ",", 
           RowBox[{"Length", "[", "IDEven", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"ii", "\[Equal]", "jj"}], ",", 
            RowBox[{
             RowBox[{"result", "\[LeftDoubleBracket]", 
              RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}], "=", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
              "IDOdd", "\[LeftDoubleBracket]", "ii", 
               "\[RightDoubleBracket]"}], "]"}]}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"jj", "\[Equal]", 
               RowBox[{"ii", "+", "1"}]}], ",", 
              RowBox[{
               RowBox[{"result", "\[LeftDoubleBracket]", 
                RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}], "=", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                 "IDOdd", "\[LeftDoubleBracket]", "ii", 
                  "\[RightDoubleBracket]"}], "+", "1"}], "]"}]}]}], "]"}]}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"jj", ",", "1", ",", 
            RowBox[{"Length", "[", "IDEven", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "1", ",", 
          RowBox[{"Length", "[", "IDOdd", "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "result"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.686196898714349*^9, 3.686196908781973*^9}, {
   3.686197116502037*^9, 3.686197359063558*^9}, {3.686197399270611*^9, 
   3.686197464240982*^9}, {3.6861981435095253`*^9, 3.68619814600797*^9}, {
   3.686198313604104*^9, 3.686198558923953*^9}, {3.6861986574320498`*^9, 
   3.686198660852066*^9}, {3.686198754797909*^9, 3.6861988186242247`*^9}, {
   3.686200168724948*^9, 3.686200211747094*^9}, {3.6862002555094147`*^9, 
   3.6862003459999332`*^9}, {3.6862004839632*^9, 3.686200519436819*^9}, {
   3.6862006972822437`*^9, 3.686200721924798*^9}, {3.6862007782607403`*^9, 
   3.686200885289508*^9}, {3.686211502151746*^9, 3.6862115145135403`*^9}, {
   3.68621726114226*^9, 3.686217437642376*^9}, {3.6862175130643663`*^9, 
   3.686217597247603*^9}, {3.6862176336968307`*^9, 3.6862176583269367`*^9}, {
   3.6862196348180532`*^9, 3.686219700295197*^9}, {3.6862197831310587`*^9, 
   3.686219800185692*^9}, {3.6862233991610203`*^9, 3.686223442326399*^9}, {
   3.686223570577014*^9, 3.686223589745089*^9}, {3.6862236212722588`*^9, 
   3.6862236359470663`*^9}, {3.686223692155841*^9, 3.686223810365265*^9}, 
   3.68629278335544*^9, {3.686294047209599*^9, 3.686294245794526*^9}, {
   3.686294826784041*^9, 3.6862948841148577`*^9}, 3.686294994966919*^9, {
   3.686295030872128*^9, 3.6862950447237997`*^9}, {3.6870893018237047`*^9, 
   3.687089309798255*^9}, {3.687089534592525*^9, 3.6870895536986313`*^9}, {
   3.687182805522532*^9, 3.6871828835782967`*^9}, {3.687182916391824*^9, 
   3.6871829193288193`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Mat Boe", "Subsection",
 CellChangeTimes->{{3.6871827874102507`*^9, 3.687182789082456*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "With", " ", "the", " ", "assumption", " ", "that", " ", "the", " ", 
    "normal", " ", "points", " ", "from", " ", "the", " ", "gas", " ", "into",
     " ", "the", " ", 
    RowBox[{"wall", "."}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"MatBoe", "[", "n_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "result", ",", "numOdd", ",", "numEven", ",", "IDOdd", ",", "IDEven", 
       ",", "rhoW"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"IDOdd", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"EvenQ", "[", "n", "]"}], ",", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", 
           RowBox[{"n", "-", "1"}], ",", "2"}], "]"}], ",", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", 
           RowBox[{"n", "-", "2"}], ",", "2"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"IDEven", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"EvenQ", "[", "n", "]"}], ",", 
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", 
           RowBox[{"n", "-", "2"}], ",", "2"}], "]"}], ",", 
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", 
           RowBox[{"n", "-", "1"}], ",", "2"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"result", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Length", "[", "IDOdd", "]"}], ",", "1"}], "}"}]}], "]"}],
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "First", " ", "we", " ", "compute", " ", "the", " ", "density", " ", 
        "at", " ", "the", " ", "wall"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"rhoW", "=", 
       RowBox[{"Expand", "[", 
        RowBox[{"\[Rho]W", "/.", 
         RowBox[{
          RowBox[{"Solve", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Expand", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Rho]W", " ", 
                   RowBox[{"HSpcInt", "[", 
                    RowBox[{"1", ",", "0"}], "]"}]}], "+", 
                  RowBox[{"0", " ", 
                   RowBox[{"HSpcInt", "[", 
                    RowBox[{"1", ",", "1"}], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"\[Theta]W", "/", 
                    SqrtBox["2"]}], " ", 
                   RowBox[{"HSpcInt", "[", 
                    RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}], "-", 
                RowBox[{
                 UnderoverscriptBox["\[Sum]", 
                  RowBox[{"j", "=", "0"}], 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"n", "-", "1"}], ")"}], "/", "2"}]], 
                 RowBox[{
                  RowBox[{"\[Alpha]", "[", 
                   RowBox[{"2", "j"}], "]"}], 
                  RowBox[{"HSpcInt", "[", 
                   RowBox[{"1", ",", 
                    RowBox[{"2", "j"}]}], "]"}]}]}]}], "]"}], ")"}], 
             "\[Equal]", "0"}], ",", "\[Rho]W"}], "]"}], 
          "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "2", " ", "comes", " ", "from", " ", "the", " ", "left", " ", "hand", 
        " ", "side", " ", "of", " ", "the", " ", "boundary", " ", 
        "conditions", " ", "and", " ", "the", " ", "minus", " ", "comes", " ",
         "from", " ", "the", " ", "direction", " ", "of", " ", "the", " ", 
        "normal"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
         "result", "\[LeftDoubleBracket]", "ii", "\[RightDoubleBracket]"}], 
         "=", 
         RowBox[{
          RowBox[{"-", "2"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"rhoW", " ", 
               RowBox[{"HSpcInt", "[", 
                RowBox[{
                 RowBox[{
                 "IDOdd", "\[LeftDoubleBracket]", "ii", 
                  "\[RightDoubleBracket]"}], ",", "0"}], "]"}]}], "+", 
              RowBox[{"0", " ", 
               RowBox[{"HSpcInt", "[", 
                RowBox[{
                 RowBox[{
                 "IDOdd", "\[LeftDoubleBracket]", "ii", 
                  "\[RightDoubleBracket]"}], ",", "1"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"\[Theta]W", "/", 
                SqrtBox["2"]}], " ", 
               RowBox[{"HSpcInt", "[", 
                RowBox[{
                 RowBox[{
                 "IDOdd", "\[LeftDoubleBracket]", "ii", 
                  "\[RightDoubleBracket]"}], ",", "2"}], "]"}]}]}], ")"}], 
            "-", 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"j", "=", "0"}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"n", "-", "1"}], ")"}], "/", "2"}]], 
             RowBox[{
              RowBox[{"\[Alpha]", "[", 
               RowBox[{"2", "j"}], "]"}], 
              RowBox[{"HSpcInt", "[", 
               RowBox[{
                RowBox[{
                "IDOdd", "\[LeftDoubleBracket]", "ii", 
                 "\[RightDoubleBracket]"}], ",", 
                RowBox[{"2", "j"}]}], "]"}]}]}]}], ")"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "1", ",", 
          RowBox[{"Length", "[", "IDOdd", "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"CoefficientArrays", "[", 
        RowBox[{"result", ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Alpha]", "[", "#", "]"}], "&"}], ",", "IDEven"}], 
          "]"}]}], "]"}], "\[LeftDoubleBracket]", "2", 
       "\[RightDoubleBracket]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.687348772181677*^9, {3.687350033238669*^9, 3.687350047599272*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Mat Onsager", "Subsection",
 CellChangeTimes->{{3.687182825221925*^9, 3.6871828268193493`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"MatOnsager", "[", "n_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Btilde", ",", "result"}], "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Btilde", "=", 
        RowBox[{
         RowBox[{"MatBoe", "[", "n", "]"}], "\[LeftDoubleBracket]", 
         RowBox[{
          RowBox[{"1", ";;", 
           RowBox[{"-", "1"}]}], ",", 
          RowBox[{"1", ";;", 
           RowBox[{"Length", "[", 
            RowBox[{"MatBoe", "[", "n", "]"}], "]"}]}]}], 
         "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Btilde", ".", 
        RowBox[{"Inverse", "[", 
         RowBox[{
          RowBox[{"MatAoe", "[", "n", "]"}], "\[LeftDoubleBracket]", 
          RowBox[{
           RowBox[{"1", ";;", 
            RowBox[{"-", "1"}]}], ",", 
           RowBox[{"1", ";;", 
            RowBox[{"Length", "[", 
             RowBox[{"MatAoe", "[", "n", "]"}], "]"}]}]}], 
          "\[RightDoubleBracket]"}], "]"}]}]}]}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]"}]}]], "Input"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Check Boundary Stability", "Section",
 CellChangeTimes->{{3.687182844220314*^9, 3.687182848773402*^9}}],

Cell[CellGroupData[{

Cell["Stability Check", "Subsection",
 CellChangeTimes->{{3.686195781660097*^9, 3.686195786899859*^9}, {
  3.6862197597374687`*^9, 3.686219762722316*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CheckBoundary", "[", "n_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"entropy", ",", "error", ",", "numEntries", ",", "OnsagerMat"}], 
     "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"OnsagerMat", " ", "=", 
      RowBox[{"MatOnsager", "[", "n", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"error", " ", "=", 
      RowBox[{"Simplify", "[", " ", 
       RowBox[{"OnsagerMat", "-", 
        RowBox[{"Transpose", "[", "OnsagerMat", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"numEntries", "=", 
      RowBox[{"Length", "[", 
       RowBox[{"Flatten", "[", "OnsagerMat", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Num Tensors: \>\"", ",", 
         RowBox[{"FontColor", "\[Rule]", "Black"}]}], "]"}], ",", "n"}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Checking Symmetricity\>\"", ",", 
        RowBox[{"FontColor", "\[Rule]", "Magenta"}]}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Count", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", "error", "]"}], ",", "0"}], "]"}], 
        "\[Equal]", "numEntries"}], ",", 
       RowBox[{"Print", "[", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Symmetric\>\"", ",", 
          RowBox[{"FontColor", "\[Rule]", "Green"}]}], "]"}], "]"}], ",", 
       RowBox[{"Print", "[", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<UnSymmetric\>\"", ",", 
          RowBox[{"FontColor", "\[Rule]", "Red"}]}], "]"}], "]"}]}], "]"}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Checking Eigenvalues\>\"", ",", 
        RowBox[{"FontColor", "\[Rule]", "Brown"}]}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "equality", " ", "with", " ", "zero", " ", "will", " ", "exists", " ", 
       "because", " ", "of", " ", "no", " ", "penetration", " ", "boundary", 
       " ", "condition"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Eigenvalues", "[", "OnsagerMat", "]"}], ",", 
           RowBox[{
            RowBox[{"#", "<", "0"}], "&"}]}], "]"}], "]"}], ">", "0"}], ",", 
       RowBox[{"Print", "[", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Negative Definite\>\"", ",", 
          RowBox[{"FontColor", "\[Rule]", "Red"}]}], "]"}], "]"}], ",", 
       RowBox[{"Print", "[", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Positive Definite\>\"", ",", 
          RowBox[{"FontColor", "\[Rule]", "Green"}]}], "]"}], "]"}]}], "]"}], 
     ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ntensors", " ", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{"4", ",", "20", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"CheckBoundary", "[", "ii", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"ii", ",", "Ntensors"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.68619853896259*^9, 3.686198542198185*^9}, {
   3.686198681318098*^9, 3.68619873935629*^9}, 3.686217445343452*^9, {
   3.686217480380542*^9, 3.686217481690421*^9}, {3.68718289575464*^9, 
   3.68718290052808*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"Num Tensors: \"\>",
    StripOnInput->False,
    FontColor->GrayLevel[0]], "\[InvisibleSpace]", "4"}],
  SequenceForm[
   Style["Num Tensors: ", FontColor -> GrayLevel[0]], 4],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.6918081408348093`*^9}],

Cell[BoxData[
 StyleBox["\<\"Checking Symmetricity\"\>",
  StripOnInput->False,
  FontColor->RGBColor[1, 0, 1]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808140842925*^9}],

Cell[BoxData[
 StyleBox["\<\"Symmetric\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.6918081408532333`*^9}],

Cell[BoxData[
 StyleBox["\<\"Checking Eigenvalues\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0.6, 0.4, 0.2]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.6918081408637123`*^9}],

Cell[BoxData[
 StyleBox["\<\"Positive Definite\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808140873856*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"Num Tensors: \"\>",
    StripOnInput->False,
    FontColor->GrayLevel[0]], "\[InvisibleSpace]", "5"}],
  SequenceForm[
   Style["Num Tensors: ", FontColor -> GrayLevel[0]], 5],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.6918081408836823`*^9}],

Cell[BoxData[
 StyleBox["\<\"Checking Symmetricity\"\>",
  StripOnInput->False,
  FontColor->RGBColor[1, 0, 1]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808140893746*^9}],

Cell[BoxData[
 StyleBox["\<\"Symmetric\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.69180814090344*^9}],

Cell[BoxData[
 StyleBox["\<\"Checking Eigenvalues\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0.6, 0.4, 0.2]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808140913004*^9}],

Cell[BoxData[
 StyleBox["\<\"Positive Definite\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808140923521*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"Num Tensors: \"\>",
    StripOnInput->False,
    FontColor->GrayLevel[0]], "\[InvisibleSpace]", "6"}],
  SequenceForm[
   Style["Num Tensors: ", FontColor -> GrayLevel[0]], 6],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.6918081409325953`*^9}],

Cell[BoxData[
 StyleBox["\<\"Checking Symmetricity\"\>",
  StripOnInput->False,
  FontColor->RGBColor[1, 0, 1]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808140941598*^9}],

Cell[BoxData[
 StyleBox["\<\"Symmetric\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808140950389*^9}],

Cell[BoxData[
 StyleBox["\<\"Checking Eigenvalues\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0.6, 0.4, 0.2]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808140961113*^9}],

Cell[BoxData[
 StyleBox["\<\"Positive Definite\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808140971793*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"Num Tensors: \"\>",
    StripOnInput->False,
    FontColor->GrayLevel[0]], "\[InvisibleSpace]", "7"}],
  SequenceForm[
   Style["Num Tensors: ", FontColor -> GrayLevel[0]], 7],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.6918081409813766`*^9}],

Cell[BoxData[
 StyleBox["\<\"Checking Symmetricity\"\>",
  StripOnInput->False,
  FontColor->RGBColor[1, 0, 1]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.6918081409912252`*^9}],

Cell[BoxData[
 StyleBox["\<\"Symmetric\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808141001519*^9}],

Cell[BoxData[
 StyleBox["\<\"Checking Eigenvalues\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0.6, 0.4, 0.2]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808141011113*^9}],

Cell[BoxData[
 StyleBox["\<\"Positive Definite\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.6918081410204372`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"Num Tensors: \"\>",
    StripOnInput->False,
    FontColor->GrayLevel[0]], "\[InvisibleSpace]", "8"}],
  SequenceForm[
   Style["Num Tensors: ", FontColor -> GrayLevel[0]], 8],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808141069004*^9}],

Cell[BoxData[
 StyleBox["\<\"Checking Symmetricity\"\>",
  StripOnInput->False,
  FontColor->RGBColor[1, 0, 1]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808141079689*^9}],

Cell[BoxData[
 StyleBox["\<\"Symmetric\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.6918081410890837`*^9}],

Cell[BoxData[
 StyleBox["\<\"Checking Eigenvalues\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0.6, 0.4, 0.2]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808141097823*^9}],

Cell[BoxData[
 StyleBox["\<\"Positive Definite\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808141106612*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"Num Tensors: \"\>",
    StripOnInput->False,
    FontColor->GrayLevel[0]], "\[InvisibleSpace]", "9"}],
  SequenceForm[
   Style["Num Tensors: ", FontColor -> GrayLevel[0]], 9],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808141115423*^9}],

Cell[BoxData[
 StyleBox["\<\"Checking Symmetricity\"\>",
  StripOnInput->False,
  FontColor->RGBColor[1, 0, 1]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.6918081411222878`*^9}],

Cell[BoxData[
 StyleBox["\<\"Symmetric\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808141129588*^9}],

Cell[BoxData[
 StyleBox["\<\"Checking Eigenvalues\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0.6, 0.4, 0.2]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.6918081411368933`*^9}],

Cell[BoxData[
 StyleBox["\<\"Positive Definite\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808141144169*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"Num Tensors: \"\>",
    StripOnInput->False,
    FontColor->GrayLevel[0]], "\[InvisibleSpace]", "10"}],
  SequenceForm[
   Style["Num Tensors: ", FontColor -> GrayLevel[0]], 10],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808141151449*^9}],

Cell[BoxData[
 StyleBox["\<\"Checking Symmetricity\"\>",
  StripOnInput->False,
  FontColor->RGBColor[1, 0, 1]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808141158963*^9}],

Cell[BoxData[
 StyleBox["\<\"Symmetric\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808141167498*^9}],

Cell[BoxData[
 StyleBox["\<\"Checking Eigenvalues\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0.6, 0.4, 0.2]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.6918081411756372`*^9}],

Cell[BoxData[
 StyleBox["\<\"Positive Definite\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.6918081411838217`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"Num Tensors: \"\>",
    StripOnInput->False,
    FontColor->GrayLevel[0]], "\[InvisibleSpace]", "11"}],
  SequenceForm[
   Style["Num Tensors: ", FontColor -> GrayLevel[0]], 11],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808141233602*^9}],

Cell[BoxData[
 StyleBox["\<\"Checking Symmetricity\"\>",
  StripOnInput->False,
  FontColor->RGBColor[1, 0, 1]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808141242139*^9}],

Cell[BoxData[
 StyleBox["\<\"Symmetric\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.6918081412500067`*^9}],

Cell[BoxData[
 StyleBox["\<\"Checking Eigenvalues\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0.6, 0.4, 0.2]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808141259132*^9}],

Cell[BoxData[
 StyleBox["\<\"Positive Definite\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808141305419*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"Num Tensors: \"\>",
    StripOnInput->False,
    FontColor->GrayLevel[0]], "\[InvisibleSpace]", "12"}],
  SequenceForm[
   Style["Num Tensors: ", FontColor -> GrayLevel[0]], 12],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808141364603*^9}],

Cell[BoxData[
 StyleBox["\<\"Checking Symmetricity\"\>",
  StripOnInput->False,
  FontColor->RGBColor[1, 0, 1]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808141372658*^9}],

Cell[BoxData[
 StyleBox["\<\"Symmetric\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808141380474*^9}],

Cell[BoxData[
 StyleBox["\<\"Checking Eigenvalues\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0.6, 0.4, 0.2]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808141388389*^9}],

Cell[BoxData[
 StyleBox["\<\"Positive Definite\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808141570586*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"Num Tensors: \"\>",
    StripOnInput->False,
    FontColor->GrayLevel[0]], "\[InvisibleSpace]", "13"}],
  SequenceForm[
   Style["Num Tensors: ", FontColor -> GrayLevel[0]], 13],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808141628221*^9}],

Cell[BoxData[
 StyleBox["\<\"Checking Symmetricity\"\>",
  StripOnInput->False,
  FontColor->RGBColor[1, 0, 1]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808141636351*^9}],

Cell[BoxData[
 StyleBox["\<\"Symmetric\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808141644156*^9}],

Cell[BoxData[
 StyleBox["\<\"Checking Eigenvalues\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0.6, 0.4, 0.2]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808141652142*^9}],

Cell[BoxData[
 StyleBox["\<\"Positive Definite\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808141836241*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"Num Tensors: \"\>",
    StripOnInput->False,
    FontColor->GrayLevel[0]], "\[InvisibleSpace]", "14"}],
  SequenceForm[
   Style["Num Tensors: ", FontColor -> GrayLevel[0]], 14],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808141936274*^9}],

Cell[BoxData[
 StyleBox["\<\"Checking Symmetricity\"\>",
  StripOnInput->False,
  FontColor->RGBColor[1, 0, 1]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808141943932*^9}],

Cell[BoxData[
 StyleBox["\<\"Symmetric\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808141951261*^9}],

Cell[BoxData[
 StyleBox["\<\"Checking Eigenvalues\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0.6, 0.4, 0.2]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808141958605*^9}],

Cell[BoxData[
 StyleBox["\<\"Positive Definite\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.6918081424430027`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"Num Tensors: \"\>",
    StripOnInput->False,
    FontColor->GrayLevel[0]], "\[InvisibleSpace]", "15"}],
  SequenceForm[
   Style["Num Tensors: ", FontColor -> GrayLevel[0]], 15],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808142532866*^9}],

Cell[BoxData[
 StyleBox["\<\"Checking Symmetricity\"\>",
  StripOnInput->False,
  FontColor->RGBColor[1, 0, 1]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808142540361*^9}],

Cell[BoxData[
 StyleBox["\<\"Symmetric\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808142547662*^9}],

Cell[BoxData[
 StyleBox["\<\"Checking Eigenvalues\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0.6, 0.4, 0.2]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.6918081425550613`*^9}],

Cell[BoxData[
 StyleBox["\<\"Positive Definite\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808143029911*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"Num Tensors: \"\>",
    StripOnInput->False,
    FontColor->GrayLevel[0]], "\[InvisibleSpace]", "16"}],
  SequenceForm[
   Style["Num Tensors: ", FontColor -> GrayLevel[0]], 16],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808143179721*^9}],

Cell[BoxData[
 StyleBox["\<\"Checking Symmetricity\"\>",
  StripOnInput->False,
  FontColor->RGBColor[1, 0, 1]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808143187155*^9}],

Cell[BoxData[
 StyleBox["\<\"Symmetric\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.6918081431944304`*^9}],

Cell[BoxData[
 StyleBox["\<\"Checking Eigenvalues\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0.6, 0.4, 0.2]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808143201816*^9}],

Cell[BoxData[
 StyleBox["\<\"Positive Definite\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808144509918*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"Num Tensors: \"\>",
    StripOnInput->False,
    FontColor->GrayLevel[0]], "\[InvisibleSpace]", "17"}],
  SequenceForm[
   Style["Num Tensors: ", FontColor -> GrayLevel[0]], 17],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.6918081446336823`*^9}],

Cell[BoxData[
 StyleBox["\<\"Checking Symmetricity\"\>",
  StripOnInput->False,
  FontColor->RGBColor[1, 0, 1]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808144644658*^9}],

Cell[BoxData[
 StyleBox["\<\"Symmetric\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.6918081446554117`*^9}],

Cell[BoxData[
 StyleBox["\<\"Checking Eigenvalues\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0.6, 0.4, 0.2]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808144665914*^9}],

Cell[BoxData[
 StyleBox["\<\"Positive Definite\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.69180814600128*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"Num Tensors: \"\>",
    StripOnInput->False,
    FontColor->GrayLevel[0]], "\[InvisibleSpace]", "18"}],
  SequenceForm[
   Style["Num Tensors: ", FontColor -> GrayLevel[0]], 18],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808146194652*^9}],

Cell[BoxData[
 StyleBox["\<\"Checking Symmetricity\"\>",
  StripOnInput->False,
  FontColor->RGBColor[1, 0, 1]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808146205823*^9}],

Cell[BoxData[
 StyleBox["\<\"Symmetric\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808146217183*^9}],

Cell[BoxData[
 StyleBox["\<\"Checking Eigenvalues\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0.6, 0.4, 0.2]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808146228786*^9}],

Cell[BoxData[
 StyleBox["\<\"Positive Definite\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.6918081493705177`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"Num Tensors: \"\>",
    StripOnInput->False,
    FontColor->GrayLevel[0]], "\[InvisibleSpace]", "19"}],
  SequenceForm[
   Style["Num Tensors: ", FontColor -> GrayLevel[0]], 19],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.6918081495304127`*^9}],

Cell[BoxData[
 StyleBox["\<\"Checking Symmetricity\"\>",
  StripOnInput->False,
  FontColor->RGBColor[1, 0, 1]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808149541892*^9}],

Cell[BoxData[
 StyleBox["\<\"Symmetric\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808149552636*^9}],

Cell[BoxData[
 StyleBox["\<\"Checking Eigenvalues\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0.6, 0.4, 0.2]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808149563545*^9}],

Cell[BoxData[
 StyleBox["\<\"Positive Definite\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.6918081527122507`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"Num Tensors: \"\>",
    StripOnInput->False,
    FontColor->GrayLevel[0]], "\[InvisibleSpace]", "20"}],
  SequenceForm[
   Style["Num Tensors: ", FontColor -> GrayLevel[0]], 20],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808153037381*^9}],

Cell[BoxData[
 StyleBox["\<\"Checking Symmetricity\"\>",
  StripOnInput->False,
  FontColor->RGBColor[1, 0, 1]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.6918081530481157`*^9}],

Cell[BoxData[
 StyleBox["\<\"Symmetric\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808153059013*^9}],

Cell[BoxData[
 StyleBox["\<\"Checking Eigenvalues\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0.6, 0.4, 0.2]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.691808153069577*^9}],

Cell[BoxData[
 StyleBox["\<\"Positive Definite\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{
  3.6862174994096823`*^9, {3.686217619042038*^9, 3.686217661600737*^9}, 
   3.686219708854402*^9, 3.686292686060624*^9, 3.68629278649636*^9, 
   3.686294257086266*^9, 3.686295016105143*^9, 3.68629507663233*^9, 
   3.686543179207802*^9, 3.686904173029029*^9, 3.6871596556841784`*^9, {
   3.6871597015284767`*^9, 3.687159726860561*^9}, 3.6918081658372107`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Construct Boundary Conditions", "Section",
 CellChangeTimes->{{3.686222956052733*^9, 3.686222960326171*^9}, {
  3.686295427535076*^9, 3.686295428931898*^9}, {3.687182969953673*^9, 
  3.687182970566152*^9}}],

Cell[CellGroupData[{

Cell["core routine", "Subsection",
 CellChangeTimes->{{3.687183014807561*^9, 3.6871830160793343`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"flag", " ", "\[Equal]", " ", 
     RowBox[{"0", " ", "for", " ", "MBCs"}]}], ",", 
    RowBox[{"flag", " ", "\[Equal]", " ", 
     RowBox[{"1", " ", "for", " ", "OBCs"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ConstructStableBC", "[", 
    RowBox[{"n_", ",", "flag_", ",", "Onsager_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "BCMat", ",", "OddVar", ",", "EvenVar", ",", "IDEven", ",", "IDOdd", 
       ",", "result", ",", "Boe"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"IDOdd", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"EvenQ", "[", "n", "]"}], ",", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", 
           RowBox[{"n", "-", "1"}], ",", "2"}], "]"}], ",", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", 
           RowBox[{"n", "-", "2"}], ",", "2"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"IDEven", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"EvenQ", "[", "n", "]"}], ",", 
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", 
           RowBox[{"n", "-", "2"}], ",", "2"}], "]"}], ",", 
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", 
           RowBox[{"n", "-", "1"}], ",", "2"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"result", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Length", "[", "IDOdd", "]"}], "-", "1"}], "}"}]}], "]"}],
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"OddVar", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Alpha]", "[", "#", "]"}], "&"}], ",", "IDOdd"}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"EvenVar", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Alpha]", "[", "#", "]"}], "&"}], ",", "IDEven"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"flag", "\[Equal]", "0"}], ",", 
        RowBox[{"Boe", "=", 
         RowBox[{"MatBoe", "[", "n", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Boe", "=", 
          RowBox[{"Onsager", ".", 
           RowBox[{"MatAoe", "[", "n", "]"}]}]}], ";"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "we", " ", "neglect", " ", "the", " ", "first", " ", "boundary", " ", 
        "condition"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
         "result", "\[LeftDoubleBracket]", "ii", "\[RightDoubleBracket]"}], 
         "=", 
         RowBox[{
          RowBox[{"\[Alpha]", "[", 
           RowBox[{"IDOdd", "\[LeftDoubleBracket]", 
            RowBox[{"ii", "+", "1"}], "\[RightDoubleBracket]"}], "]"}], "-", 
          RowBox[{
           RowBox[{"Boe", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{"ii", "+", "1"}], ",", "All"}], 
            "\[RightDoubleBracket]"}], ".", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"\[Alpha]", "[", "#", "]"}], "&"}], ",", "IDEven"}], 
            "]"}]}], "+", 
          RowBox[{
           FractionBox[
            RowBox[{"Boe", "\[LeftDoubleBracket]", 
             RowBox[{
              RowBox[{"ii", "+", "1"}], ",", "2"}], "\[RightDoubleBracket]"}], 
            SqrtBox["2"]], "\[Theta]W"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "1", ",", 
          RowBox[{
           RowBox[{"Length", "[", "IDOdd", "]"}], "-", "1"}]}], "}"}]}], 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Expand", "[", 
       RowBox[{"Simplify", "[", "result", "]"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.686222963461821*^9, 3.686223060611602*^9}, {
   3.686223128195881*^9, 3.686223248155796*^9}, {3.6862257308752317`*^9, 
   3.6862258421599083`*^9}, {3.6862258825568933`*^9, 3.686226019675107*^9}, {
   3.686226258825774*^9, 3.686226304816543*^9}, {3.6862264769655533`*^9, 
   3.686226532855921*^9}, {3.687095693662799*^9, 3.687095703307804*^9}, {
   3.687169668737117*^9, 3.687169679807436*^9}, 3.687169735423922*^9, {
   3.687183186946692*^9, 3.687183235944354*^9}, {3.6978870740685387`*^9, 
   3.697887079152541*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"bc0", "[", "ii", "]"}], "=", 
       RowBox[{"ConstructStableBC", "[", 
        RowBox[{"ii", ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"bc0Stable", "[", "ii", "]"}], "=", 
       RowBox[{"ConstructStableBC", "[", 
        RowBox[{"ii", ",", "1"}], "]"}]}], ";"}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "5", ",", "50"}], "}"}]}], "]"}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.687088560331687*^9, 3.687088561318375*^9}, {
   3.687088592338317*^9, 3.687088626224128*^9}, 3.687159763477067*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"AA", "[", "5", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.686227386918347*^9, 3.686227391868883*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "1", "0", "0", "0"},
     {"1", "0", 
      SqrtBox["2"], "0", "0"},
     {"0", 
      SqrtBox["2"], "0", 
      SqrtBox["3"], "0"},
     {"0", "0", 
      SqrtBox["3"], "0", "2"},
     {"0", "0", "0", "2", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.68622739224205*^9, 3.686292759663657*^9, 
  3.686543171901359*^9, 3.686543220939845*^9, 3.686904220676688*^9, 
  3.687159767509818*^9, 3.687160082574131*^9, 3.6871834815040007`*^9, 
  3.691823420098448*^9, 3.691937687184793*^9, 3.697966306742818*^9, 
  3.699095685538118*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "bc", "]"}]], "Input",
 CellChangeTimes->{{3.687088565945446*^9, 3.6870885677309237`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Acceptable Onsager Matrices", "Subsection",
 CellChangeTimes->{{3.68715631843573*^9, 3.6871563216442127`*^9}, {
  3.6871830299662533`*^9, 3.6871830454490557`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FixOnsager", "[", "OnsagerMat_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "domain", ",", "OnsagerNew", ",", "ev", ",", "PositiveEV", ",", 
      "commonelem"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"OnsagerNew", "=", "OnsagerMat"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "We", " ", "only", " ", "change", " ", "the", " ", "first", " ", "two", 
       " ", "onsager", " ", "coefficients"}], "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"OnsagerNew", "\[LeftDoubleBracket]", 
       RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "*=", "\[Zeta]1"}],
      ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"OnsagerNew", "\[LeftDoubleBracket]", 
       RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}], "*=", "\[Zeta]2"}],
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"domain", "=", 
      RowBox[{"Range", "[", 
       RowBox[{"0.5", ",", "3", ",", "0.1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"domain", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
              "domain", "\[LeftDoubleBracket]", "ii", 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{
              "domain", "\[LeftDoubleBracket]", "jj", 
               "\[RightDoubleBracket]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"jj", ",", "1", ",", 
              RowBox[{"Length", "[", "domain", "]"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"ii", ",", "1", ",", 
            RowBox[{"Length", "[", "domain", "]"}]}], "}"}]}], "]"}], ",", 
        "1"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "list", " ", "of", " ", "eigenvalues", " ", "corresponding", " ", "to", 
       " ", "different", " ", "values", " ", "of", " ", "the", " ", "onsager",
        " ", "coefficients"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"ev", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"N", "[", 
         RowBox[{"Eigenvalues", "[", 
          RowBox[{
           RowBox[{"OnsagerNew", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{"2", ";;", 
              RowBox[{"-", "1"}]}], ",", 
             RowBox[{"2", ";;", 
              RowBox[{"-", "1"}]}]}], "\[RightDoubleBracket]"}], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Zeta]1", "\[Rule]", 
              RowBox[{"domain", "\[LeftDoubleBracket]", 
               RowBox[{"ii", ",", "1"}], "\[RightDoubleBracket]"}]}], ",", 
             RowBox[{"\[Zeta]2", "\[Rule]", 
              RowBox[{"domain", "\[LeftDoubleBracket]", 
               RowBox[{"ii", ",", "2"}], "\[RightDoubleBracket]"}]}]}], 
            "}"}]}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "1", ",", 
          RowBox[{"Length", "[", "domain", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"location", " ", "of", " ", "positive", " ", "eigenvalues"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"PositiveEV", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Position", "[", 
          RowBox[{
           RowBox[{"ev", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "ii"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"_", "?", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"#", ">", "0"}], "&"}], ")"}]}]}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "1", ",", 
          RowBox[{"Length", "[", 
           RowBox[{
           "ev", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "]"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"commonelem", "=", 
      RowBox[{
      "PositiveEV", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"commonelem", "=", 
         RowBox[{"Intersection", "[", 
          RowBox[{
           RowBox[{
           "PositiveEV", "\[LeftDoubleBracket]", "ii", 
            "\[RightDoubleBracket]"}], ",", "commonelem"}], "]"}]}], ";"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"ii", ",", "2", ",", 
         RowBox[{"Length", "[", "PositiveEV", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
       "domain", "\[LeftDoubleBracket]", "commonelem", 
        "\[RightDoubleBracket]"}], ",", 
       RowBox[{
       "ev", "\[LeftDoubleBracket]", "commonelem", "\[RightDoubleBracket]"}], 
       ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"OnsagerNew", "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Zeta]1", "\[Rule]", 
             RowBox[{"domain", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{
               "commonelem", "\[LeftDoubleBracket]", "ii", 
                "\[RightDoubleBracket]"}], ",", "1"}], 
              "\[RightDoubleBracket]"}]}], ",", 
            RowBox[{"\[Zeta]2", "\[Rule]", 
             RowBox[{"domain", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{
               "commonelem", "\[LeftDoubleBracket]", "ii", 
                "\[RightDoubleBracket]"}], ",", "2"}], 
              "\[RightDoubleBracket]"}]}]}], "}"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"ii", ",", "1", ",", 
           RowBox[{"Length", "[", "commonelem", "]"}]}], "}"}]}], "]"}]}], 
      "}"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQB2IQrf/bxXdjxWvHEI/58SD6YXV2CojOa/lRB6Kd3W81
gWiBDYJ9IPr2G89pIFpvJfMcEJ1id3MhiLbQUloJojlsXNeC6CV3DLaB6Jr4
c7tBdOcylX0g+oCT61EQrcbRBaa5BFecBtFVl0TPgOgX8bb/QfQaN08wrZhp
z7oJSP8/u5QTRL/8NEEQRLcdFRAC0RIGijIgOsVKQRZEnwkQtwTRj8I4HUD0
8XmJbiD6yKKUEBBtfC+tG0SXSUpMBdE9Sne1NgNpu18e+iBaYP7dbhBdFFTV
A6Ir/nauAdG3vtwA0z8sN/FtAfkj3oEfRJdpqciAaCulebIguud/pzOIPlFh
7gKidTfOUt8JpDPYL4JpAP4bwH4=
  "]]
}, Closed]],

Cell[CellGroupData[{

Cell["Test Range of Positivity", "Subsection",
 CellChangeTimes->{{3.687158450197176*^9, 3.68715845392525*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"positiveEV", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"FixOnsager", "[", 
       RowBox[{"MatOnsager", "[", "ii", "]"}], "]"}], "\[LeftDoubleBracket]", 
      "2", "\[RightDoubleBracket]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "7", ",", "23", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.687158460577952*^9, 3.687158534913464*^9}, {
  3.687159069803279*^9, 3.687159071407824*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Position", "[", 
          RowBox[{
           RowBox[{
           "positiveEV", "\[LeftDoubleBracket]", "ii", 
            "\[RightDoubleBracket]"}], ",", 
           RowBox[{"_", "?", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"#", "<", "0"}], "&"}], ")"}]}]}], "]"}], "]"}], "]"}], 
       ">", "0"}], ",", 
      RowBox[{"Print", "[", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Not Passed\>\"", ",", 
         RowBox[{"FontColor", "\[Rule]", "Red"}]}], "]"}], "]"}], ",", 
      RowBox[{"Print", "[", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Passed\>\"", ",", 
         RowBox[{"FontColor", "\[Rule]", "Green"}]}], "]"}], "]"}]}], "]"}], 
    ";"}], ",", 
   RowBox[{"{", 
    RowBox[{"ii", ",", "1", ",", 
     RowBox[{"Length", "[", "positiveEV", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6871585369268007`*^9, 3.687158550824613*^9}, {
  3.6871586020181103`*^9, 3.687158755270754*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"Passed\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{3.6871587231666317`*^9, 3.6871587557264757`*^9, 
  3.6871590908934107`*^9, 3.687159800006349*^9, 3.687183499846751*^9, 
  3.691808284033691*^9, 3.697966320615583*^9, 3.6990957023271*^9}],

Cell[BoxData[
 StyleBox["\<\"Passed\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{3.6871587231666317`*^9, 3.6871587557264757`*^9, 
  3.6871590908934107`*^9, 3.687159800006349*^9, 3.687183499846751*^9, 
  3.691808284033691*^9, 3.697966320615583*^9, 3.699095702337015*^9}],

Cell[BoxData[
 StyleBox["\<\"Passed\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{3.6871587231666317`*^9, 3.6871587557264757`*^9, 
  3.6871590908934107`*^9, 3.687159800006349*^9, 3.687183499846751*^9, 
  3.691808284033691*^9, 3.697966320615583*^9, 3.6990957023502693`*^9}],

Cell[BoxData[
 StyleBox["\<\"Passed\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{3.6871587231666317`*^9, 3.6871587557264757`*^9, 
  3.6871590908934107`*^9, 3.687159800006349*^9, 3.687183499846751*^9, 
  3.691808284033691*^9, 3.697966320615583*^9, 3.6990957023589373`*^9}],

Cell[BoxData[
 StyleBox["\<\"Passed\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{3.6871587231666317`*^9, 3.6871587557264757`*^9, 
  3.6871590908934107`*^9, 3.687159800006349*^9, 3.687183499846751*^9, 
  3.691808284033691*^9, 3.697966320615583*^9, 3.699095702367484*^9}],

Cell[BoxData[
 StyleBox["\<\"Passed\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{3.6871587231666317`*^9, 3.6871587557264757`*^9, 
  3.6871590908934107`*^9, 3.687159800006349*^9, 3.687183499846751*^9, 
  3.691808284033691*^9, 3.697966320615583*^9, 3.6990957023761663`*^9}],

Cell[BoxData[
 StyleBox["\<\"Passed\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{3.6871587231666317`*^9, 3.6871587557264757`*^9, 
  3.6871590908934107`*^9, 3.687159800006349*^9, 3.687183499846751*^9, 
  3.691808284033691*^9, 3.697966320615583*^9, 3.699095702384783*^9}],

Cell[BoxData[
 StyleBox["\<\"Passed\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{3.6871587231666317`*^9, 3.6871587557264757`*^9, 
  3.6871590908934107`*^9, 3.687159800006349*^9, 3.687183499846751*^9, 
  3.691808284033691*^9, 3.697966320615583*^9, 3.699095702393405*^9}],

Cell[BoxData[
 StyleBox["\<\"Passed\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{3.6871587231666317`*^9, 3.6871587557264757`*^9, 
  3.6871590908934107`*^9, 3.687159800006349*^9, 3.687183499846751*^9, 
  3.691808284033691*^9, 3.697966320615583*^9, 3.6990957024023247`*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["OnsagerMatrices", "Subsection",
 CellChangeTimes->{{3.687169187426257*^9, 3.687169193466325*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"min", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"max", "=", "30"}], ";"}]}], "Input",
 CellChangeTimes->{{3.68718332376996*^9, 3.6871833290540943`*^9}, {
   3.687183525299479*^9, 3.6871835255130444`*^9}, {3.687183626783882*^9, 
   3.68718364267579*^9}, {3.691896561093584*^9, 3.6918965616597147`*^9}, 
   3.691896955597391*^9, 3.691937694127118*^9, {3.699607069727098*^9, 
   3.6996070710075808`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"The", " ", "original", " ", "onsager", " ", "coefficients"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"onsagerOld", "[", "ii", "]"}], "=", 
      RowBox[{"MatOnsager", "[", "ii", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.68716919543852*^9, 3.687169199039177*^9}, {
  3.687169255741189*^9, 3.687169321110733*^9}, {3.687169583232135*^9, 
  3.687169586004525*^9}, {3.687169624042851*^9, 3.6871696292854233`*^9}, {
  3.6871834309473953`*^9, 3.687183435320115*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "onsager", " ", "matrices", " ", "which", " ", "have", " ", "positivity", 
    " ", "and", " ", "symmetricity"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"onsagercoeff", "[", "ii", "]"}], ",", 
         RowBox[{"onsagerNew", "[", "ii", "]"}]}], "}"}], "=", 
       RowBox[{
        RowBox[{"FixOnsager", "[", 
         RowBox[{"onsagerOld", "[", "ii", "]"}], "]"}], 
        "\[LeftDoubleBracket]", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}]}], "}"}], "\[RightDoubleBracket]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}], ";"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.687169330090865*^9, 3.687169417838766*^9}, {
   3.687169634103429*^9, 3.68716964148591*^9}, {3.687169709822857*^9, 
   3.687169713109406*^9}, {3.6871834375539837`*^9, 3.687183440984359*^9}, 
   3.6918967255359488`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Boundary Conditions", "Subsection",
 CellChangeTimes->{{3.6871694735840282`*^9, 3.687169477361478*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"bcPBCOptimal", "[", "ii", "]"}], "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ConstructStableBC", "[", 
          RowBox[{"ii", ",", "1", ",", 
           RowBox[{
            RowBox[{"onsagerNew", "[", "ii", "]"}], "\[LeftDoubleBracket]", 
            "jj", "\[RightDoubleBracket]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"jj", ",", "1", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"onsagerNew", "[", "ii", "]"}], "]"}]}], "}"}]}], "]"}]}],
       ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}], ";"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"bcMBC", "[", "ii", "]"}], "=", 
       RowBox[{"ConstructStableBC", "[", 
        RowBox[{"ii", ",", "0", ",", 
         RowBox[{"onsagerOld", "[", "ii", "]"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"bcPBC", "[", "ii", "]"}], "=", 
       RowBox[{"ConstructStableBC", "[", 
        RowBox[{"ii", ",", "1", ",", 
         RowBox[{"onsagerOld", "[", "ii", "]"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.687169493504809*^9, 3.687169572618794*^9}, 
   3.68716974306396*^9, {3.6871832608708563`*^9, 3.687183311606142*^9}, {
   3.687183403835465*^9, 3.687183453906197*^9}, {3.687183660187952*^9, 
   3.6871836633173018`*^9}, {3.691823668165477*^9, 3.691823668234836*^9}, 
   3.691896703871162*^9, {3.6996071571702147`*^9, 3.699607158146112*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Solving Routines", "Section",
 CellChangeTimes->{{3.564503013409094*^9, 3.564503091440431*^9}, {
  3.564504438014984*^9, 3.564504441057158*^9}, {3.622820083188332*^9, 
  3.62282008628539*^9}, {3.687183749014262*^9, 3.687183750757367*^9}}],

Cell[CellGroupData[{

Cell["returns the solution", "Subsection",
 CellChangeTimes->{{3.686920714051405*^9, 3.68692071648195*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "nvar", ",", "kn", ",", "thetaw", ",", "A0", ",", "P0", ",", "\[Lambda]0", 
    ",", "\[Lambda]", ",", "\[Lambda]Plus", ",", "v", ",", "vv", ",", "B0", 
    ",", "alpha", ",", "coef", ",", "Kn", ",", "k", ",", "Ansatz", ",", 
    "Coefs", ",", "SymmetryConditions", ",", "solution", ",", "res", ",", 
    "bcEqn", ",", "solBC"}], "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"flag", " ", "=", " ", 
     RowBox[{"0", " ", "for", " ", "unstable"}]}], ",", " ", 
    RowBox[{"flag", " ", "\[Equal]", " ", 
     RowBox[{"1", " ", "for", " ", "stable"}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GetSolution", "[", 
   RowBox[{
   "nvar_", ",", "kn_", ",", "thetaw_", ",", "flag_", ",", "bcinput_"}], 
   "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Lambda]0", ",", "\[Lambda]", ",", "\[Lambda]Plus", ",", "v", ",", 
      "vv", ",", "B0", ",", "alpha", ",", "coef", ",", "Kn", ",", "vW", ",", 
      "k", ",", "Ansatz", ",", "Coefs", ",", "SymmetryConditions", ",", 
      "solution", ",", "res", ",", "bcEqn", ",", "solBC", ",", "bc"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"A0", "=", 
      RowBox[{"AA", "[", "nvar", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"P0", "=", 
      RowBox[{"SparseArray", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i_", ",", "i_"}], "}"}], "\[Rule]", 
          RowBox[{"-", "1"}]}], "}"}], ",", "nvar"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"P0", "\[LeftDoubleBracket]", 
       RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "=", "0"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"P0", "\[LeftDoubleBracket]", 
       RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "=", "0"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"P0", "\[LeftDoubleBracket]", 
       RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}], "=", "0"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Lambda]0", ",", "vv"}], "}"}], "=", 
      RowBox[{"Eigensystem", "[", 
       RowBox[{"{", 
        RowBox[{"P0", ",", 
         RowBox[{"1.0", "A0"}]}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Lambda]", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"\[Lambda]0", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0", "<", 
           RowBox[{"Abs", "[", "#", "]"}], "<", "\[Infinity]"}], ")"}], 
         "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"v", "=", 
      RowBox[{"Extract", "[", 
       RowBox[{"vv", ",", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"\[Lambda]0", ",", "item"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"item", ",", "\[Lambda]"}], "}"}]}], "]"}], ",", "1"}], 
         "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\[Lambda]", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Rationalize", "[", 
            RowBox[{
             RowBox[{
             "\[Lambda]", "\[LeftDoubleBracket]", "ii", 
              "\[RightDoubleBracket]"}], ",", "0"}], "]"}], ",", 
           RowBox[{"-", 
            RowBox[{"Rationalize", "[", 
             RowBox[{
              RowBox[{
              "\[Lambda]", "\[LeftDoubleBracket]", "ii", 
               "\[RightDoubleBracket]"}], ",", "0"}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"ii", ",", "1", ",", 
           RowBox[{"Length", "[", "\[Lambda]", "]"}], ",", "2"}], "}"}]}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Lambda]Plus", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"\[Lambda]", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", ">", "0"}], ")"}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"B0", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nvar"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"B0", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"alpha", "=", "0"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"coef", "[", 
       RowBox[{"0", ",", "4"}], "]"}], "=", 
      RowBox[{"Kn", " ", 
       RowBox[{"k", "[", "0", "]"}]}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"heat", " ", "flux", " ", "constant"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Ansatz", "[", "x_", "]"}], "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"coef", "[", 
            RowBox[{"jj", ",", "ii"}], "]"}], 
           SuperscriptBox["x", "jj"]}], ",", 
          RowBox[{"{", 
           RowBox[{"jj", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "1", ",", "nvar"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Coefs", "=", 
      RowBox[{"Cases", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"coef", "[", 
              RowBox[{"jj", ",", "ii"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"jj", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"ii", ",", "1", ",", "nvar"}], "}"}]}], "]"}], "]"}], ",", 
        RowBox[{"coef", "[", 
         RowBox[{"_", ",", "_"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Ansatz", "[", "x_", "]"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Ansatz", "[", "x", "]"}], "/.", 
        RowBox[{
         RowBox[{"Solve", "[", 
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"CoefficientList", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"A0", ".", 
                  RowBox[{
                   RowBox[{"Ansatz", "'"}], "[", "x", "]"}]}], "-", 
                 RowBox[{
                  FractionBox["1", "Kn"], 
                  RowBox[{"P0", ".", 
                   RowBox[{"Ansatz", "[", "x", "]"}]}]}], "+", 
                 RowBox[{"alpha", " ", "B0", " ", 
                  SuperscriptBox["x", "2"]}]}], ",", "x"}], "]"}], "]"}], 
             "\[Equal]", "0"}], "]"}], ",", "Coefs"}], "]"}], 
         "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"coef", "[", 
          RowBox[{"_", ",", "_"}], "]"}], "\[Rule]", "0"}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"SymmetryConditions", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "1", ",", 
          RowBox[{"Length", "[", "\[Lambda]", "]"}], ",", "2"}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"jj", "=", "1"}], ";", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"v", "\[LeftDoubleBracket]", 
            RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}], "\[Equal]", 
           "0"}], ",", 
          RowBox[{"jj", "++"}]}], "]"}], ";", 
        RowBox[{
         RowBox[{"SymmetryConditions", "\[LeftDoubleBracket]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"ii", "+", "1"}], ")"}], "/", "2"}], 
          "\[RightDoubleBracket]"}], "=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"k", "[", "ii", "]"}], "\[Rule]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"-", 
              RowBox[{"Sign", "[", 
               FractionBox[
                RowBox[{"v", "\[LeftDoubleBracket]", 
                 RowBox[{
                  RowBox[{"ii", "+", "1"}], ",", "jj"}], 
                 "\[RightDoubleBracket]"}], 
                RowBox[{"v", "\[LeftDoubleBracket]", 
                 RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}]], 
               "]"}]}], ")"}], 
            RowBox[{"k", "[", 
             RowBox[{"ii", "+", "1"}], "]"}]}]}], ")"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"ii", ",", "1", ",", 
         RowBox[{"Length", "[", "\[Lambda]", "]"}], ",", "2"}], "}"}]}], 
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"solution", "=", 
      RowBox[{"ExpToTrig", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"C0", " ", "B0"}], "+", 
          RowBox[{"Ansatz", "[", "x", "]"}], "+", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"k", "[", "ii", "]"}], " ", 
             RowBox[{
             "v", "\[LeftDoubleBracket]", "ii", "\[RightDoubleBracket]"}], 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{
               "\[Lambda]", "\[LeftDoubleBracket]", "ii", 
                "\[RightDoubleBracket]"}], 
               FractionBox["x", "Kn"]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"ii", ",", "1", ",", 
              RowBox[{"Length", "[", "\[Lambda]", "]"}]}], "}"}]}], "]"}]}], "/.",
          "SymmetryConditions"}], "/.", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"k", "[", "ii", "]"}], "\[Rule]", 
           RowBox[{"k", "[", 
            RowBox[{"ii", "/", "2"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"ii", ",", "1", ",", 
            RowBox[{"Length", "[", "\[Lambda]", "]"}]}], "}"}]}], "]"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"res", "=", 
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"\[Alpha]", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", 
             RowBox[{"nvar", "-", "1"}]}], "}"}]}], "]"}], "\[Rule]", 
         "solution"}], "/.", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"k", "[", "ii", "]"}], "\[Rule]", 
           RowBox[{
            RowBox[{"k", "[", "ii", "]"}], 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{
               "\[Lambda]Plus", "\[LeftDoubleBracket]", "ii", 
                "\[RightDoubleBracket]"}]}], 
              FractionBox[
               RowBox[{"1", "/", "2"}], "Kn"]}], "]"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"ii", ",", "1", ",", 
            RowBox[{"Length", "[", "\[Lambda]Plus", "]"}]}], "}"}]}], "]"}]}],
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"bc", "=", "bcinput"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"bcEqn", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
            "bc", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{
               RowBox[{"nvar", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}], "/.",
           "res"}], "/.", 
         RowBox[{"{", 
          RowBox[{"x", "\[Rule]", 
           RowBox[{"1", "/", "2"}]}], "}"}]}], "/.", 
        RowBox[{"{", 
         RowBox[{"\[Beta]1", "\[Rule]", 
          RowBox[{
           SqrtBox[
            RowBox[{"\[Pi]", "/", "2"}]], 
           FractionBox[
            RowBox[{"2", "-", "\[Chi]"}], 
            RowBox[{"2", "\[Chi]"}]]}]}], "}"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{"\[Chi]", "\[Rule]", "1"}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"solBC", "=", 
      RowBox[{
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{"Thread", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"bcEqn", "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Kn", "\[Rule]", "kn"}], ",", 
               RowBox[{"\[Theta]W", "\[Rule]", "thetaw"}]}], "}"}]}], ")"}], 
           "\[Equal]", "0"}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"k", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", 
             RowBox[{
              FractionBox["nvar", "2"], "-", "2"}]}], "}"}]}], "]"}]}], "]"}],
        "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"\[Alpha]", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", 
             RowBox[{"nvar", "-", "1"}]}], "}"}]}], "]"}], "/.", "res"}], "/.",
         "solBC"}], "/.", 
       RowBox[{"{", 
        RowBox[{"Kn", "\[Rule]", "kn"}], "}"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             SqrtBox["2."], 
             RowBox[{"\[Alpha]", "[", "2", "]"}]}], ",", 
            RowBox[{
             SqrtBox["6."], 
             RowBox[{"\[Alpha]", "[", "3", "]"}]}]}], "}"}], "/.", "res"}], "/.",
          "solBC"}], "/.", 
        RowBox[{"{", 
         RowBox[{"Kn", "\[Rule]", "kn"}], "}"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"\[Alpha]", "[", "i", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", 
              RowBox[{"nvar", "-", "1"}]}], "}"}]}], "]"}], "/.", "res"}], "/.",
          "solBC"}], "/.", 
        RowBox[{"{", 
         RowBox[{"Kn", "\[Rule]", "kn"}], "}"}]}]}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.6228296160769024`*^9, {3.622830236495241*^9, 3.6228303173461094`*^9}, {
   3.6228304999537735`*^9, 3.622830500750301*^9}, {3.6228305351492214`*^9, 
   3.6228305385484877`*^9}, {3.622830914410901*^9, 3.6228309159479322`*^9}, {
   3.622831053369502*^9, 3.622831113654648*^9}, {3.6228312114888387`*^9, 
   3.6228312528944254`*^9}, {3.622831287909753*^9, 3.6228312965985365`*^9}, {
   3.62283152956275*^9, 3.6228315297758975`*^9}, {3.622831659283183*^9, 
   3.6228316812588224`*^9}, {3.6228685635597057`*^9, 
   3.6228685902384806`*^9}, {3.62286877419366*^9, 3.6228688369744883`*^9}, {
   3.622868877312357*^9, 3.62286887819195*^9}, {3.6228693449569316`*^9, 
   3.6228693528021617`*^9}, {3.6228694343194666`*^9, 
   3.6228694447754326`*^9}, {3.6228695731209517`*^9, 3.6228696207686963`*^9}, 
   3.62286965928335*^9, {3.622869696877404*^9, 3.622869729443102*^9}, {
   3.622869783527135*^9, 3.6228698499724045`*^9}, {3.622869899762577*^9, 
   3.6228699120937915`*^9}, {3.622869974559411*^9, 3.6228700014543304`*^9}, {
   3.6228705898873787`*^9, 3.6228705981779013`*^9}, 3.6228713179061813`*^9, {
   3.6228726464343204`*^9, 3.622872678838905*^9}, {3.6228727157444983`*^9, 
   3.622872730590391*^9}, {3.6228728800949926`*^9, 3.622872904097985*^9}, {
   3.62287519051233*^9, 3.6228752508405247`*^9}, {3.62287557549482*^9, 
   3.6228756178690596`*^9}, 3.6228757377078953`*^9, {3.622902664837407*^9, 
   3.6229026923817596`*^9}, {3.68622658544873*^9, 3.686226585639423*^9}, {
   3.686226865073724*^9, 3.686226907527413*^9}, {3.686227457931634*^9, 
   3.686227461899598*^9}, {3.686227554137363*^9, 3.68622756250371*^9}, {
   3.68622764232582*^9, 3.6862276466264563`*^9}, {3.6862276840040417`*^9, 
   3.686227684347168*^9}, {3.6862952751057796`*^9, 3.686295280680399*^9}, {
   3.686295471881777*^9, 3.6862954745590353`*^9}, 3.68629794212927*^9, {
   3.6863056832808943`*^9, 3.686305801290152*^9}, {3.686920672042214*^9, 
   3.68692070234408*^9}, 3.686920755588421*^9, {3.687088643306377*^9, 
   3.68708865861909*^9}, {3.687088921758306*^9, 3.68708894009206*^9}, {
   3.687097151152816*^9, 3.6870971583865833`*^9}, {3.687098517320478*^9, 
   3.687098523242244*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["returns the solution(all variables)", "Subsection",
 CellChangeTimes->{{3.686920714051405*^9, 3.68692071648195*^9}, {
  3.699123566535803*^9, 3.6991235699010468`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "nvar", ",", "kn", ",", "thetaw", ",", "A0", ",", "P0", ",", "\[Lambda]0", 
    ",", "\[Lambda]", ",", "\[Lambda]Plus", ",", "v", ",", "vv", ",", "B0", 
    ",", "alpha", ",", "coef", ",", "Kn", ",", "k", ",", "Ansatz", ",", 
    "Coefs", ",", "SymmetryConditions", ",", "solution", ",", "res", ",", 
    "bcEqn", ",", "solBC"}], "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"flag", " ", "=", " ", 
     RowBox[{"0", " ", "for", " ", "unstable"}]}], ",", " ", 
    RowBox[{"flag", " ", "\[Equal]", " ", 
     RowBox[{"1", " ", "for", " ", "stable"}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GetSolutionAllVariables", "[", 
   RowBox[{
   "nvar_", ",", "kn_", ",", "thetaw_", ",", "flag_", ",", "bcinput_"}], 
   "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Lambda]0", ",", "\[Lambda]", ",", "\[Lambda]Plus", ",", "v", ",", 
      "vv", ",", "B0", ",", "alpha", ",", "coef", ",", "Kn", ",", "vW", ",", 
      "k", ",", "Ansatz", ",", "Coefs", ",", "SymmetryConditions", ",", 
      "solution", ",", "res", ",", "bcEqn", ",", "solBC", ",", "bc", ",", 
      "var"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"A0", "=", 
      RowBox[{"AA", "[", "nvar", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"P0", "=", 
      RowBox[{"SparseArray", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i_", ",", "i_"}], "}"}], "\[Rule]", 
          RowBox[{"-", "1"}]}], "}"}], ",", "nvar"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"P0", "\[LeftDoubleBracket]", 
       RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "=", "0"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"P0", "\[LeftDoubleBracket]", 
       RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "=", "0"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"P0", "\[LeftDoubleBracket]", 
       RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}], "=", "0"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"var", " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Alpha]", "[", "#", "]"}], "&"}], ",", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", 
          RowBox[{"nvar", "-", "1"}]}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Lambda]0", ",", "vv"}], "}"}], "=", 
      RowBox[{"Eigensystem", "[", 
       RowBox[{"{", 
        RowBox[{"P0", ",", 
         RowBox[{"1.0", "A0"}]}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Lambda]", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"\[Lambda]0", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0", "<", 
           RowBox[{"Abs", "[", "#", "]"}], "<", "\[Infinity]"}], ")"}], 
         "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"v", "=", 
      RowBox[{"Extract", "[", 
       RowBox[{"vv", ",", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"\[Lambda]0", ",", "item"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"item", ",", "\[Lambda]"}], "}"}]}], "]"}], ",", "1"}], 
         "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\[Lambda]", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Rationalize", "[", 
            RowBox[{
             RowBox[{
             "\[Lambda]", "\[LeftDoubleBracket]", "ii", 
              "\[RightDoubleBracket]"}], ",", "0"}], "]"}], ",", 
           RowBox[{"-", 
            RowBox[{"Rationalize", "[", 
             RowBox[{
              RowBox[{
              "\[Lambda]", "\[LeftDoubleBracket]", "ii", 
               "\[RightDoubleBracket]"}], ",", "0"}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"ii", ",", "1", ",", 
           RowBox[{"Length", "[", "\[Lambda]", "]"}], ",", "2"}], "}"}]}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Lambda]Plus", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"\[Lambda]", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", ">", "0"}], ")"}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"B0", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nvar"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"B0", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"alpha", "=", "0"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"coef", "[", 
       RowBox[{"0", ",", "4"}], "]"}], "=", 
      RowBox[{"Kn", " ", 
       RowBox[{"k", "[", "0", "]"}]}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"heat", " ", "flux", " ", "constant"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Ansatz", "[", "x_", "]"}], "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"coef", "[", 
            RowBox[{"jj", ",", "ii"}], "]"}], 
           SuperscriptBox["x", "jj"]}], ",", 
          RowBox[{"{", 
           RowBox[{"jj", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "1", ",", "nvar"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Coefs", "=", 
      RowBox[{"Cases", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"coef", "[", 
              RowBox[{"jj", ",", "ii"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"jj", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"ii", ",", "1", ",", "nvar"}], "}"}]}], "]"}], "]"}], ",", 
        RowBox[{"coef", "[", 
         RowBox[{"_", ",", "_"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Ansatz", "[", "x_", "]"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Ansatz", "[", "x", "]"}], "/.", 
        RowBox[{
         RowBox[{"Solve", "[", 
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"CoefficientList", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"A0", ".", 
                  RowBox[{
                   RowBox[{"Ansatz", "'"}], "[", "x", "]"}]}], "-", 
                 RowBox[{
                  FractionBox["1", "Kn"], 
                  RowBox[{"P0", ".", 
                   RowBox[{"Ansatz", "[", "x", "]"}]}]}], "+", 
                 RowBox[{"alpha", " ", "B0", " ", 
                  SuperscriptBox["x", "2"]}]}], ",", "x"}], "]"}], "]"}], 
             "\[Equal]", "0"}], "]"}], ",", "Coefs"}], "]"}], 
         "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"coef", "[", 
          RowBox[{"_", ",", "_"}], "]"}], "\[Rule]", "0"}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"SymmetryConditions", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "1", ",", 
          RowBox[{"Length", "[", "\[Lambda]", "]"}], ",", "2"}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"jj", "=", "1"}], ";", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"v", "\[LeftDoubleBracket]", 
            RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}], "\[Equal]", 
           "0"}], ",", 
          RowBox[{"jj", "++"}]}], "]"}], ";", 
        RowBox[{
         RowBox[{"SymmetryConditions", "\[LeftDoubleBracket]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"ii", "+", "1"}], ")"}], "/", "2"}], 
          "\[RightDoubleBracket]"}], "=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"k", "[", "ii", "]"}], "\[Rule]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"-", 
              RowBox[{"Sign", "[", 
               FractionBox[
                RowBox[{"v", "\[LeftDoubleBracket]", 
                 RowBox[{
                  RowBox[{"ii", "+", "1"}], ",", "jj"}], 
                 "\[RightDoubleBracket]"}], 
                RowBox[{"v", "\[LeftDoubleBracket]", 
                 RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}]], 
               "]"}]}], ")"}], 
            RowBox[{"k", "[", 
             RowBox[{"ii", "+", "1"}], "]"}]}]}], ")"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"ii", ",", "1", ",", 
         RowBox[{"Length", "[", "\[Lambda]", "]"}], ",", "2"}], "}"}]}], 
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"solution", "=", 
      RowBox[{"ExpToTrig", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"C0", " ", "B0"}], "+", 
          RowBox[{"Ansatz", "[", "x", "]"}], "+", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"k", "[", "ii", "]"}], " ", 
             RowBox[{
             "v", "\[LeftDoubleBracket]", "ii", "\[RightDoubleBracket]"}], 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{
               "\[Lambda]", "\[LeftDoubleBracket]", "ii", 
                "\[RightDoubleBracket]"}], 
               FractionBox["x", "Kn"]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"ii", ",", "1", ",", 
              RowBox[{"Length", "[", "\[Lambda]", "]"}]}], "}"}]}], "]"}]}], "/.",
          "SymmetryConditions"}], "/.", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"k", "[", "ii", "]"}], "\[Rule]", 
           RowBox[{"k", "[", 
            RowBox[{"ii", "/", "2"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"ii", ",", "1", ",", 
            RowBox[{"Length", "[", "\[Lambda]", "]"}]}], "}"}]}], "]"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"res", "=", 
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"\[Alpha]", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", 
             RowBox[{"nvar", "-", "1"}]}], "}"}]}], "]"}], "\[Rule]", 
         "solution"}], "/.", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"k", "[", "ii", "]"}], "\[Rule]", 
           RowBox[{
            RowBox[{"k", "[", "ii", "]"}], 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{
               "\[Lambda]Plus", "\[LeftDoubleBracket]", "ii", 
                "\[RightDoubleBracket]"}]}], 
              FractionBox[
               RowBox[{"1", "/", "2"}], "Kn"]}], "]"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"ii", ",", "1", ",", 
            RowBox[{"Length", "[", "\[Lambda]Plus", "]"}]}], "}"}]}], "]"}]}],
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"bc", "=", "bcinput"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"bcEqn", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
            "bc", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{
               RowBox[{"nvar", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}], "/.",
           "res"}], "/.", 
         RowBox[{"{", 
          RowBox[{"x", "\[Rule]", 
           RowBox[{"1", "/", "2"}]}], "}"}]}], "/.", 
        RowBox[{"{", 
         RowBox[{"\[Beta]1", "\[Rule]", 
          RowBox[{
           SqrtBox[
            RowBox[{"\[Pi]", "/", "2"}]], 
           FractionBox[
            RowBox[{"2", "-", "\[Chi]"}], 
            RowBox[{"2", "\[Chi]"}]]}]}], "}"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{"\[Chi]", "\[Rule]", "1"}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"solBC", "=", 
      RowBox[{
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{"Thread", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"bcEqn", "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Kn", "\[Rule]", "kn"}], ",", 
               RowBox[{"\[Theta]W", "\[Rule]", "thetaw"}]}], "}"}]}], ")"}], 
           "\[Equal]", "0"}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"k", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", 
             RowBox[{
              FractionBox["nvar", "2"], "-", "2"}]}], "}"}]}], "]"}]}], "]"}],
        "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"\[Alpha]", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", 
             RowBox[{"nvar", "-", "1"}]}], "}"}]}], "]"}], "/.", "res"}], "/.",
         "solBC"}], "/.", 
       RowBox[{"{", 
        RowBox[{"Kn", "\[Rule]", "kn"}], "}"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"var", "/.", "res"}], "/.", "solBC"}], "/.", 
      RowBox[{"{", 
       RowBox[{"Kn", "\[Rule]", "kn"}], "}"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.6228296160769024`*^9, {3.622830236495241*^9, 3.6228303173461094`*^9}, {
   3.6228304999537735`*^9, 3.622830500750301*^9}, {3.6228305351492214`*^9, 
   3.6228305385484877`*^9}, {3.622830914410901*^9, 3.6228309159479322`*^9}, {
   3.622831053369502*^9, 3.622831113654648*^9}, {3.6228312114888387`*^9, 
   3.6228312528944254`*^9}, {3.622831287909753*^9, 3.6228312965985365`*^9}, {
   3.62283152956275*^9, 3.6228315297758975`*^9}, {3.622831659283183*^9, 
   3.6228316812588224`*^9}, {3.6228685635597057`*^9, 
   3.6228685902384806`*^9}, {3.62286877419366*^9, 3.6228688369744883`*^9}, {
   3.622868877312357*^9, 3.62286887819195*^9}, {3.6228693449569316`*^9, 
   3.6228693528021617`*^9}, {3.6228694343194666`*^9, 
   3.6228694447754326`*^9}, {3.6228695731209517`*^9, 3.6228696207686963`*^9}, 
   3.62286965928335*^9, {3.622869696877404*^9, 3.622869729443102*^9}, {
   3.622869783527135*^9, 3.6228698499724045`*^9}, {3.622869899762577*^9, 
   3.6228699120937915`*^9}, {3.622869974559411*^9, 3.6228700014543304`*^9}, {
   3.6228705898873787`*^9, 3.6228705981779013`*^9}, 3.6228713179061813`*^9, {
   3.6228726464343204`*^9, 3.622872678838905*^9}, {3.6228727157444983`*^9, 
   3.622872730590391*^9}, {3.6228728800949926`*^9, 3.622872904097985*^9}, {
   3.62287519051233*^9, 3.6228752508405247`*^9}, {3.62287557549482*^9, 
   3.6228756178690596`*^9}, 3.6228757377078953`*^9, {3.622902664837407*^9, 
   3.6229026923817596`*^9}, {3.68622658544873*^9, 3.686226585639423*^9}, {
   3.686226865073724*^9, 3.686226907527413*^9}, {3.686227457931634*^9, 
   3.686227461899598*^9}, {3.686227554137363*^9, 3.68622756250371*^9}, {
   3.68622764232582*^9, 3.6862276466264563`*^9}, {3.6862276840040417`*^9, 
   3.686227684347168*^9}, {3.6862952751057796`*^9, 3.686295280680399*^9}, {
   3.686295471881777*^9, 3.6862954745590353`*^9}, 3.68629794212927*^9, {
   3.6863056832808943`*^9, 3.686305801290152*^9}, {3.686920672042214*^9, 
   3.68692070234408*^9}, 3.686920755588421*^9, {3.687088643306377*^9, 
   3.68708865861909*^9}, {3.687088921758306*^9, 3.68708894009206*^9}, {
   3.687097151152816*^9, 3.6870971583865833`*^9}, {3.687098517320478*^9, 
   3.687098523242244*^9}, {3.6991235761160297`*^9, 3.699123643420726*^9}, {
   3.6991237524031343`*^9, 3.699123782705226*^9}, {3.699615266734057*^9, 
   3.699615289250352*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["returns the distribution function", "Subsection",
 CellChangeTimes->{{3.686920605826126*^9, 3.686920611440817*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"flag", " ", "=", " ", 
     RowBox[{"0", " ", "for", " ", "unstable"}]}], ",", " ", 
    RowBox[{"flag", " ", "\[Equal]", " ", 
     RowBox[{"1", " ", "for", " ", "stable"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Getf", "[", 
     RowBox[{"nvar_", ",", "kn_", ",", "thetaw_", ",", "flag_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\[Lambda]0", ",", "\[Lambda]", ",", "\[Lambda]Plus", ",", "v", ",", 
        "vv", ",", "B0", ",", "alpha", ",", "coef", ",", "Kn", ",", "vW", ",",
         "k", ",", "Ansatz", ",", "Coefs", ",", "SymmetryConditions", ",", 
        "solution", ",", "res", ",", "bcEqn", ",", "solBC", ",", "bc0", ",", 
        "result"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"A0", "=", 
        RowBox[{"AA", "[", "nvar", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"P0", "=", 
        RowBox[{"SparseArray", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i_", ",", "i_"}], "}"}], "\[Rule]", 
            RowBox[{"-", "1"}]}], "}"}], ",", "nvar"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"P0", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "=", "0"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"P0", "\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "=", "0"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"P0", "\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}], "=", "0"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Lambda]0", ",", "vv"}], "}"}], "=", 
        RowBox[{"Eigensystem", "[", 
         RowBox[{"{", 
          RowBox[{"P0", ",", 
           RowBox[{"1.0", "A0"}]}], "}"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Lambda]", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"\[Lambda]0", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"0", "<", 
             RowBox[{"Abs", "[", "#", "]"}], "<", "\[Infinity]"}], ")"}], 
           "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"v", "=", 
        RowBox[{"Extract", "[", 
         RowBox[{"vv", ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Position", "[", 
               RowBox[{"\[Lambda]0", ",", "item"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"item", ",", "\[Lambda]"}], "}"}]}], "]"}], ",", "1"}],
            "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Lambda]", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Rationalize", "[", 
              RowBox[{
               RowBox[{
               "\[Lambda]", "\[LeftDoubleBracket]", "ii", 
                "\[RightDoubleBracket]"}], ",", "0"}], "]"}], ",", 
             RowBox[{"-", 
              RowBox[{"Rationalize", "[", 
               RowBox[{
                RowBox[{
                "\[Lambda]", "\[LeftDoubleBracket]", "ii", 
                 "\[RightDoubleBracket]"}], ",", "0"}], "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"ii", ",", "1", ",", 
             RowBox[{"Length", "[", "\[Lambda]", "]"}], ",", "2"}], "}"}]}], 
          "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Lambda]Plus", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"\[Lambda]", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", ">", "0"}], ")"}], "&"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"B0", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "nvar"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"B0", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"alpha", "=", "0"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"coef", "[", 
         RowBox[{"0", ",", "4"}], "]"}], "=", 
        RowBox[{"Kn", " ", 
         RowBox[{"k", "[", "0", "]"}]}]}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"heat", " ", "flux", " ", "constant"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Ansatz", "[", "x_", "]"}], "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"coef", "[", 
              RowBox[{"jj", ",", "ii"}], "]"}], 
             SuperscriptBox["x", "jj"]}], ",", 
            RowBox[{"{", 
             RowBox[{"jj", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"ii", ",", "1", ",", "nvar"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Coefs", "=", 
        RowBox[{"Cases", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"coef", "[", 
                RowBox[{"jj", ",", "ii"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"jj", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"ii", ",", "1", ",", "nvar"}], "}"}]}], "]"}], "]"}], 
          ",", 
          RowBox[{"coef", "[", 
           RowBox[{"_", ",", "_"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Ansatz", "[", "x_", "]"}], "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Ansatz", "[", "x", "]"}], "/.", 
          RowBox[{
           RowBox[{"Solve", "[", 
            RowBox[{
             RowBox[{"Thread", "[", 
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{"CoefficientList", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"A0", ".", 
                    RowBox[{
                    RowBox[{"Ansatz", "'"}], "[", "x", "]"}]}], "-", 
                   RowBox[{
                    FractionBox["1", "Kn"], 
                    RowBox[{"P0", ".", 
                    RowBox[{"Ansatz", "[", "x", "]"}]}]}], "+", 
                   RowBox[{"alpha", " ", "B0", " ", 
                    SuperscriptBox["x", "2"]}]}], ",", "x"}], "]"}], "]"}], 
               "\[Equal]", "0"}], "]"}], ",", "Coefs"}], "]"}], 
           "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"coef", "[", 
            RowBox[{"_", ",", "_"}], "]"}], "\[Rule]", "0"}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"SymmetryConditions", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"ii", ",", "1", ",", 
            RowBox[{"Length", "[", "\[Lambda]", "]"}], ",", "2"}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"jj", "=", "1"}], ";", 
          RowBox[{"While", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"v", "\[LeftDoubleBracket]", 
              RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}], 
             "\[Equal]", "0"}], ",", 
            RowBox[{"jj", "++"}]}], "]"}], ";", 
          RowBox[{
           RowBox[{"SymmetryConditions", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"ii", "+", "1"}], ")"}], "/", "2"}], 
            "\[RightDoubleBracket]"}], "=", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"k", "[", "ii", "]"}], "\[Rule]", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"-", 
                RowBox[{"Sign", "[", 
                 FractionBox[
                  RowBox[{"v", "\[LeftDoubleBracket]", 
                   RowBox[{
                    RowBox[{"ii", "+", "1"}], ",", "jj"}], 
                   "\[RightDoubleBracket]"}], 
                  RowBox[{"v", "\[LeftDoubleBracket]", 
                   RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}]], 
                 "]"}]}], ")"}], 
              RowBox[{"k", "[", 
               RowBox[{"ii", "+", "1"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"ii", ",", "1", ",", 
           RowBox[{"Length", "[", "\[Lambda]", "]"}], ",", "2"}], "}"}]}], 
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"solution", "=", 
        RowBox[{"ExpToTrig", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"C0", " ", "B0"}], "+", 
            RowBox[{"Ansatz", "[", "x", "]"}], "+", 
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"k", "[", "ii", "]"}], " ", 
               RowBox[{
               "v", "\[LeftDoubleBracket]", "ii", "\[RightDoubleBracket]"}], 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{
                 "\[Lambda]", "\[LeftDoubleBracket]", "ii", 
                  "\[RightDoubleBracket]"}], 
                 FractionBox["x", "Kn"]}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"ii", ",", "1", ",", 
                RowBox[{"Length", "[", "\[Lambda]", "]"}]}], "}"}]}], "]"}]}],
            "/.", "SymmetryConditions"}], "/.", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"k", "[", "ii", "]"}], "\[Rule]", 
             RowBox[{"k", "[", 
              RowBox[{"ii", "/", "2"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"ii", ",", "1", ",", 
              RowBox[{"Length", "[", "\[Lambda]", "]"}]}], "}"}]}], "]"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"res", "=", 
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"\[Alpha]", "[", "i", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "0", ",", 
               RowBox[{"nvar", "-", "1"}]}], "}"}]}], "]"}], "\[Rule]", 
           "solution"}], "/.", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"k", "[", "ii", "]"}], "\[Rule]", 
             RowBox[{
              RowBox[{"k", "[", "ii", "]"}], 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{
                 "\[Lambda]Plus", "\[LeftDoubleBracket]", "ii", 
                  "\[RightDoubleBracket]"}]}], 
                FractionBox[
                 RowBox[{"1", "/", "2"}], "Kn"]}], "]"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"ii", ",", "1", ",", 
              RowBox[{"Length", "[", "\[Lambda]Plus", "]"}]}], "}"}]}], 
           "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"flag", "\[Equal]", "0"}], ",", 
         RowBox[{"bc0", "=", 
          RowBox[{"ConstructStableBC", "[", 
           RowBox[{"nvar", ",", "0"}], "]"}]}], ",", 
         RowBox[{"bc0", "=", 
          RowBox[{"ConstructStableBC", "[", 
           RowBox[{"nvar", ",", "1"}], "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"bcEqn", "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
              "bc0", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{
                 RowBox[{"nvar", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}], "/.",
             "res"}], "/.", 
           RowBox[{"{", 
            RowBox[{"x", "\[Rule]", 
             RowBox[{"1", "/", "2"}]}], "}"}]}], "/.", 
          RowBox[{"{", 
           RowBox[{"\[Beta]1", "\[Rule]", 
            RowBox[{
             SqrtBox[
              RowBox[{"\[Pi]", "/", "2"}]], 
             FractionBox[
              RowBox[{"2", "-", "\[Chi]"}], 
              RowBox[{"2", "\[Chi]"}]]}]}], "}"}]}], "/.", 
         RowBox[{"{", 
          RowBox[{"\[Chi]", "\[Rule]", "1"}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"solBC", "=", 
        RowBox[{
         RowBox[{"Solve", "[", 
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"bcEqn", "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Kn", "\[Rule]", "kn"}], ",", 
                 RowBox[{"\[Theta]W", "\[Rule]", "thetaw"}]}], "}"}]}], ")"}],
              "\[Equal]", "0"}], "]"}], ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"k", "[", "i", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "0", ",", 
               RowBox[{
                FractionBox["nvar", "2"], "-", "2"}]}], "}"}]}], "]"}]}], 
          "]"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"\[Alpha]", "[", "i", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "0", ",", 
               RowBox[{"nvar", "-", "1"}]}], "}"}]}], "]"}], "/.", "res"}], "/.",
           "solBC"}], "/.", 
         RowBox[{"{", 
          RowBox[{"Kn", "\[Rule]", "kn"}], "}"}]}], "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"res", "/.", "solBC"}], "/.", 
        RowBox[{"{", 
         RowBox[{"Kn", "\[Rule]", "kn"}], "}"}]}]}]}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{
  3.6228296160769024`*^9, {3.622830236495241*^9, 3.6228303173461094`*^9}, {
   3.6228304999537735`*^9, 3.622830500750301*^9}, {3.6228305351492214`*^9, 
   3.6228305385484877`*^9}, {3.622830914410901*^9, 3.6228309159479322`*^9}, {
   3.622831053369502*^9, 3.622831113654648*^9}, {3.6228312114888387`*^9, 
   3.6228312528944254`*^9}, {3.622831287909753*^9, 3.6228312965985365`*^9}, {
   3.62283152956275*^9, 3.6228315297758975`*^9}, {3.622831659283183*^9, 
   3.6228316812588224`*^9}, {3.6228685635597057`*^9, 
   3.6228685902384806`*^9}, {3.62286877419366*^9, 3.6228688369744883`*^9}, {
   3.622868877312357*^9, 3.62286887819195*^9}, {3.6228693449569316`*^9, 
   3.6228693528021617`*^9}, {3.6228694343194666`*^9, 
   3.6228694447754326`*^9}, {3.6228695731209517`*^9, 3.6228696207686963`*^9}, 
   3.62286965928335*^9, {3.622869696877404*^9, 3.622869729443102*^9}, {
   3.622869783527135*^9, 3.6228698499724045`*^9}, {3.622869899762577*^9, 
   3.6228699120937915`*^9}, {3.622869974559411*^9, 3.6228700014543304`*^9}, {
   3.6228705898873787`*^9, 3.6228705981779013`*^9}, 3.6228713179061813`*^9, {
   3.6228726464343204`*^9, 3.622872678838905*^9}, {3.6228727157444983`*^9, 
   3.622872730590391*^9}, {3.6228728800949926`*^9, 3.622872904097985*^9}, {
   3.62287519051233*^9, 3.6228752508405247`*^9}, {3.62287557549482*^9, 
   3.6228756178690596`*^9}, 3.6228757377078953`*^9, {3.622902664837407*^9, 
   3.6229026923817596`*^9}, {3.68622658544873*^9, 3.686226585639423*^9}, {
   3.686226865073724*^9, 3.686226907527413*^9}, {3.686227457931634*^9, 
   3.686227461899598*^9}, {3.686227554137363*^9, 3.68622756250371*^9}, {
   3.68622764232582*^9, 3.6862276466264563`*^9}, {3.6862276840040417`*^9, 
   3.686227684347168*^9}, {3.6862952751057796`*^9, 3.686295280680399*^9}, {
   3.686295471881777*^9, 3.6862954745590353`*^9}, 3.68629794212927*^9, {
   3.6863056832808943`*^9, 3.686305801290152*^9}, {3.6869206255291452`*^9, 
   3.6869206307975693`*^9}, {3.686920734751566*^9, 3.6869208033841467`*^9}, {
   3.68692098095687*^9, 3.6869209843148727`*^9}, {3.686921060148031*^9, 
   3.686921064075239*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Acceleration", "Section",
 CellChangeTimes->{{3.6926880370763273`*^9, 3.692688039744006*^9}}],

Cell[CellGroupData[{

Cell["Accelerate series expansion", "Subsection",
 CellChangeTimes->{{3.6808882566305523`*^9, 3.680888263939707*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "gives", " ", "the", " ", "output", " ", "of", " ", "accelerated", " ", 
    "series"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"CreateAcc", "[", "list_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"size", ",", "Sn", ",", "result"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"size", " ", "=", " ", 
       RowBox[{"Length", "[", "list", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "binomial", " ", "series", " ", "corresponding", " ", "to", " ", 
        "each", " ", "term"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Sn", " ", "=", " ", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", "size"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
         "Sn", "\[LeftDoubleBracket]", "ii", "\[RightDoubleBracket]"}], "=", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], 
             RowBox[{"jj", "-", "1"}]], 
            RowBox[{"Binomial", "[", 
             RowBox[{
              RowBox[{"ii", "-", "1"}], ",", 
              RowBox[{"jj", "-", "1"}]}], "]"}], 
            RowBox[{"list", "\[LeftDoubleBracket]", 
             RowBox[{"ii", "-", "jj", "+", "1"}], "\[RightDoubleBracket]"}]}],
            ",", 
           RowBox[{"{", 
            RowBox[{"jj", ",", "1", ",", "ii"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "1", ",", "size"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"result", " ", "=", " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"ii", "-", "1"}]], 
          FractionBox[
           RowBox[{
           "Sn", "\[LeftDoubleBracket]", "ii", "\[RightDoubleBracket]"}], 
           SuperscriptBox["2", "ii"]]}], ",", 
         RowBox[{"{", 
          RowBox[{"ii", ",", "1", ",", "size"}], "}"}]}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6808882665473337`*^9, 3.6808883211890593`*^9}, {
  3.680888407185314*^9, 3.680888444289887*^9}, {3.680888495398877*^9, 
  3.680888522740265*^9}, {3.680888626559718*^9, 3.6808886903183327`*^9}, {
  3.6808887370267773`*^9, 3.6808887499097157`*^9}, {3.680888808088881*^9, 
  3.6808888870881367`*^9}, {3.68088905706431*^9, 3.680889072313017*^9}, {
  3.6808893787501793`*^9, 3.6808893791337643`*^9}, {3.6808896784056787`*^9, 
  3.680889737998189*^9}, {3.680890252648815*^9, 3.6808902978842688`*^9}, {
  3.6808904217280903`*^9, 3.6808904300587673`*^9}, {3.680962287850493*^9, 
  3.6809622941441097`*^9}, {3.680962357076384*^9, 3.6809623816604853`*^9}, {
  3.681022477588608*^9, 3.6810225135470324`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "coeffs of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "k"], TraditionalForm]]]
}], "Subsubsection",
 CellChangeTimes->{{3.681022546937251*^9, 3.68102255350744*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "in", " ", "the", " ", "following", " ", "routine", " ", "we", " ", 
      "compute", " ", "the", " ", "coefficients", " ", "of", " ", 
      SubscriptBox["a", "k"], "\[IndentingNewLine]", "N"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"total", " ", "terms"}], "-", "1"}]}], ",", " ", 
    RowBox[{"r", " ", "=", " ", "k"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Coeffak", "[", 
     RowBox[{"N_", ",", "r_"}], "]"}], ":=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "r"], 
     RowBox[{"Sum", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"Binomial", "[", 
         RowBox[{
          RowBox[{"N", "-", "j"}], ",", 
          RowBox[{"N", "-", "r", "-", "j"}]}], "]"}], 
        SuperscriptBox["2", 
         RowBox[{"N", "-", "j", "+", "1"}]]], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", 
         RowBox[{"N", "-", "r"}]}], "}"}]}], "]"}]}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.681022556441678*^9, 3.681022661143631*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Averaging factor", "Subsubsection",
 CellChangeTimes->{{3.681022881472711*^9, 3.6810228847562723`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "the", " ", "following", " ", "is", " ", "the", " ", "factor", " ", 
    "which", " ", "should", " ", "be", " ", "used", " ", "while", " ", 
    "averagin", " ", "the", " ", "final", " ", "result", " ", "of", " ", 
    "the", " ", "accelerated", " ", "series"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"CoeffAvg", "[", "N_", "]"}], ":=", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{"Coeffak", "[", 
        RowBox[{"N", ",", "r"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "0", ",", "N"}], "}"}]}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.68102288730783*^9, 3.681022961474147*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Accelerated solution", "Subsection",
 CellChangeTimes->{{3.681023652458089*^9, 3.681023656217688*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AccSolution", "[", "list_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ak", ",", "AccSol"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ak", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"ii", "-", "1"}]], 
         RowBox[{
         "list", "\[LeftDoubleBracket]", "ii", "\[RightDoubleBracket]"}]}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "1", ",", 
          RowBox[{"Length", "[", "list", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AccSol", " ", "=", " ", 
      FractionBox[
       RowBox[{"CreateAcc", "[", "ak", "]"}], 
       RowBox[{"CoeffAvg", "[", 
        RowBox[{
         RowBox[{"Length", "[", "list", "]"}], "-", "1"}], "]"}]]}], ";", 
     "\[IndentingNewLine]", "AccSol"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.681023658524727*^9, 3.681023674463235*^9}, {
  3.681023830813908*^9, 3.681023953839364*^9}, {3.681024200609177*^9, 
  3.681024205340337*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Discrete Velocity Solution", "Section",
 CellChangeTimes->{{3.687069996667157*^9, 3.687070002073213*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Array\[Theta]", "[", 
    RowBox[{"gaussloc_", ",", "gaussW_"}], "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
      "gaussW", "\[LeftDoubleBracket]", "ii", "\[RightDoubleBracket]"}], 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{
         "gaussloc", "\[LeftDoubleBracket]", "ii", "\[RightDoubleBracket]"}], 
         "2"], "-", "1"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "1", ",", 
       RowBox[{"Length", "[", "gaussW", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input"],

Cell[CellGroupData[{

Cell["Kn 0.1", "Subsection",
 CellChangeTimes->{{3.6870700229474487`*^9, 3.687070024816761*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"exactfKn0p1", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\</Users/neerajsarna/sciebo/DG_moments_deal/Results/Results_Discrete_\
Velocity/1D_Heat_Conduction/Kn0p1/fx199c80.dat\>\"", ",", "\"\<Table\>\""}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IDpointsx", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IDpointsc", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IDdata", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pointscKn0p1", "=", 
   RowBox[{"exactfKn0p1", "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", "IDpointsc"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pointsxKn0p1", "=", 
   RowBox[{"exactfKn0p1", "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", "IDpointsx"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]Kn0p1", "=", 
    RowBox[{"Interpolation", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"exactfKn0p1", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{
              RowBox[{"pointscKn0p1", "*", 
               RowBox[{"(", 
                RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", "1"}], 
             ",", "1"}], "\[RightDoubleBracket]"}], "-", "0.5"}], ",", 
          RowBox[{
           RowBox[{"Array\[Theta]", "[", 
            RowBox[{
             RowBox[{"exactfKn0p1", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"pointscKn0p1", "*", 
                  RowBox[{"(", 
                   RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", 
                 "1"}], ";;", 
                RowBox[{
                 RowBox[{"pointscKn0p1", "*", 
                  RowBox[{"(", 
                   RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", 
                 "pointscKn0p1"}]}], ",", "2"}], "\[RightDoubleBracket]"}], 
             ",", 
             RowBox[{"exactfKn0p1", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"pointscKn0p1", "*", 
                  RowBox[{"(", 
                   RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", 
                 "1"}], ";;", 
                RowBox[{
                 RowBox[{"pointscKn0p1", "*", 
                  RowBox[{"(", 
                   RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", 
                 "pointscKn0p1"}]}], ",", "3"}], "\[RightDoubleBracket]"}]}], 
            "]"}], ".", 
           RowBox[{"exactfKn0p1", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"pointscKn0p1", "*", 
                RowBox[{"(", 
                 RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", "1"}],
               ";;", 
              RowBox[{
               RowBox[{"pointscKn0p1", "*", 
                RowBox[{"(", 
                 RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", 
               "pointscKn0p1"}]}], ",", "4"}], "\[RightDoubleBracket]"}]}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "1", ",", "pointsxKn0p1"}], "}"}]}], "]"}], ",", 
      RowBox[{"InterpolationOrder", "\[Rule]", "3"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fKn0p1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Interpolation", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"exactfKn0p1", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{
              RowBox[{"pointscKn0p1", "*", 
               RowBox[{"(", 
                RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", "jj"}],
              ",", "2"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"exactfKn0p1", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{
              RowBox[{"pointscKn0p1", "*", 
               RowBox[{"(", 
                RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", "jj"}],
              ",", "4"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"jj", ",", "1", ",", "pointscKn0p1"}], "}"}]}], "]"}], ",", 
       RowBox[{"InterpolationOrder", "\[Rule]", "3"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "1", ",", "pointsxKn0p1"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.687070031940056*^9, 3.687070104057028*^9}, {
   3.687070177796228*^9, 3.6870701836603823`*^9}, {3.687070223530093*^9, 
   3.68707024389957*^9}, {3.6870703512978992`*^9, 3.687070599024043*^9}, {
   3.68707156124471*^9, 3.687071688196267*^9}, {3.687071724654984*^9, 
   3.687071736030265*^9}, {3.6870719007480097`*^9, 3.687071901643821*^9}, {
   3.687071942274246*^9, 3.6870720313656797`*^9}, 3.687072068616156*^9, {
   3.687072115026174*^9, 3.687072116939443*^9}, {3.6870721570945063`*^9, 
   3.687072164791939*^9}, {3.691808530945895*^9, 3.6918085325464497`*^9}, {
   3.6918215954714737`*^9, 3.691821600913887*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Theta]Kn0p1", "[", "x", "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "fKn0p1", "\[LeftDoubleBracket]", "12", "\[RightDoubleBracket]"}], "[", 
     "x", "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6870717387885513`*^9, 3.687071746153316*^9}, {
  3.687071885773807*^9, 3.6870719090639763`*^9}, {3.687072174934196*^9, 
  3.687072250381998*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], ":", 
  " ", "\<\"Input value \[NoBreak]\\!\\({\\(-0.4999795714285714`\\)}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{
  3.687159825683627*^9, 3.687160089225143*^9, 3.687160758948711*^9, 
   3.687183754550873*^9, {3.691808360290559*^9, 3.691808375548518*^9}, 
   3.6918085402541943`*^9, 3.691821606599951*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1: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
LQz8/19gVMRy4wYx8D8GZnTw
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{Medium, FontFamily -> "Helvetica"},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->600,
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-0.5, 0.5}, {-0.7907195170778465, 0.7907110380968123}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.687071891405633*^9, 3.68707190930015*^9}, {
   3.6870722010856247`*^9, 3.687072250769496*^9}, 3.687159825804872*^9, 
   3.6871600893282633`*^9, 3.687160758960047*^9, 3.6871837545622463`*^9, {
   3.691808360509433*^9, 3.6918083757613773`*^9}, 3.691808540264076*^9, 
   3.691821606608865*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], ":", 
  " ", "\<\"Input value \[NoBreak]\\!\\({\\(-9.99959142857143`\\)}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{
  3.687159825683627*^9, 3.687160089225143*^9, 3.687160758948711*^9, 
   3.687183754550873*^9, {3.691808360290559*^9, 3.691808375548518*^9}, 
   3.6918085402541943`*^9, 3.691821606676198*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1:eJxN23k0VV/YOPDrknm4LtcQlcwRSUjk7l2ZqYgoKfMQypy5iCgkU2SWhKQM
yZTuPiEZCiGZ55DKnDle71rv7+t3/jnrs/aznvPs5+xz1tprnXPQ0vmCDR6H
w52gxuH+9xwweXZhe1sIw/3f4ZHF87dvc9dOV8dWytd2bdrh/c95cdcn0TP6
4Yldryes7ce+7Npb/blOYMr/l//5Zjbu+K6doe0x3quC/7mYzuVmVszB/+wT
8cXmUJPAfw7vbnaNHjvwn4sWTroWnt//nwfrhcS3kvj/My9nibHm773/ebQy
cNj9Cu9/fsP7UaA1j/s/E9u1qpg4uP5zAPWtz2fucf5niYhUx3u3d91NrGX8
5LVrOUGClrbDrn/D/I9653dtcnuQcpV31wpr6sVerzj+83jgDb3KnF3H0sfP
rmfs+g/3iNTt2F1nK/jlh3jtmsOj8FnMqV1jG99Odyjt+mbw5gin3K6bYrUE
noju2nuvC+o5sGvRrIRrfLy77jz0/p8pkQPrbPCJley3Jd8tHktNZ+LA3v+9
2fJi+C5Z5gTjyWEaDkyg8WPQ5NYj8iAm03dwi4jJW6vlCIUkkE+0BfA+nyNi
4oXbiemvnpLnZrgTXn4jYmWZ61jNwCsyzvtZlXkrEdtOGzT2Uy0iE6iODJEa
iZjiJ22ejEfFZBkOdfHAaiJGQzdy8wW+lAxTv+rKlxGxH02Xa7LE35L1RK66
ThcSsfU638s6sIzsctyjyvAZEbtcduFLK6wgB2LbgwxpRGzJ5JIdRaySHK0V
QY0SiJhl9DMUtFlJzmznEveIJmLqr/rkhChV5KIrWbqHwonYOfo8kQLHd2Rs
XMp1MJiI7VstnBOhqSa33ah8HBdAxK50JC8lhVaTh5dVqzS9iFjpHFs0+0I1
ee5O2+A/FyLWnFN2MEHtPRnHYEr9xoGI6egq0B8NfE8mxE6K2VsTsb7jClm/
Mt+TBfjcdfddI2IHsavnWnPek2Wyt1zajYnYR2VDxx/R78lQKvxxmD4Rc6X6
YHz82nuyXhmp6qTOTn47HbcWlvdkc/B0cF6ViPl9TOYtTa8muzQcps4lE7FD
rkYF82zV5ED9CjFTRSIW8EHkQbT5O3J07xlddlkitp+liDX5URU506rVpV5y
p/781BTu1Epy0W+Tx34iRGxyLjaKeK+CjHlOVMocIGJmCkrq8Vrl5LYt18Ef
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
tYEf3DmhN3/6QdE7oxS5vlm6t5Gc8EaT+OUL2kMUaZp3P+djOeEf9Soq0sIA
RVwqtFk66X/zJ5lvPu2n8N3hf5T3nBNa51lKTvH2UvBCWlypFE54/hiX6abd
N8qmDudqdx0nNNCl2//qXCdl2WOoh9TMCYu9IhyGT3ZQftZ7pj36zgnzm50f
Bhz5ShmdhXc+D3BCDeORbsqxNko/D7MFwzgnVL7FLmt1u4XS5pAlHDzHCaef
Ha8t7WqiNMXdoMWWOeFS61FKK3cjpa5acWpzkxO2Kw7cemn7iVLO2vryFgMJ
Gpx9+BcvVUdJL9mQdRAkQe4Xbr/vFVZTnvTVc+aKk6Cgl+blnzRVlFia2OUx
aRJkn02IVXMvp9wzEq+6qkyCpL/iHNlJJZTbdxZTkk+RoCxbiTSNfhHFO48S
8F2DBMe/Bdw+CgsoTuuGp/QNSVCCarBVnj6bYiskIBRlQoJsDwvzPstkUsx1
f9E0m5Oga7KKTxhzEsXEs2yCzo4ErVJG0TxbLMUgPahB9QYJnnYqSRH7FkrR
/aSbH+ROgpG0JdLPnTwo6nPckRQfEhxbrBhgUNIkQ96xGxt3SHCl29w07cEt
stLp1+cVQ0nwFH7f4BWrELKco89Rz0gSlN5mvtw/GkmWjlflKIklwTl6BRE3
q1iy+Hu2vzNPSNB/qX0mmCGBfHCit0sygwT38HJk3LBJIu9ly6mwf06CXucK
dNa8U8mciq7Jz1+SYJSTIeO8WgaZ1eKk/2gxCTI9N/dmm8wk04fTXTtQsXM9
M8PwHIYsMv5NOzClkOAlveGPWUzPyJt9aQeT6kjwmPWQ/M8/z8jLNNepu5pI
0Dr08I9rxdnkWSm5H8SvO/VkZQ1OGT0nTxlt15//ToKq2fxSTkPPyaN3mvIi
B3b65+XZ90Unh9yf9zi8cYwEH9PdX1pIzSF3fTV3op3euR48Eox15JCnhM49
apojwbdLwyIeCznkNU/lkqgVEqyWI+pfWcohMzaIf7uwRYK5lwQMk3tzyPx7
uVa59nDBlAr72xdzcsjSTtR8fUxcsLVA80DxpRwypMypZBC5oNfDfaFfF56T
LxAGza14ueCnElV8n+dzspVlc7CYABek9+Qbmx/NJnuUVuT8EuWCVw9veykp
Z5NDaXMaC6W44IDMWULPnWfkJ5fifrvLccG2XsuN+eIscn5+IJuiMhd0vJt2
/0X7U3L15g3ZzVNccPSOCZ3wWCb5y7krFzFNLshvPPOQqTGDPLcgn6JpxAWD
+h5ECgSkkPFqQhTmq1zQ8LqFFvWxJDJHImGkzYoLniCN4b93JJAVlH+JXnbl
grfCWifch2LImg+7tfZ5c0HJq2ZpqWlRZJOhj04jt7kgq4OWqbf1A3JAcGbJ
9UguGB02rNThE0CO+vbwm1Tczvyzj8ifKXQjZ4r5rc4nccE/LH9/SNqakUt8
7PnKMrng//vevK75Itk3d9dd+85YkF/vetJZJgT/dteMnExN4TW75rdd/X2u
cddSFT/YONp2rWeKXUwZ2HVitufIy9VdC8sPr36W5v7PZKO3Ymwpu57JUflo
9nTXaSsfLYtyd735pCtNv3TXlX0rHPFfdi1noYTjxfH8Zwkn1C1os2vuu40P
FI7w/uefi3Zy0j/2/ufXv6/ZSsTx/+cfkSSgJrz/P3O6G5nLfD/wn68ESnKm
lQn85xzGbuXsgIP/+U95Y1jcRcH//FuRT4x4QGg3nlpz8LHgrs1bPB7ziu76
m1UL9UGpXVOigoaPKO86enwy6azxruWiS5kfPNr1jMlILXPcrvNEWP2iE3a9
753dz8S0XdNO7K3PebnrbuWgO3Wfdh1L+1pBs3nXul97/zS37PqDrZxpx7dd
58dMKo6O7dralHPOZnLXB8RO5f6c3nV8dTJpfn7X58I+ffb4u2v6C0vBq6u7
ruE/qOy/uev/+//mP/8POkv0SQ==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{Medium, FontFamily -> "Helvetica"},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->600,
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-10, 10}, {-0.030443706318628656`, 0.4474637676632873}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.687071891405633*^9, 3.68707190930015*^9}, {
   3.6870722010856247`*^9, 3.687072250769496*^9}, 3.687159825804872*^9, 
   3.6871600893282633`*^9, 3.687160758960047*^9, 3.6871837545622463`*^9, {
   3.691808360509433*^9, 3.6918083757613773`*^9}, 3.691808540264076*^9, 
   3.691821606716523*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.68707169991311*^9, 3.687071722306747*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Kn 1.0", "Subsection",
 CellChangeTimes->{{3.6870700229474487`*^9, 3.687070024816761*^9}, {
  3.687072306761895*^9, 3.68707230706765*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"exactfKn1p0", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\</Users/neerajsarna/sciebo/DG_moments_deal/Results/Results_Discrete_\
Velocity/1D_Heat_Conduction/Kn1p0/fx199c80.dat\>\"", ",", "\"\<Table\>\""}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IDpointsx", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IDpointsc", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IDdata", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pointscKn1p0", "=", 
   RowBox[{"exactfKn1p0", "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", "IDpointsc"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pointsxKn1p0", "=", 
   RowBox[{"exactfKn1p0", "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", "IDpointsx"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]Kn1p0", "=", 
    RowBox[{"Interpolation", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"exactfKn1p0", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{
              RowBox[{"pointscKn1p0", "*", 
               RowBox[{"(", 
                RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", "1"}], 
             ",", "1"}], "\[RightDoubleBracket]"}], "-", "0.5"}], ",", 
          RowBox[{
           RowBox[{"Array\[Theta]", "[", 
            RowBox[{
             RowBox[{"exactfKn1p0", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"pointscKn1p0", "*", 
                  RowBox[{"(", 
                   RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", 
                 "1"}], ";;", 
                RowBox[{
                 RowBox[{"pointscKn1p0", "*", 
                  RowBox[{"(", 
                   RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", 
                 "pointscKn1p0"}]}], ",", "2"}], "\[RightDoubleBracket]"}], 
             ",", 
             RowBox[{"exactfKn1p0", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"pointscKn1p0", "*", 
                  RowBox[{"(", 
                   RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", 
                 "1"}], ";;", 
                RowBox[{
                 RowBox[{"pointscKn1p0", "*", 
                  RowBox[{"(", 
                   RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", 
                 "pointscKn1p0"}]}], ",", "3"}], "\[RightDoubleBracket]"}]}], 
            "]"}], ".", 
           RowBox[{"exactfKn1p0", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"pointscKn1p0", "*", 
                RowBox[{"(", 
                 RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", "1"}],
               ";;", 
              RowBox[{
               RowBox[{"pointscKn1p0", "*", 
                RowBox[{"(", 
                 RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", 
               "pointscKn1p0"}]}], ",", "4"}], "\[RightDoubleBracket]"}]}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "1", ",", "pointsxKn1p0"}], "}"}]}], "]"}], ",", 
      RowBox[{"InterpolationOrder", "\[Rule]", "3"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fKn1p0", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Interpolation", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"exactfKn1p0", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{
              RowBox[{"pointscKn1p0", "*", 
               RowBox[{"(", 
                RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", "jj"}],
              ",", "2"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"exactfKn1p0", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{
              RowBox[{"pointscKn1p0", "*", 
               RowBox[{"(", 
                RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", "jj"}],
              ",", "4"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"jj", ",", "1", ",", "pointscKn1p0"}], "}"}]}], "]"}], ",", 
       RowBox[{"InterpolationOrder", "\[Rule]", "3"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "1", ",", "pointsxKn1p0"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.687070031940056*^9, 3.687070104057028*^9}, {
   3.687070177796228*^9, 3.6870701836603823`*^9}, {3.687070223530093*^9, 
   3.68707024389957*^9}, {3.6870703512978992`*^9, 3.687070599024043*^9}, {
   3.68707156124471*^9, 3.687071688196267*^9}, {3.687071724654984*^9, 
   3.687071736030265*^9}, {3.6870719007480097`*^9, 3.687071901643821*^9}, {
   3.687071942274246*^9, 3.6870720313656797`*^9}, 3.687072068616156*^9, {
   3.687072115026174*^9, 3.687072116939443*^9}, {3.6870721570945063`*^9, 
   3.687072164791939*^9}, {3.687072312808031*^9, 3.687072446213925*^9}, {
   3.691808561799449*^9, 3.691808569780055*^9}, {3.691821618532885*^9, 
   3.69182162279775*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Theta]Kn1p0", "[", "x", "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "fKn1p0", "\[LeftDoubleBracket]", "12", "\[RightDoubleBracket]"}], "[", 
     "x", "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6870717387885513`*^9, 3.687071746153316*^9}, {
  3.687071885773807*^9, 3.6870719090639763`*^9}, {3.687072174934196*^9, 
  3.687072250381998*^9}, {3.68707246750412*^9, 3.687072469524826*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], ":", 
  " ", "\<\"Input value \[NoBreak]\\!\\({\\(-0.4999795714285714`\\)}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{
  3.6871598260751457`*^9, 3.6871600896348953`*^9, 3.687160759226267*^9, 
   3.687183754814989*^9, {3.6918083615619373`*^9, 3.691808376542926*^9}, 
   3.691808575038892*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwt1Pk71AkcwHFChI5nI2spRxKK1aExqv20rigaoVwZTCk6bdpVthjEqlWt
lZKzmiZlzFR2aiL6YHYajPv4fhHzVVN2M1GtaR1b2fZ59of38/oP3hasI/7R
s9TU1Hw/958OsGhkZobC+84J0x2VJAbuX545NU1hzu/H/vATkpiY62w9/p7C
3G0j4R0CEqXKUNawkkId3YwXBIfEyLyS/maSQlHfSQ/VORKz39nIrtyh8InQ
93ECi0QVZ335mggKFYt5TYX6JFbpRB3e91iOY4NNm+nRBCa3EMq6qEFMbCmk
l+r34CuusRHNdAAjnjrZLaG60I7ymjN/sB/D4z2PlEo78cZCjqovtQ+/yqWZ
niztQHFY0zmEXlTax8dyue1oWmJqnveMQKZlWsyrlW241S3sRNeZHkxMuZi0
b3kLmv2zl23r3Y2aoy4ftRkytBcUsY+OdmK+ib5Jc3AjDh275kDc6sBWr6Qf
i36WYmxhNqdwfzsuOPPQV9EiweCkkKXllq0YWVQ8vemtGG2UtmGBxTLMlDex
fqHV44FtfunPFQ0YoMySHGPWYmg8Y+O6dU9QNXVz1MyqBnPwTz98IEZdaYB/
RlslwqzenQ7qdTgg9DI/4/wA9/fWx3HHq/GSZL6vu6ICN1xJ+bLquAizGMKy
5FwBxgy+expiVIGOND1pclYpMoZW8husylDH/bVQpnYN12EBOXK6GCeXNOsh
kYP0t+G75btPYwxtLN4jJRFXpL3Rrf0+DR5e+NZEe8sJuCMdu50cXAKaX09M
jERchBrvJmeX+ttwVE1lG1V7FZRl12O3BVdA1QpOseGzUijiOxSo7otAwp/o
T3gpgOqoDENHUTWMcZzHoh9VQKLBlR7GF3UQ9CElX5/xAJrbu90788Vwdra1
3taySvhORrO+sOgJrGLnaZRPVcONNnfDvQ0NMBEw7EltrYWsctEtbR8ZaAS5
/ZQ+UwfqOd3eYq1WSN8Z5hw4IAaj2zzpDa92sOBZav1aLAGilL1UK7MDGAMe
6tvDpRDGs8s4+rwTGq8udPvo1QgbCrTXS5Z1Q/iwxqZYExkoLlT+bXW6B3YF
eU4rlrSAcGmy0mKAAP/QT6kZVm0wxElYrbm4F/R0TGv8z7ZDp40He/x4H/gw
52yMLekAs3wP84aafhhrvWwyU94Jl8pCpugfnkJCakz53vou6ELXvoc7BmG+
B/lymXoPHKhj6i3Ok4NB9Itom28IYJX0XaoukoOZ7Vx7yo2A0FOBlrs4chCF
DHEvexPgRd9CLxDIITA18O7cHQRY3XPaZyyRA++Usdu8gwQMXNUXG/4lhzVs
VydWPgE+7KrEeT4U8Nvi34dNEuDGdJot2E7BLvV3jVs+EeCy4W62bxAFMn7W
4fWaJNhMcm9lsSjgTY6usFxAgmZcNqF7goLh5x+ztWxIqImIWa19k4LrB5OH
rIJJEG5U1NzkUZCUbGS7iklCuQnT2/MeBWsNdLbDHhLyyYDI9GoKXrvXuUbF
kfADA85rdFGg6UdveJRJwiH7KmNOLwXzPrlYk+dJ2KPnxHWVU3Bq1eoDqosk
+EvtqlNeUcAoa+OvvUaCN5e72eINBbmO4fygUhI2pZl31aoomP1YcPkknwRa
VAEzcpoCg3HRIc5vJPz/L3CMO+jYXEnCvzf4h2c=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->600,
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-0.5, 0.5}, {-0.3707165666536512, 0.3707151863943663}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.687071891405633*^9, 3.68707190930015*^9}, {
   3.6870722010856247`*^9, 3.687072250769496*^9}, 3.687072470029737*^9, 
   3.687159826175351*^9, 3.687160089802535*^9, 3.687160759233554*^9, 
   3.687183754826782*^9, {3.691808361770546*^9, 3.691808376747756*^9}, 
   3.691808575053194*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], ":", 
  " ", "\<\"Input value \[NoBreak]\\!\\({\\(-9.99959142857143`\\)}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{
  3.6871598260751457`*^9, 3.6871600896348953`*^9, 3.687160759226267*^9, 
   3.687183754814989*^9, {3.6918083615619373`*^9, 3.691808376542926*^9}, 
   3.691808575114088*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJxN23c0V3/8OPC3vXkvKlSSVYTs0Pt1S/ZIlCTJTlTILhkJoWQre5NSVpH0
fl3ZK7vs7B1C9vj5nfP9fnzvP/c8zn2d53i97r3n3nPuPWFur2dFicFgABUG
8//3Tya1l/b2TqKY/9mc0w7/69s+8L1bo2slGwc27nDfsV8+sCJMpx+aOPBm
zMYxtPnA7iqZmj7x/yd+5nYGRvbA9oi15JFbvP+5gM7hQVr4if/sEdJsdaqB
5z8Hdzc6ho0e/8/5S4qOHy8f+8+DNSeFdt9w/+cjxMLranOc/3nki8+Q080j
/7noSDVPS86h/4xvVy9jInD85+6nEXGdzAdOkux7lEh74FPR9xTENtn/M2L4
qlxv+MD3BzvJbz4euG7mdqWg1oFD43PSF5UPrK/11+8LOPBg3tNLmpIHzjBp
5COeObAtG5FmQIAdtb6aHdyEu0kWR43HM3nY0S/KKT+XT/iS/zlkVj/gZEdD
zsVKElJCyWUn5jNliexoJVeVqXV7NNmnXSYAw8qOwu6hptPb8WQVP2/rejp2
9Fag5afS7hQys1SdSgQFO9qyFW5x2i6d3D6GFby5RUTzrLVK3LIzybHRN+j4
/hFRUavJ1TzvbLKxStrk3DwRHY78bNM7nkPmXZup/TRFRN+8YtFnbHpLnsqW
zPEaIaLh/8C2Bl8u+YOh53PVfiKKmqfmvh16S3ZmqLbB/iSi3M7+GZLLOeRz
ZSzqPS1EVKUGiK9qZ5N3bQ1OpdUTUdXVk1G7IxnkKq5kBrtKIpqV6s9hlJFK
Dm6anJb8RkSZGxy2hOnjybpPxBu2PxPRsrLjPN5TYWQOUY/c6nwiynp+J4lH
1oncN1gRHJq7n19Q+9SF9EhSyitGu+sZRJSnS6cmYfwtyRrR1+RJIqJDrZ2c
4W6fSCJ/44WnY4moYenS7uUHZNJS6hhTYTgRfXbmhc6JyUrSEyrXJiV/Iioy
OJuk29FMOh2SYOfvtV/P99L8pvI2Uje+krHWbX8+zkwdM8zoJEnxYtU1bImo
/dVt4XuZvaSRtzJTIRZElNje3WL4ZYAUdvZWYLMxEf3yWU1Z3m6INIfkVute
3o93QSnbJ2yUFFfXahmhRkQHTW6J2vGNk9R016g6LxDRGe0B5SslE6TVX0fT
2RWIaM0uZqFRdYqUfvvSxetSRFTZnFbYuXOapDtpO/z6DBE9oyAmpD4/Q9p9
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
+f8Bh7Izvw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->600,
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-10, 10}, {-0.1358952278049367, 0.21729925244033413`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.687071891405633*^9, 3.68707190930015*^9}, {
   3.6870722010856247`*^9, 3.687072250769496*^9}, 3.687072470029737*^9, 
   3.687159826175351*^9, 3.687160089802535*^9, 3.687160759233554*^9, 
   3.687183754826782*^9, {3.691808361770546*^9, 3.691808376747756*^9}, 
   3.6918085751357594`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.68707169991311*^9, 3.687071722306747*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Kn 10.0", "Subsection",
 CellChangeTimes->{{3.6870700229474487`*^9, 3.687070024816761*^9}, {
  3.687072306761895*^9, 3.68707230706765*^9}, {3.687072498226194*^9, 
  3.6870724993100023`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"exactfKn10p0", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\</Users/neerajsarna/sciebo/DG_moments_deal/Results/Results_Discrete_\
Velocity/1D_Heat_Conduction/Kn10p0/fx199c80.dat\>\"", ",", "\"\<Table\>\""}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IDpointsx", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IDpointsc", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IDdata", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pointscKn10p0", "=", 
   RowBox[{"exactfKn10p0", "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", "IDpointsc"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pointsxKn10p0", "=", 
   RowBox[{"exactfKn10p0", "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", "IDpointsx"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]Kn10p0", "=", 
    RowBox[{"Interpolation", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"exactfKn10p0", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{
              RowBox[{"pointscKn10p0", "*", 
               RowBox[{"(", 
                RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", "1"}], 
             ",", "1"}], "\[RightDoubleBracket]"}], "-", "0.5"}], ",", 
          RowBox[{
           RowBox[{"Array\[Theta]", "[", 
            RowBox[{
             RowBox[{"exactfKn10p0", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"pointscKn10p0", "*", 
                  RowBox[{"(", 
                   RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", 
                 "1"}], ";;", 
                RowBox[{
                 RowBox[{"pointscKn10p0", "*", 
                  RowBox[{"(", 
                   RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", 
                 "pointscKn10p0"}]}], ",", "2"}], "\[RightDoubleBracket]"}], 
             ",", 
             RowBox[{"exactfKn10p0", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"pointscKn10p0", "*", 
                  RowBox[{"(", 
                   RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", 
                 "1"}], ";;", 
                RowBox[{
                 RowBox[{"pointscKn10p0", "*", 
                  RowBox[{"(", 
                   RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", 
                 "pointscKn10p0"}]}], ",", "3"}], "\[RightDoubleBracket]"}]}],
             "]"}], ".", 
           RowBox[{"exactfKn10p0", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"pointscKn10p0", "*", 
                RowBox[{"(", 
                 RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", "1"}],
               ";;", 
              RowBox[{
               RowBox[{"pointscKn10p0", "*", 
                RowBox[{"(", 
                 RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", 
               "pointscKn10p0"}]}], ",", "4"}], "\[RightDoubleBracket]"}]}]}],
          "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "1", ",", "pointsxKn10p0"}], "}"}]}], "]"}], ",", 
      RowBox[{"InterpolationOrder", "\[Rule]", "3"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fKn10p0", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Interpolation", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"exactfKn10p0", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{
              RowBox[{"pointscKn10p0", "*", 
               RowBox[{"(", 
                RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", "jj"}],
              ",", "2"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"exactfKn10p0", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{
              RowBox[{"pointscKn10p0", "*", 
               RowBox[{"(", 
                RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", "jj"}],
              ",", "4"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"jj", ",", "1", ",", "pointscKn10p0"}], "}"}]}], "]"}], ",", 
       RowBox[{"InterpolationOrder", "\[Rule]", "3"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "1", ",", "pointsxKn10p0"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.687070031940056*^9, 3.687070104057028*^9}, {
   3.687070177796228*^9, 3.6870701836603823`*^9}, {3.687070223530093*^9, 
   3.68707024389957*^9}, {3.6870703512978992`*^9, 3.687070599024043*^9}, {
   3.68707156124471*^9, 3.687071688196267*^9}, {3.687071724654984*^9, 
   3.687071736030265*^9}, {3.6870719007480097`*^9, 3.687071901643821*^9}, {
   3.687071942274246*^9, 3.6870720313656797`*^9}, 3.687072068616156*^9, {
   3.687072115026174*^9, 3.687072116939443*^9}, {3.6870721570945063`*^9, 
   3.687072164791939*^9}, {3.687072312808031*^9, 3.687072446213925*^9}, {
   3.687072515069355*^9, 3.6870726237199783`*^9}, {3.691808584453373*^9, 
   3.69180858595642*^9}, {3.691821632973928*^9, 3.691821636899024*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Theta]Kn10p0", "[", "x", "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "fKn10p0", "\[LeftDoubleBracket]", "12", "\[RightDoubleBracket]"}], "[", 
     "x", "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6870717387885513`*^9, 3.687071746153316*^9}, {
  3.687071885773807*^9, 3.6870719090639763`*^9}, {3.687072174934196*^9, 
  3.687072250381998*^9}, {3.68707246750412*^9, 3.687072469524826*^9}, {
  3.687072637941968*^9, 3.6870726402939167`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], ":", 
  " ", "\<\"Input value \[NoBreak]\\!\\({\\(-0.4999795714285714`\\)}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{
  3.6871598266542788`*^9, 3.687160090358707*^9, 3.68716075948557*^9, 
   3.687183755073194*^9, {3.6918083627679253`*^9, 3.691808377494338*^9}, 
   3.691808589732387*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwtlGs0lAkchyWxRbWxGVpyG5osFrnk0v7b1IZ1q5V1C6NWSjfaHWXbGpdK
VM6saFyGtjEYg4wG7+uM/Se3KSUxMy4xL12cot1y2U7K1rbn9OF3nm/PeT79
zGKP7PxJXU1Nzf/j/qcd6E9++EDhpM39iy+TSQw+sC5z/i2FkXp7jQVJJKbk
bbSa/YdCRtqa1ohDJHZNhcdOTFFoGfi5191YEmO4pcN3Byh8r76W3uxPImea
0V1wncJ2iWRGZkHiHN+jekM0heG74lKv9xLY/Bnz8L4/VTj7dS7zrC2Bp+8p
p1qZo/j2hfiUeLARnwsMaa5GI6gXnShqrmxAa8p76crRYZTnOOa4ZEmwTI8/
N5Q2hLTZkBDLqBvYFnHnIsIg9vjwHlgF1KNRqZEpd1yJ00f/5aXbivF7r4gT
/ecVH3uGcjtodWjyLo693keOptMXg/c61KJtLY+d9FcfzlgFShdWVuPYz3/Y
KSsfYOaOQOdXBlW4v5jDLz7Qi03pCsdn9pUYeirMotq8Bx1tnnpvp5cjY2p9
RHBJN2rG/Jo48E0ZJgQEnXn0WIb1AgtMcrqG4ccCN7m4dOIWe0XeO5ermIvP
grCxDXnDUQ5yaTGC+mCI3aJW5BYuSci+ycUDg7eOCmalmDHiq6+pk4eeBakG
zceb8FJBxTmxNgfjR6cfhtHq0eSJcKTk2ywMHLOpkdGr0GqySn3D6zR0waKB
yYwS1Aw4tYCmLHR7tXuPak8Gxjw9Qcv9fTd+lf5y2c1f0iGMMOwJd4iE611/
C0+HlsIa3TcSJ4IFLT53NrrfEoLveIqZsCYNpqqu7Q8IrYeJcx0ajNIs4NXY
Fc01NMFi+z72mCsHpMyzq+2bpLCoUVszkroMKV8UKAJ1W2FOt02xaYgLd3vl
W/sK2yDfbOdaj9xiSOx2tcrR7wTvFUX5ISZXoez+1tVxMhkoZmuC2k2uwYXq
pkotv24wD03VGFMrg0W5cp+2JT0g8lga6rCiHGhCUVeZdy+cjLeoUS5UgLKC
bbEk8wEkb67rpE8IIUJkfTbpUR9c7jFIuvJeBJ5FWh4dlnKYONgbsH2+Bh7n
kK/pGQoIlt4vMdCrA4nF6SmzESXc9pPPTTPEMMZPdtQwHgSxzJy51qEe+hjb
2LPHh0BfrdiXu+sGmBRuM5W1DENn/Lg857AE8qvC5t0WHkKWdYVif3YD9OOW
IWLXKKgqlYbG9xohoTVK25irgmLvVSyGFgGxpUP5Up4KGhL1ae06BIT/Fmwe
yVeB6lLX8xhdArzdfN2KalXA4t+2KjEmgC523mfYoQIRg7NqnRMBI1d12lbP
qGCVu7/nMSYBfuzmlBV+FGywZyXPSwnwinLWrN1BAXMmkyO9RYC7Zx3H/0cK
CgvWzbBlBDDeCCovxFLgn1d2frmcAI2jHOWyExTkOY1buEwR0BId76hVTgFP
mHGlw5AEyabHLeWij/4MXjzPhITqL6N8vhNTEOxZn8WyJKFw4IeYM1IKgrwS
2m0cSGAFwqXF/RQYlUabCr1JOGTbbMgfpEAVWpSdHUDCXm1nwRYVBfEvlvkf
CSZhZ5e1NPU5BfMlZgr3GBJ8BILtZi8pWNmizzOPI2Fzumn/zTkKlt942KJ9
kARXZlFUzFsKTrJpG18nkvDpv+AJPVHnUTIJ/wEjiHm4
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->600,
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-0.5, 0.5}, {-0.09948632442608454, 0.09948551944502843}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.687071891405633*^9, 3.68707190930015*^9}, {
   3.6870722010856247`*^9, 3.687072250769496*^9}, 3.687072470029737*^9, 
   3.687072640812333*^9, 3.6871598267519093`*^9, 3.687160090528091*^9, 
   3.687160759512705*^9, 3.6871837550851173`*^9, {3.691808362980391*^9, 
   3.691808377690299*^9}, 3.691808589741144*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], ":", 
  " ", "\<\"Input value \[NoBreak]\\!\\({\\(-9.99959142857143`\\)}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{
  3.6871598266542788`*^9, 3.687160090358707*^9, 3.68716075948557*^9, 
   3.687183755073194*^9, {3.6918083627679253`*^9, 3.691808377494338*^9}, 
   3.691808589799995*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
/72v9Z//B7QtWeE=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->600,
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-10, 10}, {-0.2799984081503929, 0.361154305218284}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.687071891405633*^9, 3.68707190930015*^9}, {
   3.6870722010856247`*^9, 3.687072250769496*^9}, 3.687072470029737*^9, 
   3.687072640812333*^9, 3.6871598267519093`*^9, 3.687160090528091*^9, 
   3.687160759512705*^9, 3.6871837550851173`*^9, {3.691808362980391*^9, 
   3.691808377690299*^9}, 3.69180858984264*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.68707169991311*^9, 3.687071722306747*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Kn 100.0", "Subsection",
 CellChangeTimes->{{3.6870700229474487`*^9, 3.687070024816761*^9}, {
   3.687072306761895*^9, 3.68707230706765*^9}, {3.687072498226194*^9, 
   3.6870724993100023`*^9}, 3.6870862031734*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"exactfKn100p0", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\</Users/neerajsarna/sciebo/DG_moments_deal/Results/Results_Discrete_\
Velocity/1D_Heat_Conduction/Kn100p0/fx199c80.dat\>\"", ",", "\"\<Table\>\""}],
      "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IDpointsx", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IDpointsc", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IDdata", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pointscKn100p0", "=", 
   RowBox[{"exactfKn100p0", "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", "IDpointsc"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pointsxKn100p0", "=", 
   RowBox[{"exactfKn100p0", "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", "IDpointsx"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]Kn100p0", "=", 
    RowBox[{"Interpolation", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"exactfKn100p0", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{
              RowBox[{"pointscKn100p0", "*", 
               RowBox[{"(", 
                RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", "1"}], 
             ",", "1"}], "\[RightDoubleBracket]"}], "-", "0.5"}], ",", 
          RowBox[{
           RowBox[{"Array\[Theta]", "[", 
            RowBox[{
             RowBox[{"exactfKn100p0", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"pointscKn100p0", "*", 
                  RowBox[{"(", 
                   RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", 
                 "1"}], ";;", 
                RowBox[{
                 RowBox[{"pointscKn100p0", "*", 
                  RowBox[{"(", 
                   RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", 
                 "pointscKn100p0"}]}], ",", "2"}], "\[RightDoubleBracket]"}], 
             ",", 
             RowBox[{"exactfKn100p0", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"pointscKn100p0", "*", 
                  RowBox[{"(", 
                   RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", 
                 "1"}], ";;", 
                RowBox[{
                 RowBox[{"pointscKn100p0", "*", 
                  RowBox[{"(", 
                   RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", 
                 "pointscKn100p0"}]}], ",", "3"}], 
              "\[RightDoubleBracket]"}]}], "]"}], ".", 
           RowBox[{"exactfKn100p0", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"pointscKn100p0", "*", 
                RowBox[{"(", 
                 RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", "1"}],
               ";;", 
              RowBox[{
               RowBox[{"pointscKn100p0", "*", 
                RowBox[{"(", 
                 RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", 
               "pointscKn100p0"}]}], ",", "4"}], 
            "\[RightDoubleBracket]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "1", ",", "pointsxKn100p0"}], "}"}]}], "]"}], ",", 
      RowBox[{"InterpolationOrder", "\[Rule]", "3"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fKn100p0", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Interpolation", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"exactfKn100p0", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{
              RowBox[{"pointscKn100p0", "*", 
               RowBox[{"(", 
                RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", "jj"}],
              ",", "2"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"exactfKn100p0", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{
              RowBox[{"pointscKn100p0", "*", 
               RowBox[{"(", 
                RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", "jj"}],
              ",", "4"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"jj", ",", "1", ",", "pointscKn100p0"}], "}"}]}], "]"}], 
       ",", 
       RowBox[{"InterpolationOrder", "\[Rule]", "3"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "1", ",", "pointsxKn100p0"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.687070031940056*^9, 3.687070104057028*^9}, {
   3.687070177796228*^9, 3.6870701836603823`*^9}, {3.687070223530093*^9, 
   3.68707024389957*^9}, {3.6870703512978992`*^9, 3.687070599024043*^9}, {
   3.68707156124471*^9, 3.687071688196267*^9}, {3.687071724654984*^9, 
   3.687071736030265*^9}, {3.6870719007480097`*^9, 3.687071901643821*^9}, {
   3.687071942274246*^9, 3.6870720313656797`*^9}, 3.687072068616156*^9, {
   3.687072115026174*^9, 3.687072116939443*^9}, {3.6870721570945063`*^9, 
   3.687072164791939*^9}, {3.687072312808031*^9, 3.687072446213925*^9}, {
   3.687072515069355*^9, 3.6870726237199783`*^9}, {3.687086211051705*^9, 
   3.687086318968001*^9}, {3.687087101871594*^9, 3.6870871021318693`*^9}, {
   3.6918086014911737`*^9, 3.6918086033862658`*^9}, {3.691821645896837*^9, 
   3.6918216497853622`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Theta]Kn100p0", "[", "x", "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "fKn100p0", "\[LeftDoubleBracket]", "12", "\[RightDoubleBracket]"}], "[",
      "x", "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6870717387885513`*^9, 3.687071746153316*^9}, {
  3.687071885773807*^9, 3.6870719090639763`*^9}, {3.687072174934196*^9, 
  3.687072250381998*^9}, {3.68707246750412*^9, 3.687072469524826*^9}, {
  3.687072637941968*^9, 3.6870726402939167`*^9}, {3.687086339364336*^9, 
  3.687086341811289*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], ":", 
  " ", "\<\"Input value \[NoBreak]\\!\\({\\(-0.4999795714285714`\\)}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.687159827013671*^9, 3.687160090867257*^9, 
  3.68716075983035*^9, 3.68718375538276*^9, 3.691808378404626*^9, 
  3.6918086069545183`*^9, 3.691822018422176*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1:eJwt1Pk/1HkcwHF3Vh712Fqk2HF0SCUPZ0r77hFjkdzkqHFEyawSHcZWRoPo
IZrv7LpFxpQiyaMSjd5pFJEjxrjnI8U27GhFLR2Pdvfx2B9ej+d/8DIMP+Yd
qaSgoLD33/7TDLSnvn0jOBPQbMxR46Fv9Ib0xU8EVznsOsFU5mHi79vWz30g
uMdc86iPAg9bpoPCJ6cJ3rZUiTL6RGFoXsnQi36CWY2pj4RyCrmzJu35twnK
JH4/TYgpnOfvqLIMITgqC+vQ4VPYoB529PAjKSraqZzLBQqTOiTTTWGj2FFk
nZsdxUWZQFfHVm8E16geJ62ll9GUOH+3fHQIt52X5eY/zMbylfz5wfODmOnn
5N6snYWi4LZLCAMoan4+npWdiXolegZ5ryQYX9NWfFh2Efc4BLN6M/rQN891
qMwtA2mfD7E3uojxzz2pJaodF3BLdTE7Tt6Drkx1H65ZGo6duGomqXiJvc5G
565XpeCRIi6/KLobExQXbOosORhwLtC4yqgTxemKP/IKk9FkemOw75V2tCp5
f0xOYyPT3TN1/HUrqgsmuzw1zmJQvMdOG5tnqDba/GFygoU8fOuJ90VocaD2
a8TiKQSlAX8zxSZUcqattu+Mx+iBJ7GCOSH6NbDSWEOxaJ+fvKohoQ4FrhWd
dC8mRo3ODgfq1OIuyRWjS5qR6DG2+Vbr2pv4VWtlcQSTgTZY2D+VcgWVP7bs
XNHkhXZ/HTgoPZiCIVbRF5822uImzjuNxyc5wCc6sx94NnC7ZeZGUkAJKHMT
+WtsvaHRpW3b9ic34IlFQk3X+wMwfbPsiHtALXxff8Zc3z8Sim+ZFc7fqwOB
U9Cvq3KYIAxL0zKvE0L5mwKvmXuxkPhDfp/Hiia4R62L2foqHl50ix17CkSw
VV08EdB/Co63267P1n4GemGVx/KQBeVdjlqHWlthgh73rv7tGcisqqtY4tYO
4XnB9YOjSaDIE7uIVDvh/vDM1oWMZNC5UdlS7twNlz6+EWos5YDkOttYNf0l
1O+f8zRNTYHgStO0uPEe0OXVljYZpIF94ZIdT9eJoc5R85BB2QV4nV3/cW1K
H5yO/0JtoGfAXeOkacMRCXQFDUpg/CKM8U9bqOgPgNf4UZvlkZnQY0JnzyUM
wjA4DWzWyAJaAd2gtXEI6G0xpYu/ZUPOzcBFuy/D0M02OjOWeRl6cffgA79R
YJAiBRLKBWYTY6l+nhQenix6mL6BgvCSwRxhsRRIu5imuImCoLO+Rvv5Unjw
1iqHZUaBs52rXWG1FGwCc0XR1hSsvWN9WPepFDrYljHuDhSMlGqKtN5LwQ3M
9fVDKHBjNyQucyPQxKnaPJNDgQPDWq3ai8Ayerz/LwUUbLev4e7dR0CWmR83
VUyByYKgIjOcAMmSRk2WU6ASy5VosAg0H4fikVoKGkOiLJZcIxB6UFUg7KTg
7s7XjdcqCdSVuSnZ9lBQtYbh4nSHwMR4kLymj4KCfp/QVCGBfY7XfPgjFJzy
gCzlXgLcq/Ka5CkKYrY06PIHCBR9DXvxt5yCiKXWgt1SAmU6Xg4xsxR4t5gK
k2UEzCNYpv4LFLgIBD8bviOgmEbLev6Zgl0cg97H8wQYjqut7L9RYBtWyAj9
RECubaBdrcSD//8F3if/2EJT48E/iOx87w==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{Medium, FontFamily -> "Helvetica"},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->600,
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-0.5, 0.5}, {-0.018579529817622502`, 0.01857804029156302}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.687071891405633*^9, 3.68707190930015*^9}, {
   3.6870722010856247`*^9, 3.687072250769496*^9}, 3.687072470029737*^9, 
   3.687072640812333*^9, 3.687087106823902*^9, 3.687159827138842*^9, 
   3.687160091036339*^9, 3.687160759861661*^9, 3.687183755394533*^9, 
   3.691808378589731*^9, 3.691808606966997*^9, 3.6918220184346943`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], ":", 
  " ", "\<\"Input value \[NoBreak]\\!\\({\\(-9.99959142857143`\\)}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.687159827013671*^9, 3.687160090867257*^9, 
  3.68716075983035*^9, 3.68718375538276*^9, 3.691808378404626*^9, 
  3.6918086069545183`*^9, 3.691822018509141*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{Medium, FontFamily -> "Helvetica"},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->600,
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-10, 10}, {-0.43984910114729703`, 0.7068911759831055}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.687071891405633*^9, 3.68707190930015*^9}, {
   3.6870722010856247`*^9, 3.687072250769496*^9}, 3.687072470029737*^9, 
   3.687072640812333*^9, 3.687087106823902*^9, 3.687159827138842*^9, 
   3.687160091036339*^9, 3.687160759861661*^9, 3.687183755394533*^9, 
   3.691808378589731*^9, 3.691808606966997*^9, 3.691822018537887*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.68707169991311*^9, 3.687071722306747*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Kn \[Infinity]", "Subsection",
 CellChangeTimes->{{3.6870700229474487`*^9, 3.687070024816761*^9}, {
  3.687072306761895*^9, 3.68707230706765*^9}, {3.687072498226194*^9, 
  3.6870724993100023`*^9}, {3.687072660001873*^9, 3.687072661147949*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"exactfKn\[Infinity]", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\</Users/neerajsarna/sciebo/DG_moments_deal/Results/Results_Discrete_\
Velocity/1D_Heat_Conduction/Kninf/fx9c160.dat\>\"", ",", "\"\<Table\>\""}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IDpointsx", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IDpointsc", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IDdata", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pointscKn\[Infinity]", "=", 
   RowBox[{"exactfKn\[Infinity]", "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", "IDpointsc"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pointsxKn\[Infinity]", "=", 
   RowBox[{"exactfKn\[Infinity]", "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", "IDpointsx"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]Kn\[Infinity]", "=", 
    RowBox[{"Interpolation", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"exactfKn\[Infinity]", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{
              RowBox[{"pointscKn\[Infinity]", "*", 
               RowBox[{"(", 
                RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", "1"}], 
             ",", "1"}], "\[RightDoubleBracket]"}], "-", "0.5"}], ",", 
          RowBox[{
           RowBox[{"Array\[Theta]", "[", 
            RowBox[{
             RowBox[{"exactfKn\[Infinity]", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"pointscKn\[Infinity]", "*", 
                  RowBox[{"(", 
                   RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", 
                 "1"}], ";;", 
                RowBox[{
                 RowBox[{"pointscKn\[Infinity]", "*", 
                  RowBox[{"(", 
                   RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", 
                 "pointscKn\[Infinity]"}]}], ",", "2"}], 
              "\[RightDoubleBracket]"}], ",", 
             RowBox[{"exactfKn\[Infinity]", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"pointscKn\[Infinity]", "*", 
                  RowBox[{"(", 
                   RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", 
                 "1"}], ";;", 
                RowBox[{
                 RowBox[{"pointscKn\[Infinity]", "*", 
                  RowBox[{"(", 
                   RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", 
                 "pointscKn\[Infinity]"}]}], ",", "3"}], 
              "\[RightDoubleBracket]"}]}], "]"}], ".", 
           RowBox[{"exactfKn\[Infinity]", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"pointscKn\[Infinity]", "*", 
                RowBox[{"(", 
                 RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", "1"}],
               ";;", 
              RowBox[{
               RowBox[{"pointscKn\[Infinity]", "*", 
                RowBox[{"(", 
                 RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", 
               "pointscKn\[Infinity]"}]}], ",", "4"}], 
            "\[RightDoubleBracket]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "1", ",", "pointsxKn\[Infinity]"}], "}"}]}], 
       "]"}], ",", 
      RowBox[{"InterpolationOrder", "\[Rule]", "3"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fKn\[Infinity]", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Interpolation", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"exactfKn\[Infinity]", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{
              RowBox[{"pointscKn\[Infinity]", "*", 
               RowBox[{"(", 
                RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", "jj"}],
              ",", "2"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"exactfKn\[Infinity]", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{
              RowBox[{"pointscKn\[Infinity]", "*", 
               RowBox[{"(", 
                RowBox[{"ii", "-", "1"}], ")"}]}], "+", "IDdata", "+", "jj"}],
              ",", "4"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"jj", ",", "1", ",", "pointscKn\[Infinity]"}], "}"}]}], 
        "]"}], ",", 
       RowBox[{"InterpolationOrder", "\[Rule]", "3"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "1", ",", "pointsxKn\[Infinity]"}], "}"}]}], "]"}]}],
   ";"}]}], "Input",
 CellChangeTimes->{{3.687070031940056*^9, 3.687070104057028*^9}, {
   3.687070177796228*^9, 3.6870701836603823`*^9}, {3.687070223530093*^9, 
   3.68707024389957*^9}, {3.6870703512978992`*^9, 3.687070599024043*^9}, {
   3.68707156124471*^9, 3.687071688196267*^9}, {3.687071724654984*^9, 
   3.687071736030265*^9}, {3.6870719007480097`*^9, 3.687071901643821*^9}, {
   3.687071942274246*^9, 3.6870720313656797`*^9}, 3.687072068616156*^9, {
   3.687072115026174*^9, 3.687072116939443*^9}, {3.6870721570945063`*^9, 
   3.687072164791939*^9}, {3.687072312808031*^9, 3.687072446213925*^9}, {
   3.687072515069355*^9, 3.6870726237199783`*^9}, {3.687072703025872*^9, 
   3.687072852852702*^9}, {3.691808618256459*^9, 3.691808620144215*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Chop", "[", 
     RowBox[{
      RowBox[{"\[Theta]Kn\[Infinity]", "[", "x", "]"}], ",", 
      SuperscriptBox["10", 
       RowBox[{"-", "7"}]]}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"exactfKn\[Infinity]", "\[LeftDoubleBracket]", 
    RowBox[{
     RowBox[{
      RowBox[{"IDdata", "+", "1"}], ";;", 
      RowBox[{"IDdata", "+", "pointscKn\[Infinity]"}]}], ",", "4"}], 
    "\[RightDoubleBracket]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6870717387885513`*^9, 3.687071746153316*^9}, {
  3.687071885773807*^9, 3.6870719090639763`*^9}, {3.687072174934196*^9, 
  3.687072250381998*^9}, {3.68707246750412*^9, 3.687072469524826*^9}, {
  3.687072637941968*^9, 3.6870726402939167`*^9}, {3.687072832359082*^9, 
  3.687072981476124*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], ":", 
  " ", "\<\"Input value \[NoBreak]\\!\\({\\(-0.4999795714285714`\\)}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.6871598273650713`*^9, 3.68716009147218*^9, 
  3.687160760064502*^9, 3.68718375561438*^9, 3.691808623690795*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, -1.52*^-6},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->600,
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-0.5, 0.5}, {-1.4933854962630538`*^-6, -7.758520266426593*^-7}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.687071891405633*^9, 3.68707190930015*^9}, {
   3.6870722010856247`*^9, 3.687072250769496*^9}, 3.687072470029737*^9, 
   3.687072640812333*^9, {3.68707283524191*^9, 3.68707289221847*^9}, {
   3.687072964586619*^9, 3.687072981749806*^9}, 3.6871598274776897`*^9, 
   3.687160091643998*^9, 3.687160760095016*^9, 3.6871837556260967`*^9, 
   3.691808623729967*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxd03lMk3ccx/EHnAx0eEwF3JwWFFQUg6IwEeFDBSpy94CWqwU8mGD4Ywi6
6ECZxx8qYzgOp6YwTudgeFCNDMsUJQwBRRRXnI3HnMaIsLnOY+m29Msyv0/S
NK98+s4veZ6nzqlZ0nXWgiBo//n8+225ngUIb154k7bMk5inMjsxz2AWMbsw
z2F2Y57H7M68kHkRsyfzYuYlzF7MS5mXMXsz+zB/yLyc2Zd5BbMf80pmf+YA
ZrzpfGYhEBfLP8vKax/2t+yB8OzaYre9yIreEzHGFD/xfDB2ssX5YjSMj3k/
YbaI9lUQZRe1Ddz1oH0VChaPOEpf+9IeBFGBtvzeWQntQZiieyTTrZbTHoz7
E1I+WHVTQ3sw+q4qyyaLMmgPQfo1q6oi9820h6DCVG3t+CKPdgnOWr0cOKPa
Q7sEKz0Ozbfd+jntqxH1ndnXZ1MJ7ashbzHYmDOP0B6KwS1tw5eKK2kPReDH
D/uy99TQvgbFr37oLVxwjPY1OHZI9Nhf+Jb2MAxtlqpLchpoD0NWa2aJm0AW
wqGKFD8a7/wN7eFw2VumK9xRTXsEWjrqxXWmctoj0FaZaQj03kh7JP7cP87k
mlN23rJHojs37MpW5+MWC1G4dc/93FhdM+1RKNB3VgQ3n6c9Gg76gzvGxF+0
GNGQSi73dzR00O+j0TW0tHy4uctifTSeOc18pVrYS30Mahu2lTxsu0p9DExN
O+/sduqjPgbOD//KO+x5nfoYrOx39rlg30+9FHj92mQ8TYYUM7alLFF43qBe
ipN9Ex+77CLrpQiQBu1WtJAFGbbN90vPuU2GDJveM2QEDo32MrzlW+ytMI32
Mtwu9TJMeznayzHXtGLq2FFDjkXtinV3pg3S/ZbDZKMuCx+1Xo7vN9WI/d4l
Cwo42k8vlNqRoYCux92r+rmBegW+7vR8anOVrFfgZuYDV3MxWYjF/SknfvP2
JiMWh2t6Jpxp+In6WCwYHCk6+Pst6mNxvLN1wU7zAPVxcGqKEto7blIfB53t
vuf24Teoj8OFoZqEnL3XqY/DPkO6kLXjGvVKzD76ZH1IQC/1SvRU5robj/5I
vRLG9cOpKXsvUa9ETu2KKL8NbdSr0HTtacWBgTPUqxBQUOqe6tJIvQpfoCDi
iIT+T3oVMqTWoZv3K6mPx670NIMy4CDd/3ickiTv8/m1gp5fPNaOtIy701RD
zy8eTm+XHljeU0fPLwEHzLV77M+RkYANCw91R9rUUp8A/+1qXVpwFfUJKJRl
zyk1a6lPRJg2d/qpkK+oT0TwiSdPa4QvqU9E7XCb87gZhdQnYk7MzK7BJbup
T8KVejvJsqJPqU9CXfcnad3ybOqT8FHQrLv98zZSnwSHxJ/vWodrqE9Gkjnz
ZGejjPpkXM6IXTvZQUJ9Mua+01T6ItqX+mRMq3I7XeflQb0aDhmu6zJLZ1Gv
RugvrnlDjZOoV0NUP0vc6m9FvRojYbf+WJw73GrpNRD+f4mYwaxhzmfWMuuZ
jcxCCjufGcwa5nxmLbOe2cgspLLzmcGsYc5n1jLrmY3MQho7nxnMGuZ8Zi2z
ntnILKz9z38DnYMJew==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->600,
  Method->{},
  PlotRange->{{0., 160.}, {-0.359014, 0.438835}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.687071891405633*^9, 3.68707190930015*^9}, {
   3.6870722010856247`*^9, 3.687072250769496*^9}, 3.687072470029737*^9, 
   3.687072640812333*^9, {3.68707283524191*^9, 3.68707289221847*^9}, {
   3.687072964586619*^9, 3.687072981749806*^9}, 3.6871598274776897`*^9, 
   3.687160091643998*^9, 3.687160760095016*^9, 3.6871837556260967`*^9, 
   3.691808623785514*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.68707169991311*^9, 3.687071722306747*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["High Order Moment  (Reference)", "Section",
 CellChangeTimes->{{3.691937719757066*^9, 3.691937724215178*^9}, {
  3.692688020146875*^9, 3.692688023933941*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"VarRef", " ", "=", " ", "70"}], ";"}]], "Input",
 CellChangeTimes->{{3.691938838439095*^9, 3.691938843851695*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"OnsagerRef", " ", "=", " ", 
   RowBox[{"MatOnsager", "[", "70", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bcRef", "=", 
   RowBox[{"ConstructStableBC", "[", 
    RowBox[{"70", ",", "0", ",", "OnsagerRef"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.691937733985506*^9, 3.6919377902348223`*^9}, {
  3.691938195469048*^9, 3.6919381976002083`*^9}, {3.6919385398354273`*^9, 
  3.691938542782652*^9}}],

Cell[CellGroupData[{

Cell["Kn 0.1", "Subsection",
 CellChangeTimes->{{3.69193785897606*^9, 3.6919378609274063`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"HighOrderKn0p1", "[", "x_", "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"GetSolution", "[", 
     RowBox[{"VarRef", ",", "0.1", ",", "1.0", ",", "1", ",", "bcRef"}], 
     "]"}], "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.691937865101899*^9, 3.691937905502522*^9}, {
  3.691937955051958*^9, 3.6919379736232758`*^9}, {3.691938004874254*^9, 
  3.691938006011994*^9}, {3.6919388478811626`*^9, 3.6919388537585573`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Kn 1.0", "Subsection",
 CellChangeTimes->{{3.69193785897606*^9, 3.6919378609274063`*^9}, {
  3.691938141556675*^9, 3.691938141883586*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"HighOrderKn1p0", "[", "x_", "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"GetSolution", "[", 
     RowBox[{"VarRef", ",", "1.0", ",", "1.0", ",", "1", ",", "bcRef"}], 
     "]"}], "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.691937865101899*^9, 3.691937905502522*^9}, {
  3.691937955051958*^9, 3.6919379736232758`*^9}, {3.691938004874254*^9, 
  3.691938006011994*^9}, {3.691938153522938*^9, 3.69193816196316*^9}, {
  3.691938858495117*^9, 3.6919388597880507`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Kn 10.0", "Subsection",
 CellChangeTimes->{{3.69193785897606*^9, 3.6919378609274063`*^9}, {
  3.691938144708682*^9, 3.691938145286475*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"HighOrderKn10p0", "[", "x_", "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"GetSolution", "[", 
     RowBox[{"VarRef", ",", "10.0", ",", "1.0", ",", "1", ",", "bcRef"}], 
     "]"}], "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.691937865101899*^9, 3.691937905502522*^9}, {
  3.691937955051958*^9, 3.6919379736232758`*^9}, {3.691938004874254*^9, 
  3.691938006011994*^9}, {3.69193817016184*^9, 3.6919381850421457`*^9}, {
  3.691938863120749*^9, 3.6919388645701303`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Kn 100.0", "Subsection",
 CellChangeTimes->{{3.69193785897606*^9, 3.6919378609274063`*^9}, {
  3.691938148643529*^9, 3.6919381499944773`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"HighOrderKn100p0", "[", "x_", "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"GetSolution", "[", 
     RowBox[{"VarRef", ",", "100.0", ",", "1.0", ",", "1", ",", "bcRef"}], 
     "]"}], "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.691937865101899*^9, 3.691937905502522*^9}, {
  3.691937955051958*^9, 3.6919379736232758`*^9}, {3.691938004874254*^9, 
  3.691938006011994*^9}, {3.691938176031477*^9, 3.691938181054941*^9}, {
  3.691938868027364*^9, 3.6919388694099817`*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Return Error", "Section",
 CellChangeTimes->{{3.687184061531229*^9, 3.687184064163652*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Returns", " ", "the", " ", 
      RowBox[{"error", ".", " ", "Flag"}]}], " ", "\[Equal]", " ", 
     RowBox[{"0", " ", "for", " ", "MBC"}]}], ",", " ", 
    RowBox[{"Flag", " ", "\[Equal]", " ", 
     RowBox[{"1", " ", "for", " ", "PBC", " ", "and", " ", "Flag"}], " ", 
     "\[Equal]", " ", 
     RowBox[{"2", " ", "for", " ", "PBCOptimal"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ReturnError", "[", 
     RowBox[{"nvar_", ",", "Kn_", ",", "flag_", ",", "ref_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "onsagerMat", ",", "bc", ",", "solution", ",", "error", ",", 
        "numsolutions", ",", "time1", ",", "time2", ",", "gaussx", ",", 
        "gaussW", ",", "domain"}], "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"nvar", " ", "<", "min"}], " ", "||", " ", 
          RowBox[{"nvar", " ", ">", "max"}]}], ",", 
         RowBox[{"Print", "[", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Variables beyond present theory\>\"", ",", 
            RowBox[{"FontColor", "\[Rule]", "Red"}]}], "]"}], "]"}]}], "]"}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"flag", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"bc", "=", 
           RowBox[{"{", 
            RowBox[{"bcMBC", "[", "nvar", "]"}], "}"}]}], ";"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"flag", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"bc", "=", 
           RowBox[{"{", 
            RowBox[{"bcPBC", "[", "nvar", "]"}], "}"}]}], ";"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"flag", "\[Equal]", "2"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Not Implemented\>\"", ",", 
             RowBox[{"FontColor", "\[Rule]", "Red"}]}], "]"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"bc", "=", 
           RowBox[{"bcPBCOptimal", "[", "nvar", "]"}]}], ";"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"numsolutions", "=", 
        RowBox[{"Length", "[", "bc", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"time1", "=", 
        RowBox[{"AbsoluteTiming", "[", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"solution", "[", "ii", "]"}], "[", "x_", "]"}], "=", 
             RowBox[{
              RowBox[{"GetSolution", "[", 
               RowBox[{"nvar", ",", "Kn", ",", "1.0", ",", "1", ",", 
                RowBox[{
                "bc", "\[LeftDoubleBracket]", "ii", 
                 "\[RightDoubleBracket]"}]}], "]"}], "\[LeftDoubleBracket]", 
              RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"ii", ",", "1", ",", "numsolutions"}], "}"}]}], "]"}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"gaussx", "=", 
        RowBox[{
         RowBox[{"GaussianQuadratureWeights", "[", 
          RowBox[{"10", ",", 
           RowBox[{"-", "0.5"}], ",", "0.5"}], "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"gaussW", "=", 
        RowBox[{
         RowBox[{"GaussianQuadratureWeights", "[", 
          RowBox[{"10", ",", 
           RowBox[{"-", "0.5"}], ",", "0.5"}], "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"time2", "=", 
        RowBox[{"AbsoluteTiming", "[", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"Kn", "==", "0.1"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"error", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Sum", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "gaussW", "\[LeftDoubleBracket]", "jj", 
                   "\[RightDoubleBracket]"}], 
                  RowBox[{"Abs", "[", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"solution", "[", "ii", "]"}], "[", "x", "]"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{"x", "->", 
                    RowBox[{
                    "gaussx", "\[LeftDoubleBracket]", "jj", 
                    "\[RightDoubleBracket]"}]}], "}"}]}], ")"}], "-", 
                    RowBox[{"ref", "[", 
                    RowBox[{
                    "gaussx", "\[LeftDoubleBracket]", "jj", 
                    "\[RightDoubleBracket]"}], "]"}]}], "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"jj", ",", "1", ",", 
                   RowBox[{"Length", "[", "gaussx", "]"}]}], "}"}]}], "]"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"ii", ",", "1", ",", "numsolutions"}], "}"}]}], 
              "]"}]}], ";"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Kn", "\[Equal]", "1.0"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"error", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Sum", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "gaussW", "\[LeftDoubleBracket]", "jj", 
                   "\[RightDoubleBracket]"}], 
                  RowBox[{"Abs", "[", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"solution", "[", "ii", "]"}], "[", "x", "]"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{"x", "->", 
                    RowBox[{
                    "gaussx", "\[LeftDoubleBracket]", "jj", 
                    "\[RightDoubleBracket]"}]}], "}"}]}], ")"}], "-", 
                    RowBox[{"ref", "[", 
                    RowBox[{
                    "gaussx", "\[LeftDoubleBracket]", "jj", 
                    "\[RightDoubleBracket]"}], "]"}]}], "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"jj", ",", "1", ",", 
                   RowBox[{"Length", "[", "gaussx", "]"}]}], "}"}]}], "]"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"ii", ",", "1", ",", "numsolutions"}], "}"}]}], 
              "]"}]}], ";"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Kn", "\[Equal]", "10.0"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"error", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Sum", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "gaussW", "\[LeftDoubleBracket]", "jj", 
                   "\[RightDoubleBracket]"}], 
                  RowBox[{"Abs", "[", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"solution", "[", "ii", "]"}], "[", "x", "]"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{"x", "->", 
                    RowBox[{
                    "gaussx", "\[LeftDoubleBracket]", "jj", 
                    "\[RightDoubleBracket]"}]}], "}"}]}], ")"}], "-", 
                    RowBox[{"ref", "[", 
                    RowBox[{
                    "gaussx", "\[LeftDoubleBracket]", "jj", 
                    "\[RightDoubleBracket]"}], "]"}]}], "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"jj", ",", "1", ",", 
                   RowBox[{"Length", "[", "gaussx", "]"}]}], "}"}]}], "]"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"ii", ",", "1", ",", "numsolutions"}], "}"}]}], 
              "]"}]}], ";"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Kn", "\[Equal]", "100.0"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"error", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Sum", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "gaussW", "\[LeftDoubleBracket]", "jj", 
                   "\[RightDoubleBracket]"}], 
                  RowBox[{"Abs", "[", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"solution", "[", "ii", "]"}], "[", "x", "]"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{"x", "->", 
                    RowBox[{
                    "gaussx", "\[LeftDoubleBracket]", "jj", 
                    "\[RightDoubleBracket]"}]}], "}"}]}], ")"}], "-", 
                    RowBox[{"ref", "[", 
                    RowBox[{
                    "gaussx", "\[LeftDoubleBracket]", "jj", 
                    "\[RightDoubleBracket]"}], "]"}]}], "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"jj", ",", "1", ",", 
                   RowBox[{"Length", "[", "gaussx", "]"}]}], "}"}]}], "]"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"ii", ",", "1", ",", "numsolutions"}], "}"}]}], 
              "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Time in solving \>\"", ",", "time1"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Time in error computation \>\"", ",", "time2"}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"Position", "[", 
           RowBox[{"error", ",", 
            RowBox[{"Min", "[", "error", "]"}]}], "]"}], "]"}], ",", 
         RowBox[{"Min", "[", "error", "]"}], ",", "error"}], "}"}]}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "returns", " ", "the", " ", "error", " ", "corresponding", " ", "to", " ",
      "averaged", " ", "solution"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ReturnErrorAvg", "[", 
     RowBox[{"min_", ",", "max_", ",", "Kn_", ",", "ref_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "solution", ",", "solutionAvg", ",", "bc", ",", "gaussW", ",", 
        "gaussx", ",", "error"}], "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "loop", " ", "over", " ", "all", " ", "the", " ", "possible", " ", 
        "nvars"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"bc", "=", " ", 
           RowBox[{"bcPBC", "[", "ii", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"solution", "[", "ii", "]"}], "[", "x_", "]"}], "=", 
           RowBox[{
            RowBox[{"GetSolution", "[", 
             RowBox[{"ii", ",", "Kn", ",", "1.0", ",", "1", ",", "bc"}], 
             "]"}], "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";"}], ",", 
         RowBox[{"{", 
          RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Obtained solution\>\"", ",", 
          RowBox[{"FontColor", "\[Rule]", "Cyan"}]}], "]"}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"solutionAvg", "[", "ii", "]"}], "[", "x_", "]"}], "=", 
          RowBox[{"Mean", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"solution", "[", "jj", "]"}], "[", "x", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"jj", ",", "min", ",", "ii"}], "}"}]}], "]"}], "]"}]}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"gaussx", "=", 
        RowBox[{
         RowBox[{"GaussianQuadratureWeights", "[", 
          RowBox[{"10", ",", 
           RowBox[{"-", "0.5"}], ",", "0.5"}], "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"gaussW", "=", 
        RowBox[{
         RowBox[{"GaussianQuadratureWeights", "[", 
          RowBox[{"10", ",", 
           RowBox[{"-", "0.5"}], ",", "0.5"}], "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"Kn", "==", "0.1"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Computing error for Kn = 0.1\>\"", ",", 
             RowBox[{"FontColor", "\[Rule]", "Green"}]}], "]"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"error", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                "gaussW", "\[LeftDoubleBracket]", "jj", 
                 "\[RightDoubleBracket]"}], 
                RowBox[{"Abs", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"solutionAvg", "[", "ii", "]"}], "[", "x", "]"}], 
                    "/.", 
                    RowBox[{"{", 
                    RowBox[{"x", "->", 
                    RowBox[{
                    "gaussx", "\[LeftDoubleBracket]", "jj", 
                    "\[RightDoubleBracket]"}]}], "}"}]}], ")"}], "-", 
                  RowBox[{"ref", "[", 
                   RowBox[{
                   "gaussx", "\[LeftDoubleBracket]", "jj", 
                    "\[RightDoubleBracket]"}], "]"}]}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"jj", ",", "1", ",", 
                 RowBox[{"Length", "[", "gaussx", "]"}]}], "}"}]}], "]"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}]}], ";"}],
          ",", "\[IndentingNewLine]", 
         RowBox[{"Kn", "\[Equal]", "1.0"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Computing error for Kn = 1.0\>\"", ",", 
             RowBox[{"FontColor", "\[Rule]", "Green"}]}], "]"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"error", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                "gaussW", "\[LeftDoubleBracket]", "jj", 
                 "\[RightDoubleBracket]"}], 
                RowBox[{"Abs", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"solutionAvg", "[", "ii", "]"}], "[", "x", "]"}], 
                    "/.", 
                    RowBox[{"{", 
                    RowBox[{"x", "->", 
                    RowBox[{
                    "gaussx", "\[LeftDoubleBracket]", "jj", 
                    "\[RightDoubleBracket]"}]}], "}"}]}], ")"}], "-", 
                  RowBox[{"ref", "[", 
                   RowBox[{
                   "gaussx", "\[LeftDoubleBracket]", "jj", 
                    "\[RightDoubleBracket]"}], "]"}]}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"jj", ",", "1", ",", 
                 RowBox[{"Length", "[", "gaussx", "]"}]}], "}"}]}], "]"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}]}], ";"}],
          ",", "\[IndentingNewLine]", 
         RowBox[{"Kn", "\[Equal]", "10.0"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Computing error for Kn = 10.0\>\"", ",", 
             RowBox[{"FontColor", "\[Rule]", "Green"}]}], "]"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"error", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                "gaussW", "\[LeftDoubleBracket]", "jj", 
                 "\[RightDoubleBracket]"}], 
                RowBox[{"Abs", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"solutionAvg", "[", "ii", "]"}], "[", "x", "]"}], 
                    "/.", 
                    RowBox[{"{", 
                    RowBox[{"x", "->", 
                    RowBox[{
                    "gaussx", "\[LeftDoubleBracket]", "jj", 
                    "\[RightDoubleBracket]"}]}], "}"}]}], ")"}], "-", 
                  RowBox[{"ref", "[", 
                   RowBox[{
                   "gaussx", "\[LeftDoubleBracket]", "jj", 
                    "\[RightDoubleBracket]"}], "]"}]}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"jj", ",", "1", ",", 
                 RowBox[{"Length", "[", "gaussx", "]"}]}], "}"}]}], "]"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}]}], ";"}],
          ",", "\[IndentingNewLine]", 
         RowBox[{"Kn", "\[Equal]", "100.0"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Computing error for Kn = 100.0\>\"", ",", 
             RowBox[{"FontColor", "\[Rule]", "Green"}]}], "]"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"error", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                "gaussW", "\[LeftDoubleBracket]", "jj", 
                 "\[RightDoubleBracket]"}], 
                RowBox[{"Abs", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"solutionAvg", "[", "ii", "]"}], "[", "x", "]"}], 
                    "/.", 
                    RowBox[{"{", 
                    RowBox[{"x", "->", 
                    RowBox[{
                    "gaussx", "\[LeftDoubleBracket]", "jj", 
                    "\[RightDoubleBracket]"}]}], "}"}]}], ")"}], "-", 
                  RowBox[{"ref", "[", 
                   RowBox[{
                   "gaussx", "\[LeftDoubleBracket]", "jj", 
                    "\[RightDoubleBracket]"}], "]"}]}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"jj", ",", "1", ",", 
                 RowBox[{"Length", "[", "gaussx", "]"}]}], "}"}]}], "]"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}]}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "error"}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Error", " ", "from", " ", "accelerated", " ", "series", " ", 
     "expansion"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ReturnErrorAcc", "[", 
     RowBox[{"min_", ",", "max_", ",", "Kn_", ",", "ref_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "solution", ",", "solutionAvg", ",", "bc", ",", "gaussW", ",", 
        "gaussx", ",", "error"}], "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "loop", " ", "over", " ", "all", " ", "the", " ", "possible", " ", 
        "nvars"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"bc", "=", " ", 
           RowBox[{"bcPBC", "[", "ii", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"solution", "[", "ii", "]"}], "[", "x_", "]"}], "=", 
           RowBox[{
            RowBox[{"GetSolution", "[", 
             RowBox[{"ii", ",", "Kn", ",", "1.0", ",", "1", ",", "bc"}], 
             "]"}], "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";"}], ",", 
         RowBox[{"{", 
          RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Obtained solution\>\"", ",", 
          RowBox[{"FontColor", "\[Rule]", "Cyan"}]}], "]"}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"solutionAvg", "[", "ii", "]"}], "[", "x_", "]"}], "=", 
          RowBox[{"AccSolution", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"solution", "[", "jj", "]"}], "[", "x", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"jj", ",", "min", ",", "ii"}], "}"}]}], "]"}], "]"}]}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"gaussx", "=", 
        RowBox[{
         RowBox[{"GaussianQuadratureWeights", "[", 
          RowBox[{"10", ",", 
           RowBox[{"-", "0.5"}], ",", "0.5"}], "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"gaussW", "=", 
        RowBox[{
         RowBox[{"GaussianQuadratureWeights", "[", 
          RowBox[{"10", ",", 
           RowBox[{"-", "0.5"}], ",", "0.5"}], "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"Kn", "==", "0.1"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Computing error for Kn = 0.1\>\"", ",", 
             RowBox[{"FontColor", "\[Rule]", "Green"}]}], "]"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"error", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                "gaussW", "\[LeftDoubleBracket]", "jj", 
                 "\[RightDoubleBracket]"}], 
                RowBox[{"Abs", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"solutionAvg", "[", "ii", "]"}], "[", "x", "]"}], 
                    "/.", 
                    RowBox[{"{", 
                    RowBox[{"x", "->", 
                    RowBox[{
                    "gaussx", "\[LeftDoubleBracket]", "jj", 
                    "\[RightDoubleBracket]"}]}], "}"}]}], ")"}], "-", 
                  RowBox[{"ref", "[", 
                   RowBox[{
                   "gaussx", "\[LeftDoubleBracket]", "jj", 
                    "\[RightDoubleBracket]"}], "]"}]}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"jj", ",", "1", ",", 
                 RowBox[{"Length", "[", "gaussx", "]"}]}], "}"}]}], "]"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}]}], ";"}],
          ",", "\[IndentingNewLine]", 
         RowBox[{"Kn", "\[Equal]", "1.0"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Computing error for Kn = 1.0\>\"", ",", 
             RowBox[{"FontColor", "\[Rule]", "Green"}]}], "]"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"error", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                "gaussW", "\[LeftDoubleBracket]", "jj", 
                 "\[RightDoubleBracket]"}], 
                RowBox[{"Abs", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"solutionAvg", "[", "ii", "]"}], "[", "x", "]"}], 
                    "/.", 
                    RowBox[{"{", 
                    RowBox[{"x", "->", 
                    RowBox[{
                    "gaussx", "\[LeftDoubleBracket]", "jj", 
                    "\[RightDoubleBracket]"}]}], "}"}]}], ")"}], "-", 
                  RowBox[{"ref", "[", 
                   RowBox[{
                   "gaussx", "\[LeftDoubleBracket]", "jj", 
                    "\[RightDoubleBracket]"}], "]"}]}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"jj", ",", "1", ",", 
                 RowBox[{"Length", "[", "gaussx", "]"}]}], "}"}]}], "]"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}]}], ";"}],
          ",", "\[IndentingNewLine]", 
         RowBox[{"Kn", "\[Equal]", "10.0"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Computing error for Kn = 10.0\>\"", ",", 
             RowBox[{"FontColor", "\[Rule]", "Green"}]}], "]"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"error", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                "gaussW", "\[LeftDoubleBracket]", "jj", 
                 "\[RightDoubleBracket]"}], 
                RowBox[{"Abs", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"solutionAvg", "[", "ii", "]"}], "[", "x", "]"}], 
                    "/.", 
                    RowBox[{"{", 
                    RowBox[{"x", "->", 
                    RowBox[{
                    "gaussx", "\[LeftDoubleBracket]", "jj", 
                    "\[RightDoubleBracket]"}]}], "}"}]}], ")"}], "-", 
                  RowBox[{"ref", "[", 
                   RowBox[{
                   "gaussx", "\[LeftDoubleBracket]", "jj", 
                    "\[RightDoubleBracket]"}], "]"}]}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"jj", ",", "1", ",", 
                 RowBox[{"Length", "[", "gaussx", "]"}]}], "}"}]}], "]"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}]}], ";"}],
          ",", "\[IndentingNewLine]", 
         RowBox[{"Kn", "\[Equal]", "100.0"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Computing error for Kn = 100.0\>\"", ",", 
             RowBox[{"FontColor", "\[Rule]", "Green"}]}], "]"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"error", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                "gaussW", "\[LeftDoubleBracket]", "jj", 
                 "\[RightDoubleBracket]"}], 
                RowBox[{"Abs", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"solutionAvg", "[", "ii", "]"}], "[", "x", "]"}], 
                    "/.", 
                    RowBox[{"{", 
                    RowBox[{"x", "->", 
                    RowBox[{
                    "gaussx", "\[LeftDoubleBracket]", "jj", 
                    "\[RightDoubleBracket]"}]}], "}"}]}], ")"}], "-", 
                  RowBox[{"ref", "[", 
                   RowBox[{
                   "gaussx", "\[LeftDoubleBracket]", "jj", 
                    "\[RightDoubleBracket]"}], "]"}]}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"jj", ",", "1", ",", 
                 RowBox[{"Length", "[", "gaussx", "]"}]}], "}"}]}], "]"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}]}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "error"}]}], "\[IndentingNewLine]", 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.687159020622287*^9, 3.68715906405753*^9}, {
   3.687159097250031*^9, 3.687159164243875*^9}, {3.687159212395323*^9, 
   3.687159215732582*^9}, {3.687159294887102*^9, 3.6871595660620623`*^9}, {
   3.6871599334734907`*^9, 3.68715993532288*^9}, {3.6871600442211018`*^9, 
   3.68716005074993*^9}, {3.687160236252796*^9, 3.68716034121169*^9}, {
   3.687160588995524*^9, 3.687160627968116*^9}, {3.687160677031287*^9, 
   3.687160711835301*^9}, {3.687160781804511*^9, 3.6871608138444443`*^9}, {
   3.687161301840186*^9, 3.687161303998539*^9}, {3.687166351378961*^9, 
   3.687166378140379*^9}, {3.687169069652947*^9, 3.687169083386528*^9}, 
   3.687169140170567*^9, {3.6871697879365387`*^9, 3.687169932262127*^9}, {
   3.687170053277458*^9, 3.687170161767541*^9}, {3.687170199289723*^9, 
   3.6871702134332943`*^9}, {3.687170302900062*^9, 3.687170585458522*^9}, {
   3.6871706183111963`*^9, 3.687170622672152*^9}, {3.687170660437489*^9, 
   3.6871707196751947`*^9}, {3.6871707520713663`*^9, 3.687170801477312*^9}, {
   3.687170908428525*^9, 3.687171007032395*^9}, {3.687171040343988*^9, 
   3.68717105443115*^9}, {3.687171349800908*^9, 3.687171351230604*^9}, 
   3.687171550524694*^9, {3.687171650927841*^9, 3.687171688518073*^9}, {
   3.687171801806246*^9, 3.687171820496355*^9}, {3.68717233196982*^9, 
   3.687172393605948*^9}, {3.6871726143402033`*^9, 3.687172632574627*^9}, 
   3.687173879305748*^9, {3.687173942923962*^9, 3.687173957555846*^9}, 
   3.687174308994261*^9, {3.687184024586793*^9, 3.687184025807207*^9}, {
   3.687184081598584*^9, 3.6871841502894382`*^9}, {3.687184272098865*^9, 
   3.6871842867565327`*^9}, {3.687184323604517*^9, 3.687184331699606*^9}, {
   3.687184560323861*^9, 3.6871845642924843`*^9}, {3.6872009178848352`*^9, 
   3.687200920468487*^9}, {3.687200970655871*^9, 3.687200974296336*^9}, {
   3.687201180194639*^9, 3.687201281392117*^9}, {3.687201405910438*^9, 
   3.687201406608864*^9}, {3.691822071711783*^9, 3.6918220822329187`*^9}, {
   3.6919380391767178`*^9, 3.691938080975672*^9}, {3.692688603483089*^9, 
   3.6926890238456507`*^9}, {3.692689054053687*^9, 3.692689113183503*^9}, {
   3.6926892356838627`*^9, 3.6926892364374638`*^9}, {3.692689312464177*^9, 
   3.692689350368278*^9}, {3.6926894006994343`*^9, 3.6926894128884573`*^9}, {
   3.6926895782444553`*^9, 3.692689585313951*^9}, {3.692689760171137*^9, 
   3.692689785245441*^9}, {3.692689832586111*^9, 3.692689834775757*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Results", "Section",
 CellChangeTimes->{{3.6870954109335938`*^9, 3.687095416125374*^9}, {
  3.687184487516901*^9, 3.6871844887002697`*^9}}],

Cell[CellGroupData[{

Cell["Writting routine", "Subsection",
 CellChangeTimes->{{3.687233716622529*^9, 3.68723371904412*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"WriteError", "[", 
   RowBox[{"result_", ",", "filename_", ",", "Ntensors_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "str", "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"str", "=", 
      RowBox[{"OpenWrite", "[", 
       RowBox[{"StringJoin", "[", 
        RowBox[{"WriteDirectory", ",", "\"\</\>\"", ",", "filename", ",", 
         RowBox[{"ToString", "[", "Ntensors", "]"}], ",", "\"\<.dat\>\""}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Write", " ", "the", " ", "number", " ", "of", " ", "tensors", " ", 
       "and", " ", "the", " ", "optimal", " ", "error", " ", "value"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"WriteString", "[", 
      RowBox[{"str", ",", "\"\< Tensors \>\"", ",", 
       RowBox[{"ToString", "[", "Ntensors", "]"}], ",", 
       "\"\< Optimal Error \>\"", ",", 
       RowBox[{
       "result", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
       "\"\<\\n\>\""}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"WriteString", "[", 
      RowBox[{"str", ",", "\"\< #error\>\"", ",", "\"\<\\n\>\""}], "]"}], ";",
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"WriteString", "[", 
         RowBox[{"str", ",", 
          RowBox[{"ToString", "[", 
           RowBox[{
            RowBox[{
            "result", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "ii", "\[RightDoubleBracket]"}], "]"}], 
          ",", "\"\<\\n\>\""}], "]"}], ";"}], ",", 
       RowBox[{"{", 
        RowBox[{"ii", ",", "1", ",", 
         RowBox[{"Length", "[", 
          RowBox[{
          "result", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
          "]"}]}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Close", "[", "str", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6872337209299717`*^9, 3.687233745796362*^9}, {
   3.687233795354603*^9, 3.687233821720975*^9}, {3.687233854633123*^9, 
   3.687234038964466*^9}, {3.687234082620973*^9, 3.687234165968093*^9}, {
   3.6872341960522833`*^9, 3.687234362000091*^9}, {3.687234400959902*^9, 
   3.687234412693849*^9}, {3.687234457954564*^9, 3.687234466200469*^9}, {
   3.687234536888061*^9, 3.6872345384613132`*^9}, 3.687234649234768*^9, {
   3.68723476026999*^9, 3.687234764462287*^9}, {3.6872351407200403`*^9, 
   3.687235145807925*^9}, {3.687235237933218*^9, 3.68723524858436*^9}, {
   3.687235340111397*^9, 3.687235373591735*^9}, {3.687235403686433*^9, 
   3.687235516539909*^9}, {3.68723555913422*^9, 3.68723561610915*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["MBC", "Subsection",
 CellChangeTimes->{{3.68716132611775*^9, 3.6871613269568377`*^9}, {
  3.6871844933795433`*^9, 3.6871844936208563`*^9}}],

Cell[CellGroupData[{

Cell["Kn = 0.1", "Subsubsection",
 CellChangeTimes->{{3.687172475923855*^9, 3.687172477499001*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"resultMBCKn0p1", "[", "ii", "]"}], "=", 
     RowBox[{
      RowBox[{"ReturnError", "[", 
       RowBox[{"ii", ",", "0.1", ",", "0", ",", "HighOrderKn0p1"}], "]"}], 
      "\[LeftDoubleBracket]", 
      RowBox[{"-", "2"}], "\[RightDoubleBracket]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6871845035145407`*^9, 3.68718454682244*^9}, 
   3.687184600592345*^9, {3.6872015357401457`*^9, 3.6872015394236317`*^9}, {
   3.691938931699688*^9, 3.691938938788445*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00817700000000000024047430713380890666`3.9331939110317298", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.00817700000000000024047430713380890666`3.9331939110317298, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.6918088134684877`*^9, 3.691821668707615*^9, 
   3.6918217590012903`*^9, {3.691896817147407*^9, 3.691896825205386*^9}, 
   3.6919389453983593`*^9, 3.6919390375838757`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00162600000000000005813405312693475935`3.231720454537673", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00162600000000000005813405312693475935`3.231720454537673, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.6918088134684877`*^9, 3.691821668707615*^9, 
   3.6918217590012903`*^9, {3.691896817147407*^9, 3.691896825205386*^9}, 
   3.6919389453983593`*^9, 3.6919390375948772`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.01184100000000000083022477781469206093`4.093988294394802", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.01184100000000000083022477781469206093`4.093988294394802, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.6918088134684877`*^9, 3.691821668707615*^9, 
   3.6918217590012903`*^9, {3.691896817147407*^9, 3.691896825205386*^9}, 
   3.6919389453983593`*^9, 3.6919390376126213`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00197299999999999992744692534074602008`3.315726998531815", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00197299999999999992744692534074602008`3.315726998531815, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.6918088134684877`*^9, 3.691821668707615*^9, 
   3.6918217590012903`*^9, {3.691896817147407*^9, 3.691896825205386*^9}, 
   3.6919389453983593`*^9, 3.691939037622651*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.01047200000000000040534242629064465291`4.0406295468223234", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.01047200000000000040534242629064465291`4.0406295468223234, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.6918088134684877`*^9, 3.691821668707615*^9, 
   3.6918217590012903`*^9, {3.691896817147407*^9, 3.691896825205386*^9}, 
   3.6919389453983593`*^9, 3.69193903763484*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00169699999999999994078347942405571303`3.2502817555972996", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00169699999999999994078347942405571303`3.2502817555972996, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.6918088134684877`*^9, 3.691821668707615*^9, 
   3.6918217590012903`*^9, {3.691896817147407*^9, 3.691896825205386*^9}, 
   3.6919389453983593`*^9, 3.691939037644864*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.01233500000000000047795101210112989065`4.111739067105379", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.01233500000000000047795101210112989065`4.111739067105379, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.6918088134684877`*^9, 3.691821668707615*^9, 
   3.6918217590012903`*^9, {3.691896817147407*^9, 3.691896825205386*^9}, 
   3.6919389453983593`*^9, 3.6919390376552362`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00177899999999999998238908727188345438`3.270775861363549", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00177899999999999998238908727188345438`3.270775861363549, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.6918088134684877`*^9, 3.691821668707615*^9, 
   3.6918217590012903`*^9, {3.691896817147407*^9, 3.691896825205386*^9}, 
   3.6919389453983593`*^9, 3.691939037665162*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.01630699999999999857958066229457472218`4.232973984480283", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.01630699999999999857958066229457472218`4.232973984480283, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.6918088134684877`*^9, 3.691821668707615*^9, 
   3.6918217590012903`*^9, {3.691896817147407*^9, 3.691896825205386*^9}, 
   3.6919389453983593`*^9, 3.691939037674807*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00178300000000000007961686865343153841`3.2717512564549787", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00178300000000000007961686865343153841`3.2717512564549787, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.6918088134684877`*^9, 3.691821668707615*^9, 
   3.6918217590012903`*^9, {3.691896817147407*^9, 3.691896825205386*^9}, 
   3.6919389453983593`*^9, 3.691939037684864*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.02008100000000000162625468647092930041`4.323385249425323", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.02008100000000000162625468647092930041`4.323385249425323, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.6918088134684877`*^9, 3.691821668707615*^9, 
   3.6918217590012903`*^9, {3.691896817147407*^9, 3.691896825205386*^9}, 
   3.6919389453983593`*^9, 3.6919390376936893`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00178900000000000000861810622865277765`3.273210253846997", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00178900000000000000861810622865277765`3.273210253846997, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.6918088134684877`*^9, 3.691821668707615*^9, 
   3.6918217590012903`*^9, {3.691896817147407*^9, 3.691896825205386*^9}, 
   3.6919389453983593`*^9, 3.691939037702526*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.02556500000000000091815444136500445893`4.42824571034218", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.02556500000000000091815444136500445893`4.42824571034218, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.6918088134684877`*^9, 3.691821668707615*^9, 
   3.6918217590012903`*^9, {3.691896817147407*^9, 3.691896825205386*^9}, 
   3.6919389453983593`*^9, 3.6919390377117577`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00183299999999999999392152894017726794`3.283762378241841", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00183299999999999999392152894017726794`3.283762378241841, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.6918088134684877`*^9, 3.691821668707615*^9, 
   3.6918217590012903`*^9, {3.691896817147407*^9, 3.691896825205386*^9}, 
   3.6919389453983593`*^9, 3.691939037722349*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.0285310000000000008046896482483134605`4.475916907049244", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.0285310000000000008046896482483134605`4.475916907049244, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.6918088134684877`*^9, 3.691821668707615*^9, 
   3.6918217590012903`*^9, {3.691896817147407*^9, 3.691896825205386*^9}, 
   3.6919389453983593`*^9, 3.691939037730754*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00186100000000000002399469511971119573`3.290346286410391", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00186100000000000002399469511971119573`3.290346286410391, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.6918088134684877`*^9, 3.691821668707615*^9, 
   3.6918217590012903`*^9, {3.691896817147407*^9, 3.691896825205386*^9}, 
   3.6919389453983593`*^9, 3.691939037739106*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.04082500000000000017763568394002504647`4.63152610668833", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.04082500000000000017763568394002504647`4.63152610668833, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.6918088134684877`*^9, 3.691821668707615*^9, 
   3.6918217590012903`*^9, {3.691896817147407*^9, 3.691896825205386*^9}, 
   3.6919389453983593`*^9, 3.691939037784316*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00222699999999999981303844265312363859`3.3683201303136623", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00222699999999999981303844265312363859`3.3683201303136623, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.6918088134684877`*^9, 3.691821668707615*^9, 
   3.6918217590012903`*^9, {3.691896817147407*^9, 3.691896825205386*^9}, 
   3.6919389453983593`*^9, 3.69193903779145*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.04743200000000000193800531178567325696`4.696671350616532", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.04743200000000000193800531178567325696`4.696671350616532, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.6918088134684877`*^9, 3.691821668707615*^9, 
   3.6918217590012903`*^9, {3.691896817147407*^9, 3.691896825205386*^9}, 
   3.6919389453983593`*^9, 3.691939037835919*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00214400000000000007238654120556020644`3.3518246943003565", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00214400000000000007238654120556020644`3.3518246943003565, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.6918088134684877`*^9, 3.691821668707615*^9, 
   3.6918217590012903`*^9, {3.691896817147407*^9, 3.691896825205386*^9}, 
   3.6919389453983593`*^9, 3.6919390378429527`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.06704899999999999749000778592744609341`4.846992218245459", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.06704899999999999749000778592744609341`4.846992218245459, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.6918088134684877`*^9, 3.691821668707615*^9, 
   3.6918217590012903`*^9, {3.691896817147407*^9, 3.691896825205386*^9}, 
   3.6919389453983593`*^9, 3.691939037888595*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00287699999999999978320119886632255657`3.47953977516995", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00287699999999999978320119886632255657`3.47953977516995, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.6918088134684877`*^9, 3.691821668707615*^9, 
   3.6918217590012903`*^9, {3.691896817147407*^9, 3.691896825205386*^9}, 
   3.6919389453983593`*^9, 3.691939037895652*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.0699609999999999954134466406685533002`4.865455921796069", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.0699609999999999954134466406685533002`4.865455921796069, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.6918088134684877`*^9, 3.691821668707615*^9, 
   3.6918217590012903`*^9, {3.691896817147407*^9, 3.691896825205386*^9}, 
   3.6919389453983593`*^9, 3.6919390379493*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00203700000000000018204882046291004372`3.3295909422797885", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00203700000000000018204882046291004372`3.3295909422797885, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.6918088134684877`*^9, 3.691821668707615*^9, 
   3.6918217590012903`*^9, {3.691896817147407*^9, 3.691896825205386*^9}, 
   3.6919389453983593`*^9, 3.6919390379565477`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.08257499999999999562572128297688323073`4.937448495643076", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.08257499999999999562572128297688323073`4.937448495643076, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.6918088134684877`*^9, 3.691821668707615*^9, 
   3.6918217590012903`*^9, {3.691896817147407*^9, 3.691896825205386*^9}, 
   3.6919389453983593`*^9, 3.691939038035007*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00227999999999999990868415622458087455`3.3785347602800777", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00227999999999999990868415622458087455`3.3785347602800777, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.6918088134684877`*^9, 3.691821668707615*^9, 
   3.6918217590012903`*^9, {3.691896817147407*^9, 3.691896825205386*^9}, 
   3.6919389453983593`*^9, 3.6919390380434923`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.09138799999999999701394415296817896888`4.98148908630091", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.09138799999999999701394415296817896888`4.98148908630091, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.6918088134684877`*^9, 3.691821668707615*^9, 
   3.6918217590012903`*^9, {3.691896817147407*^9, 3.691896825205386*^9}, 
   3.6919389453983593`*^9, 3.691939038129703*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00210200000000000013569700918480975815`3.343232624971847", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00210200000000000013569700918480975815`3.343232624971847, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.6918088134684877`*^9, 3.691821668707615*^9, 
   3.6918217590012903`*^9, {3.691896817147407*^9, 3.691896825205386*^9}, 
   3.6919389453983593`*^9, 3.691939038137826*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.108335000000000000741628980449604569`5.055368700941009", ",", "Null"}],
     "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.108335000000000000741628980449604569`5.055368700941009, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.6918088134684877`*^9, 3.691821668707615*^9, 
   3.6918217590012903`*^9, {3.691896817147407*^9, 3.691896825205386*^9}, 
   3.6919389453983593`*^9, 3.69193903824162*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00266499999999999983429921357469538634`3.4462971266422153", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00266499999999999983429921357469538634`3.4462971266422153, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.6918088134684877`*^9, 3.691821668707615*^9, 
   3.6918217590012903`*^9, {3.691896817147407*^9, 3.691896825205386*^9}, 
   3.6919389453983593`*^9, 3.691939038248846*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Kn = 1.0", "Subsubsection",
 CellChangeTimes->{{3.687172475923855*^9, 3.687172477499001*^9}, {
  3.687184580191271*^9, 3.687184581542673*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"resultMBCKn1p0", "[", "ii", "]"}], "=", 
     RowBox[{
      RowBox[{"ReturnError", "[", 
       RowBox[{"ii", ",", "1", ",", "0", ",", "HighOrderKn1p0"}], "]"}], 
      "\[LeftDoubleBracket]", 
      RowBox[{"-", "2"}], "\[RightDoubleBracket]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6871845035145407`*^9, 3.68718454682244*^9}, {
   3.6871845916207047`*^9, 3.687184619762919*^9}, 3.68720155378157*^9, {
   3.691939005523984*^9, 3.6919390099595127`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.0064019999999999997047916977521708759`3.8269155830877377", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.0064019999999999997047916977521708759`3.8269155830877377, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.69182186643869*^9, 3.69189682915767*^9, 
   3.691939038510036*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00177600000000000001788846848427283476`3.2700428747222063", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00177600000000000001788846848427283476`3.2700428747222063, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.69182186643869*^9, 3.69189682915767*^9, 
   3.691939038516396*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00705300000000000024136248555350903189`3.8689737971242257", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.00705300000000000024136248555350903189`3.8689737971242257, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.69182186643869*^9, 3.69189682915767*^9, 
   3.691939038529006*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00162999999999999993852140001138195657`3.2327875176835814", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00162999999999999993852140001138195657`3.2327875176835814, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.69182186643869*^9, 3.69189682915767*^9, 
   3.691939038538685*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.01085999999999999986177723343416801072`4.056429738532453", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.01085999999999999986177723343416801072`4.056429738532453, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.69182186643869*^9, 3.69189682915767*^9, 
   3.691939038548151*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.0018270000000000000649202913649560287`3.282338460632162", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.0018270000000000000649202913649560287`3.282338460632162, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.69182186643869*^9, 3.69189682915767*^9, 
   3.691939038556788*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.01163400000000000024391599851014689193`4.086328972741973", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.01163400000000000024391599851014689193`4.086328972741973, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.69182186643869*^9, 3.69189682915767*^9, 
   3.691939038565577*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00214800000000000016961432258710829046`3.352634190307142", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00214800000000000016961432258710829046`3.352634190307142, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.69182186643869*^9, 3.69189682915767*^9, 
   3.691939038575371*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.01602800000000000057998050806418177672`4.225479247040287", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.01602800000000000057998050806418177672`4.225479247040287, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.69182186643869*^9, 3.69189682915767*^9, 
   3.691939038585191*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00177199999999999992066068710272475073`3.2690636308306558", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00177199999999999992066068710272475073`3.2690636308306558, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.69182186643869*^9, 3.69189682915767*^9, 
   3.691939038594246*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.02045599999999999848987464190486207372`4.331420628297903", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.02045599999999999848987464190486207372`4.331420628297903, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.69182186643869*^9, 3.69189682915767*^9, 
   3.691939038602895*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00183599999999999995842214772778788756`3.2844725901448477", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00183599999999999995842214772778788756`3.2844725901448477, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.69182186643869*^9, 3.69189682915767*^9, 
   3.691939038611405*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.02541900000000000062194693839501269395`4.425758374406169", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.02541900000000000062194693839501269395`4.425758374406169, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.69182186643869*^9, 3.69189682915767*^9, 
   3.691939038621684*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00186999999999999991749655148254305459`3.292441519816123", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00186999999999999991749655148254305459`3.292441519816123, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.69182186643869*^9, 3.69189682915767*^9, 
   3.691939038631472*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.03232199999999999656674631864916591439`4.5300981392092226", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.03232199999999999656674631864916591439`4.5300981392092226, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.69182186643869*^9, 3.69189682915767*^9, 
   3.6919390386660557`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.0020799999999999998177846460833961828`3.3386632482423857", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.0020799999999999998177846460833961828`3.3386632482423857, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.69182186643869*^9, 3.69189682915767*^9, 
   3.6919390386749973`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.04408900000000000318767234830374945886`4.664930161813203", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.04408900000000000318767234830374945886`4.664930161813203, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.69182186643869*^9, 3.69189682915767*^9, 
   3.691939038722003*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00235899999999999998578914528479799628`3.3933278541652196", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00235899999999999998578914528479799628`3.3933278541652196, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.69182186643869*^9, 3.69189682915767*^9, 
   3.691939038730933*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.04887600000000000277644573998259147629`4.709695569413246", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.04887600000000000277644573998259147629`4.709695569413246, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.69182186643869*^9, 3.69189682915767*^9, 
   3.691939038765718*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.0019599999999999999367172875963660772`3.3128559846361", ",", "Null"}], 
    "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.0019599999999999999367172875963660772`3.3128559846361, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.69182186643869*^9, 3.69189682915767*^9, 
   3.691939038775243*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.06742700000000000082334139506201609038`4.849433750511809", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.06742700000000000082334139506201609038`4.849433750511809, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.69182186643869*^9, 3.69189682915767*^9, 
   3.6919390388228703`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00203900000000000001382227665658319893`3.330017139057764", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00203900000000000001382227665658319893`3.330017139057764, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.69182186643869*^9, 3.69189682915767*^9, 
   3.6919390388348*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.07334599999999999453415000516542932019`4.885976347405808", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.07334599999999999453415000516542932019`4.885976347405808, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.69182186643869*^9, 3.69189682915767*^9, 
   3.691939038899959*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.0029559999999999998603061879265396783`3.491304343002412", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.0029559999999999998603061879265396783`3.491304343002412, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.69182186643869*^9, 3.69189682915767*^9, 
   3.691939038911305*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.08698899999999999688160556843286030926`4.9600642516300155", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.08698899999999999688160556843286030926`4.9600642516300155, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.69182186643869*^9, 3.69189682915767*^9, 
   3.691939038996529*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00212500000000000015265566588595902431`3.3479588476659545", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00212500000000000015265566588595902431`3.3479588476659545, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.69182186643869*^9, 3.69189682915767*^9, 
   3.69193903900776*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.10870000000000000495159468982819817029`5.056829457365919", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.10870000000000000495159468982819817029`5.056829457365919, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.69182186643869*^9, 3.69189682915767*^9, 
   3.691939039101841*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00209600000000000020669577160958851891`3.341991191591313", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00209600000000000020669577160958851891`3.341991191591313, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.69182186643869*^9, 3.69189682915767*^9, 
   3.691939039118292*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.13214300000000001045208364303107373416`5.141644075511695", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.13214300000000001045208364303107373416`5.141644075511695, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.69182186643869*^9, 3.69189682915767*^9, 
   3.691939039237073*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00234799999999999982683296373409120861`3.391298005855201", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00234799999999999982683296373409120861`3.391298005855201, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.69182186643869*^9, 3.69189682915767*^9, 
   3.6919390392516127`*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Kn = 10.0", "Subsubsection",
 CellChangeTimes->{{3.687172475923855*^9, 3.687172477499001*^9}, {
  3.687184583614194*^9, 3.687184585045911*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"resultMBCKn10p0", "[", "ii", "]"}], "=", 
     RowBox[{
      RowBox[{"ReturnError", "[", 
       RowBox[{"ii", ",", "10.0", ",", "0", ",", "HighOrderKn10p0"}], "]"}], 
      "\[LeftDoubleBracket]", 
      RowBox[{"-", "2"}], "\[RightDoubleBracket]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6871845035145407`*^9, 3.68718454682244*^9}, {
   3.6871846274714603`*^9, 3.687184633728773*^9}, 3.6872015585931396`*^9, {
   3.691939015587035*^9, 3.6919390223889647`*^9}, 3.6919405851862373`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00647399999999999972016828664322929399`3.8317726083461783", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.00647399999999999972016828664322929399`3.8317726083461783, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.691821874285363*^9, 3.69189683273582*^9, 
   3.691939039301539*^9, 3.691940585567659*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00247599999999999990235588498421748227`3.4143505536277043", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00247599999999999990235588498421748227`3.4143505536277043, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.691821874285363*^9, 3.69189683273582*^9, 
   3.691939039301539*^9, 3.691940585579479*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00662900000000000034355851497025469143`3.842047932297154", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.00662900000000000034355851497025469143`3.842047932297154, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.691821874285363*^9, 3.69189683273582*^9, 
   3.691939039301539*^9, 3.691940585597205*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00210500000000000010019762797242037777`3.3438520134513112", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00210500000000000010019762797242037777`3.3438520134513112, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.691821874285363*^9, 3.69189683273582*^9, 
   3.691939039301539*^9, 3.691940585608235*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.01062699999999999929400917864086295594`4.047010593858398", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.01062699999999999929400917864086295594`4.047010593858398, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.691821874285363*^9, 3.69189683273582*^9, 
   3.691939039301539*^9, 3.691940585620018*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00170199999999999995389798890244037466`3.2515594690281935", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00170199999999999995389798890244037466`3.2515594690281935, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.691821874285363*^9, 3.69189683273582*^9, 
   3.691939039301539*^9, 3.691940585630578*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.01470100000000000052546855755508659058`4.18794679086526", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.01470100000000000052546855755508659058`4.18794679086526, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.691821874285363*^9, 3.69189683273582*^9, 
   3.691939039301539*^9, 3.691940585642996*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00282599999999999995300981048274024943`3.471772070792164", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00282599999999999995300981048274024943`3.471772070792164, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.691821874285363*^9, 3.69189683273582*^9, 
   3.691939039301539*^9, 3.691940585653211*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.01741799999999999945532458411889820127`4.261598199494942", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.01741799999999999945532458411889820127`4.261598199494942, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.691821874285363*^9, 3.69189683273582*^9, 
   3.691939039301539*^9, 3.691940585663916*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00175500000000000004954370247389761062`3.264877034081467", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00175500000000000004954370247389761062`3.264877034081467, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.691821874285363*^9, 3.69189683273582*^9, 
   3.691939039301539*^9, 3.6919405856758213`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.01916500000000000147881706880070851184`4.303108736869995", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.01916500000000000147881706880070851184`4.303108736869995, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.691821874285363*^9, 3.69189683273582*^9, 
   3.691939039301539*^9, 3.691940585687169*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00173400000000000008119893646352238648`3.2596490064198154", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00173400000000000008119893646352238648`3.2596490064198154, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.691821874285363*^9, 3.69189683273582*^9, 
   3.691939039301539*^9, 3.6919405856993027`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.02659399999999999958388841037049132865`4.445383577699447", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.02659399999999999958388841037049132865`4.445383577699447, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.691821874285363*^9, 3.69189683273582*^9, 
   3.691939039301539*^9, 3.69194058571131*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00182799999999999998080701946179260631`3.2825761046774367", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00182799999999999998080701946179260631`3.2825761046774367, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.691821874285363*^9, 3.69189683273582*^9, 
   3.691939039301539*^9, 3.691940585721917*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.03030700000000000060573768223548540846`4.502142862252728", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.03030700000000000060573768223548540846`4.502142862252728, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.691821874285363*^9, 3.69189683273582*^9, 
   3.691939039301539*^9, 3.691940585732286*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00198599999999999991817656308512596297`3.3185791574389865", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00198599999999999991817656308512596297`3.3185791574389865, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.691821874285363*^9, 3.69189683273582*^9, 
   3.691939039301539*^9, 3.691940585742828*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.03996799999999999658539806546286854427`4.622312329973665", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.03996799999999999658539806546286854427`4.622312329973665, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.691821874285363*^9, 3.69189683273582*^9, 
   3.691939039301539*^9, 3.6919405857537813`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00187300000000000009883760476725456101`3.293137690654861", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00187300000000000009883760476725456101`3.293137690654861, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.691821874285363*^9, 3.69189683273582*^9, 
   3.691939039301539*^9, 3.6919405857634172`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.0429510000000000030651037263851321768`4.653573192958555", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.0429510000000000030651037263851321768`4.653573192958555, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.691821874285363*^9, 3.69189683273582*^9, 
   3.691939039301539*^9, 3.691940585862722*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00216199999999999985939025393122392416`3.3554556028969156", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00216199999999999985939025393122392416`3.3554556028969156, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.691821874285363*^9, 3.69189683273582*^9, 
   3.691939039301539*^9, 3.691940585871385*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.05868600000000000205258032792698941194`4.789134422569502", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.05868600000000000205258032792698941194`4.789134422569502, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.691821874285363*^9, 3.69189683273582*^9, 
   3.691939039301539*^9, 3.6919405858800707`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00209999999999999987024268399693482934`3.3428192080135433", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00209999999999999987024268399693482934`3.3428192080135433, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.691821874285363*^9, 3.69189683273582*^9, 
   3.691939039301539*^9, 3.691940585888535*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.06734099999999999808242279186742962338`4.848879474563313", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.06734099999999999808242279186742962338`4.848879474563313, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.691821874285363*^9, 3.69189683273582*^9, 
   3.691939039301539*^9, 3.6919405859793*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00276900000000000019381718452393670304`3.4629228690251983", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00276900000000000019381718452393670304`3.4629228690251983, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.691821874285363*^9, 3.69189683273582*^9, 
   3.691939039301539*^9, 3.691940585986383*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.08951099999999999334843181486576213501`4.972476322291086", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.08951099999999999334843181486576213501`4.972476322291086, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.691821874285363*^9, 3.69189683273582*^9, 
   3.691939039301539*^9, 3.691940586033224*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00213400000000000004615752224879088317`3.349794328368075", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00213400000000000004615752224879088317`3.349794328368075, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.691821874285363*^9, 3.69189683273582*^9, 
   3.691939039301539*^9, 3.691940586041403*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.10147000000000000463629135083465371281`5.026937573654175", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.10147000000000000463629135083465371281`5.026937573654175, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.691821874285363*^9, 3.69189683273582*^9, 
   3.691939039301539*^9, 3.691940586120083*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00364299999999999997088440117920526973`3.58205908452154", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00364299999999999997088440117920526973`3.58205908452154, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.691821874285363*^9, 3.69189683273582*^9, 
   3.691939039301539*^9, 3.6919405861321373`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.12667700000000001181454933885106584057`5.12329768301839", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.12667700000000001181454933885106584057`5.12329768301839, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.691821874285363*^9, 3.69189683273582*^9, 
   3.691939039301539*^9, 3.691940586249737*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00232700000000000007532863222081687127`3.387396296566354", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00232700000000000007532863222081687127`3.387396296566354, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.691821874285363*^9, 3.69189683273582*^9, 
   3.691939039301539*^9, 3.691940586256804*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Kn = 100.0", "Subsubsection",
 CellChangeTimes->{{3.687172475923855*^9, 3.687172477499001*^9}, {
   3.687184583614194*^9, 3.687184585045911*^9}, 3.6918218828947897`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"resultMBCKn100p0", "[", "ii", "]"}], "=", 
     RowBox[{
      RowBox[{"ReturnError", "[", 
       RowBox[{"ii", ",", "100.0", ",", "0", ",", "HighOrderKn100p0"}], "]"}],
       "\[LeftDoubleBracket]", 
      RowBox[{"-", "2"}], "\[RightDoubleBracket]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6871845035145407`*^9, 3.68718454682244*^9}, {
   3.6871846274714603`*^9, 3.687184633728773*^9}, 3.6872015585931396`*^9, {
   3.691821889347342*^9, 3.691821892489789*^9}, {3.6919390279845467`*^9, 
   3.691939030871808*^9}, 3.691940596353456*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00576600000000000029176661087149113882`3.7814745513318133", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.00576600000000000029176661087149113882`3.7814745513318133, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, {3.691821874285363*^9, 3.691821893560688*^9}, 
   3.691822087088835*^9, 3.691896836270317*^9, 3.691939040188508*^9, 
   3.691940596740382*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00178800000000000009273137813181620004`3.272967427739523", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00178800000000000009273137813181620004`3.272967427739523, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, {3.691821874285363*^9, 3.691821893560688*^9}, 
   3.691822087088835*^9, 3.691896836270317*^9, 3.691939040188508*^9, 
   3.691940596751184*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00685499999999999998223643160599749535`3.8566073724051555", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.00685499999999999998223643160599749535`3.8566073724051555, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, {3.691821874285363*^9, 3.691821893560688*^9}, 
   3.691822087088835*^9, 3.691896836270317*^9, 3.691939040188508*^9, 
   3.69194059676263*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.0016930000000000000603961325396085158`3.2492568713885595", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.0016930000000000000603961325396085158`3.2492568713885595, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, {3.691821874285363*^9, 3.691821893560688*^9}, 
   3.691822087088835*^9, 3.691896836270317*^9, 3.691939040188508*^9, 
   3.691940596773015*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.01150900000000000013289369604763123789`4.0816375033430425", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.01150900000000000013289369604763123789`4.0816375033430425, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, {3.691821874285363*^9, 3.691821893560688*^9}, 
   3.691822087088835*^9, 3.691896836270317*^9, 3.691939040188508*^9, 
   3.6919405967846117`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00162400000000000000952016243616071733`3.2311859381847805", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00162400000000000000952016243616071733`3.2311859381847805, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, {3.691821874285363*^9, 3.691821893560688*^9}, 
   3.691822087088835*^9, 3.691896836270317*^9, 3.691939040188508*^9, 
   3.691940596795177*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.01210999999999999923727678208251745673`4.103744056422676", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.01210999999999999923727678208251745673`4.103744056422676, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, {3.691821874285363*^9, 3.691821893560688*^9}, 
   3.691822087088835*^9, 3.691896836270317*^9, 3.691939040188508*^9, 
   3.691940596806141*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00165500000000000000409394740330526474`3.2393979113913614", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00165500000000000000409394740330526474`3.2393979113913614, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, {3.691821874285363*^9, 3.691821893560688*^9}, 
   3.691822087088835*^9, 3.691896836270317*^9, 3.691939040188508*^9, 
   3.691940596816257*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.01664399999999999907318581904291932005`4.241857620400534", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.01664399999999999907318581904291932005`4.241857620400534, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, {3.691821874285363*^9, 3.691821893560688*^9}, 
   3.691822087088835*^9, 3.691896836270317*^9, 3.691939040188508*^9, 
   3.69194059682652*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00170699999999999996701249838082503629`3.2528334343943577", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00170699999999999996701249838082503629`3.2528334343943577, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, {3.691821874285363*^9, 3.691821893560688*^9}, 
   3.691822087088835*^9, 3.691896836270317*^9, 3.691939040188508*^9, 
   3.691940596838426*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.01917999999999999913291581776775274193`4.303448516114269", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.01917999999999999913291581776775274193`4.303448516114269, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, {3.691821874285363*^9, 3.691821893560688*^9}, 
   3.691822087088835*^9, 3.691896836270317*^9, 3.691939040188508*^9, 
   3.691940596848431*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00171199999999999998012700785920969793`3.2541036736207585", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00171199999999999998012700785920969793`3.2541036736207585, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, {3.691821874285363*^9, 3.691821893560688*^9}, 
   3.691822087088835*^9, 3.691896836270317*^9, 3.691939040188508*^9, 
   3.691940596858612*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.02516200000000000033817393330082268221`4.421345071294629", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.02516200000000000033817393330082268221`4.421345071294629, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, {3.691821874285363*^9, 3.691821893560688*^9}, 
   3.691822087088835*^9, 3.691896836270317*^9, 3.691939040188508*^9, 
   3.691940596869499*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.0018120000000000000255767629298020438`3.278758106620418", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.0018120000000000000255767629298020438`3.278758106620418, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, {3.691821874285363*^9, 3.691821893560688*^9}, 
   3.691822087088835*^9, 3.691896836270317*^9, 3.691939040188508*^9, 
   3.691940596879674*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.03039999999999999993893773364561639028`4.503473496888378", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.03039999999999999993893773364561639028`4.503473496888378, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, {3.691821874285363*^9, 3.691821893560688*^9}, 
   3.691822087088835*^9, 3.691896836270317*^9, 3.691939040188508*^9, 
   3.691940596889763*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00180400000000000004796163466380676255`3.2768364464855466", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00180400000000000004796163466380676255`3.2768364464855466, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, {3.691821874285363*^9, 3.691821893560688*^9}, 
   3.691822087088835*^9, 3.691896836270317*^9, 3.691939040188508*^9, 
   3.691940596899817*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.03780399999999999732791522433217323851`4.598137667773461", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.03780399999999999732791522433217323851`4.598137667773461, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, {3.691821874285363*^9, 3.691821893560688*^9}, 
   3.691822087088835*^9, 3.691896836270317*^9, 3.691939040188508*^9, 
   3.6919405969127913`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00186600000000000003710920459809585736`3.2915115526901055", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00186600000000000003710920459809585736`3.2915115526901055, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, {3.691821874285363*^9, 3.691821893560688*^9}, 
   3.691822087088835*^9, 3.691896836270317*^9, 3.691939040188508*^9, 
   3.691940596923111*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.04597299999999999997601918266809661873`4.683102758142279", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.04597299999999999997601918266809661873`4.683102758142279, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, {3.691821874285363*^9, 3.691821893560688*^9}, 
   3.691822087088835*^9, 3.691896836270317*^9, 3.691939040188508*^9, 
   3.691940596990479*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.0022130000000000001232625113090080049`3.3655813272068817", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.0022130000000000001232625113090080049`3.3655813272068817, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, {3.691821874285363*^9, 3.691821893560688*^9}, 
   3.691822087088835*^9, 3.691896836270317*^9, 3.691939040188508*^9, 
   3.691940596999325*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.06265300000000000035793590313915046863`4.817541784336088", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.06265300000000000035793590313915046863`4.817541784336088, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, {3.691821874285363*^9, 3.691821893560688*^9}, 
   3.691822087088835*^9, 3.691896836270317*^9, 3.691939040188508*^9, 
   3.691940597052092*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00404800000000000038263836543706020166`3.6278404171113667", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00404800000000000038263836543706020166`3.6278404171113667, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, {3.691821874285363*^9, 3.691821893560688*^9}, 
   3.691822087088835*^9, 3.691896836270317*^9, 3.691939040188508*^9, 
   3.691940597063785*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.09452099999999999391242511137534165755`4.996128220952022", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.09452099999999999391242511137534165755`4.996128220952022, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, {3.691821874285363*^9, 3.691821893560688*^9}, 
   3.691822087088835*^9, 3.691896836270317*^9, 3.691939040188508*^9, 
   3.691940597145157*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00223900000000000010472178679776789068`3.3706540068586546", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00223900000000000010472178679776789068`3.3706540068586546, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, {3.691821874285363*^9, 3.691821893560688*^9}, 
   3.691822087088835*^9, 3.691896836270317*^9, 3.691939040188508*^9, 
   3.6919405971523247`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.08769599999999999617728008161066100001`4.96357969800775", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.08769599999999999617728008161066100001`4.96357969800775, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, {3.691821874285363*^9, 3.691821893560688*^9}, 
   3.691822087088835*^9, 3.691896836270317*^9, 3.691939040188508*^9, 
   3.691940597208844*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00228899999999999980218601258741273341`3.380245705954167", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00228899999999999980218601258741273341`3.380245705954167, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, {3.691821874285363*^9, 3.691821893560688*^9}, 
   3.691822087088835*^9, 3.691896836270317*^9, 3.691939040188508*^9, 
   3.6919405972174*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.10372699999999999975752729142186581157`5.036491730659545", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.10372699999999999975752729142186581157`5.036491730659545, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, {3.691821874285363*^9, 3.691821893560688*^9}, 
   3.691822087088835*^9, 3.691896836270317*^9, 3.691939040188508*^9, 
   3.69194059731638*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00253199999999999996250221734328533785`3.424063614624942", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00253199999999999996250221734328533785`3.424063614624942, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, {3.691821874285363*^9, 3.691821893560688*^9}, 
   3.691822087088835*^9, 3.691896836270317*^9, 3.691939040188508*^9, 
   3.691940597325883*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.10930600000000000038280489889075397514`5.059243915077199", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.10930600000000000038280489889075397514`5.059243915077199, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, {3.691821874285363*^9, 3.691821893560688*^9}, 
   3.691822087088835*^9, 3.691896836270317*^9, 3.691939040188508*^9, 
   3.691940597428368*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00211699999999999995820010312286285625`3.3463207712990357", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00211699999999999995820010312286285625`3.3463207712990357, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, {3.691821874285363*^9, 3.691821893560688*^9}, 
   3.691822087088835*^9, 3.691896836270317*^9, 3.691939040188508*^9, 
   3.6919405974352818`*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["PBC", "Subsection",
 CellChangeTimes->{{3.68716132611775*^9, 3.6871613269568377`*^9}, {
  3.6871844933795433`*^9, 3.6871844936208563`*^9}, {3.687184643615799*^9, 
  3.6871846437672253`*^9}}],

Cell[CellGroupData[{

Cell["Kn = 0.1", "Subsubsection",
 CellChangeTimes->{{3.687172475923855*^9, 3.687172477499001*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"resultPBCKn0p1", "[", "ii", "]"}], "=", 
     RowBox[{
      RowBox[{"ReturnError", "[", 
       RowBox[{"ii", ",", "0.1", ",", "1", ",", "HighOrderKn0p1"}], "]"}], 
      "\[LeftDoubleBracket]", 
      RowBox[{"-", "2"}], "\[RightDoubleBracket]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6871845035145407`*^9, 3.68718454682244*^9}, 
   3.687184600592345*^9, {3.687184649469245*^9, 3.687184654528269*^9}, 
   3.6872015683229847`*^9, {3.6919390801855297`*^9, 3.691939085226756*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00928499999999999985067500318791644531`3.9883818213554236", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.00928499999999999985067500318791644531`3.9883818213554236, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.687184655671506*^9, 3.691822134598716*^9, 
   3.691896859960793*^9, 3.6919391195417557`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00352300000000000008981704269217516412`3.5675125564608665", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00352300000000000008981704269217516412`3.5675125564608665, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.687184655671506*^9, 3.691822134598716*^9, 
   3.691896859960793*^9, 3.6919391195901403`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.0134269999999999996992405826290450932`4.148578902196533", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.0134269999999999996992405826290450932`4.148578902196533, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.687184655671506*^9, 3.691822134598716*^9, 
   3.691896859960793*^9, 3.691939119619542*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00315299999999999998670507928011375043`3.5193238840275285", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00315299999999999998670507928011375043`3.5193238840275285, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.687184655671506*^9, 3.691822134598716*^9, 
   3.691896859960793*^9, 3.691939119631287*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.01318599999999999980437870306104741758`4.140712984687308", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.01318599999999999980437870306104741758`4.140712984687308, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.687184655671506*^9, 3.691822134598716*^9, 
   3.691896859960793*^9, 3.691939119640787*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00263400000000000005656586310465172573`3.441215683905389", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00263400000000000005656586310465172573`3.441215683905389, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.687184655671506*^9, 3.691822134598716*^9, 
   3.691896859960793*^9, 3.6919391196502132`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.01657300000000000092525986872260546079`4.240001043637184", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.01657300000000000092525986872260546079`4.240001043637184, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.687184655671506*^9, 3.691822134598716*^9, 
   3.691896859960793*^9, 3.691939119661092*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00374699999999999989672150313424481283`3.594283606373422", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00374699999999999989672150313424481283`3.594283606373422, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.687184655671506*^9, 3.691822134598716*^9, 
   3.691896859960793*^9, 3.6919391196734867`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.02974500000000000060618177144533547107`4.494013886540608", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.02974500000000000060618177144533547107`4.494013886540608, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.687184655671506*^9, 3.691822134598716*^9, 
   3.691896859960793*^9, 3.691939119691104*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00347199999999999982594478531439108338`3.5611796297840783", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00347199999999999982594478531439108338`3.5611796297840783, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.687184655671506*^9, 3.691822134598716*^9, 
   3.691896859960793*^9, 3.691939119704503*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.03213499999999999690025731524656293914`4.5275782175260435", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.03213499999999999690025731524656293914`4.5275782175260435, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.687184655671506*^9, 3.691822134598716*^9, 
   3.691896859960793*^9, 3.691939119716455*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00180499999999999996384836276064334015`3.277077119521301", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00180499999999999996384836276064334015`3.277077119521301, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.687184655671506*^9, 3.691822134598716*^9, 
   3.691896859960793*^9, 3.691939119734707*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.03713799999999999740252221158698375802`4.590418425167189", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.03713799999999999740252221158698375802`4.590418425167189, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.687184655671506*^9, 3.691822134598716*^9, 
   3.691896859960793*^9, 3.6919391197443743`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00188100000000000007645273303324984226`3.294988708830003", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00188100000000000007645273303324984226`3.294988708830003, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.687184655671506*^9, 3.691822134598716*^9, 
   3.691896859960793*^9, 3.691939119754672*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.05113800000000000289812618348150863312`4.729343652105866", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.05113800000000000289812618348150863312`4.729343652105866, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.687184655671506*^9, 3.691822134598716*^9, 
   3.691896859960793*^9, 3.691939119763852*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00204199999999999997832289544419381855`3.3306556510305154", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00204199999999999997832289544419381855`3.3306556510305154, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.687184655671506*^9, 3.691822134598716*^9, 
   3.691896859960793*^9, 3.691939119772746*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.04050999999999999739985767632788338233`4.628162156463213", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.04050999999999999739985767632788338233`4.628162156463213, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.687184655671506*^9, 3.691822134598716*^9, 
   3.691896859960793*^9, 3.691939119820805*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00196599999999999986571852517158731644`3.314183426775741", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00196599999999999986571852517158731644`3.314183426775741, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.687184655671506*^9, 3.691822134598716*^9, 
   3.691896859960793*^9, 3.6919391198297367`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.06191699999999999981525888870237395167`4.812409819045403", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.06191699999999999981525888870237395167`4.812409819045403, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.687184655671506*^9, 3.691822134598716*^9, 
   3.691896859960793*^9, 3.691939119897245*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00268400000000000018771095788849834207`3.4493824247765783", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00268400000000000018771095788849834207`3.4493824247765783, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.687184655671506*^9, 3.691822134598716*^9, 
   3.691896859960793*^9, 3.691939119913253*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.09133499999999999952038365336193237454`4.981237146389828", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.09133499999999999952038365336193237454`4.981237146389828, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.687184655671506*^9, 3.691822134598716*^9, 
   3.691896859960793*^9, 3.6919391199762363`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00445700000000000002425837308805967041`3.6696425473658003", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00445700000000000002425837308805967041`3.6696425473658003, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.687184655671506*^9, 3.691822134598716*^9, 
   3.691896859960793*^9, 3.691939119985804*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.09142999999999999738431455398313119076`4.98168863304752", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.09142999999999999738431455398313119076`4.98168863304752, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.687184655671506*^9, 3.691822134598716*^9, 
   3.691896859960793*^9, 3.691939120057066*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00425299999999999983613108156532689463`3.649295295993647", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00425299999999999983613108156532689463`3.649295295993647, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.687184655671506*^9, 3.691822134598716*^9, 
   3.691896859960793*^9, 3.691939120071774*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.11796299999999999841282516399587620981`5.092345722148179", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.11796299999999999841282516399587620981`5.092345722148179, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.687184655671506*^9, 3.691822134598716*^9, 
   3.691896859960793*^9, 3.691939120172496*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00212200000000000018815504709834840469`3.3473452928449463", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00212200000000000018815504709834840469`3.3473452928449463, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.687184655671506*^9, 3.691822134598716*^9, 
   3.691896859960793*^9, 3.6919391201805773`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.09130599999999999827338115210295654833`4.981099230586903", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.09130599999999999827338115210295654833`4.981099230586903, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.687184655671506*^9, 3.691822134598716*^9, 
   3.691896859960793*^9, 3.6919391202676277`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00208600000000000018046675265281919565`3.3399142173701364", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00208600000000000018046675265281919565`3.3399142173701364, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.687184655671506*^9, 3.691822134598716*^9, 
   3.691896859960793*^9, 3.6919391202781677`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.11950299999999999811528539339633425698`5.0979787212172685", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.11950299999999999811528539339633425698`5.0979787212172685, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.687184655671506*^9, 3.691822134598716*^9, 
   3.691896859960793*^9, 3.691939120396145*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00265599999999999994079735721186352748`3.444827983975604", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00265599999999999994079735721186352748`3.444827983975604, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184601092877*^9, 3.687184655671506*^9, 3.691822134598716*^9, 
   3.691896859960793*^9, 3.691939120403735*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Kn = 1.0", "Subsubsection",
 CellChangeTimes->{{3.687172475923855*^9, 3.687172477499001*^9}, {
  3.687184580191271*^9, 3.687184581542673*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"resultPBCKn1p0", "[", "ii", "]"}], "=", 
     RowBox[{
      RowBox[{"ReturnError", "[", 
       RowBox[{"ii", ",", "1", ",", "1", ",", "HighOrderKn1p0"}], "]"}], 
      "\[LeftDoubleBracket]", 
      RowBox[{"-", "2"}], "\[RightDoubleBracket]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6871845035145407`*^9, 3.68718454682244*^9}, {
   3.6871845916207047`*^9, 3.687184619762919*^9}, {3.687184663388942*^9, 
   3.687184668943635*^9}, 3.6872015736331577`*^9, {3.691939090257215*^9, 
   3.691939093702085*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00626900000000000026667557051496260101`3.8177981831185828", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.00626900000000000026667557051496260101`3.8177981831185828, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.687184669526767*^9, 3.6918221439445677`*^9, 
   3.691896863599784*^9, 3.6919391207022867`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00186999999999999991749655148254305459`3.292441519816123", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00186999999999999991749655148254305459`3.292441519816123, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.687184669526767*^9, 3.6918221439445677`*^9, 
   3.691896863599784*^9, 3.691939120709577*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00613900000000000035937919307116317214`3.8086975466599218", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.00613900000000000035937919307116317214`3.8086975466599218, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.687184669526767*^9, 3.6918221439445677`*^9, 
   3.691896863599784*^9, 3.691939120720974*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00171100000000000006424027976237312032`3.2538499228207245", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00171100000000000006424027976237312032`3.2538499228207245, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.687184669526767*^9, 3.6918221439445677`*^9, 
   3.691896863599784*^9, 3.691939120730809*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.01188099999999999920041737766496225959`4.095452909160872", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.01188099999999999920041737766496225959`4.095452909160872, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.687184669526767*^9, 3.6918221439445677`*^9, 
   3.691896863599784*^9, 3.691939120742465*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00168599999999999999866773237044981215`3.247457483568348", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00168599999999999999866773237044981215`3.247457483568348, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.687184669526767*^9, 3.6918221439445677`*^9, 
   3.691896863599784*^9, 3.6919391207519073`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.01331899999999999924249483029825569247`4.145071532199112", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.01331899999999999924249483029825569247`4.145071532199112, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.687184669526767*^9, 3.6918221439445677`*^9, 
   3.691896863599784*^9, 3.6919391207626753`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00168300000000000003416711358283919253`3.246684029255448", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00168300000000000003416711358283919253`3.246684029255448, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.687184669526767*^9, 3.6918221439445677`*^9, 
   3.691896863599784*^9, 3.6919391207719193`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.01799299999999999857824839466502453433`4.275703493235726", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.01799299999999999857824839466502453433`4.275703493235726, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.687184669526767*^9, 3.6918221439445677`*^9, 
   3.691896863599784*^9, 3.691939120781268*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00175700000000000009815759316467165263`3.265371674774919", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00175700000000000009815759316467165263`3.265371674774919, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.687184669526767*^9, 3.6918221439445677`*^9, 
   3.691896863599784*^9, 3.691939120792173*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.02176200000000000009392486788328824332`4.358298719243702", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.02176200000000000009392486788328824332`4.358298719243702, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.687184669526767*^9, 3.6918221439445677`*^9, 
   3.691896863599784*^9, 3.691939120801888*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00189999999999999999618360835285102439`3.299353514232453", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00189999999999999999618360835285102439`3.299353514232453, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.687184669526767*^9, 3.6918221439445677`*^9, 
   3.691896863599784*^9, 3.691939120810759*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.02843199999999999894040314529775059782`4.47440732374085", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.02843199999999999894040314529775059782`4.47440732374085, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.687184669526767*^9, 3.6918221439445677`*^9, 
   3.691896863599784*^9, 3.691939120819931*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00199400000000000011263212584822213103`3.320325067255261", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00199400000000000011263212584822213103`3.320325067255261, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.687184669526767*^9, 3.6918221439445677`*^9, 
   3.691896863599784*^9, 3.6919391208301888`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.03232499999999999956701302039618894923`4.530138446832056", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.03232499999999999956701302039618894923`4.530138446832056, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.687184669526767*^9, 3.6918221439445677`*^9, 
   3.691896863599784*^9, 3.691939120839869*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00197299999999999992744692534074602008`3.315726998531815", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00197299999999999992744692534074602008`3.315726998531815, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.687184669526767*^9, 3.6918221439445677`*^9, 
   3.691896863599784*^9, 3.691939120848469*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.04846000000000000307309733216243330389`4.705983323081111", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.04846000000000000307309733216243330389`4.705983323081111, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.687184669526767*^9, 3.6918221439445677`*^9, 
   3.691896863599784*^9, 3.6919391208915987`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00189299999999999993445520818369232074`3.297750527243421", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00189299999999999993445520818369232074`3.297750527243421, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.687184669526767*^9, 3.6918221439445677`*^9, 
   3.691896863599784*^9, 3.6919391209006557`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.04710400000000000003685940441755519714`4.69365770160101", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.04710400000000000003685940441755519714`4.69365770160101, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.687184669526767*^9, 3.6918221439445677`*^9, 
   3.691896863599784*^9, 3.691939120942698*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.0021679999999999997883914915064451634`3.3566591911459733", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.0021679999999999997883914915064451634`3.3566591911459733, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.687184669526767*^9, 3.6918221439445677`*^9, 
   3.691896863599784*^9, 3.6919391209537067`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.06834800000000000597122351564394193701`4.855325724039032", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.06834800000000000597122351564394193701`4.855325724039032, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.687184669526767*^9, 3.6918221439445677`*^9, 
   3.691896863599784*^9, 3.6919391209963293`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00231299999999999995187183188249946397`3.3847755460502436", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00231299999999999995187183188249946397`3.3847755460502436, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.687184669526767*^9, 3.6918221439445677`*^9, 
   3.691896863599784*^9, 3.6919391210134974`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.08303000000000000657696119787942734547`4.939834951202874", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.08303000000000000657696119787942734547`4.939834951202874, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.687184669526767*^9, 3.6918221439445677`*^9, 
   3.691896863599784*^9, 3.691939121083806*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00279599999999999987432275361243227962`3.4671370803532677", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00279599999999999987432275361243227962`3.4671370803532677, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.687184669526767*^9, 3.6918221439445677`*^9, 
   3.691896863599784*^9, 3.6919391211001453`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.09987400000000000444000392008092603646`5.020052357199608", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.09987400000000000444000392008092603646`5.020052357199608, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.687184669526767*^9, 3.6918221439445677`*^9, 
   3.691896863599784*^9, 3.691939121186701*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00205799999999999993355315197618438106`3.3340452837060384", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00205799999999999993355315197618438106`3.3340452837060384, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.687184669526767*^9, 3.6918221439445677`*^9, 
   3.691896863599784*^9, 3.691939121202944*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.1146120000000000055395688036696810741`5.079830004392205", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.1146120000000000055395688036696810741`5.079830004392205, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.687184669526767*^9, 3.6918221439445677`*^9, 
   3.691896863599784*^9, 3.691939121304945*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00245400000000000001812439087700568052`3.4104744716706095", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00245400000000000001812439087700568052`3.4104744716706095, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.687184669526767*^9, 3.6918221439445677`*^9, 
   3.691896863599784*^9, 3.691939121321699*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.13575899999999999079314250138850184157`5.153368543590411", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.13575899999999999079314250138850184157`5.153368543590411, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.687184669526767*^9, 3.6918221439445677`*^9, 
   3.691896863599784*^9, 3.691939121446658*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00250700000000000011377010444846291648`3.4197542472378406", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00250700000000000011377010444846291648`3.4197542472378406, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.687184669526767*^9, 3.6918221439445677`*^9, 
   3.691896863599784*^9, 3.691939121461173*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Kn = 10.0", "Subsubsection",
 CellChangeTimes->{{3.687172475923855*^9, 3.687172477499001*^9}, {
  3.687184583614194*^9, 3.687184585045911*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"resultPBCKn10p0", "[", "ii", "]"}], "=", 
     RowBox[{
      RowBox[{"ReturnError", "[", 
       RowBox[{"ii", ",", "10.0", ",", "1", ",", "HighOrderKn10p0"}], "]"}], 
      "\[LeftDoubleBracket]", 
      RowBox[{"-", "2"}], "\[RightDoubleBracket]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6871845035145407`*^9, 3.68718454682244*^9}, {
   3.6871846274714603`*^9, 3.687184633728773*^9}, {3.687184677829267*^9, 
   3.687184684528091*^9}, 3.687201587147258*^9, {3.691939098713923*^9, 
   3.691939101992947*^9}, 3.69194060600989*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00711000000000000000055511151231257827`3.8724695140093903", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.00711000000000000000055511151231257827`3.8724695140093903, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, 3.691822162128457*^9, 
   3.6918968670011873`*^9, 3.691939121586611*^9, 3.6919406063589478`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00182000000000000000319189119579732505`3.280671301264699", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00182000000000000000319189119579732505`3.280671301264699, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, 3.691822162128457*^9, 
   3.6918968670011873`*^9, 3.691939121586611*^9, 3.691940606367909*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.0064910000000000002418065747633590945`3.8329115224107477", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.0064910000000000002418065747633590945`3.8329115224107477, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, 3.691822162128457*^9, 
   3.6918968670011873`*^9, 3.691939121586611*^9, 3.691940606378439*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00156400000000000006898648319264566453`3.2148366620034534", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00156400000000000006898648319264566453`3.2148366620034534, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, 3.691822162128457*^9, 
   3.6918968670011873`*^9, 3.691939121586611*^9, 3.691940606388348*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.01093900000000000080624396048278867966`4.059577535612316", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.01093900000000000080624396048278867966`4.059577535612316, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, 3.691822162128457*^9, 
   3.6918968670011873`*^9, 3.691939121586611*^9, 3.691940606399613*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00187499999999999993061106096092771622`3.2936011853433613", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00187499999999999993061106096092771622`3.2936011853433613, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, 3.691822162128457*^9, 
   3.6918968670011873`*^9, 3.691939121586611*^9, 3.691940606409176*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.01105599999999999985544896219380461844`4.064197943309748", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.01105599999999999985544896219380461844`4.064197943309748, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, 3.691822162128457*^9, 
   3.6918968670011873`*^9, 3.691939121586611*^9, 3.691940606419964*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00174000000000000001020017403874362572`3.2611491615622237", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00174000000000000001020017403874362572`3.2611491615622237, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, 3.691822162128457*^9, 
   3.6918968670011873`*^9, 3.691939121586611*^9, 3.691940606429564*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.0157309999999999984565679511661073775`4.217356244337611", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.0157309999999999984565679511661073775`4.217356244337611, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, 3.691822162128457*^9, 
   3.6918968670011873`*^9, 3.691939121586611*^9, 3.6919406064388323`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00189400000000000006718237077762978515`3.2979798879468785", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00189400000000000006718237077762978515`3.2979798879468785, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, 3.691822162128457*^9, 
   3.6918968670011873`*^9, 3.691939121586611*^9, 3.691940606449747*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.02021399999999999932964733773133048089`4.326252174644388", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.02021399999999999932964733773133048089`4.326252174644388, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, 3.691822162128457*^9, 
   3.6918968670011873`*^9, 3.691939121586611*^9, 3.691940606459147*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00183099999999999994530763824940322593`3.2832882575813205", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00183099999999999994530763824940322593`3.2832882575813205, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, 3.691822162128457*^9, 
   3.6918968670011873`*^9, 3.691939121586611*^9, 3.6919406064685163`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.02627200000000000021382895454280514969`4.440093048718971", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.02627200000000000021382895454280514969`4.440093048718971, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, 3.691822162128457*^9, 
   3.6918968670011873`*^9, 3.691939121586611*^9, 3.691940606478294*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00190500000000000000929811783123568603`3.3004948932912623", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00190500000000000000929811783123568603`3.3004948932912623, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, 3.691822162128457*^9, 
   3.6918968670011873`*^9, 3.691939121586611*^9, 3.691940606488161*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.02954700000000000034705571749782393454`4.491113305448289", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.02954700000000000034705571749782393454`4.491113305448289, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, 3.691822162128457*^9, 
   3.6918968670011873`*^9, 3.691939121586611*^9, 3.691940606497326*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.0018120000000000000255767629298020438`3.278758106620418", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.0018120000000000000255767629298020438`3.278758106620418, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, 3.691822162128457*^9, 
   3.6918968670011873`*^9, 3.691939121586611*^9, 3.6919406065065413`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.0385459999999999969322317383557674475`4.606579230347279", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.0385459999999999969322317383557674475`4.606579230347279, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, 3.691822162128457*^9, 
   3.6918968670011873`*^9, 3.691939121586611*^9, 3.6919406065446463`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00195199999999999995910215933037079594`3.311079726610297", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00195199999999999995910215933037079594`3.311079726610297, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, 3.691822162128457*^9, 
   3.6918968670011873`*^9, 3.691939121586611*^9, 3.691940606553492*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.04599099999999999716093768142854969483`4.683272765988264", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.04599099999999999716093768142854969483`4.683272765988264, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, 3.691822162128457*^9, 
   3.6918968670011873`*^9, 3.691939121586611*^9, 3.691940606601255*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00210999999999999989647170295370415261`3.344882368577317", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00210999999999999989647170295370415261`3.344882368577317, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, 3.691822162128457*^9, 
   3.6918968670011873`*^9, 3.691939121586611*^9, 3.6919406066099167`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.06044100000000000166844316140668524895`4.80193155443452", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.06044100000000000166844316140668524895`4.80193155443452, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, 3.691822162128457*^9, 
   3.6918968670011873`*^9, 3.691939121586611*^9, 3.691940606645049*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00206799999999999995978217093295370432`3.3361504477015287", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00206799999999999995978217093295370432`3.3361504477015287, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, 3.691822162128457*^9, 
   3.6918968670011873`*^9, 3.691939121586611*^9, 3.6919406066537523`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.07012300000000000477218264904877287336`4.866460401071823", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.07012300000000000477218264904877287336`4.866460401071823, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, 3.691822162128457*^9, 
   3.6918968670011873`*^9, 3.691939121586611*^9, 3.691940606738213*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00205699999999999980082598938224691665`3.333834204974348", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00205699999999999980082598938224691665`3.333834204974348, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, 3.691822162128457*^9, 
   3.6918968670011873`*^9, 3.691939121586611*^9, 3.6919406067458572`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.08704800000000000037569947153315297328`4.960358710571664", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.08704800000000000037569947153315297328`4.960358710571664, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, 3.691822162128457*^9, 
   3.6918968670011873`*^9, 3.691939121586611*^9, 3.691940606798807*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00281599999999999992678079152597092616`3.4702325637496987", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00281599999999999992678079152597092616`3.4702325637496987, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, 3.691822162128457*^9, 
   3.6918968670011873`*^9, 3.691939121586611*^9, 3.691940606809566*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.09754699999999999482369616998767014593`5.009813830746909", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.09754699999999999482369616998767014593`5.009813830746909, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, 3.691822162128457*^9, 
   3.6918968670011873`*^9, 3.691939121586611*^9, 3.691940606896495*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00230899999999999985464405050095137995`3.3840238461968006", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00230899999999999985464405050095137995`3.3840238461968006, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, 3.691822162128457*^9, 
   3.6918968670011873`*^9, 3.691939121586611*^9, 3.69194060690489*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.10751099999999999545785556165355956182`5.052052814693115", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.10751099999999999545785556165355956182`5.052052814693115, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, 3.691822162128457*^9, 
   3.6918968670011873`*^9, 3.691939121586611*^9, 3.6919406070067873`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00208999999999999984401366504016550607`3.340746199390678", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00208999999999999984401366504016550607`3.340746199390678, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, 3.691822162128457*^9, 
   3.6918968670011873`*^9, 3.691939121586611*^9, 3.691940607013562*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Kn = 100.0", "Subsubsection",
 CellChangeTimes->{{3.687172475923855*^9, 3.687172477499001*^9}, {
   3.687184583614194*^9, 3.687184585045911*^9}, 3.6918221685067673`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"resultPBCKn100p0", "[", "ii", "]"}], "=", 
     RowBox[{
      RowBox[{"ReturnError", "[", 
       RowBox[{"ii", ",", "100.0", ",", "1", ",", "HighOrderKn100p0"}], "]"}],
       "\[LeftDoubleBracket]", 
      RowBox[{"-", "2"}], "\[RightDoubleBracket]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6871845035145407`*^9, 3.68718454682244*^9}, {
   3.6871846274714603`*^9, 3.687184633728773*^9}, {3.687184677829267*^9, 
   3.687184684528091*^9}, 3.687201587147258*^9, {3.691822173327374*^9, 
   3.691822176956794*^9}, {3.691939107478198*^9, 3.691939111472188*^9}, 
   3.6919406125558453`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00632299999999999962768670869195375417`3.821523095092842", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.00632299999999999962768670869195375417`3.821523095092842, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, {3.691822162128457*^9, 
   3.69182217750497*^9}, 3.691896870343734*^9, 3.691939122364584*^9, 
   3.6919406128807383`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00166200000000000006582234757246396839`3.2412309327277162", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00166200000000000006582234757246396839`3.2412309327277162, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, {3.691822162128457*^9, 
   3.69182217750497*^9}, 3.691896870343734*^9, 3.691939122364584*^9, 
   3.691940612911851*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.01030000000000000012767564783189300215`4.033437137984796", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.01030000000000000012767564783189300215`4.033437137984796, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, {3.691822162128457*^9, 
   3.69182217750497*^9}, 3.691896870343734*^9, 3.691939122364584*^9, 
   3.6919406129222603`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00157200000000000004660161145864094578`3.2170524549830133", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00157200000000000004660161145864094578`3.2170524549830133, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, {3.691822162128457*^9, 
   3.69182217750497*^9}, 3.691896870343734*^9, 3.691939122364584*^9, 
   3.6919406129325333`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.01186199999999999928068650234536107746`4.09475783297694", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.01186199999999999928068650234536107746`4.09475783297694, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, {3.691822162128457*^9, 
   3.69182217750497*^9}, 3.691896870343734*^9, 3.691939122364584*^9, 
   3.691940612942298*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00226299999999999982072673709865284764`3.3752844672343527", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00226299999999999982072673709865284764`3.3752844672343527, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, {3.691822162128457*^9, 
   3.69182217750497*^9}, 3.691896870343734*^9, 3.691939122364584*^9, 
   3.6919406129523706`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.0122520000000000007372991106535664585`4.108806901414159", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.0122520000000000007372991106535664585`4.108806901414159, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, {3.691822162128457*^9, 
   3.69182217750497*^9}, 3.691896870343734*^9, 3.691939122364584*^9, 
   3.691940612961501*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00165799999999999996859456619091588436`3.240184439493879", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00165799999999999996859456619091588436`3.240184439493879, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, {3.691822162128457*^9, 
   3.69182217750497*^9}, 3.691896870343734*^9, 3.691939122364584*^9, 
   3.691940612971244*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.01735499999999999889976898259646986844`4.260024531287055", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.01735499999999999889976898259646986844`4.260024531287055, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, {3.691822162128457*^9, 
   3.69182217750497*^9}, 3.691896870343734*^9, 3.691939122364584*^9, 
   3.691940612980287*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00170999999999999993151311716843565591`3.2535960236717782", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00170999999999999993151311716843565591`3.2535960236717782, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, {3.691822162128457*^9, 
   3.69182217750497*^9}, 3.691896870343734*^9, 3.691939122364584*^9, 
   3.6919406129894123`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.01946300000000000113287157432750973385`4.30980969592461", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.01946300000000000113287157432750973385`4.30980969592461, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, {3.691822162128457*^9, 
   3.69182217750497*^9}, 3.691896870343734*^9, 3.691939122364584*^9, 
   3.691940613001034*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00169600000000000002489675132721913542`3.250025761200319", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00169600000000000002489675132721913542`3.250025761200319, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, {3.691822162128457*^9, 
   3.69182217750497*^9}, 3.691896870343734*^9, 3.691939122364584*^9, 
   3.691940613010069*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.02541500000000000009103828801926283631`4.425690027318347", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.02541500000000000009103828801926283631`4.425690027318347, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, {3.691822162128457*^9, 
   3.69182217750497*^9}, 3.691896870343734*^9, 3.691939122364584*^9, 
   3.691940613019068*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00179999999999999995073385328225867852`3.27587241838293", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00179999999999999995073385328225867852`3.27587241838293, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, {3.691822162128457*^9, 
   3.69182217750497*^9}, 3.691896870343734*^9, 3.691939122364584*^9, 
   3.691940613028837*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.03070799999999999918554038913498516195`4.507851445214435", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.03070799999999999918554038913498516195`4.507851445214435, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, {3.691822162128457*^9, 
   3.69182217750497*^9}, 3.691896870343734*^9, 3.691939122364584*^9, 
   3.6919406130378437`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00177399999999999996927457779349879274`3.2695535287753317", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00177399999999999996927457779349879274`3.2695535287753317, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, {3.691822162128457*^9, 
   3.69182217750497*^9}, 3.691896870343734*^9, 3.691939122364584*^9, 
   3.691940613046892*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.03953299999999999869704225829991628416`4.617559685730593", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.03953299999999999869704225829991628416`4.617559685730593, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, {3.691822162128457*^9, 
   3.69182217750497*^9}, 3.691896870343734*^9, 3.691939122364584*^9, 
   3.6919406130931253`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00186600000000000003710920459809585736`3.2915115526901055", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00186600000000000003710920459809585736`3.2915115526901055, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, {3.691822162128457*^9, 
   3.69182217750497*^9}, 3.691896870343734*^9, 3.691939122364584*^9, 
   3.6919406131018343`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.04555300000000000321120907642580277752`4.67911689701548", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.04555300000000000321120907642580277752`4.67911689701548, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, {3.691822162128457*^9, 
   3.69182217750497*^9}, 3.691896870343734*^9, 3.691939122364584*^9, 
   3.6919406131461267`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.0020799999999999998177846460833961828`3.3386632482423857", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.0020799999999999998177846460833961828`3.3386632482423857, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, {3.691822162128457*^9, 
   3.69182217750497*^9}, 3.691896870343734*^9, 3.691939122364584*^9, 
   3.691940613155468*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.0603440000000000018043344596208044095`4.801234007987512", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.0603440000000000018043344596208044095`4.801234007987512, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, {3.691822162128457*^9, 
   3.69182217750497*^9}, 3.691896870343734*^9, 3.691939122364584*^9, 
   3.69194061320714*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00214500000000000020511370379949767084`3.3520272098003674", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00214500000000000020511370379949767084`3.3520272098003674, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, {3.691822162128457*^9, 
   3.69182217750497*^9}, 3.691896870343734*^9, 3.691939122364584*^9, 
   3.691940613215626*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.07308099999999999318855969931973959319`4.884404394646366", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.07308099999999999318855969931973959319`4.884404394646366, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, {3.691822162128457*^9, 
   3.69182217750497*^9}, 3.691896870343734*^9, 3.691939122364584*^9, 
   3.691940613287693*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00292299999999999981711851226862108888`3.4864287286370605", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00292299999999999981711851226862108888`3.4864287286370605, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, {3.691822162128457*^9, 
   3.69182217750497*^9}, 3.691896870343734*^9, 3.691939122364584*^9, 
   3.6919406132952833`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.08558200000000000529087884615364600904`4.952982344747642", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.08558200000000000529087884615364600904`4.952982344747642, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, {3.691822162128457*^9, 
   3.69182217750497*^9}, 3.691896870343734*^9, 3.691939122364584*^9, 
   3.691940613345923*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00257099999999999993469113057642516651`3.430701989922485", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00257099999999999993469113057642516651`3.430701989922485, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, {3.691822162128457*^9, 
   3.69182217750497*^9}, 3.691896870343734*^9, 3.691939122364584*^9, 
   3.69194061335457*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.11085399999999999420818852513548335992`5.065351281876596", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.11085399999999999420818852513548335992`5.065351281876596, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, {3.691822162128457*^9, 
   3.69182217750497*^9}, 3.691896870343734*^9, 3.691939122364584*^9, 
   3.6919406134598837`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.00214599999999999990415999739923336165`3.3522296309095565", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.00214599999999999990415999739923336165`3.3522296309095565, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, {3.691822162128457*^9, 
   3.69182217750497*^9}, 3.691896870343734*^9, 3.691939122364584*^9, 
   3.6919406134701357`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.11368799999999999739141998134073219262`5.076314539719187", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   0.11368799999999999739141998134073219262`5.076314539719187, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, {3.691822162128457*^9, 
   3.69182217750497*^9}, 3.691896870343734*^9, 3.691939122364584*^9, 
   3.6919406135765953`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.0025249999999999999007738171741266342`3.4228612957343043", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.0025249999999999999007738171741266342`3.4228612957343043, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184634294688*^9, 3.687184685029045*^9, {3.691822162128457*^9, 
   3.69182217750497*^9}, 3.691896870343734*^9, 3.691939122364584*^9, 
   3.691940613584022*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["PBC Optimal", "Subsection",
 CellChangeTimes->{{3.68716132611775*^9, 3.6871613269568377`*^9}, {
  3.6871844933795433`*^9, 3.6871844936208563`*^9}, {3.687184690423048*^9, 
  3.687184692760129*^9}}],

Cell[CellGroupData[{

Cell["Kn = 0.1", "Subsubsection",
 CellChangeTimes->{{3.687172475923855*^9, 3.687172477499001*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"resultPBCOptKn0p1", "[", "ii", "]"}], "=", 
     RowBox[{"ReturnError", "[", 
      RowBox[{"ii", ",", "0.1", ",", "2"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6871845035145407`*^9, 3.68718454682244*^9}, 
   3.687184600592345*^9, {3.687184697425428*^9, 3.687184704568437*^9}, 
   3.687201593971016*^9, 3.687202127996615*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "3.32827999999999990521359904960263520479`6.54281976856049", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   3.32827999999999990521359904960263520479`6.54281976856049, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.691823699309032*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.56652199999999997004351826035417616367`5.77381669295668", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.56652199999999997004351826035417616367`5.77381669295668, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.691823699318838*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "3.95539899999999988722265698015689849854`6.6177902126829835", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   3.95539899999999988722265698015689849854`6.6177902126829835, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.691823703805578*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.53099499999999999477751089216326363385`5.745690344939939", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.53099499999999999477751089216326363385`5.745690344939939, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.691823703815641*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "6.03347000000000033281821743003092706203`6.801167070927539", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   6.03347000000000033281821743003092706203`6.801167070927539, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.691823710473752*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.62627600000000005486811005539493635297`5.817365682369918", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.62627600000000005486811005539493635297`5.817365682369918, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.691823710483747*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "7.03236599999999967280928103718906641006`6.867701378821446", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   7.03236599999999967280928103718906641006`6.867701378821446, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.6918237181505823`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.61596200000000000951416723182774148881`5.810153833724309", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.61596200000000000951416723182774148881`5.810153833724309, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.691823718160295*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "9.96727600000000002467004378559067845345`7.019176397588265", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   9.96727600000000002467004378559067845345`7.019176397588265, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.691823728784443*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.66415800000000002611955096654128283262`5.842871321511322", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.66415800000000002611955096654128283262`5.842871321511322, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.691823728797112*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "11.78399500000000088562046585138887166977`7.091892462841212", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   11.78399500000000088562046585138887166977`7.091892462841212, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.6918237412710247`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.69166700000000003178968199790688231587`5.860496968906569", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.69166700000000003178968199790688231587`5.860496968906569, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.691823741281014*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "16.05214399999999841384124010801315307617`7.226132960312325", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   16.05214399999999841384124010801315307617`7.226132960312325, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.6918237580782127`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.73663000000000000699884594723698683083`5.887849315239663", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.73663000000000000699884594723698683083`5.887849315239663, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.6918237580890827`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "18.38193599999999960914465191308408975601`7.28499116297601", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   18.38193599999999960914465191308408975601`7.28499116297601, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.691823777228623*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.74761299999999997201172163840965367854`5.894276757857978", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.74761299999999997201172163840965367854`5.894276757857978, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.6918237772381496`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "25.21314999999999884039425523951649665833`7.422227020842516", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   25.21314999999999884039425523951649665833`7.422227020842516, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.69182380328607*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.82302600000000003532818482199218124151`5.936013468392467", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.82302600000000003532818482199218124151`5.936013468392467, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.691823803296039*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "27.89765600000000134173205879051238298416`7.466167628057498", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   27.89765600000000134173205879051238298416`7.466167628057498, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.691823832026186*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.81384699999999998709654391859658062458`5.931142680206626", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.81384699999999998709654391859658062458`5.931142680206626, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.691823832036536*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "34.97628999999999876990841585211455821991`7.564373654443493", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   34.97628999999999876990841585211455821991`7.564373654443493, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.69182386790399*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.87264600000000003277023097325582057238`5.961438015604065", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.87264600000000003277023097325582057238`5.961438015604065, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.691823867914174*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "39.26779299999999750525603303685784339905`7.614636406226732", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   39.26779299999999750525603303685784339905`7.614636406226732, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.691823908084516*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.87894200000000000105870867628254927695`5.964560130889203", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.87894200000000000105870867628254927695`5.964560130889203, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.6918239080953283`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "51.34053000000000110958353616297245025635`7.731060260959173", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   51.34053000000000110958353616297245025635`7.731060260959173, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.6918239604143467`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.95411299999999998888711161271203309298`6.000199726526943", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.95411299999999998888711161271203309298`6.000199726526943, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.691823960424265*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "54.36590499999999792635207995772361755371`7.755926535174471", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   54.36590499999999792635207995772361755371`7.755926535174471, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.691824015843439*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "1.01766899999999993475796600250760093331`6.028206458619478", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   1.01766899999999993475796600250760093331`6.028206458619478, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.6918240158529997`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "66.82811200000000440013536717742681503296`7.845559105069722", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   66.82811200000000440013536717742681503296`7.845559105069722, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.691824083705598*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.99174300000000004118305696465540677309`6.01699905706448", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.99174300000000004118305696465540677309`6.01699905706448, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.6918240837138233`*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Kn = 1.0", "Subsubsection",
 CellChangeTimes->{{3.687172475923855*^9, 3.687172477499001*^9}, {
  3.687184580191271*^9, 3.687184581542673*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"resultPBCOptKn1p0", "[", "ii", "]"}], "=", 
     RowBox[{"ReturnError", "[", 
      RowBox[{"ii", ",", "1", ",", "2"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6871845035145407`*^9, 3.68718454682244*^9}, {
   3.6871845916207047`*^9, 3.687184619762919*^9}, {3.68718471602151*^9, 
   3.687184720903755*^9}, 3.68720159861803*^9, 3.687202138280658*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "3.54780100000000020443735593289602547884`6.570559165074691", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   3.54780100000000020443735593289602547884`6.570559165074691, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.6871850954232903`*^9, 3.687185341088262*^9, 
   3.68719693193075*^9, 3.687202574473239*^9, 3.691824787384454*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.60438499999999995004884567606495693326`5.801913590491835", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.60438499999999995004884567606495693326`5.801913590491835, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.6871850954232903`*^9, 3.687185341088262*^9, 
   3.68719693193075*^9, 3.687202574473239*^9, 3.69182478739701*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "4.05620899999999995344523995299823582172`6.628720237614824", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   4.05620899999999995344523995299823582172`6.628720237614824, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.6871850954232903`*^9, 3.687185341088262*^9, 
   3.68719693193075*^9, 3.687202574473239*^9, 3.691824792010456*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.57062500000000004884981308350688777864`5.776950708157998", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.57062500000000004884981308350688777864`5.776950708157998, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.6871850954232903`*^9, 3.687185341088262*^9, 
   3.68719693193075*^9, 3.687202574473239*^9, 3.691824792024879*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "6.36971299999999995833377397502772510052`6.824719778060144", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   6.36971299999999995833377397502772510052`6.824719778060144, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.6871850954232903`*^9, 3.687185341088262*^9, 
   3.68719693193075*^9, 3.687202574473239*^9, 3.691824799025518*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.63443799999999994643218315104604698718`5.822989100666204", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.63443799999999994643218315104604698718`5.822989100666204, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.6871850954232903`*^9, 3.687185341088262*^9, 
   3.68719693193075*^9, 3.687202574473239*^9, 3.6918247990366583`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "7.47429400000000043746695155277848243713`6.89417009002397", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   7.47429400000000043746695155277848243713`6.89417009002397, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.6871850954232903`*^9, 3.687185341088262*^9, 
   3.68719693193075*^9, 3.687202574473239*^9, 3.691824807181842*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.66669100000000003358735511937993578613`5.844524505683245", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.66669100000000003358735511937993578613`5.844524505683245, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.6871850954232903`*^9, 3.687185341088262*^9, 
   3.68719693193075*^9, 3.687202574473239*^9, 3.6918248071943083`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "10.63212599999999952160578686743974685669`7.0472200280145705", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   10.63212599999999952160578686743974685669`7.0472200280145705, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.6871850954232903`*^9, 3.687185341088262*^9, 
   3.68719693193075*^9, 3.687202574473239*^9, 3.6918248185680523`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.74099999999999999200639422269887290895`5.890418121258952", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.74099999999999999200639422269887290895`5.890418121258952, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.6871850954232903`*^9, 3.687185341088262*^9, 
   3.68719693193075*^9, 3.687202574473239*^9, 3.691824818578923*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "12.35223599999999954945906210923567414284`7.112345493916898", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   12.35223599999999954945906210923567414284`7.112345493916898, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.6871850954232903`*^9, 3.687185341088262*^9, 
   3.68719693193075*^9, 3.687202574473239*^9, 3.69182483165282*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.71107399999999998385646904353052377701`5.872514712489483", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.71107399999999998385646904353052377701`5.872514712489483, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.6871850954232903`*^9, 3.687185341088262*^9, 
   3.68719693193075*^9, 3.687202574473239*^9, 3.691824831664916*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "17.46853199999999972646946844179183244705`7.262856323065802", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   17.46853199999999972646946844179183244705`7.262856323065802, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.6871850954232903`*^9, 3.687185341088262*^9, 
   3.68719693193075*^9, 3.687202574473239*^9, 3.691824849965455*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.82199699999999997768185266977525316179`5.9354701458004255", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.82199699999999997768185266977525316179`5.9354701458004255, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.6871850954232903`*^9, 3.687185341088262*^9, 
   3.68719693193075*^9, 3.687202574473239*^9, 3.691824849977418*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "20.20483000000000117779563879594206809998`7.326055113993825", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   20.20483000000000117779563879594206809998`7.326055113993825, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.6871850954232903`*^9, 3.687185341088262*^9, 
   3.68719693193075*^9, 3.687202574473239*^9, 3.69182487099094*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.78974299999999997279331864774576388299`5.918085698442634", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.78974299999999997279331864774576388299`5.918085698442634, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.6871850954232903`*^9, 3.687185341088262*^9, 
   3.68719693193075*^9, 3.687202574473239*^9, 3.691824870999542*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "26.52482300000000137174538394901901483536`7.44425240781795", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   26.52482300000000137174538394901901483536`7.44425240781795, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.6871850954232903`*^9, 3.687185341088262*^9, 
   3.68719693193075*^9, 3.687202574473239*^9, 3.691824898415271*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.87076699999999995771560179491643793881`5.960501875231745", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.87076699999999995771560179491643793881`5.960501875231745, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.6871850954232903`*^9, 3.687185341088262*^9, 
   3.68719693193075*^9, 3.687202574473239*^9, 3.6918248984234037`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "30.07518299999999911165105004329234361649`7.498808191873333", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   30.07518299999999911165105004329234361649`7.498808191873333, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.6871850954232903`*^9, 3.687185341088262*^9, 
   3.68719693193075*^9, 3.687202574473239*^9, 3.691824929410301*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.88313099999999999933919525574310682714`5.966625043082918", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.88313099999999999933919525574310682714`5.966625043082918, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.6871850954232903`*^9, 3.687185341088262*^9, 
   3.68719693193075*^9, 3.687202574473239*^9, 3.691824929418194*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "40.30607200000000034378899727016687393188`7.625970389630485", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   40.30607200000000034378899727016687393188`7.625970389630485, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.6871850954232903`*^9, 3.687185341088262*^9, 
   3.68719693193075*^9, 3.687202574473239*^9, 3.6918249706345387`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.88556400000000001782041181286331266165`5.9678198665442235", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.88556400000000001782041181286331266165`5.9678198665442235, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.6871850954232903`*^9, 3.687185341088262*^9, 
   3.68719693193075*^9, 3.687202574473239*^9, 3.691824970642736*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "41.97718199999999910687620285898447036743`7.643613193573448", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   41.97718199999999910687620285898447036743`7.643613193573448, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.6871850954232903`*^9, 3.687185341088262*^9, 
   3.68719693193075*^9, 3.687202574473239*^9, 3.6918250136404123`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.9890309999999999934772176857222802937`6.0158098175339765", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.9890309999999999934772176857222802937`6.0158098175339765, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.6871850954232903`*^9, 3.687185341088262*^9, 
   3.68719693193075*^9, 3.687202574473239*^9, 3.6918250136503687`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "54.50316099999999863712218939326703548431`7.757021603905762", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   54.50316099999999863712218939326703548431`7.757021603905762, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.6871850954232903`*^9, 3.687185341088262*^9, 
   3.68719693193075*^9, 3.687202574473239*^9, 3.69182506922827*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "1.03563800000000005852029971720185130835`6.035807890623318", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   1.03563800000000005852029971720185130835`6.035807890623318, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.6871850954232903`*^9, 3.687185341088262*^9, 
   3.68719693193075*^9, 3.687202574473239*^9, 3.691825069236595*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "10855.9412599999996018595993518829345703125`10.056267398030155", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   10855.9412599999996018595993518829345703125`10.056267398030155, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.6871850954232903`*^9, 3.687185341088262*^9, 
   3.68719693193075*^9, 3.687202574473239*^9, 3.691835926169812*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.94916699999999998293986891439999453723`5.99794254382889", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.94916699999999998293986891439999453723`5.99794254382889, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.6871850954232903`*^9, 3.687185341088262*^9, 
   3.68719693193075*^9, 3.687202574473239*^9, 3.691835926177607*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "59650.80097199999727308750152587890625`10.796216192893432", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   59650.80097199999727308750152587890625`10.796216192893432, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.6871850954232903`*^9, 3.687185341088262*^9, 
   3.68719693193075*^9, 3.687202574473239*^9, 3.691895578884145*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "1.81325800000000003642242063506273552775`6.279059515502304", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   1.81325800000000003642242063506273552775`6.279059515502304, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687184547601633*^9, 3.687184569055461*^9}, 
   3.687184620325254*^9, 3.6871850954232903`*^9, 3.687185341088262*^9, 
   3.68719693193075*^9, 3.687202574473239*^9, 3.691895578909862*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Kn = 10.0", "Subsubsection",
 CellChangeTimes->{{3.687172475923855*^9, 3.687172477499001*^9}, {
  3.687184583614194*^9, 3.687184585045911*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"resultPBCOptKn10p0", "[", "ii", "]"}], "[", "x_", "]"}], "=", 
     RowBox[{"ReturnError", "[", 
      RowBox[{"ii", ",", "10.0", ",", "2"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6871845035145407`*^9, 3.68718454682244*^9}, {
   3.6871846274714603`*^9, 3.687184633728773*^9}, {3.687184728549828*^9, 
   3.687184733455834*^9}, 3.687201605212885*^9, 3.687202145127643*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "3.98040599999999988867216416110750287771`6.6205272854957435", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   3.98040599999999988867216416110750287771`6.6205272854957435, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.68719916418705*^9, 3.687203014573537*^9, 
  3.691895584237453*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.57475200000000004063593905812012962997`5.7800804044648775", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.57475200000000004063593905812012962997`5.7800804044648775, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.68719916418705*^9, 3.687203014573537*^9, 
  3.691895584247018*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "5.25405700000000042138026401516981422901`6.741094693311554", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   5.25405700000000042138026401516981422901`6.741094693311554, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.68719916418705*^9, 3.687203014573537*^9, 
  3.691895590072983*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.59576300000000004253308816259959712625`5.795673441036123", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.59576300000000004253308816259959712625`5.795673441036123, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.68719916418705*^9, 3.687203014573537*^9, 
  3.691895590095151*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "7.99848200000000009168843462248332798481`6.923607485074237", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   7.99848200000000009168843462248332798481`6.923607485074237, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.68719916418705*^9, 3.687203014573537*^9, 
  3.691895598847941*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.76366500000000003822719918389338999987`5.903502799920997", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.76366500000000003822719918389338999987`5.903502799920997, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.68719916418705*^9, 3.687203014573537*^9, 
  3.6918955988597937`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "8.12211300000000058219029597239568829536`6.930268940656626", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   8.12211300000000058219029597239568829536`6.930268940656626, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.68719916418705*^9, 3.687203014573537*^9, 
  3.691895607722447*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.7333629999999999871107547733117826283`5.885918908212659", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.7333629999999999871107547733117826283`5.885918908212659, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.68719916418705*^9, 3.687203014573537*^9, 
  3.691895607743382*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "12.53870299999999993190158420475199818611`7.118852528795472", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   12.53870299999999993190158420475199818611`7.118852528795472, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.68719916418705*^9, 3.687203014573537*^9, 
  3.6918956211691637`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.87907100000000004680345000451779924333`5.964623866468253", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.87907100000000004680345000451779924333`5.964623866468253, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.68719916418705*^9, 3.687203014573537*^9, 
  3.691895621182852*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "13.60709899999999983322140906238928437233`7.154365457837478", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   13.60709899999999983322140906238928437233`7.154365457837478, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.68719916418705*^9, 3.687203014573537*^9, 
  3.691895635501191*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.69977299999999997837107912346255034208`5.8655570949571985", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.69977299999999997837107912346255034208`5.8655570949571985, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.68719916418705*^9, 3.687203014573537*^9, 
  3.691895635511496*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "19.52400300000000044065018300898373126984`7.311168778996506", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   19.52400300000000044065018300898373126984`7.311168778996506, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.68719916418705*^9, 3.687203014573537*^9, 
  3.691895656101304*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "1.05252999999999996560973158921115100384`6.0428343965510125", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   1.05252999999999996560973158921115100384`6.0428343965510125, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.68719916418705*^9, 3.687203014573537*^9, 
  3.69189565612031*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "19.88694999999999879491952015087008476257`7.319168095109974", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   19.88694999999999879491952015087008476257`7.319168095109974, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.68719916418705*^9, 3.687203014573537*^9, 
  3.6918956767714853`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.74015399999999997859845279890578240156`5.88992200381047", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.74015399999999997859845279890578240156`5.88992200381047, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{3.68719916418705*^9, 3.687203014573537*^9, 
  3.6918956767819433`*^9}]
}, Open  ]],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.6918956936482286`*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Plots", "Subsection",
 CellChangeTimes->{{3.68720055699953*^9, 3.68720055819031*^9}}],

Cell[CellGroupData[{

Cell["Kn = 0.1", "Subsubsection",
 CellChangeTimes->{{3.68720056374364*^9, 3.687200576369437*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"resultMBCKn0p1", "[", "ii", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"resultPBCKn0p1", "[", "ii", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"resultPBCOptKn0p1", "[", "ii", "]"}], "\[LeftDoubleBracket]",
         "2", "\[RightDoubleBracket]"}], ",", 
       RowBox[{"{", 
        RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<MBC\>\"", ",", "\"\<PBC\>\"", ",", "\"\<PBCOptimal\>\""}], 
     "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.687200594496339*^9, 3.68720061598458*^9}, {
  3.687203159047204*^9, 3.687203165296132*^9}, {3.687203527261016*^9, 
  3.687203552171722*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., 0.005181809878630698}, {2., 0.005662599923993477}, {3., 
         0.002301807745461901}, {4., 0.004425621143893586}, {5., 
         0.0008941852927501503}, {6., 0.003233258833494455}, {7., 
         0.0006211925589330192}, {8., 0.002312903077820736}, {9., 
         0.0006984176088813774}, {10., 0.0016391803511949395`}, {11., 
         0.0008188784874881474}, {12., 0.0011510607004956346`}, {13., 
         0.000982719672290217}, {14., 0.000827683591173972}, {15., 
         0.0010953448517267452`}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., 0.005181809878630698}, {2., 0.006909963955567085}, {3., 
         0.002301807745461901}, {4., 0.00517730982909277}, {5., 
         0.0008941852927501503}, {6., 0.004235201172816543}, {7., 
         0.0006211925589330192}, {8., 0.0037549389109774916`}, {9., 
         0.0006984176088813774}, {10., 0.003456239351667137}, {11., 
         0.0008188784874881474}, {12., 0.003247660064122899}, {13., 
         0.000982719672290217}, {14., 0.003089037905687308}, {15., 
         0.0010953448517267452`}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., 0.0021288606509085022`}, {2., 0.006383262924024625}, {
         3., 0.0015065245924917063`}, {4., 0.0033661959885677543`}, {5., 
         0.000633622421544244}, {6., 0.002421202572308717}, {7., 
         0.0006211925589331442}, {8., 0.001782898296583676}, {9., 
         0.0006984176088814333}, {10., 0.001330743127813258}, {11., 
         0.0007693681273509699}, {12., 0.0010120476329447683`}, {13., 
         0.0007685144513492456}, {14., 0.00089392842801675}, {15., 
         0.0007566674620603827}}]}}, {{
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledCircle]\"", FontSize -> 8.96, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], {{{1., 0.005181809878630698}}, {{2.,
          0.005662599923993477}}, {{3., 0.002301807745461901}}, {{4., 
         0.004425621143893586}}, {{5., 0.0008941852927501503}}, {{6., 
         0.003233258833494455}}, {{7., 0.0006211925589330192}}, {{8., 
         0.002312903077820736}}, {{9., 0.0006984176088813774}}, {{10., 
         0.0016391803511949395`}}, {{11., 0.0008188784874881474}}, {{12., 
         0.0011510607004956346`}}, {{13., 0.000982719672290217}}, {{14., 
         0.000827683591173972}}, {{15., 0.0010953448517267452`}}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledSquare]\"", FontSize -> 8.96, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], {{{1., 0.005181809878630698}}, {{2.,
          0.006909963955567085}}, {{3., 0.002301807745461901}}, {{4., 
         0.00517730982909277}}, {{5., 0.0008941852927501503}}, {{6., 
         0.004235201172816543}}, {{7., 0.0006211925589330192}}, {{8., 
         0.0037549389109774916`}}, {{9., 0.0006984176088813774}}, {{10., 
         0.003456239351667137}}, {{11., 0.0008188784874881474}}, {{12., 
         0.003247660064122899}}, {{13., 0.000982719672290217}}, {{14., 
         0.003089037905687308}}, {{15., 0.0010953448517267452`}}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledDiamond]\"", FontSize -> 10.88, StripOnInput -> False],
             TraditionalForm]], {0., 0.}], {{{1., 0.0021288606509085022`}}, {{
         2., 0.006383262924024625}}, {{3., 0.0015065245924917063`}}, {{4., 
         0.0033661959885677543`}}, {{5., 0.000633622421544244}}, {{6., 
         0.002421202572308717}}, {{7., 0.0006211925589331442}}, {{8., 
         0.001782898296583676}}, {{9., 0.0006984176088814333}}, {{10., 
         0.001330743127813258}}, {{11., 0.0007693681273509699}}, {{12., 
         0.0010120476329447683`}}, {{13., 0.0007685144513492456}}, {{14., 
         0.00089392842801675}}, {{15., 
         0.0007566674620603827}}}]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0., 15.}, {0, 0.006909963955567085}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, Method -> {}, 
     PlotRange -> {{0., 15.}, {0, 0.006909963955567085}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"MBC\"", "\"PBC\"", "\"PBCOptimal\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 8.96}, {20, 8.96}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], FontSize -> 8.96, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 8.96}, {20, 8.96}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledSquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], FontSize -> 8.96, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10.88}, {20, 10.88}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], FontSize -> 10.88, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10.88}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.13235294117647062`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}], "}"}]}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledCircle]\"", ",", "8.96`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledSquare]\"", ",", "8.96`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledDiamond]\"", ",", "10.88`"}], "}"}]}], 
               "}"}]}]}], "]"}]& ), Editable -> True], TraditionalForm], 
    TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.687200588473811*^9, 3.687200616523519*^9}, 
   3.687203452227573*^9, {3.6872035309825706`*^9, 3.687203552532716*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Kn = 1.0", "Subsubsection",
 CellChangeTimes->{{3.68720056374364*^9, 3.687200576369437*^9}, {
  3.687200634894012*^9, 3.6872006361057253`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogLogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"resultMBCKn1p0", "[", "ii", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"resultPBCKn1p0", "[", "ii", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"resultPBCOptKn1p0", "[", "ii", "]"}], "\[LeftDoubleBracket]",
         "2", "\[RightDoubleBracket]"}], ",", 
       RowBox[{"{", 
        RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<MBC\>\"", ",", "\"\<PBC\>\"", ",", "\"\<PBCOptimal\>\""}], 
     "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.687200594496339*^9, 3.687200687458865*^9}, {
  3.687203135953068*^9, 3.687203152925349*^9}, {3.687203562784878*^9, 
  3.687203570862899*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., -3.295957501281295}, {
         0.6931471805599453, -2.9426135408750556`}, {
         1.0986122886681098`, -3.789934369551687}, {
         1.3862943611198906`, -3.133009471292029}, {
         1.6094379124341003`, -4.252320536880548}, {
         1.791759469228055, -3.2958773470883274`}, {
         1.9459101490553132`, -4.718199857595699}, {
         2.0794415416798357`, -3.4397991394216905`}, {
         2.1972245773362196`, -5.172795001814619}, {
         2.302585092994046, -3.5697614373744644`}, {
         2.3978952727983707`, -5.391475034782856}, {
         2.4849066497880004`, -3.688941374556637}, {
         2.5649493574615367`, -5.514612248589526}, {
         2.6390573296152584`, -3.7994989647104895`}, {
         2.70805020110221, -5.496677123319093}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., -3.295957501281295}, {
         0.6931471805599453, -2.900405330468664}, {
         1.0986122886681098`, -3.789934369551687}, {
         1.3862943611198906`, -3.055251680858028}, {
         1.6094379124341003`, -4.252320536880548}, {
         1.791759469228055, -3.1859588306286}, {
         1.9459101490553132`, -4.718199857595699}, {
         2.0794415416798357`, -3.299907368071101}, {
         2.1972245773362196`, -5.172795001814619}, {
         2.302585092994046, -3.401466537226048}, {
         2.3978952727983707`, -5.391475034782856}, {
         2.4849066497880004`, -3.4934395198866595`}, {
         2.5649493574615367`, -5.514612248589526}, {
         2.6390573296152584`, -3.5777371672187477`}, {
         2.70805020110221, -5.496677123319093}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., -5.279311567563476}, {
         0.6931471805599453, -5.273033719008063}, {
         1.0986122886681098`, -5.309927892270529}, {
         1.3862943611198906`, -5.275389779015175}, {
         1.6094379124341003`, -5.343808526998768}, {
         1.791759469228055, -5.278222524034444}, {
         1.9459101490553132`, -5.388770616375332}, {
         2.0794415416798357`, -5.2862975120382965`}, {
         2.1972245773362196`, -5.426728483391932}, {
         2.302585092994046, -5.295774603817572}, {
         2.3978952727983707`, -5.4856863856607685`}, {
         2.4849066497880004`, -5.299887403049721}, {
         2.5649493574615367`, -5.536942885441188}, {
         2.6390573296152584`, -5.314120968053694}, {
         2.70805020110221, -5.58478238460162}}]}}, {{
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledCircle]\"", FontSize -> 8.96, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], {{{0., -3.295957501281295}}, {{
         0.6931471805599453, -2.9426135408750556`}}, {{
         1.0986122886681098`, -3.789934369551687}}, {{
         1.3862943611198906`, -3.133009471292029}}, {{
         1.6094379124341003`, -4.252320536880548}}, {{
         1.791759469228055, -3.2958773470883274`}}, {{
         1.9459101490553132`, -4.718199857595699}}, {{
         2.0794415416798357`, -3.4397991394216905`}}, {{
         2.1972245773362196`, -5.172795001814619}}, {{
         2.302585092994046, -3.5697614373744644`}}, {{
         2.3978952727983707`, -5.391475034782856}}, {{
         2.4849066497880004`, -3.688941374556637}}, {{
         2.5649493574615367`, -5.514612248589526}}, {{
         2.6390573296152584`, -3.7994989647104895`}}, {{
         2.70805020110221, -5.496677123319093}}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledSquare]\"", FontSize -> 8.96, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], {{{0., -3.295957501281295}}, {{
         0.6931471805599453, -2.900405330468664}}, {{
         1.0986122886681098`, -3.789934369551687}}, {{
         1.3862943611198906`, -3.055251680858028}}, {{
         1.6094379124341003`, -4.252320536880548}}, {{
         1.791759469228055, -3.1859588306286}}, {{
         1.9459101490553132`, -4.718199857595699}}, {{
         2.0794415416798357`, -3.299907368071101}}, {{
         2.1972245773362196`, -5.172795001814619}}, {{
         2.302585092994046, -3.401466537226048}}, {{
         2.3978952727983707`, -5.391475034782856}}, {{
         2.4849066497880004`, -3.4934395198866595`}}, {{
         2.5649493574615367`, -5.514612248589526}}, {{
         2.6390573296152584`, -3.5777371672187477`}}, {{
         2.70805020110221, -5.496677123319093}}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledDiamond]\"", FontSize -> 10.88, StripOnInput -> False],
             TraditionalForm]], {0., 0.}], {{{0., -5.279311567563476}}, {{
         0.6931471805599453, -5.273033719008063}}, {{
         1.0986122886681098`, -5.309927892270529}}, {{
         1.3862943611198906`, -5.275389779015175}}, {{
         1.6094379124341003`, -5.343808526998768}}, {{
         1.791759469228055, -5.278222524034444}}, {{
         1.9459101490553132`, -5.388770616375332}}, {{
         2.0794415416798357`, -5.2862975120382965`}}, {{
         2.1972245773362196`, -5.426728483391932}}, {{
         2.302585092994046, -5.295774603817572}}, {{
         2.3978952727983707`, -5.4856863856607685`}}, {{
         2.4849066497880004`, -5.299887403049721}}, {{
         2.5649493574615367`, -5.536942885441188}}, {{
         2.6390573296152584`, -5.314120968053694}}, {{
         2.70805020110221, -5.58478238460162}}}]}, {}}}, {}}, {
    DisplayFunction -> Identity, GridLines -> {
       Charting`ScaledTickValues[{Log, Exp}], 
       Charting`ScaledTickValues[{Log, Exp}]}, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, 
     AxesOrigin -> {-0.09961252367335606, -5.779616203046754}, 
     PlotRange -> {{-0.05641771252296272, 
      2.70805020110221}, {-5.7339144431645614`, -2.900405330468664}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {-0.09961252367335606, -5.779616203046754}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {
       Charting`ScaledTickValues[{Log, Exp}], 
       Charting`ScaledTickValues[{Log, Exp}]}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, Method -> {}, 
     PlotRange -> {{-0.05641771252296272, 
      2.70805020110221}, {-5.7339144431645614`, -2.900405330468664}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    FormBox[
     TemplateBox[{"\"MBC\"", "\"PBC\"", "\"PBCOptimal\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 8.96}, {20, 8.96}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], FontSize -> 8.96, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 8.96}, {20, 8.96}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledSquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], FontSize -> 8.96, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10.88}, {20, 10.88}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], FontSize -> 10.88, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10.88}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.13235294117647062`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}], "}"}]}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledCircle]\"", ",", "8.96`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledSquare]\"", ",", "8.96`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledDiamond]\"", ",", "10.88`"}], "}"}]}], 
               "}"}]}]}], "]"}]& ), Editable -> True], TraditionalForm], 
    TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.687200588473811*^9, 3.687200616523519*^9}, {
   3.687200671086363*^9, 3.68720068807292*^9}, 3.687203453043532*^9, 
   3.687203571339384*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Kn = 10.0", "Subsubsection",
 CellChangeTimes->{{3.68720056374364*^9, 3.687200576369437*^9}, {
   3.687200634894012*^9, 3.6872006361057253`*^9}, 3.687200717505117*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogLogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"resultMBCKn10p0", "[", "ii", "]"}], "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"resultPBCKn10p0", "[", "ii", "]"}], "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}]}], 
    RowBox[{"(*", 
     RowBox[{",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"resultPBCOptKn10p0", "[", "ii", "]"}], "[", "x", "]"}], 
         "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}]}], "*)"}], 
    "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<MBC\>\"", ",", "\"\<PBC\>\"", ",", "\"\<PBCOptimal\>\""}], 
     "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.687200594496339*^9, 3.687200687458865*^9}, {
   3.687200720378613*^9, 3.687200742701576*^9}, {3.687200785228714*^9, 
   3.6872007993942833`*^9}, {3.687203179368384*^9, 3.687203183919073*^9}, {
   3.687203580921945*^9, 3.687203589439571*^9}, 3.6872445968177347`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., -3.528418696795506}, {
         0.6931471805599453, -3.4395243304238394`}, {
         1.0986122886681098`, -3.6413133007159924`}, {
         1.3862943611198906`, -3.4932978497555536`}, {
         1.6094379124341003`, -3.731662453728684}, {
         1.791759469228055, -3.537921844981469}, {
         1.9459101490553132`, -3.8081276632085292`}, {
         2.0794415416798357`, -3.5763631694406097`}, {
         2.1972245773362196`, -3.8750652795409684`}, {
         2.302585092994046, -3.6103156552386224`}, {
         2.3978952727983707`, -3.935006165504808}, {
         2.4849066497880004`, -3.6408440957896167`}, {
         2.5649493574615367`, -3.989563172109354}, {
         2.6390573296152584`, -3.6686646313735114`}, {
         2.70805020110221, -4.039833053454585}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., -3.528418696795506}, {
         0.6931471805599453, -3.4381342583811403`}, {
         1.0986122886681098`, -3.6413133007159924`}, {
         1.3862943611198906`, -3.4906856261095296`}, {
         1.6094379124341003`, -3.731662453728684}, {
         1.791759469228055, -3.5341759259139156`}, {
         1.9459101490553132`, -3.8081276632085292`}, {
         2.0794415416798357`, -3.5715441651722473`}, {
         2.1972245773362196`, -3.8750652795409684`}, {
         2.302585092994046, -3.6044700057384906`}, {
         2.3978952727983707`, -3.935006165504808}, {
         2.4849066497880004`, -3.6340095378849884`}, {
         2.5649493574615367`, -3.989563172109354}, {
         2.6390573296152584`, -3.6608729477684467`}, {
         2.70805020110221, -4.039833053454585}}]}}, {{
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledCircle]\"", FontSize -> 8.96, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], {{{0., -3.528418696795506}}, {{
         0.6931471805599453, -3.4395243304238394`}}, {{
         1.0986122886681098`, -3.6413133007159924`}}, {{
         1.3862943611198906`, -3.4932978497555536`}}, {{
         1.6094379124341003`, -3.731662453728684}}, {{
         1.791759469228055, -3.537921844981469}}, {{
         1.9459101490553132`, -3.8081276632085292`}}, {{
         2.0794415416798357`, -3.5763631694406097`}}, {{
         2.1972245773362196`, -3.8750652795409684`}}, {{
         2.302585092994046, -3.6103156552386224`}}, {{
         2.3978952727983707`, -3.935006165504808}}, {{
         2.4849066497880004`, -3.6408440957896167`}}, {{
         2.5649493574615367`, -3.989563172109354}}, {{
         2.6390573296152584`, -3.6686646313735114`}}, {{
         2.70805020110221, -4.039833053454585}}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledSquare]\"", FontSize -> 8.96, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], {{{0., -3.528418696795506}}, {{
         0.6931471805599453, -3.4381342583811403`}}, {{
         1.0986122886681098`, -3.6413133007159924`}}, {{
         1.3862943611198906`, -3.4906856261095296`}}, {{
         1.6094379124341003`, -3.731662453728684}}, {{
         1.791759469228055, -3.5341759259139156`}}, {{
         1.9459101490553132`, -3.8081276632085292`}}, {{
         2.0794415416798357`, -3.5715441651722473`}}, {{
         2.1972245773362196`, -3.8750652795409684`}}, {{
         2.302585092994046, -3.6044700057384906`}}, {{
         2.3978952727983707`, -3.935006165504808}}, {{
         2.4849066497880004`, -3.6340095378849884`}}, {{
         2.5649493574615367`, -3.989563172109354}}, {{
         2.6390573296152584`, -3.6608729477684467`}}, {{
         2.70805020110221, -4.039833053454585}}}]}, {}}}, {}}, {
    DisplayFunction -> Identity, GridLines -> {
       Charting`ScaledTickValues[{Log, Exp}], 
       Charting`ScaledTickValues[{Log, Exp}]}, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, 
     AxesOrigin -> {-0.09961252367335606, -4.083504740193788}, 
     PlotRange -> {{-0.05641771252296272, 
      2.70805020110221}, {-4.073260764291999, -3.4381342583811403`}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {-0.09961252367335606, -4.083504740193788}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {
       Charting`ScaledTickValues[{Log, Exp}], 
       Charting`ScaledTickValues[{Log, Exp}]}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, Method -> {}, 
     PlotRange -> {{-0.05641771252296272, 
      2.70805020110221}, {-4.073260764291999, -3.4381342583811403`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    FormBox[
     TemplateBox[{"\"MBC\"", "\"PBC\"", "\"PBCOptimal\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 8.96}, {20, 8.96}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], FontSize -> 8.96, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 8.96}, {20, 8.96}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledSquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], FontSize -> 8.96, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledCircle]\"", ",", "8.96`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledSquare]\"", ",", "8.96`"}], "}"}]}], 
               "}"}]}]}], "]"}]& ), Editable -> True], TraditionalForm], 
    TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.687200588473811*^9, 3.687200616523519*^9}, {
   3.687200671086363*^9, 3.68720068807292*^9}, {3.6872007281748657`*^9, 
   3.687200743543693*^9}, {3.6872007860166683`*^9, 3.687200799930361*^9}, 
   3.687203453759544*^9, 3.687203589883869*^9, 3.687244598273954*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Plots for paper", "Subsection",
 CellChangeTimes->{{3.691895761005117*^9, 3.691895763159707*^9}}],

Cell[CellGroupData[{

Cell["plotting routine", "Subsubsection",
 CellChangeTimes->{{3.691895781556386*^9, 3.691895783735157*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotError", "[", 
   RowBox[{"error_", ",", "Kn_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "numvariations", ",", "ptlegends", ",", "TicksXAxis", ",", 
      "legendfont"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "Number", " ", "of", " ", "variations", " ", "which", " ", "we", " ", 
      "allow", " ", "in", " ", "the", " ", "plot"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"numvariations", "=", 
      RowBox[{"Length", "[", "error", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"numvariations", "\[Equal]", "1"}], ",", 
       RowBox[{"Print", "[", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Not Implemeneted\>\"", ",", 
          RowBox[{"FontColor", "\[Rule]", "Red"}]}], "]"}], "]"}]}], "]"}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"legendfont", " ", "=", " ", "16"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{"numvariations", "\[Equal]", "2"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ptlegends", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<MBC\>\"", ",", 
            RowBox[{"FontSize", "\[Rule]", "legendfont"}]}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<WPBC\>\"", ",", 
            RowBox[{"FontSize", "\[Rule]", "legendfont"}]}], "]"}]}], "}"}]}],
        ",", "\[IndentingNewLine]", 
       RowBox[{"numvariations", "\[Equal]", "3"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ptlegends", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<MBC\>\"", ",", 
            RowBox[{"FontSize", "\[Rule]", "legendfont"}]}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<WPBC\>\"", ",", 
            RowBox[{"FontSize", "\[Rule]", "legendfont"}]}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<WPBC-Optimal\>\"", ",", 
            RowBox[{"FontSize", "\[Rule]", "legendfont"}]}], "]"}]}], 
         "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"TicksXAxis", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ii", "-", "min", "+", "1"}], ",", "ii"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "min", ",", "max", ",", "1"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"error", ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<error\[Theta]\>\"", ",", 
              RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}], ",", "None"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<m\>\"", ",", 
              RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}], ",", "None"}], 
           "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"TicksXAxis", ",", "None"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "600"}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"PlotMarkers", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Graphics", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Red", ",", "Thick", ",", 
              RowBox[{"Circle", "[", "]"}]}], "}"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "14"}]}], "]"}], ",", 
          RowBox[{"Graphics", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Green", ",", "Thick", ",", 
              RowBox[{"Circle", "[", "]"}]}], "}"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "10"}]}], "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Red", ",", "Thick"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Green", ",", "Thick"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"{", "ptlegends", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.8", ",", "0.9"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"FrameTicksStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{"FontSize", "\[Rule]", "13"}], ",", "Black"}], "]"}], 
            ",", "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{"FontSize", "\[Rule]", "13"}], ",", 
              RowBox[{"{", 
               RowBox[{"Orange", ",", "Black"}], "}"}]}], "]"}], ",", 
            "None"}], "}"}]}], "}"}]}]}], "]"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.691895786448901*^9, 3.691895984818571*^9}, {
   3.691896074069072*^9, 3.691896194732078*^9}, {3.691896228855399*^9, 
   3.691896254037642*^9}, {3.691896293889451*^9, 3.691896341974331*^9}, {
   3.691896387569051*^9, 3.6918964107252817`*^9}, {3.691939327876688*^9, 
   3.691939348832869*^9}, {3.69193949241916*^9, 3.6919396836670094`*^9}, {
   3.6919397781119633`*^9, 3.6919398343796043`*^9}, {3.691939866953602*^9, 
   3.691939914405305*^9}, {3.691940641308735*^9, 3.69194064289293*^9}, 
   3.6919413354934587`*^9, {3.691943001298196*^9, 3.691943016904999*^9}, {
   3.691945391431529*^9, 3.691945419646864*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Kn = 0.1", "Subsubsection",
 CellChangeTimes->{{3.6919404185707293`*^9, 3.6919404207109547`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ptKn0p1", "=", 
  RowBox[{"PlotError", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"resultMBCKn0p1", "[", "ii", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"resultPBCKn0p1", "[", "ii", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}]}], "}"}], ",",
     "0.1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.691940429505349*^9, 3.6919404731866827`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{{}, {}, 
       {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], Thickness[Large],
         LineBox[{{1., 0.006666020226044337}, {2., 0.00593045917572416}, {3., 
         0.0037860180928755397`}, {4., 0.005198830951450811}, {5., 
         0.0021623426549347725`}, {6., 0.004474255011377746}, {7., 
         0.001357280988874233}, {8., 0.00372004734128262}, {9., 
         0.0009457125345685765}, {10., 0.003093895071508897}, {11., 
         0.0007340272542047739}, {12., 0.0026013853070200256`}, {13., 
         0.0005937907375003217}, {14., 0.0022175916302529216`}, {15., 
         0.0004960954675928175}}]}, 
       {RGBColor[0, 1, 0], PointSize[0.019444444444444445`], Thickness[Large],
         LineBox[{{1., 0.006666020226044337}, {2., 0.005967360275908119}, {3.,
          0.0037860180928755397`}, {4., 0.004320031427756666}, {5., 
         0.0021623426549347725`}, {6., 0.003209124250567618}, {7., 
         0.001357280988874233}, {8., 0.002470906626111136}, {9., 
         0.0009457125345685765}, {10., 0.001996882126042627}, {11., 
         0.0007340272542047739}, {12., 0.001763324605813577}, {13., 
         0.0005937907375003217}, {14., 0.0016047024473779853`}, {15., 
         0.0004960954675928175}}]}}, {
       {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], Thickness[Large],
         GeometricTransformationBox[InsetBox[
          GraphicsBox[
           {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], Thickness[
            Large], CircleBox[{0, 0}]},
           ImageSize->14], {0., 0.}], {{{1., 0.006666020226044337}}, {{2., 
         0.00593045917572416}}, {{3., 0.0037860180928755397`}}, {{4., 
         0.005198830951450811}}, {{5., 0.0021623426549347725`}}, {{6., 
         0.004474255011377746}}, {{7., 0.001357280988874233}}, {{8., 
         0.00372004734128262}}, {{9., 0.0009457125345685765}}, {{10., 
         0.003093895071508897}}, {{11., 0.0007340272542047739}}, {{12., 
         0.0026013853070200256`}}, {{13., 0.0005937907375003217}}, {{14., 
         0.0022175916302529216`}}, {{15., 0.0004960954675928175}}}]}, 
       {RGBColor[0, 1, 0], PointSize[0.019444444444444445`], Thickness[Large],
         GeometricTransformationBox[InsetBox[
          GraphicsBox[
           {RGBColor[0, 1, 0], PointSize[0.019444444444444445`], Thickness[
            Large], CircleBox[{0, 0}]},
           ImageSize->10], {0., 0.}], {{{1., 0.006666020226044337}}, {{2., 
         0.005967360275908119}}, {{3., 0.0037860180928755397`}}, {{4., 
         0.004320031427756666}}, {{5., 0.0021623426549347725`}}, {{6., 
         0.003209124250567618}}, {{7., 0.001357280988874233}}, {{8., 
         0.002470906626111136}}, {{9., 0.0009457125345685765}}, {{10., 
         0.001996882126042627}}, {{11., 0.0007340272542047739}}, {{12., 
         0.001763324605813577}}, {{13., 0.0005937907375003217}}, {{14., 
         0.0016047024473779853`}}, {{15., 
         0.0004960954675928175}}}]}, {}}}, {}}, InsetBox[
     TemplateBox[{
      StyleBox["\"MBC\"", FontSize -> 16, StripOnInput -> False],StyleBox[
       "\"WPBC\"", FontSize -> 16, StripOnInput -> False]},
      "PointLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    InsetBox[
                    GraphicsBox[{
                    RGBColor[1, 0, 0], 
                    Thickness[Large], 
                    CircleBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, ImageSize -> 14}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    InsetBox[
                    GraphicsBox[{
                    RGBColor[0, 1, 0], 
                    Thickness[Large], 
                    CircleBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, ImageSize -> 10}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    RGBColor[1, 0, 0], 
                    Thickness[Large], 
                    CircleBox[{0, 0}]}, ImageSize -> 14], ",", "Automatic"}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    RGBColor[0, 1, 0], 
                    Thickness[Large], 
                    CircleBox[{0, 0}]}, ImageSize -> 10], ",", "Automatic"}], 
                   "}"}]}], "}"}]}]}], "]"}]& )], Scaled[{0.8, 0.9}], 
     ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox["\"error\[Theta]\"", FontSize -> 16, StripOnInput -> False], 
       TraditionalForm], None}, {
      FormBox[
       StyleBox["\"m\"", FontSize -> 16, StripOnInput -> False], 
       TraditionalForm], None}},
   FrameTicks->{{Automatic, None}, {{{1, 
        FormBox["6", TraditionalForm]}, {2, 
        FormBox["7", TraditionalForm]}, {3, 
        FormBox["8", TraditionalForm]}, {4, 
        FormBox["9", TraditionalForm]}, {5, 
        FormBox["10", TraditionalForm]}, {6, 
        FormBox["11", TraditionalForm]}, {7, 
        FormBox["12", TraditionalForm]}, {8, 
        FormBox["13", TraditionalForm]}, {9, 
        FormBox["14", TraditionalForm]}, {10, 
        FormBox["15", TraditionalForm]}, {11, 
        FormBox["16", TraditionalForm]}, {12, 
        FormBox["17", TraditionalForm]}, {13, 
        FormBox["18", TraditionalForm]}, {14, 
        FormBox["19", TraditionalForm]}, {15, 
        FormBox["20", TraditionalForm]}}, None}},
   FrameTicksStyle->{{
      Directive[FontSize -> 13, 
       GrayLevel[0]], None}, {
      Directive[FontSize -> 13, {
        RGBColor[1, 0.5, 0], 
        GrayLevel[0]}], None}},
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->600,
   Method->{},
   PlotRange->{{0., 15.}, {0, 0.006666020226044337}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[Large]], 
         Line[{{1., 0.006666020226044337}, {2., 0.00593045917572416}, {3., 
          0.0037860180928755397`}, {4., 0.005198830951450811}, {5., 
          0.0021623426549347725`}, {6., 0.004474255011377746}, {7., 
          0.001357280988874233}, {8., 0.00372004734128262}, {9., 
          0.0009457125345685765}, {10., 0.003093895071508897}, {11., 
          0.0007340272542047739}, {12., 0.0026013853070200256`}, {13., 
          0.0005937907375003217}, {14., 0.0022175916302529216`}, {15., 
          0.0004960954675928175}}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Thickness[Large]], 
         Line[{{1., 0.006666020226044337}, {2., 0.005967360275908119}, {3., 
          0.0037860180928755397`}, {4., 0.004320031427756666}, {5., 
          0.0021623426549347725`}, {6., 0.003209124250567618}, {7., 
          0.001357280988874233}, {8., 0.002470906626111136}, {9., 
          0.0009457125345685765}, {10., 0.001996882126042627}, {11., 
          0.0007340272542047739}, {12., 0.001763324605813577}, {13., 
          0.0005937907375003217}, {14., 0.0016047024473779853`}, {15., 
          0.0004960954675928175}}]}}, {{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[Large]], 
         GeometricTransformation[
          Inset[
           Graphics[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.019444444444444445`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0], 
              Thickness[Large]], 
             RGBColor[1, 0, 0], 
             Thickness[Large], 
             Circle[{0, 0}]}, ImageSize -> 14], {0., 0.}], {{{1., 
          0.006666020226044337}}, {{2., 0.00593045917572416}}, {{3., 
          0.0037860180928755397`}}, {{4., 0.005198830951450811}}, {{5., 
          0.0021623426549347725`}}, {{6., 0.004474255011377746}}, {{7., 
          0.001357280988874233}}, {{8., 0.00372004734128262}}, {{9., 
          0.0009457125345685765}}, {{10., 0.003093895071508897}}, {{11., 
          0.0007340272542047739}}, {{12., 0.0026013853070200256`}}, {{13., 
          0.0005937907375003217}}, {{14., 0.0022175916302529216`}}, {{15., 
          0.0004960954675928175}}}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Thickness[Large]], 
         GeometricTransformation[
          Inset[
           Graphics[{
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.019444444444444445`], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 1, 0], 
              Thickness[Large]], 
             RGBColor[0, 1, 0], 
             Thickness[Large], 
             Circle[{0, 0}]}, ImageSize -> 10], {0., 0.}], {{{1., 
          0.006666020226044337}}, {{2., 0.005967360275908119}}, {{3., 
          0.0037860180928755397`}}, {{4., 0.004320031427756666}}, {{5., 
          0.0021623426549347725`}}, {{6., 0.003209124250567618}}, {{7., 
          0.001357280988874233}}, {{8., 0.002470906626111136}}, {{9., 
          0.0009457125345685765}}, {{10., 0.001996882126042627}}, {{11., 
          0.0007340272542047739}}, {{12., 0.001763324605813577}}, {{13., 
          0.0005937907375003217}}, {{14., 0.0016047024473779853`}}, {{15., 
          0.0004960954675928175}}}]}, {}}}, {}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
      PlotRange -> {{0., 15.}, {0, 0.006666020226044337}}, DisplayFunction -> 
      Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
      Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
         Style["error\[Theta]", FontSize -> 16], None}, {
         Style["m", FontSize -> 16], None}}, 
      FrameTicks -> {{
        Automatic, None}, {{{1, 6}, {2, 7}, {3, 8}, {4, 9}, {5, 10}, {6, 
         11}, {7, 12}, {8, 13}, {9, 14}, {10, 15}, {11, 16}, {12, 17}, {13, 
         18}, {14, 19}, {15, 20}}, None}}, FrameTicksStyle -> {{
         Directive[FontSize -> 13, 
          GrayLevel[0]], None}, {
         Directive[FontSize -> 13, {
           RGBColor[1, 0.5, 0], 
           GrayLevel[0]}], None}}, GridLines -> {Automatic, Automatic}, 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 600, Method -> {}, 
      PlotRange -> {{0., 15.}, {0, 0.006666020226044337}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      PointLegend[{
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Thickness[Large]], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Thickness[Large]]}, {
        Style["MBC", FontSize -> 16], 
        Style["WPBC", FontSize -> 16]}, Joined -> {{True, True}}, 
       LabelStyle -> {}, LegendLayout -> "Column", LegendMarkers -> {{
          Graphics[{
            RGBColor[1, 0, 0], 
            Thickness[Large], 
            Circle[{0, 0}]}, ImageSize -> 14], Automatic}, {
          Graphics[{
            RGBColor[0, 1, 0], 
            Thickness[Large], 
            Circle[{0, 0}]}, ImageSize -> 10], Automatic}}]], {0.8, 0.9}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.691940458098034*^9, 3.691940475168351*^9}, 
   3.691940982057665*^9, 3.691941358102916*^9, 3.69194302304431*^9, 
   3.6919454435766563`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"StringJoin", "[", 
    RowBox[{
    "WriteDirectoryResults", ",", "\"\<Physical_Accuracy/Kn0p1/\>\"", ",", 
     "\"\<error_theta.eps\>\""}], "]"}], ",", "ptKn0p1"}], "]"}]], "Input",
 CellChangeTimes->{{3.691940884100724*^9, 3.69194089651534*^9}, {
  3.69194143240911*^9, 3.691941433155096*^9}, {3.692695820184639*^9, 
  3.692695824995747*^9}}],

Cell[BoxData["\<\"/Users/neerajsarna/Dropbox/my_papers/Publications/1D_Well_\
Posed_System/Results/Physical_Accuracy/Kn0p1/error_theta.eps\"\>"], "Output",
 CellChangeTimes->{3.691940899669915*^9, 3.691941360319186*^9, 
  3.691941435790855*^9, 3.691943025606723*^9, 3.69194544438476*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Kn = 1.0", "Subsubsection",
 CellChangeTimes->{{3.6919404185707293`*^9, 3.6919404207109547`*^9}, {
  3.6919404836906347`*^9, 3.6919404840302973`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ptKn1p0", "=", 
  RowBox[{"PlotError", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"resultMBCKn1p0", "[", "ii", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"resultPBCKn1p0", "[", "ii", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}]}], "}"}], ",",
     "0.1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.691940429505349*^9, 3.69194049835879*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{{}, {}, 
       {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], Thickness[Large],
         LineBox[{{1., 0.03896097506959258}, {2., 0.05465614812671715}, {3., 
         0.024525490595555713`}, {4., 0.04551483330904843}, {5., 
         0.01615957734041572}, {6., 0.038963943504265665`}, {7., 
         0.01085964732922232}, {8., 0.03399953224225651}, {9., 
         0.007317075006387362}, {10., 0.03009097715223649}, {11., 
         0.00510687735829309}, {12., 0.026926857773148013`}, {13., 
         0.00402536618530826}, {14., 0.024310388947016478`}, {15., 
         0.0033807966138634307`}}]}, 
       {RGBColor[0, 1, 0], PointSize[0.019444444444444445`], Thickness[Large],
         LineBox[{{1., 0.03896097506959258}, {2., 0.05692932772447261}, {3., 
         0.024525490595555713`}, {4., 0.04903926811214963}, {5., 
         0.01615957734041572}, {6., 0.04326699582242356}, {7., 
         0.01085964732922232}, {8., 0.03881498985471615}, {9., 
         0.007317075006387362}, {10., 0.03525276842479695}, {11., 
         0.00510687735829309}, {12., 0.03232454976163116}, {13., 
         0.00402536618530826}, {14., 0.02986725345674309}, {15., 
         0.0033807966138634307`}}]}}, {
       {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], Thickness[Large],
         GeometricTransformationBox[InsetBox[
          GraphicsBox[
           {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], Thickness[
            Large], CircleBox[{0, 0}]},
           ImageSize->14], {0., 0.}], {{{1., 0.03896097506959258}}, {{2., 
         0.05465614812671715}}, {{3., 0.024525490595555713`}}, {{4., 
         0.04551483330904843}}, {{5., 0.01615957734041572}}, {{6., 
         0.038963943504265665`}}, {{7., 0.01085964732922232}}, {{8., 
         0.03399953224225651}}, {{9., 0.007317075006387362}}, {{10., 
         0.03009097715223649}}, {{11., 0.00510687735829309}}, {{12., 
         0.026926857773148013`}}, {{13., 0.00402536618530826}}, {{14., 
         0.024310388947016478`}}, {{15., 0.0033807966138634307`}}}]}, 
       {RGBColor[0, 1, 0], PointSize[0.019444444444444445`], Thickness[Large],
         GeometricTransformationBox[InsetBox[
          GraphicsBox[
           {RGBColor[0, 1, 0], PointSize[0.019444444444444445`], Thickness[
            Large], CircleBox[{0, 0}]},
           ImageSize->10], {0., 0.}], {{{1., 0.03896097506959258}}, {{2., 
         0.05692932772447261}}, {{3., 0.024525490595555713`}}, {{4., 
         0.04903926811214963}}, {{5., 0.01615957734041572}}, {{6., 
         0.04326699582242356}}, {{7., 0.01085964732922232}}, {{8., 
         0.03881498985471615}}, {{9., 0.007317075006387362}}, {{10., 
         0.03525276842479695}}, {{11., 0.00510687735829309}}, {{12., 
         0.03232454976163116}}, {{13., 0.00402536618530826}}, {{14., 
         0.02986725345674309}}, {{15., 0.0033807966138634307`}}}]}, {}}}, {}},
     InsetBox[
     TemplateBox[{
      StyleBox["\"MBC\"", FontSize -> 16, StripOnInput -> False],StyleBox[
       "\"WPBC\"", FontSize -> 16, StripOnInput -> False]},
      "PointLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    InsetBox[
                    GraphicsBox[{
                    RGBColor[1, 0, 0], 
                    Thickness[Large], 
                    CircleBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, ImageSize -> 14}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    InsetBox[
                    GraphicsBox[{
                    RGBColor[0, 1, 0], 
                    Thickness[Large], 
                    CircleBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, ImageSize -> 10}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    RGBColor[1, 0, 0], 
                    Thickness[Large], 
                    CircleBox[{0, 0}]}, ImageSize -> 14], ",", "Automatic"}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    RGBColor[0, 1, 0], 
                    Thickness[Large], 
                    CircleBox[{0, 0}]}, ImageSize -> 10], ",", "Automatic"}], 
                   "}"}]}], "}"}]}]}], "]"}]& )], Scaled[{0.8, 0.9}], 
     ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox["\"error\[Theta]\"", FontSize -> 16, StripOnInput -> False], 
       TraditionalForm], None}, {
      FormBox[
       StyleBox["\"m\"", FontSize -> 16, StripOnInput -> False], 
       TraditionalForm], None}},
   FrameTicks->{{Automatic, None}, {{{1, 
        FormBox["6", TraditionalForm]}, {2, 
        FormBox["7", TraditionalForm]}, {3, 
        FormBox["8", TraditionalForm]}, {4, 
        FormBox["9", TraditionalForm]}, {5, 
        FormBox["10", TraditionalForm]}, {6, 
        FormBox["11", TraditionalForm]}, {7, 
        FormBox["12", TraditionalForm]}, {8, 
        FormBox["13", TraditionalForm]}, {9, 
        FormBox["14", TraditionalForm]}, {10, 
        FormBox["15", TraditionalForm]}, {11, 
        FormBox["16", TraditionalForm]}, {12, 
        FormBox["17", TraditionalForm]}, {13, 
        FormBox["18", TraditionalForm]}, {14, 
        FormBox["19", TraditionalForm]}, {15, 
        FormBox["20", TraditionalForm]}}, None}},
   FrameTicksStyle->{{
      Directive[FontSize -> 13, 
       GrayLevel[0]], None}, {
      Directive[FontSize -> 13, {
        RGBColor[1, 0.5, 0], 
        GrayLevel[0]}], None}},
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->600,
   Method->{},
   PlotRange->{{0., 15.}, {0, 0.05692932772447261}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[Large]], 
         Line[{{1., 0.03896097506959258}, {2., 0.05465614812671715}, {3., 
          0.024525490595555713`}, {4., 0.04551483330904843}, {5., 
          0.01615957734041572}, {6., 0.038963943504265665`}, {7., 
          0.01085964732922232}, {8., 0.03399953224225651}, {9., 
          0.007317075006387362}, {10., 0.03009097715223649}, {11., 
          0.00510687735829309}, {12., 0.026926857773148013`}, {13., 
          0.00402536618530826}, {14., 0.024310388947016478`}, {15., 
          0.0033807966138634307`}}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Thickness[Large]], 
         Line[{{1., 0.03896097506959258}, {2., 0.05692932772447261}, {3., 
          0.024525490595555713`}, {4., 0.04903926811214963}, {5., 
          0.01615957734041572}, {6., 0.04326699582242356}, {7., 
          0.01085964732922232}, {8., 0.03881498985471615}, {9., 
          0.007317075006387362}, {10., 0.03525276842479695}, {11., 
          0.00510687735829309}, {12., 0.03232454976163116}, {13., 
          0.00402536618530826}, {14., 0.02986725345674309}, {15., 
          0.0033807966138634307`}}]}}, {{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[Large]], 
         GeometricTransformation[
          Inset[
           Graphics[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.019444444444444445`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0], 
              Thickness[Large]], 
             RGBColor[1, 0, 0], 
             Thickness[Large], 
             Circle[{0, 0}]}, ImageSize -> 14], {0., 0.}], {{{1., 
          0.03896097506959258}}, {{2., 0.05465614812671715}}, {{3., 
          0.024525490595555713`}}, {{4., 0.04551483330904843}}, {{5., 
          0.01615957734041572}}, {{6., 0.038963943504265665`}}, {{7., 
          0.01085964732922232}}, {{8., 0.03399953224225651}}, {{9., 
          0.007317075006387362}}, {{10., 0.03009097715223649}}, {{11., 
          0.00510687735829309}}, {{12., 0.026926857773148013`}}, {{13., 
          0.00402536618530826}}, {{14., 0.024310388947016478`}}, {{15., 
          0.0033807966138634307`}}}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Thickness[Large]], 
         GeometricTransformation[
          Inset[
           Graphics[{
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.019444444444444445`], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 1, 0], 
              Thickness[Large]], 
             RGBColor[0, 1, 0], 
             Thickness[Large], 
             Circle[{0, 0}]}, ImageSize -> 10], {0., 0.}], {{{1., 
          0.03896097506959258}}, {{2., 0.05692932772447261}}, {{3., 
          0.024525490595555713`}}, {{4., 0.04903926811214963}}, {{5., 
          0.01615957734041572}}, {{6., 0.04326699582242356}}, {{7., 
          0.01085964732922232}}, {{8., 0.03881498985471615}}, {{9., 
          0.007317075006387362}}, {{10., 0.03525276842479695}}, {{11., 
          0.00510687735829309}}, {{12., 0.03232454976163116}}, {{13., 
          0.00402536618530826}}, {{14., 0.02986725345674309}}, {{15., 
          0.0033807966138634307`}}}]}, {}}}, {}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
      PlotRange -> {{0., 15.}, {0, 0.05692932772447261}}, DisplayFunction -> 
      Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
      Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
         Style["error\[Theta]", FontSize -> 16], None}, {
         Style["m", FontSize -> 16], None}}, 
      FrameTicks -> {{
        Automatic, None}, {{{1, 6}, {2, 7}, {3, 8}, {4, 9}, {5, 10}, {6, 
         11}, {7, 12}, {8, 13}, {9, 14}, {10, 15}, {11, 16}, {12, 17}, {13, 
         18}, {14, 19}, {15, 20}}, None}}, FrameTicksStyle -> {{
         Directive[FontSize -> 13, 
          GrayLevel[0]], None}, {
         Directive[FontSize -> 13, {
           RGBColor[1, 0.5, 0], 
           GrayLevel[0]}], None}}, GridLines -> {Automatic, Automatic}, 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 600, Method -> {}, 
      PlotRange -> {{0., 15.}, {0, 0.05692932772447261}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      PointLegend[{
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Thickness[Large]], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Thickness[Large]]}, {
        Style["MBC", FontSize -> 16], 
        Style["WPBC", FontSize -> 16]}, Joined -> {{True, True}}, 
       LabelStyle -> {}, LegendLayout -> "Column", LegendMarkers -> {{
          Graphics[{
            RGBColor[1, 0, 0], 
            Thickness[Large], 
            Circle[{0, 0}]}, ImageSize -> 14], Automatic}, {
          Graphics[{
            RGBColor[0, 1, 0], 
            Thickness[Large], 
            Circle[{0, 0}]}, ImageSize -> 10], Automatic}}]], {0.8, 0.9}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.691940458098034*^9, 3.6919404989187098`*^9}, 
   3.691940971890937*^9, 3.691941360496809*^9, 3.691943026888926*^9, {
   3.691945413409012*^9, 3.6919454223276997`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"StringJoin", "[", 
    RowBox[{
    "WriteDirectoryResults", ",", "\"\</Kn1p0/\>\"", ",", 
     "\"\<error_theta.eps\>\""}], "]"}], ",", "ptKn1p0"}], "]"}]], "Input",
 CellChangeTimes->{{3.6919409163887663`*^9, 3.691940919914339*^9}, {
  3.6919414196652718`*^9, 3.6919414204112797`*^9}}],

Cell[BoxData["\<\"/Users/neerajsarna/Dropbox/my_papers/Publications/1D_Well_\
Posed_System/Results/Physical_Accuracy/Kn1p0/error_theta.eps\"\>"], "Output",
 CellChangeTimes->{3.691940922494173*^9, 3.6919413626770573`*^9, 
  3.691941422993802*^9, 3.691943029394318*^9, 3.6919454303956347`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Kn = 10.0", "Subsubsection",
 CellChangeTimes->{{3.6919404185707293`*^9, 3.6919404207109547`*^9}, {
  3.691940516493868*^9, 3.691940517119688*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ptKn10p0", "=", 
  RowBox[{"PlotError", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"resultMBCKn10p0", "[", "ii", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"resultPBCKn10p0", "[", "ii", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}]}], "}"}], ",",
     "0.1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.691940429505349*^9, 3.6919404731866827`*^9}, {
  3.691940521856844*^9, 3.691940531789432*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{{}, {}, 
       {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], Thickness[Large],
         LineBox[{{1., 0.02106326031328083}, {2., 0.023791908982008857`}, {3.,
          0.017929857203924624`}, {4., 0.022112418386887378`}, {5., 
         0.01566494982486482}, {6., 0.020785651798027487`}, {7., 
         0.01390165448422085}, {8., 0.01968922985047304}, {9., 
         0.012464950915061333`}, {10., 0.01875527698752051}, {11., 
         0.011257546649533655`}, {12., 0.01794216165320605}, {13., 
         0.010219764907008218`}, {14., 0.017222480981206347`}, {15., 
         0.009312378328886347}}]}, 
       {RGBColor[0, 1, 0], PointSize[0.019444444444444445`], Thickness[Large],
         LineBox[{{1., 0.02106326031328083}, {2., 0.023836533419740596`}, {3.,
          0.017929857203924624`}, {4., 0.022191934975019156`}, {5., 
         0.01566494982486482}, {6., 0.02089476369975364}, {7., 
         0.01390165448422085}, {8., 0.0198243777732286}, {9., 
         0.012464950915061333`}, {10., 0.01891382565264853}, {11., 
         0.011257546649533655`}, {12., 0.01812204745146454}, {13., 
         0.010219764907008218`}, {14., 0.017422027219310975`}, {15., 
         0.009312378328886347}}]}}, {
       {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], Thickness[Large],
         GeometricTransformationBox[InsetBox[
          GraphicsBox[
           {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], Thickness[
            Large], CircleBox[{0, 0}]},
           ImageSize->14], {0., 0.}], {{{1., 0.02106326031328083}}, {{2., 
         0.023791908982008857`}}, {{3., 0.017929857203924624`}}, {{4., 
         0.022112418386887378`}}, {{5., 0.01566494982486482}}, {{6., 
         0.020785651798027487`}}, {{7., 0.01390165448422085}}, {{8., 
         0.01968922985047304}}, {{9., 0.012464950915061333`}}, {{10., 
         0.01875527698752051}}, {{11., 0.011257546649533655`}}, {{12., 
         0.01794216165320605}}, {{13., 0.010219764907008218`}}, {{14., 
         0.017222480981206347`}}, {{15., 0.009312378328886347}}}]}, 
       {RGBColor[0, 1, 0], PointSize[0.019444444444444445`], Thickness[Large],
         GeometricTransformationBox[InsetBox[
          GraphicsBox[
           {RGBColor[0, 1, 0], PointSize[0.019444444444444445`], Thickness[
            Large], CircleBox[{0, 0}]},
           ImageSize->10], {0., 0.}], {{{1., 0.02106326031328083}}, {{2., 
         0.023836533419740596`}}, {{3., 0.017929857203924624`}}, {{4., 
         0.022191934975019156`}}, {{5., 0.01566494982486482}}, {{6., 
         0.02089476369975364}}, {{7., 0.01390165448422085}}, {{8., 
         0.0198243777732286}}, {{9., 0.012464950915061333`}}, {{10., 
         0.01891382565264853}}, {{11., 0.011257546649533655`}}, {{12., 
         0.01812204745146454}}, {{13., 0.010219764907008218`}}, {{14., 
         0.017422027219310975`}}, {{15., 0.009312378328886347}}}]}, {}}}, {}},
     InsetBox[
     TemplateBox[{
      StyleBox["\"MBC\"", FontSize -> 16, StripOnInput -> False],StyleBox[
       "\"WPBC\"", FontSize -> 16, StripOnInput -> False]},
      "PointLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    InsetBox[
                    GraphicsBox[{
                    RGBColor[1, 0, 0], 
                    Thickness[Large], 
                    CircleBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, ImageSize -> 14}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    InsetBox[
                    GraphicsBox[{
                    RGBColor[0, 1, 0], 
                    Thickness[Large], 
                    CircleBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, ImageSize -> 10}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    RGBColor[1, 0, 0], 
                    Thickness[Large], 
                    CircleBox[{0, 0}]}, ImageSize -> 14], ",", "Automatic"}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    RGBColor[0, 1, 0], 
                    Thickness[Large], 
                    CircleBox[{0, 0}]}, ImageSize -> 10], ",", "Automatic"}], 
                   "}"}]}], "}"}]}]}], "]"}]& )], Scaled[{0.8, 0.9}], 
     ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox["\"error\[Theta]\"", FontSize -> 16, StripOnInput -> False], 
       TraditionalForm], None}, {
      FormBox[
       StyleBox["\"m\"", FontSize -> 16, StripOnInput -> False], 
       TraditionalForm], None}},
   FrameTicks->{{Automatic, None}, {{{1, 
        FormBox["6", TraditionalForm]}, {2, 
        FormBox["7", TraditionalForm]}, {3, 
        FormBox["8", TraditionalForm]}, {4, 
        FormBox["9", TraditionalForm]}, {5, 
        FormBox["10", TraditionalForm]}, {6, 
        FormBox["11", TraditionalForm]}, {7, 
        FormBox["12", TraditionalForm]}, {8, 
        FormBox["13", TraditionalForm]}, {9, 
        FormBox["14", TraditionalForm]}, {10, 
        FormBox["15", TraditionalForm]}, {11, 
        FormBox["16", TraditionalForm]}, {12, 
        FormBox["17", TraditionalForm]}, {13, 
        FormBox["18", TraditionalForm]}, {14, 
        FormBox["19", TraditionalForm]}, {15, 
        FormBox["20", TraditionalForm]}}, None}},
   FrameTicksStyle->{{
      Directive[FontSize -> 13, 
       GrayLevel[0]], None}, {
      Directive[FontSize -> 13, {
        RGBColor[1, 0.5, 0], 
        GrayLevel[0]}], None}},
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->600,
   Method->{},
   PlotRange->{{0., 15.}, {0, 0.023836533419740596`}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[Large]], 
         Line[{{1., 0.02106326031328083}, {2., 0.023791908982008857`}, {3., 
          0.017929857203924624`}, {4., 0.022112418386887378`}, {5., 
          0.01566494982486482}, {6., 0.020785651798027487`}, {7., 
          0.01390165448422085}, {8., 0.01968922985047304}, {9., 
          0.012464950915061333`}, {10., 0.01875527698752051}, {11., 
          0.011257546649533655`}, {12., 0.01794216165320605}, {13., 
          0.010219764907008218`}, {14., 0.017222480981206347`}, {15., 
          0.009312378328886347}}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Thickness[Large]], 
         Line[{{1., 0.02106326031328083}, {2., 0.023836533419740596`}, {3., 
          0.017929857203924624`}, {4., 0.022191934975019156`}, {5., 
          0.01566494982486482}, {6., 0.02089476369975364}, {7., 
          0.01390165448422085}, {8., 0.0198243777732286}, {9., 
          0.012464950915061333`}, {10., 0.01891382565264853}, {11., 
          0.011257546649533655`}, {12., 0.01812204745146454}, {13., 
          0.010219764907008218`}, {14., 0.017422027219310975`}, {15., 
          0.009312378328886347}}]}}, {{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[Large]], 
         GeometricTransformation[
          Inset[
           Graphics[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.019444444444444445`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0], 
              Thickness[Large]], 
             RGBColor[1, 0, 0], 
             Thickness[Large], 
             Circle[{0, 0}]}, ImageSize -> 14], {0., 0.}], {{{1., 
          0.02106326031328083}}, {{2., 0.023791908982008857`}}, {{3., 
          0.017929857203924624`}}, {{4., 0.022112418386887378`}}, {{5., 
          0.01566494982486482}}, {{6., 0.020785651798027487`}}, {{7., 
          0.01390165448422085}}, {{8., 0.01968922985047304}}, {{9., 
          0.012464950915061333`}}, {{10., 0.01875527698752051}}, {{11., 
          0.011257546649533655`}}, {{12., 0.01794216165320605}}, {{13., 
          0.010219764907008218`}}, {{14., 0.017222480981206347`}}, {{15., 
          0.009312378328886347}}}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Thickness[Large]], 
         GeometricTransformation[
          Inset[
           Graphics[{
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.019444444444444445`], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 1, 0], 
              Thickness[Large]], 
             RGBColor[0, 1, 0], 
             Thickness[Large], 
             Circle[{0, 0}]}, ImageSize -> 10], {0., 0.}], {{{1., 
          0.02106326031328083}}, {{2., 0.023836533419740596`}}, {{3., 
          0.017929857203924624`}}, {{4., 0.022191934975019156`}}, {{5., 
          0.01566494982486482}}, {{6., 0.02089476369975364}}, {{7., 
          0.01390165448422085}}, {{8., 0.0198243777732286}}, {{9., 
          0.012464950915061333`}}, {{10., 0.01891382565264853}}, {{11., 
          0.011257546649533655`}}, {{12., 0.01812204745146454}}, {{13., 
          0.010219764907008218`}}, {{14., 0.017422027219310975`}}, {{15., 
          0.009312378328886347}}}]}, {}}}, {}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
      PlotRange -> {{0., 15.}, {0, 0.023836533419740596`}}, DisplayFunction -> 
      Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
      Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
         Style["error\[Theta]", FontSize -> 16], None}, {
         Style["m", FontSize -> 16], None}}, 
      FrameTicks -> {{
        Automatic, None}, {{{1, 6}, {2, 7}, {3, 8}, {4, 9}, {5, 10}, {6, 
         11}, {7, 12}, {8, 13}, {9, 14}, {10, 15}, {11, 16}, {12, 17}, {13, 
         18}, {14, 19}, {15, 20}}, None}}, FrameTicksStyle -> {{
         Directive[FontSize -> 13, 
          GrayLevel[0]], None}, {
         Directive[FontSize -> 13, {
           RGBColor[1, 0.5, 0], 
           GrayLevel[0]}], None}}, GridLines -> {Automatic, Automatic}, 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 600, Method -> {}, 
      PlotRange -> {{0., 15.}, {0, 0.023836533419740596`}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      PointLegend[{
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Thickness[Large]], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Thickness[Large]]}, {
        Style["MBC", FontSize -> 16], 
        Style["WPBC", FontSize -> 16]}, Joined -> {{True, True}}, 
       LabelStyle -> {}, LegendLayout -> "Column", LegendMarkers -> {{
          Graphics[{
            RGBColor[1, 0, 0], 
            Thickness[Large], 
            Circle[{0, 0}]}, ImageSize -> 14], Automatic}, {
          Graphics[{
            RGBColor[0, 1, 0], 
            Thickness[Large], 
            Circle[{0, 0}]}, ImageSize -> 10], Automatic}}]], {0.8, 0.9}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.691940458098034*^9, 3.691940475168351*^9}, 
   3.691940532776497*^9, {3.691940619382625*^9, 3.691940645888817*^9}, 
   3.691940999947165*^9, {3.691941338359585*^9, 3.691941362856971*^9}, 
   3.691943033534709*^9, 3.691945433145241*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"StringJoin", "[", 
    RowBox[{
    "WriteDirectoryResults", ",", "\"\</Kn10p0/\>\"", ",", 
     "\"\<error_theta.eps\>\""}], "]"}], ",", "ptKn10p0"}], "]"}]], "Input",
 CellChangeTimes->{{3.6919409317242947`*^9, 3.691940936061357*^9}, {
  3.691941409053833*^9, 3.691941409843927*^9}}],

Cell[BoxData["\<\"/Users/neerajsarna/Dropbox/my_papers/Publications/1D_Well_\
Posed_System/Results/Physical_Accuracy/Kn10p0/error_theta.eps\"\>"], "Output",
 CellChangeTimes->{3.6919409387011747`*^9, 3.691941365045835*^9, 
  3.691941412977347*^9, 3.69194303604527*^9, 3.691945433953233*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Error variation for different theories", "Subsection",
 CellChangeTimes->{{3.6872014908779173`*^9, 3.687201496327951*^9}}],

Cell[CellGroupData[{

Cell["Ntensors = 7", "Subsubsection",
 CellChangeTimes->{{3.687201502285074*^9, 3.687201507938756*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"error7Kn0p1", "=", 
   RowBox[{
    RowBox[{"ReturnError", "[", 
     RowBox[{"7", ",", "0.1", ",", "2"}], "]"}], "\[LeftDoubleBracket]", 
    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"error7Kn1p0", "=", 
   RowBox[{
    RowBox[{"ReturnError", "[", 
     RowBox[{"7", ",", "1.0", ",", "2"}], "]"}], "\[LeftDoubleBracket]", 
    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"error7Kn10p0", "=", 
   RowBox[{
    RowBox[{"ReturnError", "[", 
     RowBox[{"7", ",", "10.0", ",", "2"}], "]"}], "\[LeftDoubleBracket]", 
    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"error7Kn0p1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"onsagercoeff", "[", "7", "]"}], "\[LeftDoubleBracket]", 
         "ii", "\[RightDoubleBracket]"}], ",", 
        RowBox[{
        "error7Kn0p1", "\[LeftDoubleBracket]", "ii", 
         "\[RightDoubleBracket]"}]}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "1", ",", 
       RowBox[{"Length", "[", "error7Kn0p1", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"error7Kn1p0", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"onsagercoeff", "[", "7", "]"}], "\[LeftDoubleBracket]", 
         "ii", "\[RightDoubleBracket]"}], ",", 
        RowBox[{
        "error7Kn1p0", "\[LeftDoubleBracket]", "ii", 
         "\[RightDoubleBracket]"}]}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "1", ",", 
       RowBox[{"Length", "[", "error7Kn1p0", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"error7Kn10p0", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"onsagercoeff", "[", "7", "]"}], "\[LeftDoubleBracket]", 
         "ii", "\[RightDoubleBracket]"}], ",", 
        RowBox[{
        "error7Kn10p0", "\[LeftDoubleBracket]", "ii", 
         "\[RightDoubleBracket]"}]}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "1", ",", 
       RowBox[{"Length", "[", "error7Kn10p0", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6872015241272707`*^9, 3.68720152633563*^9}, {
  3.6872016201705647`*^9, 3.687201779194633*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], ":", 
  " ", "\<\"Input value \[NoBreak]\\!\\({\\(-0.48695326425858587`\\)}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{{3.6872016831899967`*^9, 3.687201710332197*^9}, 
   3.687201784539228*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], ":", 
  " ", "\<\"Input value \[NoBreak]\\!\\({0.48695326425858587`}\\)\[NoBreak] \
lies outside the range of data in the interpolating function. Extrapolation \
will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{{3.6872016831899967`*^9, 3.687201710332197*^9}, 
   3.6872017846369534`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], ":", 
  " ", "\<\"Input value \[NoBreak]\\!\\({\\(-0.48695326425858587`\\)}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{{3.6872016831899967`*^9, 3.687201710332197*^9}, 
   3.687201784645544*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(InterpolatingFunction :: dmval\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6872016831899967`*^9, 3.687201710332197*^9}, 
   3.687201784653472*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "4.11115600000000025460167307755909860134`6.63456386990764", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   4.11115600000000025460167307755909860134`6.63456386990764, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687201683825392*^9, 3.6872017109785633`*^9}, 
   3.6872017851640377`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.64989699999999994695087934815092012286`5.833444445497576", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.64989699999999994695087934815092012286`5.833444445497576, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687201683825392*^9, 3.6872017109785633`*^9}, 
   3.6872017851737328`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], ":", 
  " ", "\<\"Input value \[NoBreak]\\!\\({\\(-0.48695326425858587`\\)}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{{3.6872016831899967`*^9, 3.687201710332197*^9}, 
   3.687201789504127*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], ":", 
  " ", "\<\"Input value \[NoBreak]\\!\\({0.48695326425858587`}\\)\[NoBreak] \
lies outside the range of data in the interpolating function. Extrapolation \
will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{{3.6872016831899967`*^9, 3.687201710332197*^9}, 
   3.68720178955425*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], ":", 
  " ", "\<\"Input value \[NoBreak]\\!\\({\\(-0.48695326425858587`\\)}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{{3.6872016831899967`*^9, 3.687201710332197*^9}, 
   3.6872017896205063`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(InterpolatingFunction :: dmval\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6872016831899967`*^9, 3.687201710332197*^9}, 
   3.687201789636382*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "4.30055500000000012761347534251399338245`6.654124419529845", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   4.30055500000000012761347534251399338245`6.654124419529845, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687201683825392*^9, 3.6872017109785633`*^9}, 
   3.687201790266898*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.78213399999999999590016841466422192752`5.913881078711708", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.78213399999999999590016841466422192752`5.913881078711708, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687201683825392*^9, 3.6872017109785633`*^9}, 
   3.687201790280168*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], ":", 
  " ", "\<\"Input value \[NoBreak]\\!\\({\\(-0.48695326425858587`\\)}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{{3.6872016831899967`*^9, 3.687201710332197*^9}, 
   3.687201794614938*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], ":", 
  " ", "\<\"Input value \[NoBreak]\\!\\({0.48695326425858587`}\\)\[NoBreak] \
lies outside the range of data in the interpolating function. Extrapolation \
will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{{3.6872016831899967`*^9, 3.687201710332197*^9}, 
   3.687201794674622*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], ":", 
  " ", "\<\"Input value \[NoBreak]\\!\\({\\(-0.48695326425858587`\\)}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{{3.6872016831899967`*^9, 3.687201710332197*^9}, 
   3.687201794684793*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(InterpolatingFunction :: dmval\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6872016831899967`*^9, 3.687201710332197*^9}, 
   3.68720179474363*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "4.31841299999999961301000439561903476715`6.655924087879007", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   4.31841299999999961301000439561903476715`6.655924087879007, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687201683825392*^9, 3.6872017109785633`*^9}, 
   3.687201795318643*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.66278999999999999026556452008662745357`5.841975860556221", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.66278999999999999026556452008662745357`5.841975860556221, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687201683825392*^9, 3.6872017109785633`*^9}, 
   3.68720179532864*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ListPlot3D", "[", "error7Kn0p1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot3D", "[", "error7Kn1p0", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot3D", "[", "error7Kn10p0", "]"}]}], "Input",
 CellChangeTimes->{{3.6872016864793167`*^9, 3.687201693541184*^9}, {
  3.6872017874446487`*^9, 3.687201802011362*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
GUqfx09n3y/kolrSQ9YQx6ynOZzyuNfbYaXxqJ9yqI//eiTYkvXTdj7ZAkc7
Hd6nt4v1w/v7WQCTH+x/8KKA9UNzu+XWtsN57+NRrlrg9h2PcSU7cP9bQZRy
VLRlE8s/9a/PP+C+4MnUo69Yfprzc+XXdq27G4/q5ZCdkq/nNDfGttcN45BU
8z4pm1ex/Dv/+imBoc6No+JTWH66XYgWTRv3IhL3h0OWxB/1WrsS+T/IJf2l
ddJxS1h+378+y2Hj4+31t0Lj0RwV52M549X9vOJRfrik96FN3vo6KIeERwbb
J+UmEZa/7bqsClLTw6s6Xcb9kYDo1dNe28/Ho/zzyAr/CTq12ijPynwypjTf
8ed0PN9q8DmZsWHOWZafbqepo06teWsXj/LMJ4eGryXa09B28ZVPBrkstQiY
wPK3XSfWwKIbtoObrXH/a+HjvNhAj4N4vgJiebrEqe94PF8BmaRxcW2RRizy
WQeJpfyjnfbjfNZDxKmVVnY78XwFZNpJq8nWI/B8heRLxN2EqEEsf9v5Rj28
3376zNTteL5S8F4/9sO2zXi+QkLWjOavGoi2dyIi34x77Puhhucrhf8mXlu0
0gTPVwa3DjX5DV2Dty8RuRrZaap3HzxfMfHwCXl/UBXPtxE4H3RnEiM83ybo
2Kusk99yPF8x2WuVs2BBdzxfMem53WnKjs54vk1Qke3/9Ncy3J9cUFv3Qji1
QwKauxx+jqgcc1cX+2mGmxIeZ4QOi9P9yfrIUunO+fFoLi2g884xrGYu1uWQ
gMXdXC/PwfyK4/zhFTZaWjiHHLLwzR7vyTNYvO34yyVlg27EV0/Dc+ESf/HJ
T1MmYz9ckvb0k0XHSTiHPHLc5cXti+MxD48obVa7aDUO++QT14bRY2aPjkc5
4ZPni7W1po/C9QrIpW/D50wYgXkEZN7D3W9mD8f1CsiOVevFZkNwvUKy5rnM
3WEw9qk4TzMSHPs0ANcrJNrTIyNa++N5iUinHDttu37xKCeK87H9oblJfbFP
MYmqtvU17oPrFZPTQzNDrvb+hxP2vRnLbttKBfR9NYS+jyUfrq8qGb3qF8Z/
AWfX5Mph31i8bS6/4epllR7SZxgvhK8Hnfy1M1i8rQ9F0EF+dqt3IsaLYfuI
LsMF0Sze1udSGN3RLHuLP8bL4Ml8s5IkrwRUVyXEqC5ekuiC8Sp41LtJ7b4T
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
tuaaxt4nAXRfN5yXBOvuWqniObpfFPbH4OKemXKOIQjXy8B50Z3jqajh40/X
8cc+uKh3yOvfCaf7muP5ltmUD5rQdYXur4l12tcorA9Kwf2JmHukH49u8FcK
uUzpFNN5mez4wluLHUXxMPch53WOrhhugO+DiWk9jfmj08qPXaV8Y+7X1ZjF
Dc3WxP2PmHuShcFayfNcYyh+MZ2X0wn+ocMCoqn8MvfoVLjfJDf3xlK/45j7
k793to4b8oC63+gjpv33ND1/gBOB+/Ex9+XmRzXa9DVQ97gmMPcqhw1PKz6I
qHtxVmLaf9v34zbr37hC9y3A85VRfZd++cDc42o7dT5u+xTqnlIucy8rJD/B
beTmBLqvJ9bvPm2h8u6H8XR/Kayna39GfNRKfF+FuZcioPqz/OJn7p90uXmU
uCsmIlxvF/u5ftONP60SEih+5h7IuY4fLKF5AnV/m7nv8U9diezIZ3yfp48e
t+alpentadS9DjvmHLZq2dUg149pdB8CrOeP25zH6Y34nBfjLGLVoqkuWhVU
fXiCOYfN7PoxZZ8hde6W20frj7o1vtPzeArCdTB/xZO/E/UOeBXuSab7jGI/
I9UG+VWm4XPbPnq+c3tG56nOpPRHMPcEGubF8CaqJdP9sbD/tyInerma4vsq
fbQ/DzV09+e/ovSXMeekL8dM8o33p3xIYM49DY387ZX1qHPGUOa8MlhSd9Wp
KZXum4XHNcuwmnPLBdcdHUxg/7PsLlxq/4zPvzDOR7ZrP92amYz3twfTerbw
dhZ/8MD7+cw51yWdqp/1ERl0f3rsf8jgUf5KuG4qMZjWf7T7j/wNOpkI1/3E
/q9pZr/4gM+XQ/G4HSiXdWPn7+Op8xrtwfR8jw0P5EY14/M1PK4YrZ/+5eyy
1Vl0PzDsQ6jiu7/DHlLjKmI9XKImjJ1890oG3XcBz9c5cqiN2WZqn1OR2b+V
y18kX7oA62H28craRsWussmm+4Thca/Xd22N08qm++5g/9sVjt+fZUfh2sw+
VVJHuoPiDlx3hdmvaw9YytUJw/tOzH5dp3JCyyFDPC6zjzR0p3zATVW878Hs
1xkMn2OauwvrYfapzq77MN0C4X0zZl7/eW+9q+MdPidi9vHcMjeGhlhhPcx+
1BPkMGwJ3p9pYHwYnxbxT3ke9T3Nndnfk8meHK3Qp+o5hDL7SAKB0gUlZayf
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
ppZpkJ9LuLc5fFyTmIP+C6Ahmqs=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw1nAf81uP3xj/PZz9WUwmhtFQkI6SshoqSjJRKtIgke+9VZkpLoUhmQijZ
kZWMbCUys8peyf96/677/3p1d53n/px7r3POfe5vo+NG9zk5jqLolSyKEuFf
RRRdr4iaZRTtKfr5ShT1FJ6ljw/p++nCrvp2tvBd4bnCZxV/jrCd+O4W/87C
U/X7A8WfITxAfC+LHphH0Wn6PU/0KcKTFd4XPUbYUWnuU9pdhQPEdz7flO4i
4eviuTiU+5roY3KnfUr0KOHmSnOi0v6l+DaiZ4tuHfJ5RDyHCHfR72cU313Y
TflcQv2ErfT7ScV3KdyWj8R/QeJ6vhra26V0O94RPqq46Qq3KPRSvvOFvYUH
6PttovcXrqZ+yvMf4b7K90XRhwr3yP39ReVzr3jvUxiv0Flxtws7CQ8Sz6GU
LZ4jhfco/ghhJ8VPEt1GuHvu+C65+/YkfX9LeGPkfMlzb32bIGwl7Kbvs0Qf
KOyg312ES0rz3K/4boH3AYWJCvvm5n1JPPuJnqu4HrnTPiG6T27euYG/h3jv
EHYX7pm7XV1zt4W50Vd4YmL+44W/6vdA9cm3tEVlXKD4+qIb6NtForcU1lU4
VXQd4R7i2Uq4SJipH4cp7S/ir6e4YeIpRP+rcJzi14V8iK8X8rmW/IVbKFwX
Oa+GCsNDWcz5MzTnfxderrjLFGYo1NK3IcLNhLup7BrCBcLthGcoflvaq9/b
CJ8sTV+s+AZhjBiPFsIm+n686MaJ21tbuFDYUaGv6BeElyWeS8zzffX7RdH9
lfZwhWGKe0Nxa0WfrjYmquc1jLl4jhL+oPj+iv9a+LvCWaIL8byt798pfK9w
dOK5QXn7KK+BwqXC/on5+H1M4rEbILxSYaXosYnTvhDimf+PhTXwlcrqq7I+
F45IPCeGJq7zO6KHCTdVPY4Xzx+MT+L5cyx9z/4h+gTh/qXxzdJtH8yaF65R
mjFK+1/I/6Uwf/opPM48FVYUzhEdC6dGXu/TFO5XmvZK+7LweYVOot8WttK3
1gq1FR7SmDcSzhPuxlxQ2FXhZuX1StivtovMU7C2tEeqWtHdwgcUGot+NnM8
PM8In1Je+4t+Wvi9fh8g+tPM+ZJ/A+aEMukkXK349zPXif33CZW3n+r5hnCB
QjPRD7GGYufznPDtzHnfrjye1bcdxPOosJ2+785ep/CGeHYRviWcp7Axe41w
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
7YM80ef+KV3ul6wL9A+l/y3sUfg/TIl87zA45EneL7AnVGynehF9PvT5Ocij
ok/GBpJ6TaBbYdOgbujpe6fWq1gXzyqsq3gskT2o7wuFdbprK7Y5oOtdI3pL
7gaR/0SfWLie7+v7XmrXQan9wXqEvl0m+j3qhV6EPCqeIZnvj4dyT6v4n8Pe
i75/veiG6DXMS9EvhXqyttHB0FvHVqx3d0nti4XOzJoaoPyOqTrP1xhP0cMU
t0coizovQX8N8dxdD88sJ2APHZd7jfdW3ICq9SDW0eCwFveL7X+wSHm8pPgn
aJfmX92w3/QLPPsis5e2gWOzhWbf+q70+c46uo25VHjODlRZ65TXWsU/LXyo
4rn3sMIPSZBLEtOMNfbJR8S3GJ7Uey/rdEbuelAfZBL6njX+qMI3ie3n2D+p
MzZ8ztfltKNife+FxDIJMtW7iW3j7K2Pq4xVil+Q2tb3c1jjB6ru26itnblP
Kv1956r3D/ptQcW2qRsqtv8ckHledRH2QHZnHgoPL22T556CcutXfG5dg4yI
vomtqLT/BfI287Qa+4w8vfQ6bqty7xC+Q/+kzpNz7MfS5wt7xS2hznuie2eW
CX+LLI8epHzvVbpWyuc6dHB97yd6UmK/O+zP0J9Htk1PT+zjxF1Fj8yyd0/h
/Ir7nT7vozxfFw5gnAuP1U7K8zDRHyt+GPMdG5rSPlRYB1yq+P6F7fa1wh7L
nUJR8X3Eg8x10XOFp+W2xX5Seg9sw7zLLLvmFcvb1IE67VOYf2lkX2XqME95
7Fj1/QX8U3O3fUf0FH3/LPFeh9wJjVyNjL4isb0KefUB9g7R9wv7lpaxscND
I4f+XHqsmdPthY1Uv82V/3aZ+5w1flxhGbsIdcC+wT52ZOF1sDSshcOUplHs
9TkrsZzOnUWvwuW3VlvOU/o3ItvPDxHfduI/WNgrs98R/QMPdyCfIjOk9k3F
Lrk+sR8UdzPsn2+zb1atMx4YbBH4bN8lnh2FE/R9iuibhC8I7614TZ5aevzR
9/EhxEcR38XFgeeein0Uqds9wjHin6g8mlZ9//Jb2Is4o+iHByu2w6NznZTb
n5yzpptwfNgvqMNOrBNhk6rX9TthbTNf5lQ8Tuh33OFiX2qusDN3hsIrVIcd
hIdU7c+G/v2DcInSPMD4gsq/reL6VL3/Ec93/LFvjuxvgP3nSGwGwW7TT/Rf
mW1T+JXhb7ZrZvlnt8x1om70KfYT/O7wOWymsE/sOnVWuXP1fQ/hM2rfu6Lv
5FzQ7xmimxe2dx2G3i2co29PkWfqOrMn42NJPtT78JDfy6Fv8fNn/Hoj7ylM
E91UOFXpbxE9BTkK2wT7O3KIvnWgnVXvUftj4xE9VvSeog8X3V7YSfwdM9M7
iN6Ls0hhy9D2a0ufTQuxDylsi12r8H0Z7xROEHYVX+uwZ8LPXntU1feVn0a+
j+ukuIahbvAjG3QP/dxA9M7Cq5V2d/pIaXfJ7HfKb+q8m+jHC7dra+yBhe+S
8NG+KHefTFIfNOP+RWkaY1/IPG9Zl9isWJdlbL9b7H6dI/sS44+Bf3uT3POt
nr43zrxGpinP5lW/6WBNtEXf0rem2Joyv91g7h5c+E5qbZDljtS3juJpkvks
WBvOA2Tpf/ideu70je1TOzn1Hsg4cneGjzd+4JeXrksv7Lrh3ETXvS312XW7
cIbC4+xpws1S32dxn4JP7wHK+1lkvMx9OCjz/Qh6Mz7eF6WenxcLRyv+VtEt
xH+y6EsUt13V9zv4beKf11fhdtGzhOPF1wTbjnAHhbGKa1x1WfjWDc6cP/dJ
5wtPUZ7XIy9zfqW+e7o29Z0I+jZ+oVemXrPkxRuTO0S3FF6Y+p0LdaqbWmdH
J9oytS0cvRI5k/v2f5Xf/NxnNLrhW6n3Z+TVpan1aGTcd1KfcctZiwo/ii4z
p8Um8VfpPsf3FfvINanXJHXGpoc/4WeFdX/8z7kfRXfGZx4d+LLUdwT/37eX
CxtV3cYJir9CODCz/yHj0rXwftCyalmUtbygsN2AOxj829lPpounRdXls34H
xN5r0evZU85Kfd90emr/ojsj+/6dlnrfIP7U1G+Ozkjto4VPFP5LF6Te/3lP
dJLKPZs2Ve1jdlVkf9oTS6drWHV5lMs44RuGPbId4yietqrXfOWzE3ul6B0z
v+thn96t8By+NcxbymIfa1Z4nrDncXfAeYEPzPaF/ZdmKv/2wlbKq344F85N
fU93jvDk1Hevo1L7vM2J7AN5EGdcOGdPKH0mNgmyDTLR0VXHn8ScqjpP+oH+
GBD6mbXEfRx3iNzJYcfuGeyN7I3Ia/2r7mfuC09J3Q+tOavoQ85RxW1d9Xuf
myL78hHP+cL7rxNT30Ph83O80p4gbCD+4anfZ50Q9o2OYe94M7GNCnvFo+GM
ny88W3n9jjyrtDszjpF9BS9N3f/Mvbqx96K/FS7FhoW8I/7Zqe8bOb/YB24S
vW1Y49wjNyrs84+4dYfwKvHdVvEdGfaoX5mDwj9S21j+ZK2nvjuYFOipFcsT
t2f2W8XfC/vzicqzmjse36WZIX/u2Fg/rJH3RB8rjGOfBYnCdP3eKpwL+L9d
GPltFHconGV3COsrr5ax2zk9pB8r7FRafsYPpHPptwb4/JN3w5A/vkPI1fiN
zCh8Vs4tfNfDm6baud8g1BP9qPBH5P5gM4e/HjJN1X6AZwb+G9SeSRXvidxb
9Q9yCO9Haop+MDMP92jITFvpd23lt2Xmtxs59w5CBmJUZN/3q0qfpYciM4v+
Ven25y618Bixt0Nzbuyg+Jmp9Sr2c2x6P7E/CH9JrTv/jHyhML3isxD5du9w
tiKPNQ37/0WFbRSjC9dhl2A74h5qZBjTzWLbCpgfnO/NY8tqLTPro+wPlMU9
FHscdz1jwl3AJWX0v4cr3IVhB2AOoIe2UZotYq+xv1LbE5hv8P/NXly17XQT
8Uwo/HaGdzX3C/+NfbfC+5MaoW7UkfXCe4KHS8tp71dsM2FNYfc4qXDf/lvx
nd3Gse0D9N17hfsH+xtvnXgvdI/wz9h+s7xtQRf4ULxDhPelfl+JXveTwvrQ
56cVlhH2UwajSvc/MuSswvrs3WHe8h70bcZBZWyPvpn5HeIilXWYcFpmf+yp
QS9pHGSgiZl95vGT5i3bgshv4ojHlxsfa3yhedPAvQxvIZ+M/Faxa+J9mPeQ
vEejLN7a7Vf6Hdsy4ZDEbyR5k8abCPyieafAW84FwbZ5Q+H2XlL4fQHvj/D1
500o9k/edcKDLnZrkD3RR/LY+wpyI3OC94CLI99lY9dlPsxkb8/sw4/vNT7z
+HPiszpJ32oqrnvVd6+cI7cVjuecuk84KLGfEm/ursjs14o/P2+ROE95z1Mn
83ypjc6lsi+J/IYRGh/qxejHYZ7DQ33w9+aNR7vEtjL8lWtknp/Ikx0S22zx
f+b9LP75R+aWSaknc+5/70pi+5nzBvDJMNbMPd6pDK163PHbxz91ZGJfKd78
npPZz513ELw7Y3+7q/DbCu7yeBNyZ2F5Hv2atzl1lPaRzOO7JLIfVxZ7PBiL
yxS/DXJM1Wm3pp+qnqvwXVd4X+W98vLSbzSwC3Jv2C7s1ezZoxO/jeJdLm+N
n2dOsl8m9t3irfR5id+U8Y76qsTvKrnDuDSxT+AVIR79Gv8xZHXW5ybCUZnv
W7HTIrsS1w2fkNLvuXhvy3ysF/r5xsTtxR8UGl1mfKgDNgreWt+VWAfB35L3
Atxj8k7josw+zhcH/WbLMFc3z7zX1M1cLm+m3yv9FgY5g/d3vI1iz+QOd5Ow
t9CGQanlLHyudhX/eZF96f9LbaPegG6h8HXFex93TH+IPk94ucK3FduxoXmk
16XqN8KcUzVzp8XfYH3qPDn34GuY2d7CGC8rbI88TmmXFJbxB1ddH3ztH8Om
mPhOH396/O1PiexnX8n8zjHOnHb32DrditT1xK5eZNbPkMOPznyO9M+sazcJ
+hRnIPcItWL7HiAzrAzzEJkG/wruKT5FjgpnE23qrHo2yGyv4wzdOXEf8lYB
GvsA7yWw13HfMbJw2/HZYE7/ltpPA7mKunG3jj3339SyBP1/rdLkjK3KaplY
xuMNA/E/VHxfQz5fVHw2jyutfx9RNd0yyBVpYl99/PZHZPYl4N0a76k5EzfL
bW+kbwZV/a4N+faJwvc4K5X/cNGvpLZhYlM+t/Tc4Ix+M/U5jO7DvTz2+i8K
37OsqNhW/m5q2yA2pn6kqfjOBR2K8wv7NfcFH4WzDB0Uuyp6Kf4k2HUHsreX
bi/nZr/Ad4DwaIXHOMOr5uEeY7eq47lnGcG+VPq+qEPV9cdOv6foF1Kft9je
seti4+FvBTA/sZ1ir6gX9hbeRCxMPR+wh7cr7ReEz0zfzG/njsp8T/R+kC3H
ZNbLeUNXM/F7C97UYyNdEfr22My+JdwZYCfHTvVI4XeyyDNPcXaFOtQLNmr+
pgFtxja+Msjq/TLrStSBuvHm/onSaYdGfvdOP6wKfbJPZn8SbDr4upwS5kPt
cB5xFzwytb0KPWi/xHrZvuHMahH2H+6X2YsmB9mY+2jk1NGpfVPRhfCvYL1N
K6wLja/YHxJfVvQC/BXxRx0fdISRpfWerar2o5sQ9AXikfmxWX2Wei5x18X7
mpPZH4JeiR2eu5W9M+8P2LC+im2vwwdoRGmZGX3wysJ7Sdeq7SRtQv+fmdpW
c07Qobgb4j7ovNR+m+i0yFTYJLZV2iTzOZVmtjOMD3of/mPYBvFbQl/m3gf9
rVHis56/S4AfC/XH1wU7M2sBuzcyC7oV+9G2me3n2JOpM/etYwr7g6F7XVhY
/2I/wx9gSGrfS/xu6Qf0Gmx236Tm5x62XWZ9FHsd/cnezp3uQ6n/9gh2c/Yf
9D7ecdUKeyb7bO0gk9zPWZ34HRV/k+HT2PbJVaGfeYNSv2pZdHXYD/Ex5m6L
e8Ms8x00/UafjIj8Nx1+SG3b5d4Xmn2P+w58eEaFscbW1yLUYePM9yTIruSJ
TMEeiuyEbwOyGvov93q8U/o/lEedVg==
          "]], Polygon3DBox[CompressedData["
1:eJwtnAn8FtMXxmfembkzLxUhW5QlIkTKUllKCaVFkX0phWzt9kpE2ZfIvkay
y75vEcq+U0JSsiThb43/8/Xcz6fTe87cmTszd+5yznOe+9tw4NC+J9aSJPk1
TxL9S5rov13TJNlFsob0S8skWVkn/CR7tPR3Q5J0ld5K8qL0mTrWReWHSmZL
XyA5XPruktelj5H8rnNXkz1JeqMiSRrUXGdD6Wfr2AqVryX7culb6dim0jeR
tJK+gaSJ9DUkzaXP0j130PmVnm1FlSR1/TaTvX48dovqWFvnbq1z96knyUmy
l6e+56nSL5aU0kuV76Hyq2U3lv2bzjlLeqXjS6X/kPqcNSSrqLyRZHXqlGwt
vbWkl/R1C78bdawj/V893whde4BkifQLVGeuslRlu+t+p8n+NXWdZ0rfV8c3
kr6hpJ/0mbqmncprepe/9H5XlL73Lzp2hvR3JL1lD9C5R6i+R3T+ZirbTfK8
9L8kQ6XvJ1kgfRfVM1H6JMmu0lvoup11/S6STaXPV32HSN9N8rL0YTo2XPoI
yXDpn+rYgdJ3lTwb2y9I30Byh/TnJJ2kHyR5UfpESSJ9Xck10q8r/e3+1P3P
l76S6txYdgv6QOH2yaSvL7lZ+pF65vdUxWGZ+o/e/yvZ/XXtMMkiynTNDiq/
k/pV/oB+O8juKJkh/cPC9v3Sr1P5G/QF2a0lr0tfrPI9o36byt8sXP6m7Nvj
+ZTvFY/9JTlH+rmSv6U/pfObSb9b+rU6/1vZPWS/K3ua7C9k7yb7ed5H9nv6
3VZ2m3jOqnqHUdKXSr9f5XfV/D47xjqf0/Ubxne5XuX/yD5U9h+yZ8heQzKZ
viypSf+ffk9S+cnxnKbBz/u79AdU/mPN9xstWSZ9jurbUvqr0qeqfCWdf3x8
t4dk19TuR8g+XJJK/5T+Iv0Rld+g8kdrtneRPCb9M5V3kv6U9JtU/qLsFrHs
RtlP11zeWfKM9Bdqbp8ukhejvbn0zWKbvcLcIb1bfMYl9EPpIyTfMg5U/37S
F0q/h+eXnMO9eXfpDSSTpN/KmJL+q87vr/MXyb5X9jLZfWXPl32X7CA5i7aW
NKG/6fdElQ+N9+ig9rlV+iTJxtJ/0vX9pH+hsrt1/mY6dqnsTdVWz8T2O1X2
aZJCei24PdEfqTx+e+naYyRfSf9Ivz1V3kvysfS/Vf/B8VtN1/nT9Lue7KaS
56Q3C36WXPU9XLm9+J5bSGbRfoXbk7a9hfcp3J6U3Sp7he55mvQrmANl/67y
A2Lb3ic7k4xjbElWkf6JfvuovLfkZ+rU+cP0O5T+LX0tnTNF+hmSuvTP9Htc
4j5FG/9Q+PpPpd+p8tMKrxXMOadKX67fY1U+RLJJ5v5Mfz+ENUl6e73vzdK7
qmyWrj9X1xyp4wMZl9Ib6dhF0kdKftW77azzrtP519NHpe8quVH6DZIDpbdV
fdcw3qS/qGs/Zg7mm0t+Kv29b6H/qfwVlZ+p3zeYCyRnZx7PjPe9Je/TNjr/
4Vj2ic7vot8nZD8Zn3n74Pt3kv6yyk+QPU/2WbI/lr277Dtl95f9Ev2j8HxB
3XfIPoTjsl9mTEo/QPI440tygfRuuv7uWPaGzt9Z9lTZ3WW/KntA5vn0fclA
6e0lZ0ofF9tgP9pB+sz4DL0lzzEWJX3i+bTXtZIO0vsHl/eS/prqPyD4+n1l
z5G9l36fZqzHZ+is8mmxrtkq30i/43l/SYvM7Uv7PcQzMfcEtzf6R/H77Ke2
OEHtMkjr3am0M/2JMSb9RB3fSeUd4zmjuI/K5jAnSu+p+mZE/QPV1zf429AW
b8n+unRf2lPyvvRjg+s/SeXvq7ytfsfIPkOybeb6qe8ByUj6iK7ppmuPkLwr
/Q1JD+mDJfOkjyq8NrKGjpR+Tubv/5nkXOlH6X4fSj9W+tu63we6Zh/GkORb
6X9KTpZ+mSShr2fuC/SJC6UP0/Xzo/6pyg8KLr9Y9tx4PuWfx2PHSO6Tfq/k
aOmTaAfpb0vOj+WvMPdKjuP7FH43fLpx0hurzktZc5ir9GwnZH7+jyQnMn55
Z5VdLPlDevfg+1HXO7p2/eC1lDG9gfQNJecl7rMtpbfMvJadFOfU9qrjfq39
r0n2KL0eMF/tL/lG+geF107m9I+lH8I30LkfyNfZUf3lPf3Olf2p5G3p9+PP
JZ4jn5S+pPBaf6Tk38LzP+vLvpIF+Ai65gNd+6HkdunnSCZLvxx/Ufruut8z
0qdKtpA+ScfOlX6OZKL0rwuvZawBvxVej5nfD0rsA7D+40+sn9ineUXXfKxr
P5K8JH2p5H3p7+GT5l5PW9I2iddc5td9EvsQ7xf2t//QuQt17k56/+/0+6Xs
LyTfSJ9a/Oee/bem3Fp4fmfuPTbO0cw3zCd3SQ6WPk3n6F/SXHKHlIfwdxOv
OS+wduh+s/k+qrud7ndn8V83TTaij0m/R7Iyc7vkQemPS9ZOPMe9JX1NXX+W
rj9d1zfneQvPrUdJgvrDliq/TeXPSraW3jS3r9tZsq70vXTseenTJNtK35Bv
kjpG2SB3vLC99D6S+azlOnaz9Jskt+T2t9tK70mbS99Gddwh/QXJ9qXH9x5q
l+56rgP1fD1lz1TZnZIdpbdnvVX5ZpLtpU/OPHYYQ5dnjo+6qmwX/BZdf4Lu
eZGuvVByrPRnJT9KX4b/ntsfaKdr20o+ZI0kBlPZJZKTpM8r7HsxBhYV9m8Y
C/hkX/JtdL9xOneozm1at79CX8Ynniu9i8qfiO++uco/Kew70+c/py+pfJbK
7yFeoC8V7qudGG+F13fGGn1uXs3r99nSJ0h+kd5W19xF35XsTDxY2NdjTf8R
XwT/U+dtgR8o/XM9x3yd+5lknvT7crc93/ReAlJ9k8P0s0LnP6iOtYnsi+m/
atunKvvn+Br4HPi8W6h8Mv2TdUzl62Ze61jz1pe+VebyKyStpTcM9vUq6Y/F
9ekY5kbJhtLLzP7WefGc5pl96VHxGTYixpO+Kuuyrm+UeS4ZKGkY/Q/WatZs
fIDVM/uyw+M1PA++4qnxmXPVN0B6Xfqjlf0Z1krWzJ2ktwv2b9BnqnwX2bcn
fobNpe8mmZ64jbYJfl70S5hvpTcJvh/v/nzl+Rb/9TLJZtJbqPzCxGt2a+lV
8Fik7Z7W+asHz8+c+2zl9qH98Jnz6O/clDgGWU/61pIpidfOF2K8RnyzQeIY
jfWV8qsk7eL9L5K+tvQndX6r4GdjTtox2L9grcAn3zOzv8Vawj13y9y/H1ff
eVdyGHhC8LdmDerE2q8+9UrqPv6E9Om55xbm8Dty+z+8O22Kj/MI+EPiGPHV
wu2PL4TP0is4HiLe2ThxjLST7vmg6npd0lt6m+B3w2fYQ3oR3D8a4ydW9r/w
//hm+FBDVP6x9BH4bbE/4XuMidfQf/jWfKM1Mvdvvs9gyTrRP3xH+ruSg6Tv
qfrukX6k9DdVXyc90yN6trck+5f2D/GH8FmJufGvnk/s4+ED7a3r75c+VPq7
0T/pq/c8Wm0xsO71H18Pnw8f5nidP1f6WPwCnf9w7rmAOfOh3PHMdirfXnJH
zfPll9IXMCYZ07p+K9Z61hTpi3TNd9K/B0+RPry0/bX0nXX/saWxBda2XWQf
J/sr2T/L7lz39fSFd+I1R5S2qWtXlY+X/bfsn2R3kr089/UL4jHWl+ek3y19
y7rxsJVqxi72rBsvAk+qJM/kXm95nr945tz1Uf+K+Ex54XfhHbLC6wFrF2vO
iawNqr+ouayb6j9H9r8q+411T/a+pfvvU7LbyD609Lf8THbHuv0FsCswrKnS
X8ztO73KmhbXG3wZfJpluedfsC8wui+k/yNZQnvyzNLPU/21mvWudeM3vH9d
son033M/H07FH7ntRbR1fGbq43ownn+ln1i6nHO71N0evC+YUiF9vdLrI22x
nsqP0e9Vsq+WHCd9VZWPjfq6Kr9RvzfKvgGhjVT+WNQ3i+XYzAk3ST9TMkH6
2ZJx+Cyl1zp8uQ3AA/X7cOoxco30TcGwot5S5XuWni/ulL2F7F1Kn38V59bt
Lz7N95E8F+cXfLmP4zX4i09HX7JVvB/1XxvraKDy06UfLn1NlR+i3ytkXxmP
Dcjta+ITDczdPrTHGMnR0kflros6T87tP+CrsCafJn0N1T8+ljVT/W1Kl+Nb
rF/39ZSfKRkpfavS/RNfZZ26/VOwYDDVV6UfkBtbBGM8P7f/i2+Fj7Uz1+j6
8+Ozrq3rW5V+/sNkN4nvx/ueJjlYekm8I30f6avT33P72vjc+0lfSeWnRn2N
uv05/Jknmc9if2fsMoZfzj3f4/t+GcfM7Zpjvld3/Y45jrmXNV5lFW0k/SbJ
Ynwdyc3MvcH2jdI/r1wOFvBGPDZVskT6t5LbpF+k839jPmReAw/T7x/4JpIX
pE9XeVPGh/SfVX6l7H9V9pnsn2R/qt+1Vb5O6mOfS1qmxni/wDcnZpL+EvfV
+afIXqjrr5b9mexF+q2pPI33uCZzLDw7njMu+P2nSV8AngKmJfsB2V/Lvl+/
K+nalVMfewIfnO9NbMfzye4ueyu1ZaX2/5k1SfZq8ZwbVN5Q+sPSF4GtyV6a
uG2/kn1dcP33yV4o+zzZv6j8Udqd9pW9Kt9T9jeyn8psN07dps9KgvSC+Zn1
OfP9GqWug/elPb6WXIsPFZyr+Eb6L6pvaeZcATmDZdKvDm6vJdJ/5f1yz6dv
Sj6hb5aeH/FNO8R4EiweDP996W/mnuuY096RflDptR99B50/uHT8ybnt666f
uXVJnLP7l56f6attVb53af/3fsYe81/p/ouvsk2MP16UPUN267rXV3xnfOhH
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
          "]], Polygon3DBox[CompressedData["
1:eJwt13ncjlUex/FbeJ67kKWylKWFRLaSFlpoQWjBUKiIbJHleYYUSUOkGlSW
bNFMxYQWGpFq6qVMQoxXlkYjiVFSZiqalJr373WdPz6v+/5+7+/vnHNd17nO
OfdZvYd2GnJCLpfbhdK4tSCXe9fn2JK53ENom8/lruQ9x+tA34AWvKGFudyX
JXK5T0rlcttxP6+j3Gq5q2Va4RK6n9y/5FbILEcX+k7s4C2iX0Brug/+yVtG
L8WNyfuEt5HejFH6mK3NQt5i7S/CuIKs31X67U7fjivlVqu9xIX1dVH98BG9
1mcdudX8N1BX7mq1i3id1HXG5VErV523SGYxavN6yP2d11/mLrTkdeOt5U2k
J6M3/abaWrxl6l5CHbkX9V3H93J+K4sn6GH4ynX8Viq78RPojnif9zpvFYrz
2b3aznuHXosRvC76eUvZEH0Ox7W8ztE3ry3dBlfRd6vdq/ZddW/i93Ln8Z7h
LaAXohV9h+yHaovVDcM1cj/wi4252NiKsIteg+a8QfRgbKd7qt2gdo66uSgu
yMayhtePHhhzQXvVeON4zWP+4EJ6sPr9xrLJOD7EvXL9ebt5e+gv8ADvHX2d
rXaFvl/DubwBcp/J7ZM5gLH57Ho/5x2iD8f9K8ye0Xtqe+jzFlwh9zS/gnaq
aLcq/sAr4h1SW5ouwOMxT9V+pHahumcxOs3nT+V2an8XRqtdzD+ddwJdEm/T
z+DkuA51X0TfcrvV9tDvvdofFfMgn9379fqYKTMLQ+i/oIbab+iD6Ca3hteI
d5Q+gu68P/NOTd6PeJl+HlV42+itMafl3tDvpfrtr88B2EJvQgdeD7o7psm9
kGp/UXccr8d7JddM7k6Z3lhP/xUXptrb8C59P46m+7IDA0NjRLrekdhD/ymN
eb321+HmfDavWsh1lrkZU3nz5MrKLZd5FY/TvbDRvZpHz8cIeg5OlFtKL8HD
Bdm7H9fbRlvXxrOMZ8Srmby2WEkX8MfzptNPYSY9Xf3xXHb/tmMhPQs5fXxO
78VzdAP1z/P6uda+OCPmI/9GXjP6YnxHV8VY5RfHeogG9I8YkHIXoXc+m2ub
5SbJTMD1vIa8GbwmdGM05/XlbUvvVl/8jj6A7tqrqq0q+DjWtDQnY8y70VVt
Zd7o1N4FOJfulN7V1vR1sf7R1VzLY2qv09a1KFGYrTlvpz2gfaw59E8YJNdC
pjn66KO67BRee7odTqRvSXtKrLEdo54+mz9Tro9ML/RTW5P3BK8jfTMq0t1l
16nto65XrGtpLQ5vGv0E+qf3rbzaVTFv8RRdH0/K1afr4TK1f9NmK8/8Qs/7
Aiyjq6RndJpMJTSTey3N8cYyDTCR9zzvDF4L+nIsp09RO0rtcf6xyMt95bd2
vC30ZtTn9ZTdEs/Dde3FPYXZmviQ3Fn6rIlL89m+cDDldmMMb4v2mqT2/oF9
9CY05H1Ib8Bu+iTt3cPbQ3+G73nleMN4/6b342feS/qon9a/yphPl5crljvE
/xol6SX8ur5XlKkQ7wf9eloP4h5cisnGt99nmzSW9ajH+5p3A287vQ3n805N
9yqex/moFescJvFy9G9yZenT0jw9kVcQe4XaY/od5fcHtDsGB+iS/HG8KfQf
MSP65fdL3lT8j97m87K0Jy/F23GvZCf6Psf32ZhFf+rzqnQ+WIWN9GH1A9Ma
MQO/0d9hcKqdi9JqzzLmR9WWNd4yqBjriNxoufGxx+Bbejx+9XyPeLY/YFza
e76J9Z4+iAd56+Xra+899e9jB7031rPkrcV5cpPUlojnqu4YHkpnswMlMu+X
aC/OUTFn0x66PNosne2/+9JYjsb5ih6e5l8Jv58Q854uci170vs2Fe30cRNv
OW80PQa3FWRngY3JG4XWcien+Rf3pTwuSuvQGF45+iQ0TXPjvlhm6V+Nrwnv
J/13S3PyGzTgVZIbwTtT7hycTn8be4Mx13EN56BnPttDq/MK6EK8F/tEnInU
/qCtH9EotTeSd4T+Lxrmsz20stpj2v8Zr6X1tBovF+thnKfoZ1Epzlcyb+HG
fOZVjDMIfRgvxrzAkVy2Nq2OM7TcBt4VcpW0dQpu423mtUzreDXcziuT3ul4
P0rGus37gNdcrqxMOfTgbeVdw6tJ18Id+WxvzPM+ULch1t589p4Xae5Uugou
5r3qGTd07e3incWUdGatHWctuh4eTmMZonYv/3McjTkZ58f0Xo7Fk/nsPg+S
+5S/C9/yS/DH+v6o749gepobw+W+5B/Acf7+OHeld2ZC7MtyXdPeUxR7fuxT
vFfkGsi1lrk+3n/e0rRexdreLPrhreA1ibN+nCGjTV6FtNZV1dYZsS/zXk5r
4pUyrfBYqm3M60R3wZtp/buI15PuhXWF2Xpaj9ecvgKP5rMzUlNe01i7MYm3
zmdd/b4VaxC2xvoRe4jvNXyvifHpP05BnPmNbS1uivec910uOw+tQAfegrTn
7aMP4NZ0fv4s/YdYGXODHonv0/+oDbiLHpTe/fX0OoxUW5c3jzeXnocWdEus
TN4cFMn1Tv/LltAvon3cYyzmFdHDcSZ9bmpvdKwtGKx2SFqbttFbcV+cadKZ
+lX6FXSmd7q2trx6dH3sp7/ALemdqYhN9O3p/DzU9Q/G1do7GH56F2rEOZ0e
j8O57Jy4LM4gct/z+so1lmmEO3m19T2bNzTGG+dY3n/keqexnBfnldgreO1T
bRMcoi9Xu4I3g54e90GuTmovvJloVpj9B1vAm0RPwNB07+fzHow9P84HvBrp
LBX3dAQGpfbm8IrpYbibNz+dlXe6rl3oks7PZXgf0zvinMg7PZ3r4sw6EAPS
e9Qwzb/qeI6em87UG9VtRqfY3/jTeT3UdY05xKvKe4TXPdaqOAfzzuHN4vWP
DPqnfh/ntaFboxR9GV7hTaWnxLWk2pnJmxbPJJ0d3/Hc7jeOB+K/bbovU+Vu
kOmAMoXZWCbzWtEtY99TV4v3JK8z3SnW2cLMizPm2NgrMSRd21O8ifRk1KPL
8ie7LwvdkwV4mv4/2a0fNg==
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0u1K02Ecx+Ff0+VT+ZDPJrNSz8BAQT0EBQPFt74qqKankFA0rdTyWcs5
FaNIREspwlMoUOgYCsroBLr+CPt4fUG33ffczbHs0MNLEZHXfeOx+oojNjjC
zzxVwf7NryxNRdxSWTqil+0c5riydo5bKiS/K43YZD55jr3BG3zD12qz15nh
GlfVaq+whctcUrO9yAU12vNs4Cu+VJ09x1rOckY19gtW8zmfqdKe5pQm9NR5
R9inYbudnSzjH/c9d98znvAL88rZTzjKB7yjDruHbfpbFJFOnsNfPtfvmrKP
OMp1TqrTvsd/3muQt3ViX2fyPzGj4Cz+LLx8bNsesePHZZZo13aleJucmeV6
Z1fwPa/wqj7YlazSnl3Nfdbwmg7sWh6yjvX6aDfwiI1s0rHdzBZ16YdDDvCu
Ohz0Efu5xk/K2d+4xZ/JPZLP1M6w3KW6OaTt1MX37z9slkTn
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1443, 1442, 1465, 2084, 2201, 1491, 1492, 1517, 2217, 1518, 
       1545, 2094, 2224, 1563, 1564, 1590, 2245, 1591, 1617, 2110, 2252, 1635,
        1636, 1663, 2274, 1664, 1689, 2127, 2281, 1707, 1708, 1736, 2139, 
       2303, 1761, 1762, 1787, 2317, 1788, 1816, 2149, 2325, 1834, 1835, 1861,
        2346, 1862, 1889, 2165, 2354, 1908, 1909, 1936, 2376, 1937, 1962, 
       2181, 2383, 1981, 1982, 2010, 2405, 2011, 2036, 2037, 2062}], 
      Line3DBox[{1445, 1444, 1467, 2202, 1470, 1493, 1496, 1520, 2218, 1523, 
       1546, 2227, 1548, 1565, 1568, 1593, 2246, 1596, 1618, 2255, 1620, 1637,
        1640, 1666, 2275, 1669, 1690, 2129, 2283, 1709, 1712, 1738, 2304, 
       1741, 1763, 1766, 1790, 2318, 1793, 1817, 2328, 1819, 1836, 1839, 1864,
        2347, 1867, 1890, 2357, 1892, 1910, 1913, 1939, 2377, 1942, 1963, 
       2386, 1965, 1983, 1986, 2013, 2406, 2016, 2038, 2041, 2064}], 
      Line3DBox[{1446, 1447, 1468, 2085, 2203, 1494, 1499, 1521, 2219, 1526, 
       1547, 2097, 2228, 1566, 1571, 1594, 2247, 1599, 1619, 2113, 2256, 1638,
        1643, 1667, 2123, 2276, 1691, 2130, 2284, 1710, 1715, 1739, 2140, 
       2305, 1764, 1769, 1791, 2319, 1796, 1818, 2152, 2329, 1837, 1842, 1865,
        2348, 1870, 1891, 2168, 2358, 1911, 1916, 1940, 1298, 1964, 2184, 
       2387, 1984, 1989, 2014, 2193, 2407, 2039, 2044, 2065}], 
      Line3DBox[{1448, 1450, 1471, 2204, 1477, 1497, 1503, 1524, 2220, 1531, 
       1549, 2231, 1553, 1569, 1575, 1597, 2248, 1604, 1621, 2116, 2259, 1641,
        1647, 1670, 2277, 1676, 1692, 2132, 2286, 1713, 1720, 1742, 2306, 
       1748, 1767, 1773, 1794, 2320, 1801, 1820, 2332, 1824, 1840, 1846, 1868,
        2349, 1875, 1893, 2361, 1897, 1914, 1920, 1943, 2378, 1949, 1966, 
       2186, 2389, 1987, 1994, 2017, 2408, 2023, 2042, 2048, 2067}], 
      Line3DBox[{1449, 1453, 1472, 2086, 2205, 1498, 1505, 1525, 2221, 1533, 
       1550, 2100, 2232, 1570, 1577, 1598, 2107, 2249, 1622, 2117, 2260, 1642,
        1649, 1671, 2124, 2278, 1693, 2133, 2288, 1714, 1722, 1743, 2141, 
       2307, 1768, 1775, 1795, 2321, 1803, 1821, 2155, 2333, 1841, 1848, 1869,
        2350, 1877, 1894, 2171, 2362, 1915, 1922, 1944, 2178, 2379, 1967, 
       2187, 2391, 1988, 1996, 2018, 2194, 2409, 2043, 2050, 2068}], 
      Line3DBox[{1451, 1456, 1474, 2206, 1484, 1500, 1510, 1528, 2222, 1539, 
       1551, 2102, 2234, 1572, 1582, 1601, 2250, 1611, 1623, 2119, 2262, 1644,
        1655, 1673, 2279, 1683, 1694, 2135, 2290, 1717, 1728, 1745, 2308, 
       1755, 1770, 1780, 1798, 2322, 1809, 1822, 1149, 1843, 1853, 1872, 2351,
        1883, 1895, 2173, 2364, 1917, 1928, 1946, 2380, 1956, 1968, 2189, 
       2393, 1991, 2002, 2020, 2410, 2030, 2045, 2055, 2070}], 
      Line3DBox[{1452, 1458, 1475, 2087, 2207, 1501, 1512, 1529, 2092, 2223, 
       1552, 2103, 2235, 1573, 1584, 1602, 2108, 2251, 1624, 2120, 2264, 1645,
        1657, 1674, 2125, 2280, 1695, 2136, 2292, 1718, 1730, 1746, 2142, 
       2309, 1771, 1782, 1799, 2323, 1811, 1823, 2158, 2336, 1844, 1855, 1873,
        2163, 2352, 1896, 2174, 2366, 1918, 1930, 1947, 2179, 2381, 1969, 
       2190, 2395, 1992, 2004, 2021, 2195, 2411, 2046, 2057, 2071}], 
      Line3DBox[{1454, 1462, 1478, 1490, 2208, 1504, 1516, 1532, 2216, 2093, 
       1554, 1562, 2237, 1576, 1589, 1605, 2244, 2109, 1625, 1634, 2266, 1648,
        1662, 1677, 2273, 2126, 1697, 1706, 2294, 1721, 1735, 1749, 2302, 
       2143, 1774, 1786, 1802, 2324, 2148, 1825, 1833, 2338, 1847, 1860, 1876,
        2353, 2164, 1898, 1907, 2368, 1921, 1935, 1950, 2382, 2180, 1971, 
       1980, 2397, 1995, 2009, 2024, 2412, 2196, 2049, 2061, 2073}], 
      Line3DBox[{1455, 1466, 1479, 2209, 2088, 1506, 1519, 1534, 2225, 2095, 
       1555, 2238, 2105, 1578, 1592, 1606, 2253, 2111, 1626, 2267, 2122, 1650,
        1665, 1678, 2282, 2128, 1698, 2295, 2138, 1723, 1737, 1750, 2310, 
       2144, 1776, 1789, 1804, 2326, 2150, 1826, 2339, 2160, 1849, 1863, 1878,
        2355, 2166, 1899, 2369, 2176, 1923, 1938, 1951, 2384, 2182, 1972, 
       2398, 2192, 1997, 2012, 2025, 2413, 2197, 2051, 2063, 2074}], 
      Line3DBox[{1457, 1469, 1481, 1495, 2210, 1507, 1522, 1536, 2226, 2096, 
       1556, 1567, 2239, 1579, 1595, 1608, 2254, 2112, 1627, 1639, 2268, 1652,
        1668, 1680, 970, 1699, 1711, 2296, 1725, 1740, 1752, 1765, 2311, 1777,
        1792, 1806, 2327, 2151, 1827, 1838, 2340, 1850, 1866, 1880, 2356, 
       2167, 1900, 1912, 2370, 1925, 1941, 1953, 2385, 2183, 1973, 1985, 2399,
        1999, 2015, 2027, 2040, 2414, 2052, 2066, 2076}], 
      Line3DBox[{1459, 1473, 1483, 2211, 2089, 1509, 1527, 1538, 2229, 2098, 
       1557, 2240, 2106, 1581, 1600, 1610, 2257, 2114, 1629, 917, 1654, 1672, 
       1682, 2285, 2131, 1701, 1716, 2297, 1727, 1744, 1754, 2312, 2145, 1779,
        1797, 1808, 2330, 2153, 1828, 2341, 2161, 1852, 1871, 1882, 2359, 
       2169, 1902, 2371, 2177, 1927, 1945, 1955, 2388, 2185, 1975, 1990, 2400,
        2001, 2019, 2029, 2415, 2198, 2054, 2069, 2078}], 
      Line3DBox[{1460, 1476, 1485, 1502, 2212, 1511, 1530, 1540, 2230, 2099, 
       1558, 1574, 2241, 1583, 1603, 1612, 2258, 2115, 1630, 1646, 2269, 1656,
        1675, 1684, 1696, 2287, 1702, 1719, 2298, 1729, 1747, 1756, 1772, 
       2313, 1781, 1800, 1810, 2331, 2154, 1829, 1845, 2342, 1854, 1874, 1884,
        2360, 2170, 1903, 1919, 2372, 1929, 1948, 1957, 1970, 2390, 1976, 
       1993, 2401, 2003, 2022, 2031, 2047, 2416, 2056, 2072, 2079}], 
      Line3DBox[{1461, 1480, 1486, 2213, 2090, 1513, 1535, 1541, 2233, 2101, 
       1559, 821, 1585, 1607, 1613, 2261, 2118, 1631, 1651, 2270, 1658, 1679, 
       1685, 2289, 2134, 1703, 1724, 2299, 1731, 1751, 1757, 2314, 2146, 1783,
        1805, 1812, 2334, 2156, 1830, 2343, 2162, 1856, 1879, 1885, 2363, 
       2172, 1904, 1924, 2373, 1931, 1952, 1958, 2392, 2188, 1977, 1998, 2402,
        2005, 2026, 2032, 2417, 2199, 2058, 2075, 2080}], 
      Line3DBox[{1463, 1482, 1488, 1508, 2214, 1514, 1537, 1543, 790, 1560, 
       1580, 2242, 1587, 1609, 1615, 1628, 2263, 1632, 1653, 2271, 1660, 1681,
        1687, 1700, 2291, 1704, 1726, 2300, 1733, 1753, 1759, 1778, 2315, 
       1784, 1807, 1814, 2335, 2157, 1831, 1851, 2344, 1858, 1881, 1887, 1901,
        2365, 1905, 1926, 2374, 1933, 1954, 1960, 1974, 2394, 1978, 2000, 
       2403, 2007, 2028, 2034, 2053, 2418, 2059, 2077, 2082}], 
      Line3DBox[{1464, 1487, 1489, 2215, 2091, 1515, 1542, 1544, 2236, 2104, 
       1561, 1586, 2243, 1588, 1614, 1616, 2265, 2121, 1633, 1659, 2272, 1661,
        1686, 1688, 2293, 2137, 1705, 1732, 2301, 1734, 1758, 1760, 2316, 
       2147, 1785, 1813, 1815, 2337, 2159, 1832, 1857, 2345, 1859, 1886, 1888,
        2367, 2175, 1906, 1932, 2375, 1934, 1959, 1961, 2396, 2191, 1979, 
       2006, 2404, 2008, 2033, 2035, 2419, 2200, 2060, 2081, 2083}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{677, 1084, 1083, 1082, 2316, 1081, 1080, 1079, 2315, 1078, 
       1077, 1076, 2314, 1075, 1074, 1073, 2313, 1072, 1071, 1070, 2312, 1069,
        1068, 1067, 2311, 1066, 1065, 1064, 2310, 1063, 1062, 1061, 1059, 
       2302, 1058, 1057, 1056, 2309, 1055, 1054, 1053, 2308, 1052, 1051, 1050,
        2307, 1049, 1048, 1047, 2306, 1046, 1045, 1044, 2305, 1043, 1042, 
       1041, 2304, 1040, 1039, 1038, 2303, 1037, 1036, 1035, 1060}], 
      Line3DBox[{703, 678, 679, 680, 2201, 681, 682, 683, 2202, 684, 685, 686,
        2203, 687, 688, 689, 2204, 690, 691, 692, 2205, 693, 694, 695, 2206, 
       696, 697, 698, 2207, 699, 700, 701, 702, 2208, 704, 705, 706, 2209, 
       707, 708, 709, 2210, 710, 711, 712, 2211, 713, 714, 715, 2212, 716, 
       717, 718, 2213, 719, 720, 721, 2214, 722, 723, 724, 2215, 725, 726, 
       727, 728}], 
      Line3DBox[{755, 729, 730, 2217, 731, 732, 733, 734, 2218, 735, 736, 
       2219, 737, 738, 739, 740, 2220, 741, 742, 2221, 743, 744, 745, 746, 
       2222, 747, 748, 749, 2223, 750, 751, 752, 2216, 753, 757, 758, 761, 
       2225, 762, 765, 2226, 766, 769, 770, 773, 2229, 774, 777, 2230, 778, 
       781, 782, 785, 2233, 786, 789, 790, 793, 794, 797, 2236, 798, 801, 802,
        804}], Line3DBox[{805, 754, 756, 759, 2224, 760, 763, 764, 2227, 767, 
       768, 771, 2228, 772, 775, 776, 2231, 779, 780, 783, 2232, 784, 787, 
       788, 791, 2234, 792, 795, 2235, 796, 799, 800, 803, 2237, 806, 807, 
       808, 2238, 809, 810, 811, 2239, 812, 813, 814, 2240, 815, 816, 817, 
       2241, 818, 819, 820, 821, 822, 823, 2242, 824, 825, 826, 827, 2243, 
       828, 829, 830}], 
      Line3DBox[{857, 831, 832, 2245, 833, 834, 835, 836, 2246, 837, 838, 
       2247, 839, 840, 841, 842, 2248, 843, 844, 845, 2249, 846, 847, 848, 
       2250, 849, 850, 851, 2251, 852, 853, 854, 2244, 855, 859, 860, 863, 
       2253, 864, 867, 2254, 868, 871, 872, 875, 2257, 876, 879, 2258, 880, 
       883, 884, 887, 2261, 888, 891, 892, 2263, 895, 896, 899, 2265, 900, 
       903, 904, 906}], 
      Line3DBox[{907, 856, 858, 861, 2252, 862, 865, 866, 2255, 869, 870, 873,
        2256, 874, 877, 878, 881, 2259, 882, 885, 2260, 886, 889, 890, 893, 
       2262, 894, 897, 2264, 898, 901, 902, 905, 2266, 908, 909, 910, 2267, 
       911, 912, 913, 2268, 914, 915, 916, 917, 918, 919, 2269, 920, 921, 922,
        923, 2270, 924, 925, 2271, 926, 927, 928, 929, 2272, 930, 931, 932}], 
      Line3DBox[{959, 933, 934, 2274, 935, 936, 937, 938, 2275, 939, 940, 941,
        2276, 942, 943, 944, 2277, 945, 946, 947, 2278, 948, 949, 950, 2279, 
       951, 952, 953, 2280, 954, 955, 956, 2273, 957, 961, 962, 965, 2282, 
       966, 969, 970, 973, 974, 977, 2285, 978, 981, 982, 2287, 985, 986, 989,
        2289, 990, 993, 994, 2291, 997, 998, 1001, 2293, 1002, 1005, 1006, 
       1008}], Line3DBox[{1009, 958, 960, 963, 2281, 964, 967, 968, 971, 2283,
        972, 975, 2284, 976, 979, 980, 983, 2286, 984, 987, 2288, 988, 991, 
       992, 995, 2290, 996, 999, 2292, 1000, 1003, 1004, 1007, 2294, 1010, 
       1011, 1012, 2295, 1013, 1014, 1015, 2296, 1016, 1017, 1018, 1019, 2297,
        1020, 1021, 2298, 1022, 1023, 1024, 1025, 2299, 1026, 1027, 2300, 
       1028, 1029, 1030, 1031, 2301, 1032, 1033, 1034}], 
      Line3DBox[{1085, 1160, 1159, 1156, 2337, 1155, 1152, 1151, 1148, 2335, 
       1147, 1144, 2334, 1143, 1140, 1139, 1136, 2331, 1135, 1132, 2330, 1131,
        1128, 1127, 1124, 2327, 1123, 1120, 2326, 1119, 1116, 1115, 1110, 
       2324, 1109, 1108, 1107, 1106, 2323, 1105, 1104, 2322, 1103, 1102, 1101,
        1100, 2321, 1099, 1098, 2320, 1097, 1096, 1095, 1094, 2319, 1093, 
       1092, 2318, 1091, 1090, 1089, 1088, 2317, 1087, 1086, 1113}], 
      Line3DBox[{1111, 1186, 1185, 2345, 1184, 1183, 1182, 1181, 2344, 1180, 
       1179, 1178, 2343, 1177, 1176, 1175, 2342, 1174, 1173, 1172, 2341, 1171,
        1170, 1169, 2340, 1168, 1167, 1166, 2339, 1165, 1164, 1163, 2338, 
       1161, 1158, 1157, 1154, 2336, 1153, 1150, 1149, 1146, 1145, 1142, 2333,
        1141, 1138, 1137, 2332, 1134, 1133, 1130, 2329, 1129, 1126, 1125, 
       2328, 1122, 1121, 1118, 2325, 1117, 1114, 1112, 1162}], 
      Line3DBox[{1187, 1262, 1261, 1258, 2367, 1257, 1254, 1253, 2365, 1250, 
       1249, 1246, 2363, 1245, 1242, 1241, 1238, 2360, 1237, 1234, 2359, 1233,
        1230, 1229, 1226, 2356, 1225, 1222, 2355, 1221, 1218, 1217, 1212, 
       2353, 1211, 1210, 1209, 2352, 1208, 1207, 1206, 2351, 1205, 1204, 1203,
        1202, 2350, 1201, 1200, 2349, 1199, 1198, 1197, 1196, 2348, 1195, 
       1194, 2347, 1193, 1192, 1191, 1190, 2346, 1189, 1188, 1215}], 
      Line3DBox[{1213, 1288, 1287, 2375, 1286, 1285, 1284, 1283, 2374, 1282, 
       1281, 2373, 1280, 1279, 1278, 1277, 2372, 1276, 1275, 1274, 2371, 1273,
        1272, 1271, 2370, 1270, 1269, 1268, 2369, 1267, 1266, 1265, 2368, 
       1263, 1260, 1259, 1256, 2366, 1255, 1252, 2364, 1251, 1248, 1247, 1244,
        2362, 1243, 1240, 1239, 2361, 1236, 1235, 1232, 2358, 1231, 1228, 
       1227, 2357, 1224, 1223, 1220, 2354, 1219, 1216, 1214, 1264}], 
      Line3DBox[{1289, 1364, 1363, 1360, 2396, 1359, 1356, 1355, 2394, 1352, 
       1351, 1348, 2392, 1347, 1344, 1343, 2390, 1340, 1339, 1336, 2388, 1335,
        1332, 1331, 1328, 2385, 1327, 1324, 2384, 1323, 1320, 1319, 1314, 
       2382, 1313, 1312, 1311, 2381, 1310, 1309, 1308, 2380, 1307, 1306, 1305,
        2379, 1304, 1303, 1302, 2378, 1301, 1300, 1299, 1298, 1297, 1296, 
       2377, 1295, 1294, 1293, 1292, 2376, 1291, 1290, 1317}], 
      Line3DBox[{1315, 1390, 1389, 2404, 1388, 1387, 1386, 1385, 2403, 1384, 
       1383, 2402, 1382, 1381, 1380, 1379, 2401, 1378, 1377, 2400, 1376, 1375,
        1374, 1373, 2399, 1372, 1371, 1370, 2398, 1369, 1368, 1367, 2397, 
       1365, 1362, 1361, 1358, 2395, 1357, 1354, 2393, 1353, 1350, 1349, 1346,
        2391, 1345, 1342, 2389, 1341, 1338, 1337, 1334, 2387, 1333, 1330, 
       1329, 2386, 1326, 1325, 1322, 2383, 1321, 1318, 1316, 1366}], 
      Line3DBox[{1391, 1441, 1440, 1439, 2419, 1438, 1437, 1436, 2418, 1435, 
       1434, 1433, 2417, 1432, 1431, 1430, 2416, 1429, 1428, 1427, 2415, 1426,
        1425, 1424, 2414, 1423, 1422, 1421, 2413, 1420, 1419, 1418, 1416, 
       2412, 1415, 1414, 1413, 2411, 1412, 1411, 1410, 2410, 1409, 1408, 1407,
        2409, 1406, 1405, 1404, 2408, 1403, 1402, 1401, 2407, 1400, 1399, 
       1398, 2406, 1397, 1396, 1395, 1394, 2405, 1393, 1392, 1417}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
zxeGq9BHD2f+89LW8GrmqtKh7yRYpUl0zTiTjRTjo9QvdO5E34UXJKxxp8nc
Xkf5QDa6upvRrlh1vUXuIquhB3Zbr1Ux0dYqpEzfzfxrywqMbn60kMOd4Q/z
NsKJVcjsS3XTBr0FBJeW7S/ATinKcyyOMhsJBzTY/nTZgcfzu4X+uDP+a5Bb
jZSFGGX5z1Xf/Nsi++3s7WvYd2rcE9eMrEL3/XcM73xkDinNAXovcWe5w2jW
wawK2Yrfu8bUYQIVR1l2HflBgk99N/OyP2Qhq1avz1x+Wy3kXNsXbuPOScsn
V073ZqHrjiphJ5ZWWnT5nfelYK9x+bOjTbMK+Uh8db7sYQID9lrzUrijEGNT
9Yy/Co0yazjeVDMEoT7hZ1HY98SZNvi0ZqHUs/UdzTobLQtt7cIPcGf2SGxp
dkkWqpZbFbtz5U/L7RbNQ0XYp0qyaX9yVKGgoU0dXipDiKnbtsjBnasKqzEb
5FWIXOnVVRY/PTBNpm6fxs71p3XraVYW6mac0Pppv9byM8y5vYzoWyS4W8Rm
ISWq44Nb3L9bdsXe7n+MnXVKPaZktRL5vyZf95fSA4NGxQ+ruLM2dPoe1ftK
JB55aOkGnu9f39aOObOAr/v+Co0SkVnIwClkPLJktYWMTZr2Ke4M2P76dsoz
C7Gt8TRTL/5sGTG4bNKF3S2TdmV1pBLpmmaV7CNpg/Ac1aA87gy9Emhmb6lE
rwI2d9Wf0IKj3BlsvtiFlCJ21Dlkocgh1lk11pWWKYZYkZfE75ad7XiGDbLQ
JZqQ26VDyy0RFvMTw9jP7kkc/q+uElkkNOpubl0EsfyEzRu44x4kfeZhViUi
d7XJJl9XB9/trZVq7JqXNnVXNbLQ19noSdby3y2creUWY8Tv0vd+eMEtlYVq
OEW7ZF8stUj4FjpPY9/aMnOIvF+J9sj3PhdtUIeYX3vGO3BntrSlhyKqEr35
QP/FnUsVXiWYGH7F/n6w3n1COAu9eCTGGmX9q+Uk2efsj/9+376wn4w7C3EH
KAcFji625FZlcH4nxgfTBJXK0Ep04foh6QPfVUDo3NQ14nl5pkGt8u+ulcgq
ck3dpk4Jzk2PCBzG15dRD0Mj4SNZaFJv77UuwZ8tlIHkTIu44+c+TwYMWWiJ
e/Rr9AKpJWjrEesKdjnKrSQZh0pEEfj5QVekElRJ2Hw9iTuo7snwhmElOhUs
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
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0.5, 3.}, {0.5, 3.}, {0., 0.10411840125584405`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6872016940162373`*^9, 3.687201713658778*^9}, 
   3.687201802658058*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
BKO6hGTW5ZTe788GI10RSbMOHa8XGYx0ZYnS/iSlltvBTN9p3pZMvgjqQy8w
OM3b9C0TuhvtY3Gat/wv89foJ7E4cx8l+p2fZhWL07zp6n6OJ5M8kW413Nz2
kudm4Il4amDK1vDV2rEsTvPm8+BBbtZnT8RfDybvLhl/UfBCPhshd9zXnOrl
XkhXDDlL9DfwLbyQbjM0nN6XPSvJC+lKvy8M1VoR98EL6UrgXv93NodF3gxO
8zbztMbggKneSJdDek5K0lyi6414OKTjXVOyvZ038sMlqnOScw0SvVFdMqTS
UyVW7oU38skjF+5mHzvSgHX5xDvx5fBYRR+kyydTVxkW3pvjg3QFRHyre9bL
bT6oLiFJj/KfWWLug3RF5LHZoOaGQB+kK0vk03MbhmX7MP2leZsccXRGvxd2
DE7z5qDE4ZvonWNwmrefRTpvdv1kcZo3d1HxmDnH7Bmc5g08N/c98Nse6VZD
w6YrU5fsc0A8NXDVZUW02gcWp3nT3KGRobvcEfHXA9cyzGPMFUfksxFKKi5+
KBjkhHTFMP6EqoaHpRPSbYaZz31eBBc5Id1W0BqpGjhhljPSlUDiva+vT5xn
cZq3uIX2W32/OyNdDjn5wfLzPXUXxMMh8zYN1xzp4IL8cInr4m533710QXXJ
kEaFTfP4yq7IJ4/00rbb8mCvK9Llky/2Lhkaia5Il0+iixMHnv3jinQFZFO2
sVP6JDdUl5Asm2JgVXbUDemKSMuTkJqpSW5IV5ZYdDjbXvrhxvSR5k0cWJoW
VnKawWneOKWcNYJlJgxO87ZcecvjewksTvP2bkuK7QQ5UwZn7uvcdhjksMcU
6VbDwfdxE/vnmCKeGnDdol7ds6cZg9O8PZpz7solXTPEXw8yuUuOqcWbIZ+N
cK3jyLCEWjOkK4a+l3wn7ZxtjnSb4c7ZiCfHLM2Rbiu4OUzWP1ZnjnQlsF9R
4dv4sxYMTvOWGGYy61VPS6TLIU6TD66J97JEPBzycdHJoz/lrZAfLnEXWge9
vmCF6pIhs3ddbQjpZo188sighfeF5tbWSFd63vT5r0dgtTXS5ZODy/KD5SfZ
IF0BudAz12yMvg2qS0iOetx2CPWzQbrS86nWTFOnxzZIV5aQrPvl4mYbpl80
b1EBmw5vKTRhcJq32QvfXtbzZHGatzvuAWdXbGRxmrcrcR/3fx3E4jRv9z2z
+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
xT0qLRTpCsiwLSkrdvqEorqEpMRlZGi7SSjSFZGJ2rvnm2zHurKku8uPU3c0
Q5nvLTRv96zjPpgPjWJwmrdc5d6ytm2RDE7zZrKnPLThE4vTvBkcXX3i9m0W
p3mT/7h557PoSKRbDTvOjhsj64J5amBnh2SW7gkWp3l73l9skr0F89dDzONl
E/oswD4bIe2ce+G6sVhXDH3tRnBOyGPdZkj1u7pKryMC6bbC4Hdv5w78GYF0
JTAwulrZ8S2L07wNjA7ukXAvAulyyCm3d3lGaZiHQ9qb6nOLwiKQHy5Z7969
ssgjAtUlPd7EP3lkYI198kjU5tO6545hXT5JzvkzQGUX1uWTieLElzPXYV0B
GRnr8/yuJq5LSG69Oh9+ezrWFZFXpjenjRuNdWWJdoj2jValCOb7cCdeAlkB
aVqB5jEMTvPmqvmDJ9JlcZo3npeT8ad5LE7zZvdld67scBaneVumqt3nuCAG
6VaDr3jQfs7PaMRTA6VNAoPYFyxO8/Z+lO6CDdnRiL8eatN/72gKj0Y+G+FS
U/3xMy7RSFcM+7/nzik3xrrNcDUqzmKIHtZthb46RUX9V2FdCfjeySy8O5vF
ad5GHiLe/43GutK89Q0TjFbAPBzpeW1ewiMe9sMlo5fv8euojUJ1yZA1q6cf
uPc1CvnkkarU/Kl9XkYhXT6x1DlqVXQ3CunySUxk4JwRGVFIV0CePOnI/BQT
heoSkr2nRwTLBWBdERlinFka4oJ1ZcmhCTZvA6yimPssNG+aW/Q/vHgQx+A0
b7tnT7kUGcviNG/5u4vjPjqxOM1ban3TzN1HWJzmzSn94JPh2nFItxqmx7XE
CWdhnhqwPeaZ1q7M4jRvRS2woFmI+ethp2RuR1lVLPLZCP+1zXqY/T4W6Yrh
0tGjDvr3YpFuM0yr+TL6Y0os0m2FFevsjPoFxyJdCcxXeMjjOLE4zZvtRt2J
gaewLofImRfXv9XHPBxScUW5MXU99sMlq+5Jdg1diOuSIdb7TMsVpmGfPNJv
PSfbawTW5ZOq0PSj5+WxLp/cdYnoIRRiXQG5t+hF/Z+mGFSXkNRsby1ZXBmD
dEUkbm3bR0FxDNKVJe43Xs4dWxDD3L+jeRtnq63P5SQyOM1bu9OzlhlfEhic
5k1VfRzJv8viNG/qhd9+JcWyOM3b+Ftzsu+4JiDdapBbc2J0iyHmqQFrhagN
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
XRQZYr6N5lnF6nzTti821Rzoween/epkvdFWtJ4vbH6r3qV/Xv8HyMsv34qF
JqenkX77bN4XunnMmqmT3jcen6suq4dVPJUTTB9h4kP+iCfu6nOgfg5VfYq3
Tq0ri+l/Svz5akLVuZ4DvmGdJpqpL91qshCpj/+9rhxVXVQtnTs9E+jnUsEO
f3yRT80COuWonPhHjV+2ZzH9ComfD/uXi+bnk3vu5N4cH22xP5Bp8z6X9pnF
h/F5Rqe/5TF9rIjPBu433TUycgCPAPXLGDp00dVcgAtRzTr1Ua4JuYj06yH+
/x3iXD5ZM5uZK0Z4KgJN9mXXnwQ8IuR762fEzG2AH5+HWN6BzgAzWn8zm6/g
qcZpW1WhTjFS3ZwfoqkDeSTIy/zlknMyuYjcYyd5XDhQrbI1lZxnVs9Lf1Ph
tplQpxSlLnQ5veIVWBf7lrkpsCD8Jo1fY/M+MnTond5jIC+/ns9YF7l48nIQ
ucf1G+dSibN1ogNHn+gb/6vvQsKj9poYcs+O3a/t9vyO58fzgE4OpbI9Zm7A
XqAT6+H/826695ocRO5d/OaXowok4Ybao6BOLmW2e+S0+MWAB8d3PQitf2RA
vg9lz9WjIw0zh1nkA1yANO//VXRME+JC1DpHarHoy0nm70MS/4a+n9s3XoQ2
hKzJjq892RfH58Rq68Z7TvkAx/482ZWd4RYC4yXo5sQow60byffyrG8rj7lq
2yvmAh4pajx8r2nbIsjTg1JdHJ7L6kJchgr1CFa0HEjXpaizfp43/145NA74
hvOr7RPl/1WYB9blUH+m6FLdzwCO81g0bUGqaTXAMf8d3b1/8goAjvO1+U57
5+QEUi9BfJaiz5Ga4zrdSV0KwfmoZNiMKe1JBfTrA4uL2iumjjhaCOIFKHpq
+KQfWwsALkTVa6rG/UGReiFyz1GG0vCa52rwlvbNUo7h2RhbHvFzbRHgESGn
BmOH7pGAH+ddtTJj2/yvdB1UM7vuxtIhHkEiWv9eLuOzgYHjOcV6uF8xqpC3
enSpngf4JWjQpZaqcWd5iPSnIHmxa517Yvg2cn6IfhFqGlK7Yudt6I8ULS47
aRQZz2PmhRD9Ne9NdDevh/vqQS1bbg3096T1rOIyeVev37b8qgPQj/2cjfKP
aa/mIXJvk5yH2nHl2TdFeX3jsQ8VOi4/RlM0vzrRL0Yq9pnIci7Uz6E+JLcu
3qfHY/prE38C8ytr3zUC37DO7KVDpnGH0fulyLpylKphZsOLtpNAP5fK21Hb
dFYC9oXjxxo+aD3wJp/ph0v8XCu4ZiU5U8D0B/yN85FLcUNQ0WN4j4yPaul7
nb/9lGN89k5eLtMbWwh4BOhZqUf+irwigAuRsqnM0wG+NN7B+q+wPL5r1nRy
zuUZnvVuF0ONIk4BHhHa/mPlFxs7wI/PQ9hOx1n9pxUh0q+H5Cv2/kZFLyWo
U4ye8t/GfxoMeSRoZ2bnpusfChHpk0LyuLNQfkRvBTnP8oweo891dxu+FAN+
KfoeVOJ16BFYF/smTB3T0XSOxnXlmLznTlLrz00HecH+FJ/vrX6UTNdZlbF5
36h+uzvChNc3Hu+3JLmfnpZ/ITNXgOx3xwcnlQo3qJNDHa8wGn9rM9CJ9fxw
kG8/vpz2QZHwy1HWYdOmf9GDOrmUs5Xh8zhDwIPj9VNUzmaMI3VixDc+GvpW
cmmuhK6PjWHxlM8Xx55qPw3iBaj2xsyrW+pOAVyIQlJvquTk0XgZ61vLzp8y
W9zIeWN5TiZxkwU5JYAHvz/OfGW22R/w43NFfc2Xi1hN43vZdccPOhrpbgl1
ihFfSdTaagh5JMgkwmu2sjqpK/4//t85/U3yqZB+32H1HFhV9Cl8ONQpRbe+
5500/En+P7I6F6+KGbCuGq7bg7iRVPrr1mKA43PV3/OewS26rjWQzeP16rpR
C/1BvvC5evr10Mq6omJmngTZ79xh41/YREIfOJSC8uN51fHFTN9/4kOZaP+O
qvlAJz5vOivdR7/2hTq51I6JnLvqrgDH50quZTN/80pSz8n6M1Y8aWL1AFJv
PIA5V8sm9nu+Yngp05+U+LPBLj274G8YL0ABk8fHy3eUAFyIViTt0L5WVYJI
30niZ/v1EYPjY0+BeBHym/0iU5IMeHC+Rg9O/DN6Xwn9/sv6XL4kNjZ7A9Qj
Rv/Ezpi6zBbySJDBzTdVr2aWINJ3ifjvULoypF4d6pGi8DDXzRtVIU8PStSK
btr0g173GpuXyE8LDyUIAQ/eb4rBTw/ZNrp+25LN17PDNa1lhcV94/G+ph4s
NRPegfviUD8MLNdPKQU4XnfIx0nXElNOI3Lv9zePHGXVO2vB/SCoh0vNGVQZ
NzQE8OD4PYPNfdM9TtP3Ysh9ND4yDvsQq/+e3B8kuBCJm25EU/sq6P+P7H1M
W+v+12y/VTBzlYj/hUY58dm7yD1Q9j7a6GkO5tp7z9M8fOY5n6/vx1AZ/nma
h898H5ST0LT1oG0F6k/rI/prW8ZQw6srmHlIZN29O/UndRWQ+0fkvo8UmTUu
ar9z/Sy9r4/Mfu98tssRjSxh+r8TnT+Lj09GzWfoukpyj0mGOhw3zJBjcI7W
/4HxZ7FtlIv7sFL6PgJ7b+VJccgRp0XkXgm5t8WhIlQm6fGSzjHzL4mfu3dM
CQ35Qe4BdTI+aKuNDNArOsvMM/vNI0bGnHTpTPMSZm4T8eGqS9uY2u1n6HU7
Gd/OJDjHjhtyjulfT/arkfhJKWTTaTpeyOj/Gb66N21aCTPnkug8kzw5L/Ek
j5m3RNZ13331+whv8j4oYvwPd9S49+J1Ps3D1o3bq3Xxwjg5TL97ose8Ydm9
0Zbk87CI8T/ftmFjbz5Zl60nL4tQHD66IweRPq1E/4lDbkemKOYj0heS+L+K
nuNJ5uPK0P8e8jFrjZlHNjN3k+z3m9O8qx1X6OdjZSL2fGoVLBLezmfmupG8
GAzfEck3zmHmRRF/Fsh4xuoeykOkXwbJy/IXW7MtfMi+2Prh0Ay1Rhv/bGau
OdmvUV3SOw29ZGa+JtG5o6NteP8rZJ4XW0f6eGdZ/vb5abROMZMX/RQTfac9
hIeth5xxr2P1sQWHmb7/RE/DUA/z3ScTad/Y+rqzxupDx+mTeVtsneT7bofZ
l9BRml/M5OV1z52OYE4SnV+2jm6Y5Zq1PrbR9N9xbP1kxcX0Nt5d0gdbzPgf
H/PWMsSe9F9l6+Xm/fuh5rYVXUenztZVdi86y9tgTNfFWYoZ//3yjHImZqYw
cwvIfpfSc5d++8DWce25OnSn+gm6/qeMrctyGLHc7IXuAWauJ9Fvaq3tpi7v
w8yXInrkFS7eyJxOvn9n61La6fksv/nZ+pMpmy7ZSZO9EOm3S/zc9N0u7JUX
XbdjydaBVGl56dbd20/Xb7P1HqrOLq9/BJK6r15mXdXn+99aiYPpz1Hs97AP
d2nEyo4+yswhIHoGf+x3pWcD+b6Y4DKUnhnXvXQSPeeCYr+HPZFcMvio/WF6
X72Mfs3qOXybfLoe8gFbP/AieHFuukUAM2eU+FkdsbR5Io98b9vL7HeGyGO9
inoI/fmHrRPQcFjQdbfcj5mPRfw/M3Go+8N1EYj0SSH+1GTPVntWSuu/xn5P
+i5q40C+D+1DPvu9Z/F1pdwPt2IR6RNH9DxNODX0SkUMMzeLrHtR/cXT4crk
3MpSxH8ub51Vojbpa01w/DrZPe2d12DyfFuW0TNkaehamz/SEemfTvy/7Xuv
tbA3mZlPT/xv4or6rb5J+k/KMvo/1YnUbFXTEOn7Sfw3HXJ8TGIn/f1yDFn3
K+IuXudzO4j+XklXltlv4prWKVMGpDLz+X7ziFHLLO0A7T1ZzDww4sOh0dHb
HGwy6L+niB45iueSZb6Sk8LMXSD7vZTYKt0wnr5vosg+v73pOunZhTl0Hbgu
+xzvk7vi54wLucycMLJujEZk5T3dXGbuDvFfOaCj20opj16XfU71oNPm6nhL
uk/XNfZ53er3hbymXvr5mCX7vC567Pm0/TFkXfY5kmzC3mfzi+n3wXz2ed2s
5/nD7A7mMXOUf8eL0Mh/FqsmhtHvC1/YfS0c63zpX2X6+WcM+xxPOX34pQEy
RA/7PGrB1+gZFl/p5yHNrA9O/ey7rQ/R77N72ed7+5d4Lzc8lEvPl2WfI5nE
Pf4ZbE2e27DPMXTyyl3EesW0Hvb5g86rCUqi5CKan32e0P9AS8ueYUXMnCHi
v4vcuDUr+UXMPAaybkGi6hWtymJE+gIT35rc9nx1MaX/DvrC/p0+uWyfX1ld
ESL9dMi+BmtXPrN1LmJex8nPudMHGiscPw9wAfL5s/vi2ysQF6JNGsqx15sg
LkJJU2bPaf4McOzDz/WWR60GVoB4MVqaL6paNhbg2J/Sh26mwjkwXoqOFF3R
tLeA8T3I+krbxcx1EJeh/mo4Gd+0C+C/6swn3fcYGwz5OZRxxLJ14fEAx35q
rNKcoZkD+bnUCE/XXuEZyC9HPaQ/nxMfif4CZfUt3SnnAM5HK0VzdtQLzwJc
gOal293sVYTxQjTS9+EFg4kQFyF7VfmaXBOAY//v1u+6H7UKxouRsjil7PNO
GC9BQ4cUt2iEnWPWIzp1ala7LpM/DeJ70E1d0+lNxZBHhjI2F2VmVUEeAXoX
nRj9J3Ua4EI0SEEhx8ET8ON8ya+s7gh8CPVzqOPJ97tCWyG/CM3JEchp8QA/
9qH1n7jEC08BP86v5o2waxc/QB4xindcon24Xwngwf9/m0VRDZNLgE45ar5L
Ue1PhTLAI0V7+Kl/n10JeXpQEreL6+8FcRnq3Luv1vNTAY59qPYXcg0vA/xX
3/pBcxd7N0MeLrXD/fD8/SNKAQ/++zGu4IurQSnjF9E5eNzqk3EveQDnoyVJ
q2bXZ+QDXIC+HQ/6vq8R4kKUVJ+btWoA5BGhwMujs94YAhznZW53TWeAK4wX
o8kZQR0L42C8BK0bIT6ZeYnH/D7R+VNTtWd86gkQ34Ou8eZtC+MUAFyG+uQ8
b6DPBDhfXoD26G4oT3x0AuBC1K/juOMsWTCnHucl6a9dXcVmgB/nZR39d1Zf
HhEqGWsdcnk6mC+Pf3oGj/ExXAf48fn0KjcwpoIgjxh5UUhRMQLE47z7C8PX
vs0A8di3IYs1XH1KoX45yv3juTPTLkB+KUpaomUb3wh19iDHroM1l8UQl6Hu
W83ktY2Ec9U5lCT9vJ2hA8DxvgImo4CMPQDH+gcrn/fKOAxwrLMtv7rGmsfO
Zyc6LYMmqCfbgPnR+Dyc89KKE7w7BnABsjF9+nKyHZx7LkTLvIPlbC5AXITi
bk3LVGY+r4oZXcGZ3l362+A8cTGyWbJeQVAJ4yXomWujoP9Adt400fnP00av
V2HhIB5/vuoI/WSaDOMFaEWtyGe4A5xPLUSHApK4JWoRfXl+1XFtNZGUqoA5
yHhfliMUnznUgfhfdWseWmWjrOHc5K8oIGprZYY3mO+M87hftvtT7CHIL0Yu
C38+DVCLAvviUrNSrp/eVAn5JWiThY3p1hIQj/Pe8l24jPcR8kvRqWXXB85Z
AOYC/3/zgn/Ve3+4NiTAJKYvjv3J1pd/3u8ywLEPayv0RulNBXN48X7r9BU0
y1IAjvdlmRZ+SVEGzLHF+uMvPA+03cjOsSU///ccUj7yeVp2/3oanA8rQK2H
2/RsMyEuRP110gf434K4CC27KJA72ARwnMeQx3uWzRXAeDEqXnjq20sFoAfv
Y+7fc3T2KkK8B2Uqtt0oyYK4DKUxY4n9ov5g7uev51GPOzZMM4LzQDlUwb2p
O6XBAMc+K8xBZ/bcATj2eb/wxRaH75BfjrJK2HnjxSI4f5OP2qPGlv+bEAxw
AYo084jkSOH8SiFaqKB3LWgXxEXIUC3W83NnYF8c+znv7IQZC3cDHPuZKJ0q
90YK5kX+j7mQZB+SwEzNEc5wniMfGVn3JN7XA3Mb8U+qYkN8/+NgjiH+vWfH
ViW2v/MDPAKU4eXnt+IOnDOIXzfyQsMDtoE5ib+eU+08tHuFtR/QyaGCFIys
utQhvwj9+8V0g6Mq4Mf+hJ7muY48Aub04fz++dZ1v+JrkC+c30fiuqpnZ8Ac
Peyb3HeXIkF4LNApR037W/7VVH84d0+Kduj2mlkogbly+PeujzWuWp8J5r7h
n812Vlu/zQQ49mGNkaP3rjo4N41DFZvXZztvBzje16h7Bd+4SgDH+7q7Dc2b
eTEa8MtRSeZvEp22wDllfKRRMHBDZ14qwAXoRdMX4U4ziAvR39MWCXa/h/O/
RIj/5tlS7VSA/4/5XL/jxaiw7q/uoH4wXoIu1pW4zKxMBvFSNGCqhqeyL5x7
xUdXzjvnPWsC84Cw/1EuVs2OxoAH+2H+JSV5BAfyCNBd/fanCoVwXo8QJax+
5eJ3EPDjn73hzwPu1oI6avx7rxagbxbJSYDnv+clEX/yn6Q+tDcA/L++B7cM
jTm4GfKIkaaDUr7TQLhfLqXpLbHvng3isZ/xKhV2LY+zgH45alFIR3rrAMgv
RaYbF22SjQPzcbCff8QaK4XaQVyG0kuYvH/vaID/6seiYsSfw4dzZzgUtclW
+uIswPF+5+m52f0MBDjeV1neE26wDcCx/u+3nFYhXTjnhY+S26b6vSiE81AE
qKv3tqOCH8RFaHz8xwEWkwD+6/V2gEnTJQ6MF6NyN93zfm1wLoYE1WmbRRhW
w7kkUtSRfz7rYxacD8JH5Uk1oZuswFwM7PP0uHYby2DIL0NZFA7YYuUKef57
LsZvXIjubw5aE/sdzGXAebnX/ePSDQvII0IVjiYVSx7BOQ4cql1Q++DwDBCP
/RnwJd7brwjE45/h1SZKOaMgvxgddrhgJjgE4vG/J+ivvtvIgfwS5HNk71uL
LVC/HPUgq2GF7sccwC9FHwtCzmcvAXMEsJ+RDQbB0VMgLkNJVSfH6AwDOPan
NGDN/eHfYX9+DsUbN7Jx0z8Ax7oyLeuevr0N5wJwqdCFwx8fKQU41l+ytr3X
Mg32w//vPva/cQFSj0k4ZpYEcSF6H7W7TH8HxEVo8LfQlnPmAMf52r90g3OS
DowXo/Gdj+VLZGC8BP1rEbC5rA3WZUlRo2eiVsoNgGOfe7VXqI7Oh7gM9WF6
toFBNMCxz+sXcaryd0N+DvVtVYX5tlUAxz5Hz3LRdzWF/FyqqeEvc5+pkF+O
GtbvsSBDrQj9B0KfKZU=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw1nAf81uP3xj/PZz9WUwmhtFQkI6SshoqSjJRKtIgke+9VZkpLoUhmQijZ
kZWMbCUys8peyf96/677/3p1d53n/px7r3POfe5vo+NG9zk5jqLolSyKEuFf
RRRdr4iaZRTtKfr5ShT1FJ6ljw/p++nCrvp2tvBd4bnCZxV/jrCd+O4W/87C
U/X7A8WfITxAfC+LHphH0Wn6PU/0KcKTFd4XPUbYUWnuU9pdhQPEdz7flO4i
4eviuTiU+5roY3KnfUr0KOHmSnOi0v6l+DaiZ4tuHfJ5RDyHCHfR72cU313Y
TflcQv2ErfT7ScV3KdyWj8R/QeJ6vhra26V0O94RPqq46Qq3KPRSvvOFvYUH
6PttovcXrqZ+yvMf4b7K90XRhwr3yP39ReVzr3jvUxiv0Flxtws7CQ8Sz6GU
LZ4jhfco/ghhJ8VPEt1GuHvu+C65+/YkfX9LeGPkfMlzb32bIGwl7Kbvs0Qf
KOyg312ES0rz3K/4boH3AYWJCvvm5n1JPPuJnqu4HrnTPiG6T27euYG/h3jv
EHYX7pm7XV1zt4W50Vd4YmL+44W/6vdA9cm3tEVlXKD4+qIb6NtForcU1lU4
VXQd4R7i2Uq4SJipH4cp7S/ir6e4YeIpRP+rcJzi14V8iK8X8rmW/IVbKFwX
Oa+GCsNDWcz5MzTnfxderrjLFGYo1NK3IcLNhLup7BrCBcLthGcoflvaq9/b
CJ8sTV+s+AZhjBiPFsIm+n686MaJ21tbuFDYUaGv6BeElyWeS8zzffX7RdH9
lfZwhWGKe0Nxa0WfrjYmquc1jLl4jhL+oPj+iv9a+LvCWaIL8byt798pfK9w
dOK5QXn7KK+BwqXC/on5+H1M4rEbILxSYaXosYnTvhDimf+PhTXwlcrqq7I+
F45IPCeGJq7zO6KHCTdVPY4Xzx+MT+L5cyx9z/4h+gTh/qXxzdJtH8yaF65R
mjFK+1/I/6Uwf/opPM48FVYUzhEdC6dGXu/TFO5XmvZK+7LweYVOot8WttK3
1gq1FR7SmDcSzhPuxlxQ2FXhZuX1StivtovMU7C2tEeqWtHdwgcUGot+NnM8
PM8In1Je+4t+Wvi9fh8g+tPM+ZJ/A+aEMukkXK349zPXif33CZW3n+r5hnCB
QjPRD7GGYufznPDtzHnfrjye1bcdxPOosJ2+785ep/CGeHYRviWcp7Axe41w
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
7YM80ef+KV3ul6wL9A+l/y3sUfg/TIl87zA45EneL7AnVGynehF9PvT5Ocij
ok/GBpJ6TaBbYdOgbujpe6fWq1gXzyqsq3gskT2o7wuFdbprK7Y5oOtdI3pL
7gaR/0SfWLie7+v7XmrXQan9wXqEvl0m+j3qhV6EPCqeIZnvj4dyT6v4n8Pe
i75/veiG6DXMS9EvhXqyttHB0FvHVqx3d0nti4XOzJoaoPyOqTrP1xhP0cMU
t0coizovQX8N8dxdD88sJ2APHZd7jfdW3ICq9SDW0eCwFveL7X+wSHm8pPgn
aJfmX92w3/QLPPsis5e2gWOzhWbf+q70+c46uo25VHjODlRZ65TXWsU/LXyo
4rn3sMIPSZBLEtOMNfbJR8S3GJ7Uey/rdEbuelAfZBL6njX+qMI3ie3n2D+p
MzZ8ztfltKNife+FxDIJMtW7iW3j7K2Pq4xVil+Q2tb3c1jjB6ru26itnblP
Kv1956r3D/ptQcW2qRsqtv8ckHledRH2QHZnHgoPL22T556CcutXfG5dg4yI
vomtqLT/BfI287Qa+4w8vfQ6bqty7xC+Q/+kzpNz7MfS5wt7xS2hznuie2eW
CX+LLI8epHzvVbpWyuc6dHB97yd6UmK/O+zP0J9Htk1PT+zjxF1Fj8yyd0/h
/Ir7nT7vozxfFw5gnAuP1U7K8zDRHyt+GPMdG5rSPlRYB1yq+P6F7fa1wh7L
nUJR8X3Eg8x10XOFp+W2xX5Seg9sw7zLLLvmFcvb1IE67VOYf2lkX2XqME95
7Fj1/QX8U3O3fUf0FH3/LPFeh9wJjVyNjL4isb0KefUB9g7R9wv7lpaxscND
I4f+XHqsmdPthY1Uv82V/3aZ+5w1flxhGbsIdcC+wT52ZOF1sDSshcOUplHs
9TkrsZzOnUWvwuW3VlvOU/o3ItvPDxHfduI/WNgrs98R/QMPdyCfIjOk9k3F
Lrk+sR8UdzPsn2+zb1atMx4YbBH4bN8lnh2FE/R9iuibhC8I7614TZ5aevzR
9/EhxEcR38XFgeeein0Uqds9wjHin6g8mlZ9//Jb2Is4o+iHByu2w6NznZTb
n5yzpptwfNgvqMNOrBNhk6rX9TthbTNf5lQ8Tuh33OFiX2qusDN3hsIrVIcd
hIdU7c+G/v2DcInSPMD4gsq/reL6VL3/Ec93/LFvjuxvgP3nSGwGwW7TT/Rf
mW1T+JXhb7ZrZvlnt8x1om70KfYT/O7wOWymsE/sOnVWuXP1fQ/hM2rfu6Lv
5FzQ7xmimxe2dx2G3i2co29PkWfqOrMn42NJPtT78JDfy6Fv8fNn/Hoj7ylM
E91UOFXpbxE9BTkK2wT7O3KIvnWgnVXvUftj4xE9VvSeog8X3V7YSfwdM9M7
iN6Ls0hhy9D2a0ufTQuxDylsi12r8H0Z7xROEHYVX+uwZ8LPXntU1feVn0a+
j+ukuIahbvAjG3QP/dxA9M7Cq5V2d/pIaXfJ7HfKb+q8m+jHC7dra+yBhe+S
8NG+KHefTFIfNOP+RWkaY1/IPG9Zl9isWJdlbL9b7H6dI/sS44+Bf3uT3POt
nr43zrxGpinP5lW/6WBNtEXf0rem2Joyv91g7h5c+E5qbZDljtS3juJpkvks
WBvOA2Tpf/ideu70je1TOzn1Hsg4cneGjzd+4JeXrksv7Lrh3ETXvS312XW7
cIbC4+xpws1S32dxn4JP7wHK+1lkvMx9OCjz/Qh6Mz7eF6WenxcLRyv+VtEt
xH+y6EsUt13V9zv4beKf11fhdtGzhOPF1wTbjnAHhbGKa1x1WfjWDc6cP/dJ
5wtPUZ7XIy9zfqW+e7o29Z0I+jZ+oVemXrPkxRuTO0S3FF6Y+p0LdaqbWmdH
J9oytS0cvRI5k/v2f5Xf/NxnNLrhW6n3Z+TVpan1aGTcd1KfcctZiwo/ii4z
p8Um8VfpPsf3FfvINanXJHXGpoc/4WeFdX/8z7kfRXfGZx4d+LLUdwT/37eX
CxtV3cYJir9CODCz/yHj0rXwftCyalmUtbygsN2AOxj829lPpounRdXls34H
xN5r0evZU85Kfd90emr/ojsj+/6dlnrfIP7U1G+Ozkjto4VPFP5LF6Te/3lP
dJLKPZs2Ve1jdlVkf9oTS6drWHV5lMs44RuGPbId4yietqrXfOWzE3ul6B0z
v+thn96t8By+NcxbymIfa1Z4nrDncXfAeYEPzPaF/ZdmKv/2wlbKq344F85N
fU93jvDk1Hevo1L7vM2J7AN5EGdcOGdPKH0mNgmyDTLR0VXHn8ScqjpP+oH+
GBD6mbXEfRx3iNzJYcfuGeyN7I3Ia/2r7mfuC09J3Q+tOavoQ85RxW1d9Xuf
myL78hHP+cL7rxNT30Ph83O80p4gbCD+4anfZ50Q9o2OYe94M7GNCnvFo+GM
ny88W3n9jjyrtDszjpF9BS9N3f/Mvbqx96K/FS7FhoW8I/7Zqe8bOb/YB24S
vW1Y49wjNyrs84+4dYfwKvHdVvEdGfaoX5mDwj9S21j+ZK2nvjuYFOipFcsT
t2f2W8XfC/vzicqzmjse36WZIX/u2Fg/rJH3RB8rjGOfBYnCdP3eKpwL+L9d
GPltFHconGV3COsrr5ax2zk9pB8r7FRafsYPpHPptwb4/JN3w5A/vkPI1fiN
zCh8Vs4tfNfDm6baud8g1BP9qPBH5P5gM4e/HjJN1X6AZwb+G9SeSRXvidxb
9Q9yCO9Haop+MDMP92jITFvpd23lt2Xmtxs59w5CBmJUZN/3q0qfpYciM4v+
Ven25y618Bixt0Nzbuyg+Jmp9Sr2c2x6P7E/CH9JrTv/jHyhML3isxD5du9w
tiKPNQ37/0WFbRSjC9dhl2A74h5qZBjTzWLbCpgfnO/NY8tqLTPro+wPlMU9
FHscdz1jwl3AJWX0v4cr3IVhB2AOoIe2UZotYq+xv1LbE5hv8P/NXly17XQT
8Uwo/HaGdzX3C/+NfbfC+5MaoW7UkfXCe4KHS8tp71dsM2FNYfc4qXDf/lvx
nd3Gse0D9N17hfsH+xtvnXgvdI/wz9h+s7xtQRf4ULxDhPelfl+JXveTwvrQ
56cVlhH2UwajSvc/MuSswvrs3WHe8h70bcZBZWyPvpn5HeIilXWYcFpmf+yp
QS9pHGSgiZl95vGT5i3bgshv4ojHlxsfa3yhedPAvQxvIZ+M/Faxa+J9mPeQ
vEejLN7a7Vf6Hdsy4ZDEbyR5k8abCPyieafAW84FwbZ5Q+H2XlL4fQHvj/D1
500o9k/edcKDLnZrkD3RR/LY+wpyI3OC94CLI99lY9dlPsxkb8/sw4/vNT7z
+HPiszpJ32oqrnvVd6+cI7cVjuecuk84KLGfEm/ursjs14o/P2+ROE95z1Mn
83ypjc6lsi+J/IYRGh/qxejHYZ7DQ33w9+aNR7vEtjL8lWtknp/Ikx0S22zx
f+b9LP75R+aWSaknc+5/70pi+5nzBvDJMNbMPd6pDK163PHbxz91ZGJfKd78
npPZz513ELw7Y3+7q/DbCu7yeBNyZ2F5Hv2atzl1lPaRzOO7JLIfVxZ7PBiL
yxS/DXJM1Wm3pp+qnqvwXVd4X+W98vLSbzSwC3Jv2C7s1ezZoxO/jeJdLm+N
n2dOsl8m9t3irfR5id+U8Y76qsTvKrnDuDSxT+AVIR79Gv8xZHXW5ybCUZnv
W7HTIrsS1w2fkNLvuXhvy3ysF/r5xsTtxR8UGl1mfKgDNgreWt+VWAfB35L3
Atxj8k7josw+zhcH/WbLMFc3z7zX1M1cLm+m3yv9FgY5g/d3vI1iz+QOd5Ow
t9CGQanlLHyudhX/eZF96f9LbaPegG6h8HXFex93TH+IPk94ucK3FduxoXmk
16XqN8KcUzVzp8XfYH3qPDn34GuY2d7CGC8rbI88TmmXFJbxB1ddH3ztH8Om
mPhOH396/O1PiexnX8n8zjHOnHb32DrditT1xK5eZNbPkMOPznyO9M+sazcJ
+hRnIPcItWL7HiAzrAzzEJkG/wruKT5FjgpnE23qrHo2yGyv4wzdOXEf8lYB
GvsA7yWw13HfMbJw2/HZYE7/ltpPA7mKunG3jj3339SyBP1/rdLkjK3KaplY
xuMNA/E/VHxfQz5fVHw2jyutfx9RNd0yyBVpYl99/PZHZPYl4N0a76k5EzfL
bW+kbwZV/a4N+faJwvc4K5X/cNGvpLZhYlM+t/Tc4Ix+M/U5jO7DvTz2+i8K
37OsqNhW/m5q2yA2pn6kqfjOBR2K8wv7NfcFH4WzDB0Uuyp6Kf4k2HUHsreX
bi/nZr/Ad4DwaIXHOMOr5uEeY7eq47lnGcG+VPq+qEPV9cdOv6foF1Kft9je
seti4+FvBTA/sZ1ir6gX9hbeRCxMPR+wh7cr7ReEz0zfzG/njsp8T/R+kC3H
ZNbLeUNXM/F7C97UYyNdEfr22My+JdwZYCfHTvVI4XeyyDNPcXaFOtQLNmr+
pgFtxja+Msjq/TLrStSBuvHm/onSaYdGfvdOP6wKfbJPZn8SbDr4upwS5kPt
cB5xFzwytb0KPWi/xHrZvuHMahH2H+6X2YsmB9mY+2jk1NGpfVPRhfCvYL1N
K6wLja/YHxJfVvQC/BXxRx0fdISRpfWerar2o5sQ9AXikfmxWX2Wei5x18X7
mpPZH4JeiR2eu5W9M+8P2LC+im2vwwdoRGmZGX3wysJ7Sdeq7SRtQv+fmdpW
c07Qobgb4j7ovNR+m+i0yFTYJLZV2iTzOZVmtjOMD3of/mPYBvFbQl/m3gf9
rVHis56/S4AfC/XH1wU7M2sBuzcyC7oV+9G2me3n2JOpM/etYwr7g6F7XVhY
/2I/wx9gSGrfS/xu6Qf0Gmx236Tm5x62XWZ9FHsd/cnezp3uQ6n/9gh2c/Yf
9D7ecdUKeyb7bO0gk9zPWZ34HRV/k+HT2PbJVaGfeYNSv2pZdHXYD/Ex5m6L
e8Ms8x00/UafjIj8Nx1+SG3b5d4Xmn2P+w58eEaFscbW1yLUYePM9yTIruSJ
TMEeiuyEbwOyGvov93q8U/o/lEedVg==
          "]], Polygon3DBox[CompressedData["
1:eJwtnAn8FtMXxmfembkzLxUhW5QlIkTKUllKCaVFkX0phWzt9kpE2ZfIvkay
y75vEcq+U0JSsiThb43/8/Xcz6fTe87cmTszd+5yznOe+9tw4NC+J9aSJPk1
TxL9S5rov13TJNlFsob0S8skWVkn/CR7tPR3Q5J0ld5K8qL0mTrWReWHSmZL
XyA5XPruktelj5H8rnNXkz1JeqMiSRrUXGdD6Wfr2AqVryX7culb6dim0jeR
tJK+gaSJ9DUkzaXP0j130PmVnm1FlSR1/TaTvX48dovqWFvnbq1z96knyUmy
l6e+56nSL5aU0kuV76Hyq2U3lv2bzjlLeqXjS6X/kPqcNSSrqLyRZHXqlGwt
vbWkl/R1C78bdawj/V893whde4BkifQLVGeuslRlu+t+p8n+NXWdZ0rfV8c3
kr6hpJ/0mbqmncprepe/9H5XlL73Lzp2hvR3JL1lD9C5R6i+R3T+ZirbTfK8
9L8kQ6XvJ1kgfRfVM1H6JMmu0lvoup11/S6STaXPV32HSN9N8rL0YTo2XPoI
yXDpn+rYgdJ3lTwb2y9I30Byh/TnJJ2kHyR5UfpESSJ9Xck10q8r/e3+1P3P
l76S6txYdgv6QOH2yaSvL7lZ+pF65vdUxWGZ+o/e/yvZ/XXtMMkiynTNDiq/
k/pV/oB+O8juKJkh/cPC9v3Sr1P5G/QF2a0lr0tfrPI9o36byt8sXP6m7Nvj
+ZTvFY/9JTlH+rmSv6U/pfObSb9b+rU6/1vZPWS/K3ua7C9k7yb7ed5H9nv6
3VZ2m3jOqnqHUdKXSr9f5XfV/D47xjqf0/Ubxne5XuX/yD5U9h+yZ8heQzKZ
viypSf+ffk9S+cnxnKbBz/u79AdU/mPN9xstWSZ9jurbUvqr0qeqfCWdf3x8
t4dk19TuR8g+XJJK/5T+Iv0Rld+g8kdrtneRPCb9M5V3kv6U9JtU/qLsFrHs
RtlP11zeWfKM9Bdqbp8ukhejvbn0zWKbvcLcIb1bfMYl9EPpIyTfMg5U/37S
F0q/h+eXnMO9eXfpDSSTpN/KmJL+q87vr/MXyb5X9jLZfWXPl32X7CA5i7aW
NKG/6fdElQ+N9+ig9rlV+iTJxtJ/0vX9pH+hsrt1/mY6dqnsTdVWz8T2O1X2
aZJCei24PdEfqTx+e+naYyRfSf9Ivz1V3kvysfS/Vf/B8VtN1/nT9Lue7KaS
56Q3C36WXPU9XLm9+J5bSGbRfoXbk7a9hfcp3J6U3Sp7he55mvQrmANl/67y
A2Lb3ic7k4xjbElWkf6JfvuovLfkZ+rU+cP0O5T+LX0tnTNF+hmSuvTP9Htc
4j5FG/9Q+PpPpd+p8tMKrxXMOadKX67fY1U+RLJJ5v5Mfz+ENUl6e73vzdK7
qmyWrj9X1xyp4wMZl9Ib6dhF0kdKftW77azzrtP519NHpe8quVH6DZIDpbdV
fdcw3qS/qGs/Zg7mm0t+Kv29b6H/qfwVlZ+p3zeYCyRnZx7PjPe9Je/TNjr/
4Vj2ic7vot8nZD8Zn3n74Pt3kv6yyk+QPU/2WbI/lr277Dtl95f9Ev2j8HxB
3XfIPoTjsl9mTEo/QPI440tygfRuuv7uWPaGzt9Z9lTZ3WW/KntA5vn0fclA
6e0lZ0ofF9tgP9pB+sz4DL0lzzEWJX3i+bTXtZIO0vsHl/eS/prqPyD4+n1l
z5G9l36fZqzHZ+is8mmxrtkq30i/43l/SYvM7Uv7PcQzMfcEtzf6R/H77Ke2
OEHtMkjr3am0M/2JMSb9RB3fSeUd4zmjuI/K5jAnSu+p+mZE/QPV1zf429AW
b8n+unRf2lPyvvRjg+s/SeXvq7ytfsfIPkOybeb6qe8ByUj6iK7ppmuPkLwr
/Q1JD+mDJfOkjyq8NrKGjpR+Tubv/5nkXOlH6X4fSj9W+tu63we6Zh/GkORb
6X9KTpZ+mSShr2fuC/SJC6UP0/Xzo/6pyg8KLr9Y9tx4PuWfx2PHSO6Tfq/k
aOmTaAfpb0vOj+WvMPdKjuP7FH43fLpx0hurzktZc5ir9GwnZH7+jyQnMn55
Z5VdLPlDevfg+1HXO7p2/eC1lDG9gfQNJecl7rMtpbfMvJadFOfU9qrjfq39
r0n2KL0eMF/tL/lG+geF107m9I+lH8I30LkfyNfZUf3lPf3Olf2p5G3p9+PP
JZ4jn5S+pPBaf6Tk38LzP+vLvpIF+Ai65gNd+6HkdunnSCZLvxx/Ufruut8z
0qdKtpA+ScfOlX6OZKL0rwuvZawBvxVej5nfD0rsA7D+40+sn9ineUXXfKxr
P5K8JH2p5H3p7+GT5l5PW9I2iddc5td9EvsQ7xf2t//QuQt17k56/+/0+6Xs
LyTfSJ9a/Oee/bem3Fp4fmfuPTbO0cw3zCd3SQ6WPk3n6F/SXHKHlIfwdxOv
OS+wduh+s/k+qrud7ndn8V83TTaij0m/R7Iyc7vkQemPS9ZOPMe9JX1NXX+W
rj9d1zfneQvPrUdJgvrDliq/TeXPSraW3jS3r9tZsq70vXTseenTJNtK35Bv
kjpG2SB3vLC99D6S+azlOnaz9Jskt+T2t9tK70mbS99Gddwh/QXJ9qXH9x5q
l+56rgP1fD1lz1TZnZIdpbdnvVX5ZpLtpU/OPHYYQ5dnjo+6qmwX/BZdf4Lu
eZGuvVByrPRnJT9KX4b/ntsfaKdr20o+ZI0kBlPZJZKTpM8r7HsxBhYV9m8Y
C/hkX/JtdL9xOneozm1at79CX8Ynniu9i8qfiO++uco/Kew70+c/py+pfJbK
7yFeoC8V7qudGG+F13fGGn1uXs3r99nSJ0h+kd5W19xF35XsTDxY2NdjTf8R
XwT/U+dtgR8o/XM9x3yd+5lknvT7crc93/ReAlJ9k8P0s0LnP6iOtYnsi+m/
atunKvvn+Br4HPi8W6h8Mv2TdUzl62Ze61jz1pe+VebyKyStpTcM9vUq6Y/F
9ekY5kbJhtLLzP7WefGc5pl96VHxGTYixpO+Kuuyrm+UeS4ZKGkY/Q/WatZs
fIDVM/uyw+M1PA++4qnxmXPVN0B6Xfqjlf0Z1krWzJ2ktwv2b9BnqnwX2bcn
fobNpe8mmZ64jbYJfl70S5hvpTcJvh/v/nzl+Rb/9TLJZtJbqPzCxGt2a+lV
8Fik7Z7W+asHz8+c+2zl9qH98Jnz6O/clDgGWU/61pIpidfOF2K8RnyzQeIY
jfWV8qsk7eL9L5K+tvQndX6r4GdjTtox2L9grcAn3zOzv8Vawj13y9y/H1ff
eVdyGHhC8LdmDerE2q8+9UrqPv6E9Om55xbm8Dty+z+8O22Kj/MI+EPiGPHV
wu2PL4TP0is4HiLe2ThxjLST7vmg6npd0lt6m+B3w2fYQ3oR3D8a4ydW9r/w
//hm+FBDVP6x9BH4bbE/4XuMidfQf/jWfKM1Mvdvvs9gyTrRP3xH+ruSg6Tv
qfrukX6k9DdVXyc90yN6trck+5f2D/GH8FmJufGvnk/s4+ED7a3r75c+VPq7
0T/pq/c8Wm0xsO71H18Pnw8f5nidP1f6WPwCnf9w7rmAOfOh3PHMdirfXnJH
zfPll9IXMCYZ07p+K9Z61hTpi3TNd9K/B0+RPry0/bX0nXX/saWxBda2XWQf
J/sr2T/L7lz39fSFd+I1R5S2qWtXlY+X/bfsn2R3kr089/UL4jHWl+ek3y19
y7rxsJVqxi72rBsvAk+qJM/kXm95nr945tz1Uf+K+Ex54XfhHbLC6wFrF2vO
iawNqr+ouayb6j9H9r8q+411T/a+pfvvU7LbyD609Lf8THbHuv0FsCswrKnS
X8ztO73KmhbXG3wZfJpluedfsC8wui+k/yNZQnvyzNLPU/21mvWudeM3vH9d
son033M/H07FH7ntRbR1fGbq43ownn+ln1i6nHO71N0evC+YUiF9vdLrI22x
nsqP0e9Vsq+WHCd9VZWPjfq6Kr9RvzfKvgGhjVT+WNQ3i+XYzAk3ST9TMkH6
2ZJx+Cyl1zp8uQ3AA/X7cOoxco30TcGwot5S5XuWni/ulL2F7F1Kn38V59bt
Lz7N95E8F+cXfLmP4zX4i09HX7JVvB/1XxvraKDy06UfLn1NlR+i3ytkXxmP
Dcjta+ITDczdPrTHGMnR0kflros6T87tP+CrsCafJn0N1T8+ljVT/W1Kl+Nb
rF/39ZSfKRkpfavS/RNfZZ26/VOwYDDVV6UfkBtbBGM8P7f/i2+Fj7Uz1+j6
8+Ozrq3rW5V+/sNkN4nvx/ueJjlYekm8I30f6avT33P72vjc+0lfSeWnRn2N
uv05/Jknmc9if2fsMoZfzj3f4/t+GcfM7Zpjvld3/Y45jrmXNV5lFW0k/SbJ
Ynwdyc3MvcH2jdI/r1wOFvBGPDZVskT6t5LbpF+k839jPmReAw/T7x/4JpIX
pE9XeVPGh/SfVX6l7H9V9pnsn2R/qt+1Vb5O6mOfS1qmxni/wDcnZpL+EvfV
+afIXqjrr5b9mexF+q2pPI33uCZzLDw7njMu+P2nSV8AngKmJfsB2V/Lvl+/
K+nalVMfewIfnO9NbMfzye4ueyu1ZaX2/5k1SfZq8ZwbVN5Q+sPSF4GtyV6a
uG2/kn1dcP33yV4o+zzZv6j8Udqd9pW9Kt9T9jeyn8psN07dps9KgvSC+Zn1
OfP9GqWug/elPb6WXIsPFZyr+Eb6L6pvaeZcATmDZdKvDm6vJdJ/5f1yz6dv
Sj6hb5aeH/FNO8R4EiweDP996W/mnuuY096RflDptR99B50/uHT8ybnt666f
uXVJnLP7l56f6attVb53af/3fsYe81/p/ouvsk2MP16UPUN267rXV3xnfOhH
pPcpvd6ib63ygaXnHsbqdnU/L883R/KG9JNLvw+x8fYqD7JPkt1b9mqypwX3
x0/UPj/G/kl//SfxsQeD++c86cti/6N/rxfb9LvM7b+F5Hvpr2TuvxvxTNJH
lZ5PiHW3rXu80JfoUy9L75U79rk0PtPlut/fuvc7KvsB/B6fVmVrpj72Hj6k
9E1oc+n3BdtvM+7j+Vz/F2MY3zh4fHKvb8GL8Xd1fhvdq67nWauM64XsDete
P1hrbozHhunYlVq3zsYHwD+WXC79lIjX5GCI0q+VrFY5J4Hfi/+7SWWMFqy2
Cz619KGqb7LqG0Jsr3v/Vbou6gTv/032aOmXRPxlPeqUPj7Wv27le50Z8dt1
JFdLHytpKH1N5hzpp0f8d7jud43ud7zsZaUxfvxY/NlNpaeSMbKviteTkyA3
Qcz4cuEcB7g9+P275LJ4J9kTJetLX5k5Bqw42sRkxDnEO82Dxzhj/X+ye1ae
M5g7fpa9t/QNKl9LHeD7G0umSj+vZnyfNqftb5CsXTkHAS4CPtKycg6CXAQx
8+uFczbkWcCMni2cQwJ3AX9pIb0518ieEOtrVrlu7kF+4J/SbUcbgnePVPvd
VBgP/1llI2RfV/h5eXdyTOSayD/NL5xzIa8BJrR55ZwTeSYwqFaVc0jkicgX
LSyMAYMFg4lsIf1PniGuEY8FY+rgNuA3SwvnOMh1DJO9onCOY36MkX8unLMg
d3GC7P8VzqGQ5yCG+6twzoHcAzHuVpVzAuQGiFmz4JwVuBWYwJaVc0zE3cTf
rSvnqMhDESNuTXyoawZJb6JnXjNzjolcExhgA7BkMJfUa8rbwTkSciXEqNtW
joFXyhxPExuTwyCXQb7jo8KYwD8156vAClhDWAdYDyYHx/TE7cTvjYNjLuIo
4qntKmMIxPHE8ztUjjnXyhxfEYsS8xL7nkn8WTnmJfYlJm1fOecDTgleuW4w
BkBcT3zfrjJeiH95r+Tc3Gv2S9Hn6C39Ul3zp859TcdmZ84hnB19jL0qY+Bg
4eDjhwRjvGC9L8keGBxjjcmMh/8Xe1XGecF7u1fOMZBreJF4Wfq8yrgU+NTR
wTHhoMx4MLEiMfq2MebcNDh+vZp4Tce2y5wzIW8AprJlMAbRMXNMTGxMDoJc
BBj0rpUxbeJC4sPOlXMc5Blmyt65MgYPFk9+Yt9gjBis+FXZu/GsarMZqWPq
ydJblI4F0DepuxybGOGy3PgRWO/cuIZemNt3xoe+gDVZ198X9Y10fYfS9XNt
i7rPpxzM+aLcMe+wzHg/sTAx+fDMeDexOjkC4mTi5d0rr08rpH8lmSR9o9L3
p66N685BnBx9sm6Vc0LgQuBDOwTnuLrGmHyn4JxJnxiT95D9new5mdfPe4N9
uGnRJzozeE1kHWQ97Md6Ifklc0x9UGUfbnlcY+8K9lHxq/CvejE3MH9n9n/H
BPu8+Ln4u6OD18iXo8/Xp7LPiJ+Iv3hhsE+Hb7eM52XukVyX2R87LdgHxBfE
3z6HtVf2X5nnAOaC35lP4pp+f7BPhh+BP3FgZR/um+gTHlA5R0eu7in6W3BO
CtwG/KZj5RwYeSgwiq7BnAJwDvCOXSrnrMBdptPelTExsDEwow6VfYa3o0/c
l28d/G2n6NiVmX12/HT89f6VfXr8bvzv2/B9GcOZ/ZEZspfL/iqzPw93A58K
Pwp/6uZgH2pe9Gn3q+zT47fjv5+o8m1zY9V7Rx/ldx0bIn0H6Surf30WXN6W
WEn2R+p//cD4yZvKHgR/AqxacqT0wyQ9a85JHy59Djkb6fuTp9X5B+i3jext
4jGu71Nzjmqw9PdK29Q1oO58HPm6/vgQ0l8qzQUC691f5Z0Kcz3Wk+xa2OZZ
eKYu0qeVLkc/oG68mOvJsXWLz9sO3FByqPQnweCl9wCnjs/L85ODO1D6W6Xf
j3MPV/lVpbk3TTgPX6s0N2gV8kB1833A8jeP5zxfmhsDtt8PPKE0H2lD2b1k
318ay4b706NuPhA2GHfTwvwluEJbx2seL/2+vHt/nT+jdDncpp6yry3NJ+La
vevm68CVgTPTvzBfiFwnOc+69IdLfx/e9bC6+UnkMveS9JV+Z2muTm9yY8QX
hdurQzzG/NM5M34KdrtJxF/vSIwfM7+DNY9nPQ7OV5MbAjPeLng+3z/zMcq6
Rbzx8sR4LXg8Osc6BucDwROvTIzHMt/tnjnnTq6f8bxHZny3QxzPPYn7Euee
Gc89ZN+WONcNvkxd1NkleI5mrp4SbeZvsMvXsCuvT0dkfh6elfVncJw/yA0z
H/ST/ULi3DZ8ns6Jc3bfF87Pk5tZJ3H+6tXS7Q0X7ODYvrR389gnewev3eTQ
95LerjA3ah36cOH5fZ/M7U2unHz1g4nX3D3i+gx2O4v2qrw+Hp/5fWlL1tch
sj9InEtmfjs0M/4Ll6ptXL8fjPeHr/BI4hwC+DVrPmv/5Ph9eD7GFmNsB8ZC
YW7empKWhfkb5H7JSZ9eOD8MFwlOyfjC8QnlcDuOZj4qnf8eLfuouvllBzCX
4MMX9qfhjsDlOE7lX5bmh1D3MXXHP9RP7nlI3fylrfSsqyfOP+LP31NzfhJu
1muFfcPGkmcKx1v3qbx9Ym7YDYW5HidIri/Mb+N54LoNrps/00rnrpo4P0z+
Hm7JqPgOxGRwdy4vHKt9U5qPMpEYqm5+DLHJ+fjU0i8ozAUYxDHpS0rbF4L9
1l1ObDYuHiNeJJa7lOdU+WWF73d0PHZVYW7AsZIphcs5/6z4TMRDE2IZsSl8
Gdp3THxGYjyuv7pw7Ed9nH9OPLawdL6fb3ks81PhtmgV2/Phwm3PN3ipcDz4
YM35Xrhrd0tWSpwTeaDwMcp0WnIX82nh2FJV/5cfJv6aXnM+AG4f/LFNEueM
uf7YwusXHJ3jos3c1T6uafBF4SbCQWxdOB/LfA0ntQPPU5pPSllf3fSZ0ufD
Le1dd/9mbWMO3UL6TaX7O3ofld+n34aJc+6PSp9ZOLZskDifPV2iS/7LafF+
TxeO7UPifPljkjWZSyWzC8enTzL/J+bOvV041lsrlhOvPl5zG9AWbxSOHdeI
7Q1fkbqok3zU1NLzCWN137rj94dZHxJz92YVjs0bxecnRqX/31g4dmU8EKtP
iscYQ4wl/SS36b8nCsfGmlL+4wvcXpgn3CyWE+NOjGOJ2Bf/eEScr7tW9h9v
kL0oMZYK3vdr4hzRycF8YLi+m8Y1eLaO7ST/ZdXcnQR/8l5dX0+NHRIPkhs9
XcVtK3PgMtkTE3PjVsnNfe0f61gYzMWFy5yqvpXB8WS3l7TIzSc4WPohYFa5
+cTwi3eUrCT9nWC+AWV53fxo6jsQzEn6l8H3ayT938rxa8icw4X7901w/XAV
srrj0ZUzx+cNY7y4iuzzE+eSWdNY27Dhw/BOvBvrI/xD/NOt4/uTy+UazuUa
8r9rB8dm68R4m3iWXOpI1vfK8e9qmWNycpHE77/VnL+HO0o8Ta79FPps5TWJ
tQmfoHWM/3+ouT64rOSHyZXDYYSvQfz/Z805e7irxPv/1ow3wDV9M5hfTtvV
4HvIPiw1V6MgPgrmb2wk+5/KfA7KD4/HdszN5egdfV741sOl7y59lbrL8YeP
5RtL3zM314Kc0l7SPwzOLbaUHnT+pvo9QvaAeAyb8m5giLn9bfDAo6NPvaXk
SOmDUmPg2GAXe4FxkhsJLkcvVf9O+j1O9vGS29UOmcbfKOk9dLyxymuyR8Zn
W1X2P8Fc5y6yG8n+Ivh9eZcGsl8gBkiNAYEF3RocixHjEes9g0+UOoYilvoj
xoJN4jFsyom3/pT+b4xd1o51Ev+3yexT4VsVuWMvMN1c+ss6tl3U/9a5u+n3
vNQ5Hp4ZvvmJ0k9gjOTmo2PDPW8Y8wXkE7aKz8z9eR84OEws3I/64eyE3Hjh
Fpl9SHxJfETGAmMC/hj4TdPM/RPfFR8IX+hHyXHSDw3GEq6I8Rp8Obh35GjG
xvh9dOacO9w/8I0dMvtM+E7gLedlvoZrwU8uk/2F7FHB+Q3uxT2PCe7z9P2u
ifku8G/RObYcXyoYe2oX8RTwmkuifwd3D58N340czaBgfGds9Ef3qIwfnJLZ
n8NXBC+akNmnw7cD7xmfeX49Icb3z2TOP5GbIr6/NTPn7/Tgd+bdl0uGB1/D
tczRpwbH79fr/Ndljwx+Z94dzGpCMP44t2Y+EFw04vu7M7cJbQO+zrlcMz4Y
zzoj1gfXk/wT9+YZhgbHu1dljrHJbfHMPPv8+L3AO+5Q+Q+Jc1ngZ2D5X8bn
Yc9Emrs/we0C//y8Zs423G/41XCLd0vsz4PPzlH5Hon3BsAvhy/O+gkfijUU
nWPwq8Br36p5DWYthj99YOL1HD4W+wG6J55f02D89Luaz+Fc8NDBiTnElIMn
bp55voVbA97YLPOcytwKvxzuDhwR4i3wxo0zH6OMOZu5G44xfBvw5ddq9s/w
lfF58X15f/hf4PXP1hzTENuAp75ccx+lr4KxDky8B+LPwvjzBzXHPMQ+4MuL
a+acwT0DT/6yZo4ZXDMcH7DY3WN/p01p2wGxPvDln2r+BnwL8Oeva25f2p41
ibajDeFj4hPiG8Ihh99IvmRmzf4ovjrflHfjHeF/gp+/U/P1fAt8LL4N7Q9/
jTWZZ+GZ4GMyhzGXMb89G+xPwGOCz9SmMiYINgi+2Lp0Tv4I2WekztWTEx8i
+/bUuXJy3INlX5A6902O+1DZt6bOfZOz7p87300uG/9h39RzJPt14EDChbye
ObQyhw8u3zWsaZVzdG/J/jl17m4t2UfKnsIaVZnDMF723am5DeQAH2XeTp0b
JIc1ITc/ldwWGOoVsX6wVd6Bd4HzAp8SjPS83Pg12OneMf84PTU/slnp3Bzc
gjEx/8i9uD/8P/gpb0t/NDXfCI7EFJ33UGruBPwD6qJO+JRwLK6N7w/3Ag7H
9bmvh9tBG9KWcCjg28IBOT435xFuCByG0bnrpG7y1+Qe8SleCcYTv9X3zVLn
fsFDf8x8DueCLy6WvXnq3PHhpblDcEgOLO2f7ix9Y8kDwfn7JLV/e0kwPvt6
9Ff3kT41eO0l1wi+D574VubryU2yZv8qe43Uazn5/Q1S+6j3BOOJC1S+bmru
ADnld3NznMk14x/sk9pnhd8KZ2a4yi9OzaUBT5yr6zdNnauF83FKbs4tXBDw
xw9VvlbqXC945vzM78S7waGGS72Yb1wZv1yo8lX4npXx5nczY95g3+CdH8tu
oPJ9K+fzHoo23AAw8ItjfwUbZ3xdKvuB1Fh8o9JcFnwoAit8um6599Th6xEz
X6Rxe1TNsTQ+UtfcPiC+E/7XwNTjk+sZo+gcWxHsY3XP7YPhe5HvHZy6/1Sl
+xA6xwrsyrlWcq7w2Xl+sHzyA8OY20vH5mCMn5fmBN2Ve/zAFYIzdk9uPitc
MsbzsNz8mtVif4V7Q477uMrjk7wy+eWhlfHdY1J/r1XieCR3QT5j89J8MLhd
5Cy6xvFMboR8yfDKY5ax+0osZ/zBM4IjtF1p/jZcAHIg3Us/M8/OHADfGg5A
n9ycHLgB+HCdcu8xxLdjDmMuw4f+M9hH7ZC7T9I38e8PTX39/4Ix6u1zvxPv
Rp2Ucc4vwfHSQam/z4/BcxRzFT50k9KcoL66/pTUXCEw7naye6XGvsnZb5P7
+/Ft/4nxwf6p9w/i829GXJA6FqhFf5x7/hD8Tfg2R8X+gI++t84fndp3Z8zw
LXj+hqU5XNNy80fhdsFnh1s2JH4v+B3w4+nf7F9YGhzLnBrbixihVe7+Sd8l
XuVZeWb2j8Kxaa3yHqm5N4wR6podvxfjHa4c/MENZF8RnEtYKLkg2IfCl1oR
bTDl9cBwasaap5fGKuHg3Voag24GrlIzNs0YY6ztXfN+FviJ7GdtFs8Hr0fn
GPs32aPDPhww6g9LY+QbFcYPwc7Bo9nrCmeS/aPg89R9VBw/YBg76vymNWMb
YIYnyT64ZiwR/Ia9q2B27Eclp9C5MMeeXAMY3ojC+23+w/aYHwo/I88KBt6n
8DPwLOC38PsH1Lz/h5zHfoXxc3Ih4P+da74/+2N5BnSOsd8VzP0gnb9tzVg8
mP5OsrerGesn53BI4XfkXdlD0D2270WVcwrbFa6Pe4FRtZHdsmbsanlprBIM
7PvSmNxZhZ8XrI78Dnzc42M5OZ5jCh+j7JfSe3kvrHl/HBjlpMJ4JNgldVAX
bcD+JTDYCYU5DmCz4EVwG8jpsD+OfA/7j+GnLCqNh6JzjP2M4Is8C/dn/xIY
7hnERDVju2Bumxf+hnxL9mhvHdtvYmXMbcvCe7jB4sgpDSxcP/dmDwV7KVrJ
Pr/yHugBsb1nle4D9AXux/7zH0tjpX3i88JZhru8o+w3S2PKYwtzbMCaeUau
pQ72s4NZsbazHl4W3CfoG2C+n5TG/HsWbj/60sfBWAAx9uv4BipvnNtnwHcA
81hLdqfUWMi84FweMfB7wRjROrnnI+ZC9tSwt2Yhc2iM71unnr+oH87YrNzz
AXMNGErz3PMpcy+Y1+q55xTmFuYQ5pI2qfkW4AnoPeL9wQx+y3wP7nVVcC5z
ceL3h1/xWOb4ECyP/O+MzDEcsRx8nieifwCX7/NgrIaY/pNg/sPMzD4Ovg75
5FmZY0RiRThqc/S8n6TmrsGZ+0j2vNRcOnw2fLclOn9KMCdvrsr/l5qrRw5w
z/h9yQ2CV7Cfvle8P2sEOsfY78PfEODvBsAJfCkY7+uS2v9jPz05wjVV36o1
5w7J8a0d+x+5P3xEzuUa/h4C8USWu37uzR4b9trAie1ceswx9rrH/oOPjq+M
z8x+GzDEhrljAmID8DCwKDAT/Fc4cjNz7xeCOwdGtnHuczgXHw9fj/71ZDBG
tCLzN+Zbs+bRd/i+8OvhFD6u6z9PzTUE41w/9/vQFuTn/47+4cPBPiu+K/35
oRhv87cK8E+fDuakP53bJ8E3gW/P3jU4uuzHoM/zbDzj49EfhYsMX/n4yjmj
Uwr7W+SS2sb2GRvjC3Ii5EHwuX4vzXmB+wKHFDz57GDuwYcR/zktjl8wDLAM
5iNyS+SvFuv6icFcs08i/gGGDZbNnFtU5i/CjYBvAO+AnAl5EvIlV8XnJdfF
fubLKnNC4Ib8FPEMcjDkYpiD/i3NP4a7Cl8D3gb+LHkf8j9XVl4/yA2TH38w
znc7F85nsJdscDBXZmnEm1j/yK2Tc76g8n7ORxPjQRMzz/fkfcj/XFF5/SC3
Q75uaZz/yK2xv/PyyvtTZybmC8EbAmMBa3kv4lGsD+Tq2DM7ufIeC/Y1sL/h
zMr82jz1GP0hc46MvBT5qSkxPoVrD6f7xMr8XrA4+H/wAOE7w92C/wAPAg7K
N4k5uox31nO4AfAFLqzMJ4VLAp8KXhX8T7go8DXgbYBXfZmY8wR2d2/sv8Ro
xGqsl+SRyCe9XZqjQd8khiGWeVV2x9ScVeIx1u+9CvMR2Bs4J/hvpbSI4wH/
g1wia+7c6L+QNyR/+EXp/EO/1OO7Qe71g9wxHICL4/PB7SEHQnyJv0KenpzX
JZU5MoxlxiRjk/mOPDM+3KPx+eGa7BrHF/4MvA1yXE+X5pwwXxHDEcvhrx1f
OL/GXmv2mLBvA07zKaX3aLBXg/0d48GTg7H1CdEfx3+BGwFnYlLl9b1VzOmc
U9mfIzdFPvm8yvsXwIrBjNkDAL8fXxh/vp/0b4NzMXCQiQfwD7YpnC+/JfpH
5PLI991bOgbgWnIExBf8TZdQeD8Jf6tkcXCuZmT07/FH4WHAx5hQ2d+Fe8Hf
KDm7cv6Ituebk9Nh/ocHAh/khjj/w/Xg772cxVoZnBsYH+MB4lfiTTAZsBn4
y7wL8UPP3P433A74IbeVzk/wbMS3e4DrBOcW2NNB/MkeI/YawQG5rDRHhTwZ
+bIpss8PHjvzIl6L/0TuknzmuXq+ZcG5DfZYEP+y54m9T+xBGld5/wJ7v8GD
wYVZT+G6wyk/vfL4WxLLwI5Zj+Gyw38fUpp/z9zLHApvlz1U7JtiD8bI0vsJ
mAuZk+GFsYeIvURw4MeV5lMtSMzJnhTn668Tc8zBU4i5aDtyaMSD7PFirxec
+LGV9zzBo4dPf0blfEvf1PFnx9x7qNhLxX6rc0vnK8ivEL92zv03eUh2sj+J
v0XD/oLmqf2T5zPvMWPfGBjQCaX3VH+Ve78Ue63ZP8JczBw5XfqIYO7lHxHv
fit4r3LLuB6zX+aW1BjWQblzsORdyb9eXTmegMsDf+nSyj4Hvgf+DX8vCP+Q
XCJ1Hlp5/ScvRkx5eOX9cOz/Jr47P67n5C4ZU3Ojv1Pmzq/MiuOFv3PEnrEL
S++HY+8aHKdLSsen5LLwab8OjrfJg9HnB1aO6Yjt2OPG+cSr5MXowwMqt9fC
6F+Mqez/kvtjTL4f/H1qheNHYkvid3ht+MTfB495xj57zK6Ufk/puYa/xbRa
4b+P1FB242jjPzFuGb8HV8ZIwUo5h7+fRExBbPFP6r83xfhqUPjvUbG3D3+d
vDH54zei/0zumDn+kMoxKbFpWvPfN8LfJnfJfvPDKuML5BEZc0dUxofZO0UO
8pjK/vzs3JgL2Av4JnvV2FPQsTS+y14MOKynVPbv2RvCfqaTKvvH7OVg/9Wg
0pgo2CgYK/gk/iF7KdhzNroynnxGbkwCbAJ8lb1s7G8bUXkPyYO592eytwT/
jX1S7JcaVfnvKbAXhj1ufUv7i+xFYf/syMr4MntN2H9ycOk9K/Bu4d/2Kz0+
5+d+PrBg8Fr27sHZHVIZwwTLBA9mvyx42d3R/+9VGk9j3xx7WHrE+h/IjReD
RYMhc+0b8fnA39lrxv64pqXxGfbaseexW+n3nRHjif1K++c3594fyN5h8CX2
nl3GGCq9/5FvzTe/vjSez7rF+jW4Mp5I7pb8cr00PsveH/YDnVoZDyN3y5p5
ZGU8idwv+OzKpfHLLnFNTEv79Pj27LHk763hX/0S4z/2tuL/XlJ4fwdcIfBR
ct/kG/LS+Bp5cWKu5cF4HblX9uj9HefPxbnniLFxvf9f7vHAXtPJcTwxZvh7
aawX3+b24fHlwQPZhwPm37j0/LiAdTv13lzm979ztxltB378Ye4+RF9iffgx
9xzDXEP8fkRh/uk7MT4/qjC/9IO43q1a+Jl4Np6RZ2UMXxn9kz9z49PsLSW/
wt5A9gsOqpyvYd8kHOyjKmNezI28P3+PjpiRuZU5lr//dntp37sWvzf4DdxR
OHEvlMYj4LrC4Xyt9Bo/KDdmzdrPesLfeqM9Jsj+P0Y/BwI=
          "]], Polygon3DBox[CompressedData["
1:eJwt13ncjlUex/FbeJ67kKWylKWFRLaSFlpoQWjBUKiIbJHleYYUSUOkGlSW
bNFMxYQWGpFq6qVMQoxXlkYjiVFSZiqalJr373WdPz6v+/5+7+/vnHNd17nO
OfdZvYd2GnJCLpfbhdK4tSCXe9fn2JK53ENom8/lruQ9x+tA34AWvKGFudyX
JXK5T0rlcttxP6+j3Gq5q2Va4RK6n9y/5FbILEcX+k7s4C2iX0Brug/+yVtG
L8WNyfuEt5HejFH6mK3NQt5i7S/CuIKs31X67U7fjivlVqu9xIX1dVH98BG9
1mcdudX8N1BX7mq1i3id1HXG5VErV523SGYxavN6yP2d11/mLrTkdeOt5U2k
J6M3/abaWrxl6l5CHbkX9V3H93J+K4sn6GH4ynX8Viq78RPojnif9zpvFYrz
2b3aznuHXosRvC76eUvZEH0Ox7W8ztE3ry3dBlfRd6vdq/ZddW/i93Ln8Z7h
LaAXohV9h+yHaovVDcM1cj/wi4252NiKsIteg+a8QfRgbKd7qt2gdo66uSgu
yMayhtePHhhzQXvVeON4zWP+4EJ6sPr9xrLJOD7EvXL9ebt5e+gv8ADvHX2d
rXaFvl/DubwBcp/J7ZM5gLH57Ho/5x2iD8f9K8ye0Xtqe+jzFlwh9zS/gnaq
aLcq/sAr4h1SW5ouwOMxT9V+pHahumcxOs3nT+V2an8XRqtdzD+ddwJdEm/T
z+DkuA51X0TfcrvV9tDvvdofFfMgn9379fqYKTMLQ+i/oIbab+iD6Ca3hteI
d5Q+gu68P/NOTd6PeJl+HlV42+itMafl3tDvpfrtr88B2EJvQgdeD7o7psm9
kGp/UXccr8d7JddM7k6Z3lhP/xUXptrb8C59P46m+7IDA0NjRLrekdhD/ymN
eb321+HmfDavWsh1lrkZU3nz5MrKLZd5FY/TvbDRvZpHz8cIeg5OlFtKL8HD
Bdm7H9fbRlvXxrOMZ8Srmby2WEkX8MfzptNPYSY9Xf3xXHb/tmMhPQs5fXxO
78VzdAP1z/P6uda+OCPmI/9GXjP6YnxHV8VY5RfHeogG9I8YkHIXoXc+m2ub
5SbJTMD1vIa8GbwmdGM05/XlbUvvVl/8jj6A7tqrqq0q+DjWtDQnY8y70VVt
Zd7o1N4FOJfulN7V1vR1sf7R1VzLY2qv09a1KFGYrTlvpz2gfaw59E8YJNdC
pjn66KO67BRee7odTqRvSXtKrLEdo54+mz9Tro9ML/RTW5P3BK8jfTMq0t1l
16nto65XrGtpLQ5vGv0E+qf3rbzaVTFv8RRdH0/K1afr4TK1f9NmK8/8Qs/7
Aiyjq6RndJpMJTSTey3N8cYyDTCR9zzvDF4L+nIsp09RO0rtcf6xyMt95bd2
vC30ZtTn9ZTdEs/Dde3FPYXZmviQ3Fn6rIlL89m+cDDldmMMb4v2mqT2/oF9
9CY05H1Ib8Bu+iTt3cPbQ3+G73nleMN4/6b342feS/qon9a/yphPl5crljvE
/xol6SX8ur5XlKkQ7wf9eloP4h5cisnGt99nmzSW9ajH+5p3A287vQ3n805N
9yqex/moFescJvFy9G9yZenT0jw9kVcQe4XaY/od5fcHtDsGB+iS/HG8KfQf
MSP65fdL3lT8j97m87K0Jy/F23GvZCf6Psf32ZhFf+rzqnQ+WIWN9GH1A9Ma
MQO/0d9hcKqdi9JqzzLmR9WWNd4yqBjriNxoufGxx+Bbejx+9XyPeLY/YFza
e76J9Z4+iAd56+Xra+899e9jB7031rPkrcV5cpPUlojnqu4YHkpnswMlMu+X
aC/OUTFn0x66PNosne2/+9JYjsb5ih6e5l8Jv58Q854uci170vs2Fe30cRNv
OW80PQa3FWRngY3JG4XWcien+Rf3pTwuSuvQGF45+iQ0TXPjvlhm6V+Nrwnv
J/13S3PyGzTgVZIbwTtT7hycTn8be4Mx13EN56BnPttDq/MK6EK8F/tEnInU
/qCtH9EotTeSd4T+Lxrmsz20stpj2v8Zr6X1tBovF+thnKfoZ1Epzlcyb+HG
fOZVjDMIfRgvxrzAkVy2Nq2OM7TcBt4VcpW0dQpu423mtUzreDXcziuT3ul4
P0rGus37gNdcrqxMOfTgbeVdw6tJ18Id+WxvzPM+ULch1t589p4Xae5Uugou
5r3qGTd07e3incWUdGatHWctuh4eTmMZonYv/3McjTkZ58f0Xo7Fk/nsPg+S
+5S/C9/yS/DH+v6o749gepobw+W+5B/Acf7+OHeld2ZC7MtyXdPeUxR7fuxT
vFfkGsi1lrk+3n/e0rRexdreLPrhreA1ibN+nCGjTV6FtNZV1dYZsS/zXk5r
4pUyrfBYqm3M60R3wZtp/buI15PuhXWF2Xpaj9ecvgKP5rMzUlNe01i7MYm3
zmdd/b4VaxC2xvoRe4jvNXyvifHpP05BnPmNbS1uivec910uOw+tQAfegrTn
7aMP4NZ0fv4s/YdYGXODHonv0/+oDbiLHpTe/fX0OoxUW5c3jzeXnocWdEus
TN4cFMn1Tv/LltAvon3cYyzmFdHDcSZ9bmpvdKwtGKx2SFqbttFbcV+cadKZ
+lX6FXSmd7q2trx6dH3sp7/ALemdqYhN9O3p/DzU9Q/G1do7GH56F2rEOZ0e
j8O57Jy4LM4gct/z+so1lmmEO3m19T2bNzTGG+dY3n/keqexnBfnldgreO1T
bRMcoi9Xu4I3g54e90GuTmovvJloVpj9B1vAm0RPwNB07+fzHow9P84HvBrp
LBX3dAQGpfbm8IrpYbibNz+dlXe6rl3oks7PZXgf0zvinMg7PZ3r4sw6EAPS
e9Qwzb/qeI6em87UG9VtRqfY3/jTeT3UdY05xKvKe4TXPdaqOAfzzuHN4vWP
DPqnfh/ntaFboxR9GV7hTaWnxLWk2pnJmxbPJJ0d3/Hc7jeOB+K/bbovU+Vu
kOmAMoXZWCbzWtEtY99TV4v3JK8z3SnW2cLMizPm2NgrMSRd21O8ifRk1KPL
8ie7LwvdkwV4mv4/2a0fNg==
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0u1K02Ecx+Ff0+VT+ZDPJrNSz8BAQT0EBQPFt74qqKankFA0rdTyWcs5
FaNIREspwlMoUOgYCsroBLr+CPt4fUG33ffczbHs0MNLEZHXfeOx+oojNjjC
zzxVwf7NryxNRdxSWTqil+0c5riydo5bKiS/K43YZD55jr3BG3zD12qz15nh
GlfVaq+whctcUrO9yAU12vNs4Cu+VJ09x1rOckY19gtW8zmfqdKe5pQm9NR5
R9inYbudnSzjH/c9d98znvAL88rZTzjKB7yjDruHbfpbFJFOnsNfPtfvmrKP
OMp1TqrTvsd/3muQt3ViX2fyPzGj4Cz+LLx8bNsesePHZZZo13aleJucmeV6
Z1fwPa/wqj7YlazSnl3Nfdbwmg7sWh6yjvX6aDfwiI1s0rHdzBZ16YdDDvCu
Ohz0Efu5xk/K2d+4xZ/JPZLP1M6w3KW6OaTt1MX37z9slkTn
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1443, 1442, 1465, 2084, 2201, 1491, 1492, 1517, 2217, 1518, 
       1545, 2094, 2224, 1563, 1564, 1590, 2245, 1591, 1617, 2110, 2252, 1635,
        1636, 1663, 2274, 1664, 1689, 2127, 2281, 1707, 1708, 1736, 2139, 
       2303, 1761, 1762, 1787, 2317, 1788, 1816, 2149, 2325, 1834, 1835, 1861,
        2346, 1862, 1889, 2165, 2354, 1908, 1909, 1936, 2376, 1937, 1962, 
       2181, 2383, 1981, 1982, 2010, 2405, 2011, 2036, 2037, 2062}], 
      Line3DBox[{1445, 1444, 1467, 2202, 1470, 1493, 1496, 1520, 2218, 1523, 
       1546, 2227, 1548, 1565, 1568, 1593, 2246, 1596, 1618, 2255, 1620, 1637,
        1640, 1666, 2275, 1669, 1690, 2129, 2283, 1709, 1712, 1738, 2304, 
       1741, 1763, 1766, 1790, 2318, 1793, 1817, 2328, 1819, 1836, 1839, 1864,
        2347, 1867, 1890, 2357, 1892, 1910, 1913, 1939, 2377, 1942, 1963, 
       2386, 1965, 1983, 1986, 2013, 2406, 2016, 2038, 2041, 2064}], 
      Line3DBox[{1446, 1447, 1468, 2085, 2203, 1494, 1499, 1521, 2219, 1526, 
       1547, 2097, 2228, 1566, 1571, 1594, 2247, 1599, 1619, 2113, 2256, 1638,
        1643, 1667, 2123, 2276, 1691, 2130, 2284, 1710, 1715, 1739, 2140, 
       2305, 1764, 1769, 1791, 2319, 1796, 1818, 2152, 2329, 1837, 1842, 1865,
        2348, 1870, 1891, 2168, 2358, 1911, 1916, 1940, 1298, 1964, 2184, 
       2387, 1984, 1989, 2014, 2193, 2407, 2039, 2044, 2065}], 
      Line3DBox[{1448, 1450, 1471, 2204, 1477, 1497, 1503, 1524, 2220, 1531, 
       1549, 2231, 1553, 1569, 1575, 1597, 2248, 1604, 1621, 2116, 2259, 1641,
        1647, 1670, 2277, 1676, 1692, 2132, 2286, 1713, 1720, 1742, 2306, 
       1748, 1767, 1773, 1794, 2320, 1801, 1820, 2332, 1824, 1840, 1846, 1868,
        2349, 1875, 1893, 2361, 1897, 1914, 1920, 1943, 2378, 1949, 1966, 
       2186, 2389, 1987, 1994, 2017, 2408, 2023, 2042, 2048, 2067}], 
      Line3DBox[{1449, 1453, 1472, 2086, 2205, 1498, 1505, 1525, 2221, 1533, 
       1550, 2100, 2232, 1570, 1577, 1598, 2107, 2249, 1622, 2117, 2260, 1642,
        1649, 1671, 2124, 2278, 1693, 2133, 2288, 1714, 1722, 1743, 2141, 
       2307, 1768, 1775, 1795, 2321, 1803, 1821, 2155, 2333, 1841, 1848, 1869,
        2350, 1877, 1894, 2171, 2362, 1915, 1922, 1944, 2178, 2379, 1967, 
       2187, 2391, 1988, 1996, 2018, 2194, 2409, 2043, 2050, 2068}], 
      Line3DBox[{1451, 1456, 1474, 2206, 1484, 1500, 1510, 1528, 2222, 1539, 
       1551, 2102, 2234, 1572, 1582, 1601, 2250, 1611, 1623, 2119, 2262, 1644,
        1655, 1673, 2279, 1683, 1694, 2135, 2290, 1717, 1728, 1745, 2308, 
       1755, 1770, 1780, 1798, 2322, 1809, 1822, 1149, 1843, 1853, 1872, 2351,
        1883, 1895, 2173, 2364, 1917, 1928, 1946, 2380, 1956, 1968, 2189, 
       2393, 1991, 2002, 2020, 2410, 2030, 2045, 2055, 2070}], 
      Line3DBox[{1452, 1458, 1475, 2087, 2207, 1501, 1512, 1529, 2092, 2223, 
       1552, 2103, 2235, 1573, 1584, 1602, 2108, 2251, 1624, 2120, 2264, 1645,
        1657, 1674, 2125, 2280, 1695, 2136, 2292, 1718, 1730, 1746, 2142, 
       2309, 1771, 1782, 1799, 2323, 1811, 1823, 2158, 2336, 1844, 1855, 1873,
        2163, 2352, 1896, 2174, 2366, 1918, 1930, 1947, 2179, 2381, 1969, 
       2190, 2395, 1992, 2004, 2021, 2195, 2411, 2046, 2057, 2071}], 
      Line3DBox[{1454, 1462, 1478, 1490, 2208, 1504, 1516, 1532, 2216, 2093, 
       1554, 1562, 2237, 1576, 1589, 1605, 2244, 2109, 1625, 1634, 2266, 1648,
        1662, 1677, 2273, 2126, 1697, 1706, 2294, 1721, 1735, 1749, 2302, 
       2143, 1774, 1786, 1802, 2324, 2148, 1825, 1833, 2338, 1847, 1860, 1876,
        2353, 2164, 1898, 1907, 2368, 1921, 1935, 1950, 2382, 2180, 1971, 
       1980, 2397, 1995, 2009, 2024, 2412, 2196, 2049, 2061, 2073}], 
      Line3DBox[{1455, 1466, 1479, 2209, 2088, 1506, 1519, 1534, 2225, 2095, 
       1555, 2238, 2105, 1578, 1592, 1606, 2253, 2111, 1626, 2267, 2122, 1650,
        1665, 1678, 2282, 2128, 1698, 2295, 2138, 1723, 1737, 1750, 2310, 
       2144, 1776, 1789, 1804, 2326, 2150, 1826, 2339, 2160, 1849, 1863, 1878,
        2355, 2166, 1899, 2369, 2176, 1923, 1938, 1951, 2384, 2182, 1972, 
       2398, 2192, 1997, 2012, 2025, 2413, 2197, 2051, 2063, 2074}], 
      Line3DBox[{1457, 1469, 1481, 1495, 2210, 1507, 1522, 1536, 2226, 2096, 
       1556, 1567, 2239, 1579, 1595, 1608, 2254, 2112, 1627, 1639, 2268, 1652,
        1668, 1680, 970, 1699, 1711, 2296, 1725, 1740, 1752, 1765, 2311, 1777,
        1792, 1806, 2327, 2151, 1827, 1838, 2340, 1850, 1866, 1880, 2356, 
       2167, 1900, 1912, 2370, 1925, 1941, 1953, 2385, 2183, 1973, 1985, 2399,
        1999, 2015, 2027, 2040, 2414, 2052, 2066, 2076}], 
      Line3DBox[{1459, 1473, 1483, 2211, 2089, 1509, 1527, 1538, 2229, 2098, 
       1557, 2240, 2106, 1581, 1600, 1610, 2257, 2114, 1629, 917, 1654, 1672, 
       1682, 2285, 2131, 1701, 1716, 2297, 1727, 1744, 1754, 2312, 2145, 1779,
        1797, 1808, 2330, 2153, 1828, 2341, 2161, 1852, 1871, 1882, 2359, 
       2169, 1902, 2371, 2177, 1927, 1945, 1955, 2388, 2185, 1975, 1990, 2400,
        2001, 2019, 2029, 2415, 2198, 2054, 2069, 2078}], 
      Line3DBox[{1460, 1476, 1485, 1502, 2212, 1511, 1530, 1540, 2230, 2099, 
       1558, 1574, 2241, 1583, 1603, 1612, 2258, 2115, 1630, 1646, 2269, 1656,
        1675, 1684, 1696, 2287, 1702, 1719, 2298, 1729, 1747, 1756, 1772, 
       2313, 1781, 1800, 1810, 2331, 2154, 1829, 1845, 2342, 1854, 1874, 1884,
        2360, 2170, 1903, 1919, 2372, 1929, 1948, 1957, 1970, 2390, 1976, 
       1993, 2401, 2003, 2022, 2031, 2047, 2416, 2056, 2072, 2079}], 
      Line3DBox[{1461, 1480, 1486, 2213, 2090, 1513, 1535, 1541, 2233, 2101, 
       1559, 821, 1585, 1607, 1613, 2261, 2118, 1631, 1651, 2270, 1658, 1679, 
       1685, 2289, 2134, 1703, 1724, 2299, 1731, 1751, 1757, 2314, 2146, 1783,
        1805, 1812, 2334, 2156, 1830, 2343, 2162, 1856, 1879, 1885, 2363, 
       2172, 1904, 1924, 2373, 1931, 1952, 1958, 2392, 2188, 1977, 1998, 2402,
        2005, 2026, 2032, 2417, 2199, 2058, 2075, 2080}], 
      Line3DBox[{1463, 1482, 1488, 1508, 2214, 1514, 1537, 1543, 790, 1560, 
       1580, 2242, 1587, 1609, 1615, 1628, 2263, 1632, 1653, 2271, 1660, 1681,
        1687, 1700, 2291, 1704, 1726, 2300, 1733, 1753, 1759, 1778, 2315, 
       1784, 1807, 1814, 2335, 2157, 1831, 1851, 2344, 1858, 1881, 1887, 1901,
        2365, 1905, 1926, 2374, 1933, 1954, 1960, 1974, 2394, 1978, 2000, 
       2403, 2007, 2028, 2034, 2053, 2418, 2059, 2077, 2082}], 
      Line3DBox[{1464, 1487, 1489, 2215, 2091, 1515, 1542, 1544, 2236, 2104, 
       1561, 1586, 2243, 1588, 1614, 1616, 2265, 2121, 1633, 1659, 2272, 1661,
        1686, 1688, 2293, 2137, 1705, 1732, 2301, 1734, 1758, 1760, 2316, 
       2147, 1785, 1813, 1815, 2337, 2159, 1832, 1857, 2345, 1859, 1886, 1888,
        2367, 2175, 1906, 1932, 2375, 1934, 1959, 1961, 2396, 2191, 1979, 
       2006, 2404, 2008, 2033, 2035, 2419, 2200, 2060, 2081, 2083}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{677, 1084, 1083, 1082, 2316, 1081, 1080, 1079, 2315, 1078, 
       1077, 1076, 2314, 1075, 1074, 1073, 2313, 1072, 1071, 1070, 2312, 1069,
        1068, 1067, 2311, 1066, 1065, 1064, 2310, 1063, 1062, 1061, 1059, 
       2302, 1058, 1057, 1056, 2309, 1055, 1054, 1053, 2308, 1052, 1051, 1050,
        2307, 1049, 1048, 1047, 2306, 1046, 1045, 1044, 2305, 1043, 1042, 
       1041, 2304, 1040, 1039, 1038, 2303, 1037, 1036, 1035, 1060}], 
      Line3DBox[{703, 678, 679, 680, 2201, 681, 682, 683, 2202, 684, 685, 686,
        2203, 687, 688, 689, 2204, 690, 691, 692, 2205, 693, 694, 695, 2206, 
       696, 697, 698, 2207, 699, 700, 701, 702, 2208, 704, 705, 706, 2209, 
       707, 708, 709, 2210, 710, 711, 712, 2211, 713, 714, 715, 2212, 716, 
       717, 718, 2213, 719, 720, 721, 2214, 722, 723, 724, 2215, 725, 726, 
       727, 728}], 
      Line3DBox[{755, 729, 730, 2217, 731, 732, 733, 734, 2218, 735, 736, 
       2219, 737, 738, 739, 740, 2220, 741, 742, 2221, 743, 744, 745, 746, 
       2222, 747, 748, 749, 2223, 750, 751, 752, 2216, 753, 757, 758, 761, 
       2225, 762, 765, 2226, 766, 769, 770, 773, 2229, 774, 777, 2230, 778, 
       781, 782, 785, 2233, 786, 789, 790, 793, 794, 797, 2236, 798, 801, 802,
        804}], Line3DBox[{805, 754, 756, 759, 2224, 760, 763, 764, 2227, 767, 
       768, 771, 2228, 772, 775, 776, 2231, 779, 780, 783, 2232, 784, 787, 
       788, 791, 2234, 792, 795, 2235, 796, 799, 800, 803, 2237, 806, 807, 
       808, 2238, 809, 810, 811, 2239, 812, 813, 814, 2240, 815, 816, 817, 
       2241, 818, 819, 820, 821, 822, 823, 2242, 824, 825, 826, 827, 2243, 
       828, 829, 830}], 
      Line3DBox[{857, 831, 832, 2245, 833, 834, 835, 836, 2246, 837, 838, 
       2247, 839, 840, 841, 842, 2248, 843, 844, 845, 2249, 846, 847, 848, 
       2250, 849, 850, 851, 2251, 852, 853, 854, 2244, 855, 859, 860, 863, 
       2253, 864, 867, 2254, 868, 871, 872, 875, 2257, 876, 879, 2258, 880, 
       883, 884, 887, 2261, 888, 891, 892, 2263, 895, 896, 899, 2265, 900, 
       903, 904, 906}], 
      Line3DBox[{907, 856, 858, 861, 2252, 862, 865, 866, 2255, 869, 870, 873,
        2256, 874, 877, 878, 881, 2259, 882, 885, 2260, 886, 889, 890, 893, 
       2262, 894, 897, 2264, 898, 901, 902, 905, 2266, 908, 909, 910, 2267, 
       911, 912, 913, 2268, 914, 915, 916, 917, 918, 919, 2269, 920, 921, 922,
        923, 2270, 924, 925, 2271, 926, 927, 928, 929, 2272, 930, 931, 932}], 
      Line3DBox[{959, 933, 934, 2274, 935, 936, 937, 938, 2275, 939, 940, 941,
        2276, 942, 943, 944, 2277, 945, 946, 947, 2278, 948, 949, 950, 2279, 
       951, 952, 953, 2280, 954, 955, 956, 2273, 957, 961, 962, 965, 2282, 
       966, 969, 970, 973, 974, 977, 2285, 978, 981, 982, 2287, 985, 986, 989,
        2289, 990, 993, 994, 2291, 997, 998, 1001, 2293, 1002, 1005, 1006, 
       1008}], Line3DBox[{1009, 958, 960, 963, 2281, 964, 967, 968, 971, 2283,
        972, 975, 2284, 976, 979, 980, 983, 2286, 984, 987, 2288, 988, 991, 
       992, 995, 2290, 996, 999, 2292, 1000, 1003, 1004, 1007, 2294, 1010, 
       1011, 1012, 2295, 1013, 1014, 1015, 2296, 1016, 1017, 1018, 1019, 2297,
        1020, 1021, 2298, 1022, 1023, 1024, 1025, 2299, 1026, 1027, 2300, 
       1028, 1029, 1030, 1031, 2301, 1032, 1033, 1034}], 
      Line3DBox[{1085, 1160, 1159, 1156, 2337, 1155, 1152, 1151, 1148, 2335, 
       1147, 1144, 2334, 1143, 1140, 1139, 1136, 2331, 1135, 1132, 2330, 1131,
        1128, 1127, 1124, 2327, 1123, 1120, 2326, 1119, 1116, 1115, 1110, 
       2324, 1109, 1108, 1107, 1106, 2323, 1105, 1104, 2322, 1103, 1102, 1101,
        1100, 2321, 1099, 1098, 2320, 1097, 1096, 1095, 1094, 2319, 1093, 
       1092, 2318, 1091, 1090, 1089, 1088, 2317, 1087, 1086, 1113}], 
      Line3DBox[{1111, 1186, 1185, 2345, 1184, 1183, 1182, 1181, 2344, 1180, 
       1179, 1178, 2343, 1177, 1176, 1175, 2342, 1174, 1173, 1172, 2341, 1171,
        1170, 1169, 2340, 1168, 1167, 1166, 2339, 1165, 1164, 1163, 2338, 
       1161, 1158, 1157, 1154, 2336, 1153, 1150, 1149, 1146, 1145, 1142, 2333,
        1141, 1138, 1137, 2332, 1134, 1133, 1130, 2329, 1129, 1126, 1125, 
       2328, 1122, 1121, 1118, 2325, 1117, 1114, 1112, 1162}], 
      Line3DBox[{1187, 1262, 1261, 1258, 2367, 1257, 1254, 1253, 2365, 1250, 
       1249, 1246, 2363, 1245, 1242, 1241, 1238, 2360, 1237, 1234, 2359, 1233,
        1230, 1229, 1226, 2356, 1225, 1222, 2355, 1221, 1218, 1217, 1212, 
       2353, 1211, 1210, 1209, 2352, 1208, 1207, 1206, 2351, 1205, 1204, 1203,
        1202, 2350, 1201, 1200, 2349, 1199, 1198, 1197, 1196, 2348, 1195, 
       1194, 2347, 1193, 1192, 1191, 1190, 2346, 1189, 1188, 1215}], 
      Line3DBox[{1213, 1288, 1287, 2375, 1286, 1285, 1284, 1283, 2374, 1282, 
       1281, 2373, 1280, 1279, 1278, 1277, 2372, 1276, 1275, 1274, 2371, 1273,
        1272, 1271, 2370, 1270, 1269, 1268, 2369, 1267, 1266, 1265, 2368, 
       1263, 1260, 1259, 1256, 2366, 1255, 1252, 2364, 1251, 1248, 1247, 1244,
        2362, 1243, 1240, 1239, 2361, 1236, 1235, 1232, 2358, 1231, 1228, 
       1227, 2357, 1224, 1223, 1220, 2354, 1219, 1216, 1214, 1264}], 
      Line3DBox[{1289, 1364, 1363, 1360, 2396, 1359, 1356, 1355, 2394, 1352, 
       1351, 1348, 2392, 1347, 1344, 1343, 2390, 1340, 1339, 1336, 2388, 1335,
        1332, 1331, 1328, 2385, 1327, 1324, 2384, 1323, 1320, 1319, 1314, 
       2382, 1313, 1312, 1311, 2381, 1310, 1309, 1308, 2380, 1307, 1306, 1305,
        2379, 1304, 1303, 1302, 2378, 1301, 1300, 1299, 1298, 1297, 1296, 
       2377, 1295, 1294, 1293, 1292, 2376, 1291, 1290, 1317}], 
      Line3DBox[{1315, 1390, 1389, 2404, 1388, 1387, 1386, 1385, 2403, 1384, 
       1383, 2402, 1382, 1381, 1380, 1379, 2401, 1378, 1377, 2400, 1376, 1375,
        1374, 1373, 2399, 1372, 1371, 1370, 2398, 1369, 1368, 1367, 2397, 
       1365, 1362, 1361, 1358, 2395, 1357, 1354, 2393, 1353, 1350, 1349, 1346,
        2391, 1345, 1342, 2389, 1341, 1338, 1337, 1334, 2387, 1333, 1330, 
       1329, 2386, 1326, 1325, 1322, 2383, 1321, 1318, 1316, 1366}], 
      Line3DBox[{1391, 1441, 1440, 1439, 2419, 1438, 1437, 1436, 2418, 1435, 
       1434, 1433, 2417, 1432, 1431, 1430, 2416, 1429, 1428, 1427, 2415, 1426,
        1425, 1424, 2414, 1423, 1422, 1421, 2413, 1420, 1419, 1418, 1416, 
       2412, 1415, 1414, 1413, 2411, 1412, 1411, 1410, 2410, 1409, 1408, 1407,
        2409, 1406, 1405, 1404, 2408, 1403, 1402, 1401, 2407, 1400, 1399, 
       1398, 2406, 1397, 1396, 1395, 1394, 2405, 1393, 1392, 1417}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0.5, 3.}, {0.5, 3.}, {0., 0.10452579938836401`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6872016940162373`*^9, 3.687201713658778*^9}, 
   3.687201802858013*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJxkXHdcTf//v7MbIiWRKCs7W1a83pWZjJSWIoSobCmFlJSk0C6lITOVBmUV
GUWy9wothdZt3Lrqd7/yPsfn9fPPfXh6ez6fr9frec6545z3gNWbl67lcTic
7Z04HD6H/ikG+vqwoWpCtysJzN8n/PnzDY5/SIp68w++7s+fMrBZ+kIcl8Xi
kRH/+/Md3gTv09uYzeKPCv/35wdU6d3zGneVxTtea+DQxqs3mq5inlpoOmVf
e/0ai0/846ceyjXe9N9/HfOLYUZK50WzbmCfjZBQLt0tdxPrNsNlrdPn7t/E
uhLofar5vU8O1m2FQYe/9Jibi3WlYM6dbyK8xeLr/+i2Qep05RO3b2FdDjl4
RL1m723MwyEWLjONp+VhP1yy6NriW+I8XBePOKzW1E++g33yybWXLi/X3cW6
AiIpH7hH4x7WFRCj0s/TXt7DukJyJM6p++H7uC454nHQux3ysa6I5MR96CTO
x7ry5EDaoHFnChKYPNF/95u+tVK3K4vT19eqh4rkurE4zZuT/5VTj//Bad5y
XXtvDlNkcZo3g/63x6zojnVrgDvlbsUgJcxTC1Vc7RMV/+A0b18t2xckKWN+
MezK123Z1AP7bASH4OKzY1WwbjO8fV5sWauCdSUwac9oxUs9sW4riHdlPtis
inWlwL9oHaDdi8Vp3mpU5awre2FdDvn0NGDS6d6Yh0PGjXzcd5Ua9sMlqpci
e6j3wXXxSKJervqLPtgnn0jVOk/2V8e6AlJRMmO9QV+sKyARBX2TJX2xrpA8
dl3TNaUfrkuOaJAHB9doYF0RuddV2LeXJtaVJ+t884oKZDjNDc0b18Tn4iK7
eAan/2/hi9huvdeyOH39pOqxuvgfnObtdgRcOLOOxWne0g3ElU7r45FuDYTu
vDhogj3mqYWcvjvNm/7Bad5a7yz2vboB84th+nndLPeN2GcjNBdM+j7DAes2
wz7xmH5tDlhXAlc+9jG74Yh1W+GF9pcQNyesK4W8Y/afpmxicZo3vYfHxjVs
wrocUpg75VjqZszDIXOOTGzfuAX74ZK1geZ7Bm/FdfHIe5fNXT9uxT75xNZm
9qXgbVhXQMxvRW9csB3rCojD2SnTuTuwrpDkJzwdfHkHrkuOTCnWHL5xJ9YV
kR4TX83v54x15cm7UQm+j2U4zQfNW/Qu/hW963EMTvMWJMwP6XyDxSnfzAiO
/bN/cPqqvOzemIibLE7zVnBvVPWKnDikWwOfJXpnB+VinlooONTNpvwfnOat
Oj1E8fwtzC8G/Q0vbzncxj4b4erKeztH5WHdZlg9yFr7Rx7WlcCMod6V5+9g
3Vb4/HJEiv1drCuFh3Hj9mjdY3Gat/09Xc2+3MO6HLLp23vdE/cxD4e4NowZ
b5aP/XDJBvc5UxQLcF080qe9asn9AuyTT5ZuqNiz9wHWFZCAPu25Ex9iXQHZ
KP6lXvkQ6wpJlf22ozGFuC45Eu4L/Zc+wroiAt3lHwmKsK48SXF2Db8sw2kO
aN4aO2+frdKTxWneiu74xX/4B6d5ayjPq09QZXGq01lXZ/rGXixOXz2b6neP
6Y11a2DEs06Z9b0xTy0Y9tpXdVmNxWnejl1Z1t+1D+YXw3krv2XT1LHPRojZ
onKkRR3rNkOlfll+dl+sK4FZwp+dXfph3VaYWtZ92SQNrCuFHZqTztX+g9O8
PRdO6XRRE+tyiI5avfP6/piHQ1RVpov7D8B+uORjy2fPtwNwXTwiGXFx8LGB
2CefvNiw4f3cQVhXQDbVvzr7exDWFZCnvukBaYOxrpCY780KWKeF65Ij0QWR
59WGYF0RWa/YpeThEKwrT0ZfytTdMzSOmTfNW/XPLifubIplcJq39OR+Lv6b
WZzmTd/m9zyTLSxO86Zmf6u72lYWp/ojUnc//fgPTl/nR008ErcN89QCGdIw
2247i9O8XWy8/ltrB+YXQ7yjz+WyHdhnIxSnG247vRPrNkPFi6bxa52xrgTy
7+5uGbgL67ZC5O6rDz7vwrqy81tDeGKUC4vTvKlb1PubuWJdDtlcE+fZfTfm
4ZClC1x8C3ZjP1xirD87dr8brkuWt87PH05xxz755N7scoVqd6wrIFcUDNae
2oN1BeQaN+GVxV6sKySl1jmrFfbhuuTI2pYFXXL2YV0RWWTf/HSLB9aVJ2PF
m7MG7I9l5krz9nPMNGH88ZMMTvPmXX/i+thgFqd5u1pct+JGCIvTvN3XWlcz
N4zFad7qPvTc+ST8JNKtgbnjVGvNIjFPLdz03GL/PorFad6+HBr02SYa84sh
Z/cgy08x2GcjhA+1emcdi3WbIW/gmXVv47CuBEYXf+aaJmDdVpj36nFK4Sms
KwXfmCk7DE6zOM3bip7PlmadwbocctLVcPHIc5iHQ2IOz3E6cR774ZLEC6tS
uyThunikS7N2X9eL2CefFG+cmFGSjHUFhNMkdluUinUFhJdY5nz5EtYVEsOU
XWf7puO65MjkmK4q+zOwrogsXyO88S0T68qTmzvST8+6cpKZH83bzldtfpvn
xzA4zVtF8Hf934YsTvNm06Nfua8Ri9O8Fb7IdVNexOI0b1MW1woiF8cg3Rrw
6J57UNMY89TCkq8ThAlLWZy+pv2cd2CwKeYXg9ynGtGpZdhnI7jxewQPMMe6
zfB+h/+oaAusK4H+48a+VLXCuq3Ql9w/FrAc60pB8qz7OoENi9O8qdrdXuay
AutyyNZXPnaVKzEPh/gH80OtVmE/XFKWXPQzfzWui0fkW1w2T7LDPvmkbuQh
jdi1WFdArCXubfLrsa6AGI8vUN5ij3WFZNOntytebsB1yZHLFsplUxywrojI
Ozy6EOmIdeWJygab9BanGGZONG9ph7o6/OJGMzjNW9TBe4Pd+CxO83Zeq2+h
UMjiNG9f9SasDZBjcZq3valaYhX5aKRbA9vW8vZEdMI8tbAx7BG/bxcWp3XM
/ebhf0IB84vh56Yu6urdsM9GONNlaXqYItZthmbzMZbKSlhXAt+Lt3c/rIx1
W+GZftkHrgrWlULqfIPbzj1ZnObtXfeZd76rYl0O2THQo8yqN+bhkNGh50Y9
UMN+uCR9jHHkZHVcF49EugsmJPTFPvnkQe3cFgUNrCsgyfJh9Ts0sa6AJCy3
G/i+P9YVkum31fxgIK5LjrQ79h4dPwjrisgdTrYSXwvrypP4SwumrB4SzcyD
5i0usGyx+vUoBqd5u3vyksKZGyxO8zbEyyFrbA6L07xN2aJjnpXL4jRvmTHD
f864HYV0a0DoaLz3Vh7mqYVh+1K6GdxlcZq39qpp8bfvYX4xaJsV65J87LMR
THp4fr1WgHWb4ZZRc+ikh1hXArf7K624WIh1W0E/7+j0QUVYVwrdY8ZNCHvM
4jRvAVtOzev0FOtyCGfz0X2uzzAPh+iuCnpf/hz74RLeLT1b05e4Lh4pez1E
KecV9sknJz7cqR36BusKCLd7iDDwLdYVkFNvRUvE77CukLz4duCF+QdclxzZ
MNkhNPsj1hWRYjOlCLXPWFeeuFre/byrOIrpO5O3vLs/6nZFMjjNm6pJycU9
rixO89Y0RX+lnBuL07wldm4XHHFncZq32LVjEpT2RiLdGuiu8nFG8D7MUwvu
Y0VvVfazOM2b0vx4lyBPzC8GG8/w/t0PYJ+NsCm74IWfN9ZthvDELhF8H6wr
gS2S4Vt3+2LdVjjqVWZbfQjrSiFykcRh9WEWp3nj3eoe+twf63KIyvWnX/UD
MA+HFF19vSw1EPvhksrqjDr1Y7guHnm+pu6693HsU/b+Tal71s8grCsgRkLv
cpMQrCsgh3fmLMoKxbpC4vp1cG2fcFyXHCkfo/zMLQLrisjj3Pfid5FYV55o
H39kPeVEJNNfmjdPpYO/t06KYHCat6zhk++06rA4zVvdFmd3ryksTvN2+ZPt
iE7TWJzm7YKr/DP/6RFItwZa3Hbs6jYD89TCD+c4jYCZLE7zNsR5/8MuBPOL
YeFA6X4fPeyzEXp/+zWba4B1m+EZR1vddRbWlYD33X3C6tlYtxXWR5+WXzMX
60pBdbL5sJfzWJzmTRw/w362IdblkJXbpA/TF2AeDjF6Ncq8/0Lsh0vW3FjR
9fAiXBeP5NX2rqtfjH3yyRSdt/LLjbGugPRao7IsdynWFZAYT513g0yxruzz
6Y/4KO9luC45sm1NxolSM6wrIutH3Sg2sMC68mSYtsgh1jKC6SPNG9fWe06I
OIzBad6eXxSqaDSyOM3bo+WrXpxqYnGat/f30g4Pl7A4zZv66k4zk1rCkG4N
fH+3oXqUFPPUwlHdooQLv1mc5m1VjyErh7Vjftn1NNBMK4ETjnw2gmPitBZ1
XjjSbYaD4xO+HOeHI10JSPqYfxYJw5FuK1x06NG0Wy4c6Uqh/+7Do36IWJzm
7SR/g9fyTliXQ3yMjNrzO2MeDkmfWZgwUQH74ZIjPs47YrriunjkZubjHXKK
2CefWJiZnHXsjnUFJF5ph/JTJawrIDPvR12e0APrConZ+ZHhwSq4Ljnyytr9
an1PrCsiyZ0/9TfuhXXlifWB8KKk3uFMv2jeXlb4BltmhjI4zZvnbeWNXy6z
OM2b4qG8CeuzWJzmTYeX3lCZzeI0b9ndf6U7XgtFujVg/8Z524/rmKcWsr/M
mrTxJovTvN3Xnc0py8H8YshPsHq98hb22QjVJ2xuvr6NdZvha1Tf7IV3sK4E
Dg+0fnjrLtZtheAvr5on3Me6UtB5M2P2qXwWp3m7sX1KhvIDrMshC5Pt5u97
iHk4JEDbXL6yEPvhkkDbKPHSIlwXjxhGpytdfYx98knlDLU1mk+xroAsvqH7
w/MZ1hUQx+feqSXPsa6QdDlmkj7rJa5Ljkx1kzbFv8K6IrLsdNH+9tdYV55E
PFE0tXobyvSF5s1QGnf92q4QBqd501vvFKXvyuI0b0Hnz22+v5vFad4Umh1m
GLqzOM3bzMSb8g/3hCDdGji1OO7l/H2YpxZEnE5n73mwOM3b/oXFXnqemF8M
8ftETle9sM9GOJBqun6cN9ZtBu6vIOfTB7GuBPZb+cSo+WLdVrBYWP7V7xDW
lYL3ttVzW/xYnL4qV0Y/Xu+PdTmkbt2kfc+PYB4OcVh4zXJGIPbDJb+eZK1O
PIrr4pF0peToLsexTz5JnKrcbUsQ1hUQtQiTK8+Csa6AfL/9+sSEUKwrJPPO
tt46HobrkiNt6T1G1IRjXRHZV+rwZkEk1pUnq6rmPkmMCmE/L/3N29bRPU5k
TQ9mcJq3iaXLvGfOYHGat/hbxmtvz2RxmrdrdmpkFmFxmrdxkRlqd/SCkW4N
mLj3b9QzwDy1YBu2+O2NWSxO87ZZYcT9yXMwvxgS0o/kpczFPhvh94xFz7Tm
Y91m8DWb1BRhiHUlMDKPp6NghHVb4d4Bx+PuC7GuFFSaNLpXLWJx5ves6utp
5kuwLocc+vh5z21jzMMh9aW9do40wX64JJf/I+q4Ka6LR3oOftfQtAz75JMd
BuYHl5tjXQFZ5Pd4yQ0LrCsg/TactuhnhXWFRCtDJ85tOa5Ljhy5+Uz7jTXW
FRHfnXe4E1ZgXXkSuHthf/+Vwcxx1YEXw+wfk3ov5AYxOM1bf7tBXZ/xWJzm
LTu9e4upgMVp3mJ/df32UsjiNG+5lv0LTUVBSLcG1gTqZz+Vxzy1sDzeLtmo
M4vTvBUTx5S7XTC/GBJfTczV7Yp9NkJ4cmDJpW5Ytxkaeszqr9Ud60pAcbvi
rlAlrNsK5q6JP4Q9sK4Uek9KPbBdhcVp3qImPtH/3BPrcsiXUydGzO+FeTik
YnMCXOqN/XDJOqsN3r364Lp4ZMSAje1u6tgnnwhCe1/61BfrCghc/xQNGlhX
QE6V9CuI0cS6QtKnYLSOtD+uS468P7Oqwnwg1hWRlSvavl4ahHXlSbjXrOGd
tYKY8zXNW5KzrYZz/jEGp3nTLR3ev6WAxWnejs+eou7+kMWZzwv9I3pIC1mc
5s1pyuKuu4uOId0aiD+3VKHxMeapBUWlYypbnrI4zRv/4s/hFc8wvxge79Nb
suIF9tkIS7YuP/zsJdZthtrNnM+zXmNdCVgfq1qU+QbrtsKu8UWfBr3DulJo
VV1y/Oh7Fqd5i/VVdGr9gHU55OzOuG12nzAPh2gEHjv98DP2wyWH161WGPcF
18UjGoePnAn+in3yyaXTXm6N37CugChHJh02K8W6AlIXvv59RhnWFZJjs7ts
UqrAdcmR5w9L5zh+x7oiIm3V3XC3EuvKk95rF73p++MY8z6A5s1TrzBh7LGj
DE7zFhAfm55+nMVp3obu/n1jYjCL07wte/DzXnoIi9O8tT/f+mxs2FGkWwPp
0/aVXAjHPLVwbSiXqxXJ4jRvCY5vRp6IwvxisEp8b68UjX02wjHL19cOxGDd
ZijvFzCs8STWlQDJyEpbG4d1W+HVSLkVz+OxrhSucvqOhlMsTvP2ZlrokHOJ
WJdDPPxFC5TOYB4Oid0iidl1FvvhkvHzfmh9OIfr4pGYXebfZl7APvnEzuvc
u5NJWFdA9oyap9h+EesKyAT/owesU7CukKSNeT0jKxXXJUd6TrCfqZyGdUVE
wdrn0MZ0rCtPxk/cMvBWxlHm/SXN29eNEsP6ywEMTvNmG6t0qCmbxWneRp29
ebPpOovTvE3fqySuz2Fx5veFc8JxP24HIN0aWHpg/57iu5inFlQ8zL48yWdx
mrczjnp2Nx5ifjG0XK3seroI+2wE49yyUr+nWLcZHjVl1ju8wLoSiDa4O3P+
a6zbCqdGbSoa+A7rSsFgQNO55g8sTvNmnx705sFnrMshji/tVkV8xTwcMk/V
dYFdKfbDJY4fCqNHVuC6eMQ61nBldSX2ySfPtB6GpvzEugJinNFzgWMN1pV9
XlhU7KlVj3WFRFz5eNb7BlyXHBlx2iXsSDPWFZHPrTb7dVuxrjzZK6mTr/gd
wN438Ddv404ZLTmxyJ/Bad5O7xmeEmPM4jRv0mp1+WhTFqd5m9cwZk2YOYvT
vBn3t84/YuWPdGtg0bf94GGDeWpB9ZXTk022LE7zFtvy2tNyDeYXA59rt4Ks
wz5lnxcOxW0ctAHrNkOWvUIKzxHrSmDTN4UJnzZh3VZoqWv6nbkV60oha79i
L78dLE7zNuucp7fVLqzLIcOqnZYM3Y15OKTa4/3eGnfsh0tUNuf1urwP18Uj
dWVdBrp4Yp98ssLx0Ckdb6wrIGlK7Ym1PlhXQGJTNLTP+WFdIbmofojYHMF1
yRHtFUVlXY9iXRHZUO405NpxrCtPGvNeCdeG+DOfhzvwYhCvGLXF7PshBqd5
O5+tUWf2g8Vp3vjLT20xqWZxmjd3vTv1C+pYnObNTmmLF2k4hHRr4N7yA0PH
NWOeWuhWkl/er5XFad6iS2oeyrVhfjHsXxr1vorjh3w2wjdNE41HfD+k2wxH
9wRGnZfzQ7oS2KaeYXWgkx/SbYXJ9kprrBT8kK4Ubj8uuTZKkcVp3u43Wzi2
KmFdDgnjHnS7p4J5OCTt2taaI72wHy55U6b4zLgProtH7m7UH6rcD/vkk5Cj
bxuLNLGugGRMC57rOxDrCkhA3/79Z2phXSH5WqPmUzMU1yVHHqd09To5AuvK
Pp/mOfdZoI115UmObq5J/Rg/5nsWmret2ROeqfv4MDjNm84IX9c+fixO86br
XqnZ8wiL07wdzbJ+1OUoi9O8TYt6eKjtuA/SrQHFd91sfoZgnloQbfy+6E04
i9O8vc3rtD4nCvOLYcnQzhfjY7DPRnjxccswzzis2wx73FKLbU5hXQnkaw77
OOkM1m0F/4xBWp3PY10pvBj1IeddEovTvIlu78o4k4J1OcR9bOfOW9MwD4eM
rw++r5OJ/XDJ7r0icfMVXBePnHKF0CtXsU8+sWqWz9x2A+sKyKQ0DfMRuVhX
QPymjfD6dBvrComrzh0IvIvrkiO3ju8I0s3HuiISmJV2oOwB1pUnJ2+Vqh15
5MN8f0fz1mPS46Syod4MTvMWoVzk9m0Ei9O8RaxYavRBm8WZz6fjLYc8Hcvi
NG9KGx4o3Z7gjXRr4OEXF9UUHcxTC/4FA3XDp7I4zZv2x61+e3QxvxgGX2yV
XwnYZyPEfdbL0dXHus1QtTUtQ3U21pXAzuYzNT/mYt1W6PVpw+4cQ6wrBdP4
UZYBC1mc5u2WqnKw5RKsK7ueRg0fP8AE83CIpeWWaaXLsB8u8dz3ND3RAtfF
I09chySuXo59yt5/jZzcs+8KrCsgL4Zc7fzMFusKSME3U/8Da7CukNQ1RsVO
WIfrkiMFc3os+myPdUVkERkd5eOAdeXJmC5LAkZt8ma+F6Z5C//cdfalh54M
TvPWbWHrjKQiFqd525T8dVrCUxaneRs68bpB6AsWp3nLe7/R1vu1J9Ktgc2X
r4dveYd5akFztIPY/COL07yFz1d3m16M+cVwutpmovo37LMRdIanDm0qxbrN
oLXazfpxBdaVwJFzPd8lVGFd2eeFmltndvzCulJQnZ9aqFfL4jRvXwa0Le4i
xroc8tTr8pSnjZiHQ5KMnh0JkmA/XJK7YYrZUimui0cslG6Gd23HPvnEt3WI
9V2uF9IVkMIIrTOuAi+kK7tOLlruMULkhXSFZHq8xa/XnbxQXXLEaHd0034F
L6QrIvuMIuKHKWJdedLD5ELDQyUv5vcGmjfu6O2/dm7zYHCat6FagT0272Rx
mrctQapg58LiNG8/70pdlrmxOM2bQolmgf5eD6RbAxsnzZ88aj/mqQWd9doP
lQ6wOM1bzWNH//qDmF8MkWlBnk8PYZ+NMN6jT+YFf6zbDM291430DMS6Epih
kP/D9DjWbQWl13s5g0OwrhRODLzsVB3G4szvpxyf6VcisS6HOA9r3uIWjXk4
pGpsm4puLPbDJekP3UZL4nFdPLKsTe9OWiL2ySeFVt0/2p/FurL345ND9qlf
wLoCcqXEKe3BRawrJL6lQ9ydU3FdcmTJQN1vGulYV0R2aKj9ysvEuvLkxUi1
hLVZFGd/V3UbYXqM7xr29++lf79H+QIpvZunBybHMzjN4YatoZ6cFBb/YzOi
BN7fMbS1+Aen+TSyclEs+Af/U25hOQy4zXPpn8riNLe33H4dPfoP3vFaBZEZ
U7zL/8Fpnsebdutkfgn7/AUhye2HLl7CPDWQ+K7ctW8aWp9eA636a323pWE/
tcA75l1anIZ0jepgb9hWT510FqfHRf/QHwtP/YP/mVdZPex3Hrpbko79i2Hn
lb6Z6zKQT48GSLU9sPVaBu5nI/h5du83LBP1X60JDGM8Nrpn4nqbQcfshk9F
Jq63GRYvUVyvexnXK4G923s0nbmM622B8fs1NrRexvW2gn63Nsd1V3C9reAy
KWxb9hXspxhunNWu0EnGfZBCis2aqkFZuA+/QeRu4+2chfj/95xI0uAdxVnI
v1o7DNm7JGF8NtblkFn2Gp1OZKP1lhxiEWhY9DMb++EQm/HDksyuIt0hXFKr
O0D+7FXcNy4Z+EtlZfdrqM/1XLLKJnHpqmt4jjyS/iRtUME15DOXRyw1E1LU
ruM+80nJ5oetHteRT38+udD7a/+n13G9AlL2ZND3yTdwvQIiNtU663MD1ysg
1c7uP3/ewPUKichu5NwZN3G9QuKw9VjnhJvIZ72QjLZPbq+9ieclR7Q39tE3
z2Fx7p965ciQwXbPE3NwvSJinP4gpHMurldEmuTb8ixycb3ypNzUWHSDwSv/
1vUVYN2Nh13OxjE4PY/ttrF9PfgfvOO1DFI/Gac8/wen57GefNeIH//gHT6/
wybRHN/IcyxOz2O1xhON0//BO/rwA7Y2XLSwPR+HfP6A4qREjut5zFMNQVPD
B2pdwD5roEL87tyMC5i/Fl7Wda2ouIB5asE16sMibhKL/+k/px6sipUvXEjC
ddXDmoyLtXlJmEcMCtsTnZwuYv9i2CwyCva+iPvcCL0/3xw3Ohn3sxFeD0id
MicZ8zRBZ20Tyc9kXG8zmKx/VCxMwfVKIN3Q+F5SCvYpgbaBxwPupOB6W6FQ
PSFyYyqutxUqw8oNPFMxjxQs/bRdhl6iePXf1y/Q81gPDWl8LPJZDPIbn8pb
n2HX07xF3V3p7Z0Qi+qVgodSGg8uYT9tkBP6xPbbJcxTAuGxt4ryGJ5qdv8A
++V7jU7Fov60weH6J4Utl3Cf2+Ha+vVmMWlxiKccvgxM2eF3iuWneTatFG5S
TsT1csjQBxqnMtPQ3NM5pNYy38oiPQ7xVELlxFqlJYksP82/c+gWs9eJuD8c
stByq9/mdJQHDy5ZqXh3s1JGHOL5CQ82hp1VOR2L5iX7PKV7ZmrU6Vg0Xy6Z
khSxf1gG6o8RjxzfOyKsIAPN3aMGOn29MO3NadyfWgjSS1VbcYblp+f50MF2
h4szUK7U+MSHe+uZRybqj1odnDOZ8CDyDMtPj0dxmn+z5tlYlBM+WX0o/FxY
Jjouyvhkl53R4MmX4/7Lk14PP7S0La3P4v6LQWg+5U3xWTxfATnfs+Xjwst4
vgKyQHz4yI/LqP9GDfBlT9D3vudwPhvh/c1zV2PP4fkKSNPBuSP4V/B8haTC
f1r3uCson2WNELRk+Z4P5/B8m2G++bO4lefxfIUkYuT0o1eu4PnK3j+f6ZZs
moXn2wzCHTtUo87j+UrgpGtMYL8L+PiSI9k1fkoOWXi+IuKw/qq9KBvPtwWq
UgouW1zA820FXfcG73cX8HxFZPCWipR+2Xi+InLvXJVedjaebytoFBHbnkl4
jvKk/TfH6XE2Po/JPm8OlXrciMd5kMKT29kHQ5MQbvQbis5fVXn6D07PM2uL
8oOMLyK8rA22z+rx6vBFPC8O0V7YmtwlGeGEQ4IeDjg9Oxn74RDFEVrv7mBc
gUu007IOtiXjeXHJ76ievfakIPwtl8hdS3S9nILzySOSiWHrJ6Yi/DSPRMun
eTil4nnxSefazY8qMb6dT7qMio8edAnXKyBPZq0yjMU4EZB9E3SevbmE6xWQ
upHDik3TcL1CkpQ1vP+RNFyvkFhO3nNUPh3XKySff004RNLxvOTI0CgVm2sY
Py1HGlNFivXpuF4ROagbM9cpA9crIiqBJumnMnC98gRy7hprZFK87q/uV9Bz
nLTFQ+8kg9Pr4yf1sZ++/YN31FUK947UmHc1YHF6vVvj9Jts+Qcv+tO3CtD+
0mN0+CzM8x0OPdUNavkH73g/8AO+R+Y29p/D4vR6dCBb4a3nP3hHH6rhTrPC
5TNzWbzjtQZUz3modpqH19fCmHWCLaPmYz+1kGAVt/jIfOy/Dn6fPDMsxRDz
1MOrr46+igtOon6Kwf31j29jjLB/MRx7/upOoBH22QgTX+YkJi/E/WyEYyvy
5bstwj6boLYPb9vIxZhHdr7d1d/CbzH2KQEr4WGj00swjwQcxOmXBca43hZo
+zF0quZSzNMKN1IXDtuzFNcrhZ9zTkwPNfmLe9DnUouh8OHBCXEQjXwWQ6Dl
hXXLCLue5s1QzcnvG4lGfZNC4oXk1HoTnJM2uHsnzrzLMpanY/034NzSydbW
i2Zwmk/dpaNWbdKPRv7bQGF4gIn9Mtyfdpixo+LoXjOWv+Pfy2G/XBftLP1o
VK/sc8cjp+FNBrheDnnxJELlvRnm5xCTT6pV1eYsf0efK2F1yZAgMisa1fUD
9D4tKN8zG/eHQ9492tm0wALPhUs+az3YsNKS5e/Af8K++Pjqe7OjUV014N3w
MoY3Nxr55BLnH9fbr1qy/B3z4pHbWqHdH1mh/hvVwIekw3MWzMX9qYWdd7ub
es9j+el5/nAWZ9yw5Xi+fHI+QPhtijXyX1YL4VdKoh7Ni0Z9q4fpaxs7yxmy
/PS6oBVVEBBkjY9HPpkhiCyJt2H5/+h61MOCr4n1Cw1x/8Vwe7vz/QML8HwF
JKwptO9vGzxfAVGbVti7y0p0XKg1QP6768aFC3A+G0FzmvMR7kI8XwExm/f5
o91KPF8hUeiu4LXVFh1H6Y2wql3h6ryFeL7NsObRE1v3RXi+QtJjevdXD2zx
8S5HZifnDnm1Cs+3GVI9No/NW4TnKwHxGPPZDYvx8SVHXhcGyI9ZjecrImmx
80RT1+D5SiDPMz1r+hI831ZYsu3JTEdjPF8Rmbv2isuxNXi+ImJcJxkaaYfn
2wrvZsSYpRnjOcqTF7Ufh9fZ4eO9GHrld44zA5wHKWx6LlnyZSnqg9pvSNCo
6jrUJPq/dcnOM87FB/eZmqK60tugvHTB1whTPC8OmRg8oOjuMsQzhEPe3rd/
3dkM++GQ4p0bySRzxF/PIU/9imtczfG8uOTIlea38RZIN5dLEhLnjS+3wPnk
EU1Tq5huVkjXn0fcbLRPLrXC8+KTtFEqx1yWI11LPtH5pjT9+nJcr4A81orP
LLbG9QrIni1bOg22wfUKSInBLsW5K3C9AjLc7mpXvxW4XiHxvv877sLK6P/m
IVdItq2wWPBrJZ6XHBk/P2xLt1Us/uf66C9H4qzP312yCtcrIpdenNi7eTWu
V0RMXog8Lq3G9coTecHKx0VraA6boP3Pny8wWTvbw8sgisHp9ZGfMPhQr1ks
Pv4PXgr9n7oEd53N4vR6ZyqSvor9f3gF7Hs/LTJkDovT69eA86t6D5vL4n/g
iCoYc0YtVH0ei9Pr0cICB+OL/+B/4MJfcPLcYP+T81m841X2Of2h1sGxhhiv
hfZQW48BC7CfWjiz6ujVS/8Pr4Nk7/vOcUYsTs//ZclxdWMX4r6JQV9p/nbN
Rdi/GHLWzR6fvAj7b4Am9weuUYtx3xohutZ6z/AlGG8Cz5dDAnoa47qaQSkg
53X8/8MlcFx5TMaRpbguCfC3TZvdxwTjLRA0+Xw13xTX2worq44WBJrieqXQ
f8eyWS7L/uIe9DnlYjjRcDgrbX4E8lMMAwyujvDXZ9fTvC2SPv06aEEE6psU
Znm42/PNcD9/wzODksxKM5an4zj6Bknvyp10KY8H+xz9du2E8xeMWH56nszu
dlFrpznuczvcOsKZt9yC5e/oTxkcaWlTuWMUgfDvsPNWZ/txi3C9HFJelS8o
tUBz8eCQhXmGbQWWLH/H++HvoHX/56X5i1h+mn+Hij6amYtxfzjkOc+pk4kV
6o8RlyS3WX7QWc7yd1wHf8LSvLvzHi1m+Tv+Xw24C98/1zGOQHngkoi6UZNz
lqPjVI1HyvtfL42zRv1RqwH9M0c+LjLG/akF72dz/S4vjUB95pGVo4KODbeJ
+u9cynhkSXVDvy4rUK7Sa0HxgN6OoqURKG/1sMzLZM5EU5afuY+u+4C+x1eg
3KbzScZYL99tK1H/jeqhsuxZdyNT3H8xLKoo7ZK6DM9XQH53WfyueSWer4Dw
H7wa9sYW5bNMdh5oHXbl/jKcz0bYe/TDp+HmeL4C0ifD/7HNKjxfIXF5Z8XT
XR313zl6NAJJ6e+gZ47n2wyaVZ3z4izwfIVk6TfSnrsanQfU5Ejg6y29Y9bg
+TaD9RP/sdkWeL4SuGM/7XovK3x8yZHwFwWOA+3wfOWI/tmtm9rs8Hxl/Rin
02WMFZ5vKzyIGlF0eDmer4hEzNyj7rkWz1dEpuZeFNmsw/Nthd3579vil+M5
ypPrm852K16H+ik7X51S2K0QOR/nQQoBFsekv60j0HylkPl4vGJPG4TLzjMv
X/RZsGkFi3e8P2yDgyVl4L0Cz4tDWu9tuPFhJdJV4JCyIZHB9RiXnQeCD/Qy
n78KzeWtbL15aXdbjMuOa//+GeoZq5HP01zyoMk868FqnE8eKfG9162fHYv/
6fN2Hrm7xiVggh2eF5/UJxROOLAW1Uv4ZER9XmjkWlyvgEx3mh7wfR2uV0Bm
qqS8aMf4/+57Vdo3YKE9rldATtgnLliDcVnOZyq01iRvwPUKSc8vndrvYFyW
22mkM0fRAdW1XY7Me6tTNxjj/9snoWe7sZMjrldE7ozfO8zLEdcrT1yDBlUW
ONEc0uflv4Dpgrkvri0LY3B6fRw5RSFnnxmLd1wvSmCY4jRNA3MWp9e7TduU
BXIWLN5x/q+AhqHXVub/gzPfj5WkET9LFu+oqwqGj/8UscCKxen1aGN2q4vC
cha3/6P7C542XHha+A/e8VoD5yxrUv2tsX/ZdcdvYBcjG+ynFrQCD/3ovALz
18GR3ZMMC1Zgn/WgcjZzjM9KXK8YWkofHZ9li/2LwS3CYi93FdZtgMhTDypu
rML9bITRA4w+uK7Guk1wbT1nyaQ1uN5mmFi+cmHNGlxvM2x6P7XwvB3WlcDt
GMuXdmtxvS3Q9/7kVRrrsG4rxA1p2PV6Ha5XCu+0LykfXY/9FIPDYB+nJlPc
BymMPFcyZZ499vMbqpxMStr/wel5LPnaE/UrG7Cfdhhoe/ut00asyyEb91gM
HuyAeTjEwzm88a0D9sMhAy4rmQU6Yn4uCXi3buYsJ+yTS7qJfTOanbAujww9
nJmRtAnPkUcOnNMzsN2MdXnkqSvfpscWrMsnAwwvC+9twbp8cu/MvWkuW7Gu
gLiut2gfvg3XKyBz9R2N32/DugKy7NHRCf7bsa6QfLlpcUp3B9YVkkvROYk/
duC5y5HaxnKdEzuxrhyRd9S1XOCMcyhHxPpOCi3OWFdEPC3MjM/uwroiYhky
YZiZy1/cg90nwXTWvEklPiEM3uHnG2Tk7WrdsJbF6XlsQHUXK89/8A7dMpi5
SfDl1zoWp+cxwSiBpmg9i3ccF9/htGllzlZ7FqfnsddFoR8P/YNH/cF/gI7x
xBN1G1icnscCBEURnTeyeEd/qmHhga+uWx1CUL01sFn/nPkhB1SvRy0U7qq0
/uWI/dTCng391OWckB+1etDUnzx/wybch3rY8l2lwgPj6WLYfPac/tfN2L8Y
vn7dfFuCcaNGuEx6L7TcivvZCNbzBclb/sE73rc0ATdosWPRNlxvM/gJYpJL
t+F6JaA/TfmU3g5crwQUlNrvW+zA9bbCZYFac9pOXG8rPI79/LsA4+lSON+j
h+PAXRRnn1ufVFxe2hIZxOAdPF/g5PcBcfd3BSH/xeCkGOHXuobloTn0NdW5
etUlCPVTdnxM+2UydRfKg1EbfGtJ5B91YXk6jq8SGHd/4mgjV9YPzW1t7/m8
mbuD/ttn2flz07vHj0674P63g8dnp9utrix/Rz/LoU+jSUbR7iCEf4fKaXWz
c9xwvRxi3a3/ZuXdaI65HOIU+vvCWjeWvyPnldC0yX/yYneWnx4XVbWTD83c
g/vDIWLVrdPd3VDe/LkEbn/Ke+TO8necB37BlXXF1x7tCUJzrIEZ+T2fXNsb
hPLDJX0FRjol7ihXljzyouZY14l7cX9qYPW2ubMN9+H+1MKMm+4akz1Yfnr+
f/ds7BrDvaj/Q/jEKCvAP3xfCMpVHQw6n/z6jgfOWz3oOJm4pO4P+m9uZdcL
fb/Qu8n7UJ7r+STnucGsVg/c/3r4/rDZeYYn7r8YDgx3/jLUC89XQLQtqmyV
9uP5Cogt9Jpi7Ynz2QDrbNqGZHjhfDbCisFXbKIP4PkKyMKLwVO2eeL5ComZ
6TqHa174eGyC44+OVA3zxvNthh/+n2q6H8TzFRI5y+rFT73wfOUIt8T7S29v
PN9mOBfikB91EM9XAn0unY/x9MHHlxw5c2rx+dHeeL4i0t3kdvSOg3i+LZBh
ufSWgi+er+z9Vb8nG+t88XxFxGMTd4HfQTxfERFkrEwo8sHzbYW98vVv3Q7h
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
PmiONTDXz+bVpK8+KD9cst+09ZZcLsrtEB6pHNJ1+I9bLH9Hfmpgifq6TUFf
cX9qYb6lkDeg1Afln0cG1yQZ5N9GOaznkU/T18y4cAf3vxaWW/pp7C31Qbr1
UH/mtIl8hQ/KM5+k7NKfefAumm8un1haGjxed/8wym09pDRENdhV4P6L4YrR
h2dVlXi+AuKVvCeL5OP5Coiqw5pSjQcsf8d1pAHs5kxonVuF89kIvYZo+zz8
iecrIBcGKGY3PcDzFRLxAvuDzwsPoz43wqNLL3SG/sLzbYbc5QouZ2rwfIVk
0YrQORceoeNriByRk5ZmHXiM59sMe6prUni1eL4SmHnybdK+enx8yZHUofHr
lz/B85UjnV6t9Br/DM9X9r5uXqnTu3o831bgOXwZZdqI5ysiE5JSB8o/x/MV
kRd58358eIHn2wri1627khtxf4phYFGd1prneO5SmKBn0z5Y4oPm+BtM7zm8
3PsPTs8nxRXbR9a1snjHeakNWg5ZHlkgxbocEnt+ata1NtRPNQ4pGfD6tEo7
9sMhBv6pSfu5vv/VLeOQs8Ylw979g9Pj1+dwvuIsge9/+5nOJYIPm/qc+Aen
x2PB65UVPJHvf3168IjX9aWeViLE87/nAbsYzLjZyfe/czTik9O2Vut7dkY8
suNlzhrtns4KyKeagOz/PPNJ4T84zX9hY77zCEVcr4CYjTub56GI6xWS+z+T
7d8r4XqFJHGt9rxxyohHlk+7y+trfVV8/ztfDzny/o2p3ScVXK/s/dhUh14T
euF6RUR1Q7CGL8Vz2X1+Elt8Ftxee4DBO76v+AILpG+9ZgxgcXodHP3h1pLD
A1m847pQCr/mKMyZPJjF6XXNd/8lUy8tFtf5w1MBPy2WKWoPZXHmOQ6viWt2
DWPxju8BquDnuFPlGiNYnHkuI2rsgfUjWbzjc/0vGJHz7JWC9gFUbw28DHDO
MRnN4h3f/9TAuAGnSxrHYD+1ELDzdl/dcahejzqIqCnq/XE8i9PzfIz0WkL/
iSze8f2MGCL2f9+dMwn7FwOcb1zOnYx40hsgcche5ZgpuJ+N8EKzzujTVBbv
mG8TaGzjlrtMx/U2g9zyPnuv6OJ6myHD+UX74pm4XgnUNdxv9Adcbwv0E822
G6SH622FyevIzRX6uF4pRIiPqNcbYD/FkHJy4+JATdwHKSyYfvn9qNks/uf9
QPpvyDd6PSpnDovT81jc8vlmTXNxH9pBPVTnpM98rMshYiKadNMQ+d/OITVd
UlyNjLAfDnk8oWrv/oUs3vE9AJfMeTsur+ti3Dcuaff+NE1vCeJR4JGHS2M8
HxrjOfKIRmHW5t9LUd/e8ojm2Ns3vU1xn/kkWJUMvrwM9eE0n5TmWe7VNcf1
CsjA4cNXOljgegXEcUL3/GpLXK+AbEnrNbTfclyvkEy+uC/+pDWuV0hK9svq
skH9V5DxxYxTMVqJ5yVHTG+Ai7MtrleOpHyPGdSwCtcrIok9nbpprMH1isid
XmNfR9odYPbl6ai3FJba91Bpc0oAmjOKv+j2/OP8rARm/4sOvBLujk++VDkY
r6+E3Rvzh3tlY7wa3vSLeZh9leJfGNzkufWtM954fR1s95r1++c1hHuIQXvi
sUzNGwnM8590/YgC8xsBupinCSpXuP9YdBPzSGC8+/M3bjkJzPN+lF838Oyj
udGYRwoz5oRMOJ2Ledrg0ZOlq4puJTDPP1Dd8vMj5g83xes5ZL7tUwXx7QTm
vnbqR2Xo6+2fMtD6/z3Pct75UK872A+flLvEp065i3DZ+6NBTU7h5vcSmPv/
qP9E3faAqw7Yj5AIK68t23Ef68oRx/gudwLyE5j7bDr+vRRap/Dv7+qWwNyX
Q/tguWluYtBAvL4SjiZrz01VxHg1hBKxRll32ocvTH8qIz7c0/eifsoYnuOV
j90+ucUjnjr4HjbAV00Z8cvmeM3gmKthD9qHr0w/zY6bJKlOw36aYGISqXJR
wTwSOBn/tkdizwSgv0PQ/memdh56O5LylzJ+RElhwXZB2KcU3JQPJRWpYv42
GX+MWmMvin9l5ijytpUcNcbrOSStUy85dbUEoJ/D6RwDDg4qmZKG1svqHXd9
wN0ZfRKY521ovUk/d074ch775JOyhMljV6gjHpmflf5rbNz70j58YXLywnBg
Lm8D9ikk+Qm7V4X3w37kSK+WHr3TNBKY+01pfxx+ahw3vR3P3KdF85azoeiG
79p4Zp8vii8MrH7D64vXVwJnjM723HUYr4b2kPr9Devj//athOnngjzniptv
45n9dyhPmfKo++nP4xBPHRTduzBo2AbEL8sbAFlssZHi5Yxu48zZz7dMwH6a
oCoiXertgHkkMGiM/+pLjvFAf3+ic0nfmuDYvzaeeS6d+gl582lo3yrsUwoP
Pw+e9s6J7l9Uzvjsah095aUh1m2DyGn+5ZzNGOeQ8P6NPbW2xAP9/oXON15T
w8RVPuG/62V5G9nFuvfcrfHM81q03gNNR1TceLgPfAIli/PXbYtnnoehfVCu
CzAYuxqtl+XwyPCi6Qe2Y59CYn0gxufkDoTL8lZxarNP1s545n5l2p+n6QX3
nqjFM/f50VwlvBFJd9+g+1pUsXlTiP5itiOOuV+Q9m1Sdy3DTU/jEE8lzB+U
Xn7pJsarocLSYXRZDsXLmT6HLDRx7jcuntnXifKs7pr51H4U5qmDpaapnXrf
Qrhsvvq7NmyZe5vilYzuwAg1qzOH44D+vk7ndXPkzCeZFZi/CdQOxVjtyMP8
EmgPTWuLuRMH9PdLOsci4RjLVfPimX0QqM/tNw9kpBtgfim8nD5a9f7dOOa5
ceq/dtcRg1/xWLcNbPU/C37eo3gFk4dvquPOiNvxeg7J3DTWuXt+HNDv9WhO
PizMTDixEs1d1ofKA6XXxxXEMc8N0j6cNRkzvMEK++eTO4vOpS15gHCZn4Ru
G52cHsYB/ZxGcxi9fStvZC+kK/OzvOUL17cQ8cjW1xq8XhD7KI65r5TmMLhi
Wq6RKsYrwbVe+5tnL4xXw8vfX1df7k35q5n1cldFn1q9Y9H6OrDOyXApV0M8
srn0dD+qrqqO+ZvATdPLQL8vXi8BjYjCIY796HyrGf5gwyPuw6OxrhRe8Qbt
C9LAPG3Q6UqP1CxNjHMIT5Wsfd8f4bI5ft2uU9s6APvkk35WV7X7DEK4bF79
vl4YqzMY8wvJ6c9Xui3RwvxyRKviWsL6IXHM8wnUv+hRU7b9Q7o/SQ0zr28e
UQulm2OZfSEpfvXtEs+IoXh9Jagfe3N23FaMV8Pj/X6r7bZR/BfThyun4wp2
f41l9mujPL27Zq17lXsS8dTB8j7l6cHbEb9svgecvwTd3vEX92B154WsTEiZ
if00gUHs4ZafOzGPBK6G8jR67Yr9e734yfb/mVevA5JYZh8T6mftx/FHmn5h
n1IYnzU8a4ZLLLMvA/U5zmaq3vVlWLcNYvUWjVrtinEOmfF97pADu2OBfj9O
55tXlPn6QPe4/66X5afm9ebmBDfKU8vUO7mvZZNnN9wHPukxOd79lnss87wi
7cP+pfKhOY5ovSxv8zpdyv+wJxbo9ywdunIkNEjz/It87F9IPJ5Or23Yi3DZ
ereNk58peMQyz73Qvu3aktvmoRXL3C/egZdC/byfrxVDTjL7jVI84HHy0k7C
k8x957SfquMlH/deP4l4KiGpr5TjGobxavihalb5IYLibP+/aA1XcdaNZfYH
pDxPd1ZN27grBvHUgc+sfnK6JxC/bO4hewz0Q2NOMvuaUd2E84blreNPAr1P
i84xaN/Nhysqsc8myBc2BVTFYn4JmJuOstBNOAn0vhM632UTJjitNoll9tOh
PicWplwzTsT+pWA/TaDsm4j52yA+KsLz8Rnqv5bJwzatlBuqCmhesr59Esjz
lM+fBPq7C81D+PuXM+ZsROtl9TZLwiYuSaK6dUy9OoGdvYY8xz75ZGTR+KJD
ycinzM+qPbYtN1P/9qGMzdsAT49zDQOxTyHhBsz+Wp2GeGTrdwlaZvTNPMk8
h0Dz1tl/zuP3C2IQXglqJWWOBoswXg1qO8YUJS6h/sXMen/+yLcpY6LR+joY
piWx45sgHll+Gm31NK2XYf4maD9CfqaY4/USsG5InNZuiddLwa/TD7f51nh9
G+heS3YOXIFxDtHX3un1xDYG6O9btG/nP9/qef8Q6o9sjtITGnO6rsG6fLJL
8+622WsRLpvX8IcvJrqux7pCUplvnnl2A8Jlc7k6NjjpuUMM8zwbravUz22A
V1Y08xwInVeP1LKBlgK6/0MDg6setrEo3HkCra+EzEClyTlymKcayhxnKPfv
FA30PnXan7z54zNaSqOZ/T0pj57Fi8qE71GIpw5WbWzRcu+C+GXzvbnD2PZ5
12hm30Cqa36mW7FRAvbZBLPlvS9pdcc8ErAKbz+wXTka6P1btP/qnLPfbHvE
/P17I+NnzJtBm9R6YX4p6N0LXnxdJZrZN4f6tDWzO3D1CVovy4943OpXnF5/
+2MkZuabmmnmZHAQ++SQ/M5W24haNNDfNencVUYv6HWZxPx3vSxXGkV199zU
o5l9ImgflLryF7vPwv75ZK/KLt+0ftHMc+a0P6eHfsjq2YbWy3xGjZ/8tUQz
uuO6piZm8jbgRK/SgHTsX0jsew76rTwQ4bL1iReTj+kOjmaen6T9dJWrbCvc
eoJ57ojmMGmM4Z4DN6OYfasprrniyZq0sVHM80u0z0kjPVfvLY1CPJUg/0rc
6XsuxqvhQ6vYdl5eFNDnH2j/9wzNrepykvahieEZaiMYaJAYiXjqYIXV8fr4
u4hflodZS7+kNN+PAnpfL53X6Fn3hqYr43qb4IP96IPzH2AeCXgGnfwSUhgF
9L5AOsclF9r3TS08wey/Rv1Ya5ou8HiGfUrh3NhVkz8WYf422Dm2h1H/p3/x
sgZm7qdehxS9AuRT1p+1c5RdVzyPAvq7OJ37MO/XA80kaL2s3oWZjqvCX1Ld
Jqbe5LFRH8+3Y598sml5dPaj18inzI+g+k1S29u/fUhvYHLlATbXvztin0IS
oN+wZuQHxCNbr10aFGbyie4D0Mzkau3gc8esdkcivBIEqnfDb7hjvBqOPDro
pL4P43UQ1/jTY8d+hMvycNK8z618L7y+Cdq2rtbofRCvl8B4lbP8Nb6RQO/X
pP2xn3nULucg9i+Fnt83l531wzxtkP7kg1+lP8Y5ZJ5bpuHQwEig9x/QvnXW
KfyWkI74ZXM8vTM2f+Ux7J9PbE7Pyw4KQrhsXrbz7s/NC8G6QvJ+4psTv8IQ
LpuL0UrDrT0jI5nnn2ldnMbFV1d/j2CeG6TzKrj1Tv3N5Ahm33mKh6jf1dh1
IRytr4Sez5adnDoN81SD3rXb9SG6FGf7c2qfVvw41UhmP2jKM2nPHvHOAZi/
Dq46vz30cybil81dbuDdxUQvgtnXleqW8L3uLn4TDvS+fNrnMEfDboaHsc8m
mDm6bFKAAeaXwLSId6dfz474ex5j5/Jm/vE51fqRzP6J1GdD52sXDRZh/1KY
Wbm3d995Ecx+Z9S/R/v2Cz2FWLcNqgJdF1kb0rokzNzfv1F7/vsKXs8hz1Nb
4sOMIoDej0LzsEd1brcTmyP/u17Wh0ln9LKKFlGeFqYPaT4hZW27sX/ZdVxr
uAHXOILZH4T2Z5lUz6BgHPIj81mrkLJpjEkE0N99aQ4NT8yujy3B/oXkxMqd
ayyXIVy23ma6y7u95hHMc/i0n6uMMxXPnglnnl+l+UyFqcWSxjDmeVfaz8PT
6kT7++H1lWAQ+fuLpSQM4dUwPLP1SkYrxVuYPsfHTwmFF7Q/UoZnQtENDf7X
UMRTB7PGn3rWuQ3xy+betEu7vzUnHOhzIHQuu1oF7t0Msc8mMHvHPXaWh3BZ
/7d9cAusEYQDvW+bzkvt1atvdzm0b1LGz8DRN3IiuuF6pVC27fGxCSLM3wba
U4Yu39bpL57ews73RXGNnzNezyFfDfrOSery97grZOc7Vp63crp2xH/Xy+rV
IT7iL10pj5SpVz4zrKrfdOyTT8Zt2qbeozvSlflZszu3FJT/9sGjhcnPqStT
HjbGY59CUn9R4mavgnDZ+pLec8P8VcOZ55BprsaNP3jh+pXQv///N4PPftdv
3P1RoWh9JcjZ7dZWv4rxauD2+XFwx/VQoM8l0r7525fG1QTRetsYngHTdf1H
nwpBPHXg3iwYVnAT8cty5RIr1977ViizTzTVdZjnxB1vif00gZ/uWumaPMwj
gf4jpvidvxsK9H592n8V+ws8khvG7MdK/UxW7L034An2Kft8ZN1Z88f9UGaf
ROozMj19qJ831m2DdZMP7xn+AOMc8mrGdc7qwlCg96vRObpU60Tt/RH23/Wy
XNVVKRqGFlGe30y998+2Cz9IsU8+uf0yp9u9J6HM/kG0D/onFVWfXEJ+ZHmb
EhzkWvsM+xQS87eStN4vES7LVc9N83ZMfx3K7OtB+3P/uHJwr+GhzHPpNFea
Cx8v7bc75G/f2hl8mkDr0PvqYOZ5eNq3ZWbT5lrGhiCeSkhb+MpstzvGq8Fu
d+SkZ3sp/pvpcw+vymC9ZdR/O8PzUGG0WsP6YMRTB2uft63Q2o/4/3c/wJAl
t7Z7hTD7j1PdGrPyzt37hgB9fozOC177GLgWYp9NELReYeENb8wvgexB8o48
3xCgz4HQOb7fdnOr1X7a53bGZ8Wd+jyNYOxfCr8+Dw7R9wth9uWk/uVbfv4c
Nw/rtkHxqjC/vf60rt9MHkwWTFjm24zXc0ibasGZzIAQoPdH0pzM6XXg6OqL
aO6yPvR4dO9IxdEQZv872of2lRWKOrnYP5+cHSOpVQ0KYfaxov3R+7svxH/W
y3yOKFNoJyEhQO9zovnk791ZfHAw8vO/6/JI84/rwhCPbP3p+VZzfCP+PmfN
oc/5lsL4YybpvWcGI7wSNv5fXVceF2P3vkfTTGVPSYqUvcVrCSXlPBJJyZYS
hbz4VpSStV41bVpMe1nKUgktJIVWRGWXUOitlGXIUMMUYzTq+/TpOc/zdfv9
/urzudyf61znuo+Zec5zzn0/sJm7i4C4CGVWzUu7b55I+c/ED6t8k7VqSgKI
F6OMmbftRi0EPGS+rOTnWrhZQn4Jmv5h/MZLVjBeilw+Dx/2zTqRrsuM+Vtk
SbssHeG4MtR2beETQ1vI041ytXZs8FwOcRbx4M0m9YyVACfzW5N193idHdTJ
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
anc7Q34u4R/ZNTLVJQT9F7EA1sc=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw1nAf81uP3xj/PZz9WUwmhtFQkI6SshoqSjJRKtIgke+9VZkpLoUhmQijZ
kZWMbCUys8peyf96/677/3p1d53n/px7r3POfe5vo+NG9zk5jqLolSyKEuFf
RRRdr4iaZRTtKfr5ShT1FJ6ljw/p++nCrvp2tvBd4bnCZxV/jrCd+O4W/87C
U/X7A8WfITxAfC+LHphH0Wn6PU/0KcKTFd4XPUbYUWnuU9pdhQPEdz7flO4i
4eviuTiU+5roY3KnfUr0KOHmSnOi0v6l+DaiZ4tuHfJ5RDyHCHfR72cU313Y
TflcQv2ErfT7ScV3KdyWj8R/QeJ6vhra26V0O94RPqq46Qq3KPRSvvOFvYUH
6PttovcXrqZ+yvMf4b7K90XRhwr3yP39ReVzr3jvUxiv0Flxtws7CQ8Sz6GU
LZ4jhfco/ghhJ8VPEt1GuHvu+C65+/YkfX9LeGPkfMlzb32bIGwl7Kbvs0Qf
KOyg312ES0rz3K/4boH3AYWJCvvm5n1JPPuJnqu4HrnTPiG6T27euYG/h3jv
EHYX7pm7XV1zt4W50Vd4YmL+44W/6vdA9cm3tEVlXKD4+qIb6NtForcU1lU4
VXQd4R7i2Uq4SJipH4cp7S/ir6e4YeIpRP+rcJzi14V8iK8X8rmW/IVbKFwX
Oa+GCsNDWcz5MzTnfxderrjLFGYo1NK3IcLNhLup7BrCBcLthGcoflvaq9/b
CJ8sTV+s+AZhjBiPFsIm+n686MaJ21tbuFDYUaGv6BeElyWeS8zzffX7RdH9
lfZwhWGKe0Nxa0WfrjYmquc1jLl4jhL+oPj+iv9a+LvCWaIL8byt798pfK9w
dOK5QXn7KK+BwqXC/on5+H1M4rEbILxSYaXosYnTvhDimf+PhTXwlcrqq7I+
F45IPCeGJq7zO6KHCTdVPY4Xzx+MT+L5cyx9z/4h+gTh/qXxzdJtH8yaF65R
mjFK+1/I/6Uwf/opPM48FVYUzhEdC6dGXu/TFO5XmvZK+7LweYVOot8WttK3
1gq1FR7SmDcSzhPuxlxQ2FXhZuX1StivtovMU7C2tEeqWtHdwgcUGot+NnM8
PM8In1Je+4t+Wvi9fh8g+tPM+ZJ/A+aEMukkXK349zPXif33CZW3n+r5hnCB
QjPRD7GGYufznPDtzHnfrjye1bcdxPOosJ2+785ep/CGeHYRviWcp7Axe41w
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
7YM80ef+KV3ul6wL9A+l/y3sUfg/TIl87zA45EneL7AnVGynehF9PvT5Ocij
ok/GBpJ6TaBbYdOgbujpe6fWq1gXzyqsq3gskT2o7wuFdbprK7Y5oOtdI3pL
7gaR/0SfWLie7+v7XmrXQan9wXqEvl0m+j3qhV6EPCqeIZnvj4dyT6v4n8Pe
i75/veiG6DXMS9EvhXqyttHB0FvHVqx3d0nti4XOzJoaoPyOqTrP1xhP0cMU
t0coizovQX8N8dxdD88sJ2APHZd7jfdW3ICq9SDW0eCwFveL7X+wSHm8pPgn
aJfmX92w3/QLPPsis5e2gWOzhWbf+q70+c46uo25VHjODlRZ65TXWsU/LXyo
4rn3sMIPSZBLEtOMNfbJR8S3GJ7Uey/rdEbuelAfZBL6njX+qMI3ie3n2D+p
MzZ8ztfltKNife+FxDIJMtW7iW3j7K2Pq4xVil+Q2tb3c1jjB6ru26itnblP
Kv1956r3D/ptQcW2qRsqtv8ckHledRH2QHZnHgoPL22T556CcutXfG5dg4yI
vomtqLT/BfI287Qa+4w8vfQ6bqty7xC+Q/+kzpNz7MfS5wt7xS2hznuie2eW
CX+LLI8epHzvVbpWyuc6dHB97yd6UmK/O+zP0J9Htk1PT+zjxF1Fj8yyd0/h
/Ir7nT7vozxfFw5gnAuP1U7K8zDRHyt+GPMdG5rSPlRYB1yq+P6F7fa1wh7L
nUJR8X3Eg8x10XOFp+W2xX5Seg9sw7zLLLvmFcvb1IE67VOYf2lkX2XqME95
7Fj1/QX8U3O3fUf0FH3/LPFeh9wJjVyNjL4isb0KefUB9g7R9wv7lpaxscND
I4f+XHqsmdPthY1Uv82V/3aZ+5w1flxhGbsIdcC+wT52ZOF1sDSshcOUplHs
9TkrsZzOnUWvwuW3VlvOU/o3ItvPDxHfduI/WNgrs98R/QMPdyCfIjOk9k3F
Lrk+sR8UdzPsn2+zb1atMx4YbBH4bN8lnh2FE/R9iuibhC8I7614TZ5aevzR
9/EhxEcR38XFgeeein0Uqds9wjHin6g8mlZ9//Jb2Is4o+iHByu2w6NznZTb
n5yzpptwfNgvqMNOrBNhk6rX9TthbTNf5lQ8Tuh33OFiX2qusDN3hsIrVIcd
hIdU7c+G/v2DcInSPMD4gsq/reL6VL3/Ec93/LFvjuxvgP3nSGwGwW7TT/Rf
mW1T+JXhb7ZrZvlnt8x1om70KfYT/O7wOWymsE/sOnVWuXP1fQ/hM2rfu6Lv
5FzQ7xmimxe2dx2G3i2co29PkWfqOrMn42NJPtT78JDfy6Fv8fNn/Hoj7ylM
E91UOFXpbxE9BTkK2wT7O3KIvnWgnVXvUftj4xE9VvSeog8X3V7YSfwdM9M7
iN6Ls0hhy9D2a0ufTQuxDylsi12r8H0Z7xROEHYVX+uwZ8LPXntU1feVn0a+
j+ukuIahbvAjG3QP/dxA9M7Cq5V2d/pIaXfJ7HfKb+q8m+jHC7dra+yBhe+S
8NG+KHefTFIfNOP+RWkaY1/IPG9Zl9isWJdlbL9b7H6dI/sS44+Bf3uT3POt
nr43zrxGpinP5lW/6WBNtEXf0rem2Joyv91g7h5c+E5qbZDljtS3juJpkvks
WBvOA2Tpf/ideu70je1TOzn1Hsg4cneGjzd+4JeXrksv7Lrh3ETXvS312XW7
cIbC4+xpws1S32dxn4JP7wHK+1lkvMx9OCjz/Qh6Mz7eF6WenxcLRyv+VtEt
xH+y6EsUt13V9zv4beKf11fhdtGzhOPF1wTbjnAHhbGKa1x1WfjWDc6cP/dJ
5wtPUZ7XIy9zfqW+e7o29Z0I+jZ+oVemXrPkxRuTO0S3FF6Y+p0LdaqbWmdH
J9oytS0cvRI5k/v2f5Xf/NxnNLrhW6n3Z+TVpan1aGTcd1KfcctZiwo/ii4z
p8Um8VfpPsf3FfvINanXJHXGpoc/4WeFdX/8z7kfRXfGZx4d+LLUdwT/37eX
CxtV3cYJir9CODCz/yHj0rXwftCyalmUtbygsN2AOxj829lPpounRdXls34H
xN5r0evZU85Kfd90emr/ojsj+/6dlnrfIP7U1G+Ozkjto4VPFP5LF6Te/3lP
dJLKPZs2Ve1jdlVkf9oTS6drWHV5lMs44RuGPbId4yietqrXfOWzE3ul6B0z
v+thn96t8By+NcxbymIfa1Z4nrDncXfAeYEPzPaF/ZdmKv/2wlbKq344F85N
fU93jvDk1Hevo1L7vM2J7AN5EGdcOGdPKH0mNgmyDTLR0VXHn8ScqjpP+oH+
GBD6mbXEfRx3iNzJYcfuGeyN7I3Ia/2r7mfuC09J3Q+tOavoQ85RxW1d9Xuf
myL78hHP+cL7rxNT30Ph83O80p4gbCD+4anfZ50Q9o2OYe94M7GNCnvFo+GM
ny88W3n9jjyrtDszjpF9BS9N3f/Mvbqx96K/FS7FhoW8I/7Zqe8bOb/YB24S
vW1Y49wjNyrs84+4dYfwKvHdVvEdGfaoX5mDwj9S21j+ZK2nvjuYFOipFcsT
t2f2W8XfC/vzicqzmjse36WZIX/u2Fg/rJH3RB8rjGOfBYnCdP3eKpwL+L9d
GPltFHconGV3COsrr5ax2zk9pB8r7FRafsYPpHPptwb4/JN3w5A/vkPI1fiN
zCh8Vs4tfNfDm6baud8g1BP9qPBH5P5gM4e/HjJN1X6AZwb+G9SeSRXvidxb
9Q9yCO9Haop+MDMP92jITFvpd23lt2Xmtxs59w5CBmJUZN/3q0qfpYciM4v+
Ven25y618Bixt0Nzbuyg+Jmp9Sr2c2x6P7E/CH9JrTv/jHyhML3isxD5du9w
tiKPNQ37/0WFbRSjC9dhl2A74h5qZBjTzWLbCpgfnO/NY8tqLTPro+wPlMU9
FHscdz1jwl3AJWX0v4cr3IVhB2AOoIe2UZotYq+xv1LbE5hv8P/NXly17XQT
8Uwo/HaGdzX3C/+NfbfC+5MaoW7UkfXCe4KHS8tp71dsM2FNYfc4qXDf/lvx
nd3Gse0D9N17hfsH+xtvnXgvdI/wz9h+s7xtQRf4ULxDhPelfl+JXveTwvrQ
56cVlhH2UwajSvc/MuSswvrs3WHe8h70bcZBZWyPvpn5HeIilXWYcFpmf+yp
QS9pHGSgiZl95vGT5i3bgshv4ojHlxsfa3yhedPAvQxvIZ+M/Faxa+J9mPeQ
vEejLN7a7Vf6Hdsy4ZDEbyR5k8abCPyieafAW84FwbZ5Q+H2XlL4fQHvj/D1
500o9k/edcKDLnZrkD3RR/LY+wpyI3OC94CLI99lY9dlPsxkb8/sw4/vNT7z
+HPiszpJ32oqrnvVd6+cI7cVjuecuk84KLGfEm/ursjs14o/P2+ROE95z1Mn
83ypjc6lsi+J/IYRGh/qxejHYZ7DQ33w9+aNR7vEtjL8lWtknp/Ikx0S22zx
f+b9LP75R+aWSaknc+5/70pi+5nzBvDJMNbMPd6pDK163PHbxz91ZGJfKd78
npPZz513ELw7Y3+7q/DbCu7yeBNyZ2F5Hv2atzl1lPaRzOO7JLIfVxZ7PBiL
yxS/DXJM1Wm3pp+qnqvwXVd4X+W98vLSbzSwC3Jv2C7s1ezZoxO/jeJdLm+N
n2dOsl8m9t3irfR5id+U8Y76qsTvKrnDuDSxT+AVIR79Gv8xZHXW5ybCUZnv
W7HTIrsS1w2fkNLvuXhvy3ysF/r5xsTtxR8UGl1mfKgDNgreWt+VWAfB35L3
Atxj8k7josw+zhcH/WbLMFc3z7zX1M1cLm+m3yv9FgY5g/d3vI1iz+QOd5Ow
t9CGQanlLHyudhX/eZF96f9LbaPegG6h8HXFex93TH+IPk94ucK3FduxoXmk
16XqN8KcUzVzp8XfYH3qPDn34GuY2d7CGC8rbI88TmmXFJbxB1ddH3ztH8Om
mPhOH396/O1PiexnX8n8zjHOnHb32DrditT1xK5eZNbPkMOPznyO9M+sazcJ
+hRnIPcItWL7HiAzrAzzEJkG/wruKT5FjgpnE23qrHo2yGyv4wzdOXEf8lYB
GvsA7yWw13HfMbJw2/HZYE7/ltpPA7mKunG3jj3339SyBP1/rdLkjK3KaplY
xuMNA/E/VHxfQz5fVHw2jyutfx9RNd0yyBVpYl99/PZHZPYl4N0a76k5EzfL
bW+kbwZV/a4N+faJwvc4K5X/cNGvpLZhYlM+t/Tc4Ix+M/U5jO7DvTz2+i8K
37OsqNhW/m5q2yA2pn6kqfjOBR2K8wv7NfcFH4WzDB0Uuyp6Kf4k2HUHsreX
bi/nZr/Ad4DwaIXHOMOr5uEeY7eq47lnGcG+VPq+qEPV9cdOv6foF1Kft9je
seti4+FvBTA/sZ1ir6gX9hbeRCxMPR+wh7cr7ReEz0zfzG/njsp8T/R+kC3H
ZNbLeUNXM/F7C97UYyNdEfr22My+JdwZYCfHTvVI4XeyyDNPcXaFOtQLNmr+
pgFtxja+Msjq/TLrStSBuvHm/onSaYdGfvdOP6wKfbJPZn8SbDr4upwS5kPt
cB5xFzwytb0KPWi/xHrZvuHMahH2H+6X2YsmB9mY+2jk1NGpfVPRhfCvYL1N
K6wLja/YHxJfVvQC/BXxRx0fdISRpfWerar2o5sQ9AXikfmxWX2Wei5x18X7
mpPZH4JeiR2eu5W9M+8P2LC+im2vwwdoRGmZGX3wysJ7Sdeq7SRtQv+fmdpW
c07Qobgb4j7ovNR+m+i0yFTYJLZV2iTzOZVmtjOMD3of/mPYBvFbQl/m3gf9
rVHis56/S4AfC/XH1wU7M2sBuzcyC7oV+9G2me3n2JOpM/etYwr7g6F7XVhY
/2I/wx9gSGrfS/xu6Qf0Gmx236Tm5x62XWZ9FHsd/cnezp3uQ6n/9gh2c/Yf
9D7ecdUKeyb7bO0gk9zPWZ34HRV/k+HT2PbJVaGfeYNSv2pZdHXYD/Ex5m6L
e8Ms8x00/UafjIj8Nx1+SG3b5d4Xmn2P+w58eEaFscbW1yLUYePM9yTIruSJ
TMEeiuyEbwOyGvov93q8U/o/lEedVg==
          "]], Polygon3DBox[CompressedData["
1:eJwtnAn8FtMXxmfembkzLxUhW5QlIkTKUllKCaVFkX0phWzt9kpE2ZfIvkay
y75vEcq+U0JSsiThb43/8/Xcz6fTe87cmTszd+5yznOe+9tw4NC+J9aSJPk1
TxL9S5rov13TJNlFsob0S8skWVkn/CR7tPR3Q5J0ld5K8qL0mTrWReWHSmZL
XyA5XPruktelj5H8rnNXkz1JeqMiSRrUXGdD6Wfr2AqVryX7culb6dim0jeR
tJK+gaSJ9DUkzaXP0j130PmVnm1FlSR1/TaTvX48dovqWFvnbq1z96knyUmy
l6e+56nSL5aU0kuV76Hyq2U3lv2bzjlLeqXjS6X/kPqcNSSrqLyRZHXqlGwt
vbWkl/R1C78bdawj/V893whde4BkifQLVGeuslRlu+t+p8n+NXWdZ0rfV8c3
kr6hpJ/0mbqmncprepe/9H5XlL73Lzp2hvR3JL1lD9C5R6i+R3T+ZirbTfK8
9L8kQ6XvJ1kgfRfVM1H6JMmu0lvoup11/S6STaXPV32HSN9N8rL0YTo2XPoI
yXDpn+rYgdJ3lTwb2y9I30Byh/TnJJ2kHyR5UfpESSJ9Xck10q8r/e3+1P3P
l76S6txYdgv6QOH2yaSvL7lZ+pF65vdUxWGZ+o/e/yvZ/XXtMMkiynTNDiq/
k/pV/oB+O8juKJkh/cPC9v3Sr1P5G/QF2a0lr0tfrPI9o36byt8sXP6m7Nvj
+ZTvFY/9JTlH+rmSv6U/pfObSb9b+rU6/1vZPWS/K3ua7C9k7yb7ed5H9nv6
3VZ2m3jOqnqHUdKXSr9f5XfV/D47xjqf0/Ubxne5XuX/yD5U9h+yZ8heQzKZ
viypSf+ffk9S+cnxnKbBz/u79AdU/mPN9xstWSZ9jurbUvqr0qeqfCWdf3x8
t4dk19TuR8g+XJJK/5T+Iv0Rld+g8kdrtneRPCb9M5V3kv6U9JtU/qLsFrHs
RtlP11zeWfKM9Bdqbp8ukhejvbn0zWKbvcLcIb1bfMYl9EPpIyTfMg5U/37S
F0q/h+eXnMO9eXfpDSSTpN/KmJL+q87vr/MXyb5X9jLZfWXPl32X7CA5i7aW
NKG/6fdElQ+N9+ig9rlV+iTJxtJ/0vX9pH+hsrt1/mY6dqnsTdVWz8T2O1X2
aZJCei24PdEfqTx+e+naYyRfSf9Ivz1V3kvysfS/Vf/B8VtN1/nT9Lue7KaS
56Q3C36WXPU9XLm9+J5bSGbRfoXbk7a9hfcp3J6U3Sp7he55mvQrmANl/67y
A2Lb3ic7k4xjbElWkf6JfvuovLfkZ+rU+cP0O5T+LX0tnTNF+hmSuvTP9Htc
4j5FG/9Q+PpPpd+p8tMKrxXMOadKX67fY1U+RLJJ5v5Mfz+ENUl6e73vzdK7
qmyWrj9X1xyp4wMZl9Ib6dhF0kdKftW77azzrtP519NHpe8quVH6DZIDpbdV
fdcw3qS/qGs/Zg7mm0t+Kv29b6H/qfwVlZ+p3zeYCyRnZx7PjPe9Je/TNjr/
4Vj2ic7vot8nZD8Zn3n74Pt3kv6yyk+QPU/2WbI/lr277Dtl95f9Ev2j8HxB
3XfIPoTjsl9mTEo/QPI440tygfRuuv7uWPaGzt9Z9lTZ3WW/KntA5vn0fclA
6e0lZ0ofF9tgP9pB+sz4DL0lzzEWJX3i+bTXtZIO0vsHl/eS/prqPyD4+n1l
z5G9l36fZqzHZ+is8mmxrtkq30i/43l/SYvM7Uv7PcQzMfcEtzf6R/H77Ke2
OEHtMkjr3am0M/2JMSb9RB3fSeUd4zmjuI/K5jAnSu+p+mZE/QPV1zf429AW
b8n+unRf2lPyvvRjg+s/SeXvq7ytfsfIPkOybeb6qe8ByUj6iK7ppmuPkLwr
/Q1JD+mDJfOkjyq8NrKGjpR+Tubv/5nkXOlH6X4fSj9W+tu63we6Zh/GkORb
6X9KTpZ+mSShr2fuC/SJC6UP0/Xzo/6pyg8KLr9Y9tx4PuWfx2PHSO6Tfq/k
aOmTaAfpb0vOj+WvMPdKjuP7FH43fLpx0hurzktZc5ir9GwnZH7+jyQnMn55
Z5VdLPlDevfg+1HXO7p2/eC1lDG9gfQNJecl7rMtpbfMvJadFOfU9qrjfq39
r0n2KL0eMF/tL/lG+geF107m9I+lH8I30LkfyNfZUf3lPf3Olf2p5G3p9+PP
JZ4jn5S+pPBaf6Tk38LzP+vLvpIF+Ai65gNd+6HkdunnSCZLvxx/Ufruut8z
0qdKtpA+ScfOlX6OZKL0rwuvZawBvxVej5nfD0rsA7D+40+sn9ineUXXfKxr
P5K8JH2p5H3p7+GT5l5PW9I2iddc5td9EvsQ7xf2t//QuQt17k56/+/0+6Xs
LyTfSJ9a/Oee/bem3Fp4fmfuPTbO0cw3zCd3SQ6WPk3n6F/SXHKHlIfwdxOv
OS+wduh+s/k+qrud7ndn8V83TTaij0m/R7Iyc7vkQemPS9ZOPMe9JX1NXX+W
rj9d1zfneQvPrUdJgvrDliq/TeXPSraW3jS3r9tZsq70vXTseenTJNtK35Bv
kjpG2SB3vLC99D6S+azlOnaz9Jskt+T2t9tK70mbS99Gddwh/QXJ9qXH9x5q
l+56rgP1fD1lz1TZnZIdpbdnvVX5ZpLtpU/OPHYYQ5dnjo+6qmwX/BZdf4Lu
eZGuvVByrPRnJT9KX4b/ntsfaKdr20o+ZI0kBlPZJZKTpM8r7HsxBhYV9m8Y
C/hkX/JtdL9xOneozm1at79CX8Ynniu9i8qfiO++uco/Kew70+c/py+pfJbK
7yFeoC8V7qudGG+F13fGGn1uXs3r99nSJ0h+kd5W19xF35XsTDxY2NdjTf8R
XwT/U+dtgR8o/XM9x3yd+5lknvT7crc93/ReAlJ9k8P0s0LnP6iOtYnsi+m/
atunKvvn+Br4HPi8W6h8Mv2TdUzl62Ze61jz1pe+VebyKyStpTcM9vUq6Y/F
9ekY5kbJhtLLzP7WefGc5pl96VHxGTYixpO+Kuuyrm+UeS4ZKGkY/Q/WatZs
fIDVM/uyw+M1PA++4qnxmXPVN0B6Xfqjlf0Z1krWzJ2ktwv2b9BnqnwX2bcn
fobNpe8mmZ64jbYJfl70S5hvpTcJvh/v/nzl+Rb/9TLJZtJbqPzCxGt2a+lV
8Fik7Z7W+asHz8+c+2zl9qH98Jnz6O/clDgGWU/61pIpidfOF2K8RnyzQeIY
jfWV8qsk7eL9L5K+tvQndX6r4GdjTtox2L9grcAn3zOzv8Vawj13y9y/H1ff
eVdyGHhC8LdmDerE2q8+9UrqPv6E9Om55xbm8Dty+z+8O22Kj/MI+EPiGPHV
wu2PL4TP0is4HiLe2ThxjLST7vmg6npd0lt6m+B3w2fYQ3oR3D8a4ydW9r/w
//hm+FBDVP6x9BH4bbE/4XuMidfQf/jWfKM1Mvdvvs9gyTrRP3xH+ruSg6Tv
qfrukX6k9DdVXyc90yN6trck+5f2D/GH8FmJufGvnk/s4+ED7a3r75c+VPq7
0T/pq/c8Wm0xsO71H18Pnw8f5nidP1f6WPwCnf9w7rmAOfOh3PHMdirfXnJH
zfPll9IXMCYZ07p+K9Z61hTpi3TNd9K/B0+RPry0/bX0nXX/saWxBda2XWQf
J/sr2T/L7lz39fSFd+I1R5S2qWtXlY+X/bfsn2R3kr089/UL4jHWl+ek3y19
y7rxsJVqxi72rBsvAk+qJM/kXm95nr945tz1Uf+K+Ex54XfhHbLC6wFrF2vO
iawNqr+ouayb6j9H9r8q+411T/a+pfvvU7LbyD609Lf8THbHuv0FsCswrKnS
X8ztO73KmhbXG3wZfJpluedfsC8wui+k/yNZQnvyzNLPU/21mvWudeM3vH9d
son033M/H07FH7ntRbR1fGbq43ownn+ln1i6nHO71N0evC+YUiF9vdLrI22x
nsqP0e9Vsq+WHCd9VZWPjfq6Kr9RvzfKvgGhjVT+WNQ3i+XYzAk3ST9TMkH6
2ZJx+Cyl1zp8uQ3AA/X7cOoxco30TcGwot5S5XuWni/ulL2F7F1Kn38V59bt
Lz7N95E8F+cXfLmP4zX4i09HX7JVvB/1XxvraKDy06UfLn1NlR+i3ytkXxmP
Dcjta+ITDczdPrTHGMnR0kflros6T87tP+CrsCafJn0N1T8+ljVT/W1Kl+Nb
rF/39ZSfKRkpfavS/RNfZZ26/VOwYDDVV6UfkBtbBGM8P7f/i2+Fj7Uz1+j6
8+Ozrq3rW5V+/sNkN4nvx/ueJjlYekm8I30f6avT33P72vjc+0lfSeWnRn2N
uv05/Jknmc9if2fsMoZfzj3f4/t+GcfM7Zpjvld3/Y45jrmXNV5lFW0k/SbJ
Ynwdyc3MvcH2jdI/r1wOFvBGPDZVskT6t5LbpF+k839jPmReAw/T7x/4JpIX
pE9XeVPGh/SfVX6l7H9V9pnsn2R/qt+1Vb5O6mOfS1qmxni/wDcnZpL+EvfV
+afIXqjrr5b9mexF+q2pPI33uCZzLDw7njMu+P2nSV8AngKmJfsB2V/Lvl+/
K+nalVMfewIfnO9NbMfzye4ueyu1ZaX2/5k1SfZq8ZwbVN5Q+sPSF4GtyV6a
uG2/kn1dcP33yV4o+zzZv6j8Udqd9pW9Kt9T9jeyn8psN07dps9KgvSC+Zn1
OfP9GqWug/elPb6WXIsPFZyr+Eb6L6pvaeZcATmDZdKvDm6vJdJ/5f1yz6dv
Sj6hb5aeH/FNO8R4EiweDP996W/mnuuY096RflDptR99B50/uHT8ybnt666f
uXVJnLP7l56f6attVb53af/3fsYe81/p/ouvsk2MP16UPUN267rXV3xnfOhH
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
          "]], Polygon3DBox[CompressedData["
1:eJwt13ncjlUex/FbeJ67kKWylKWFRLaSFlpoQWjBUKiIbJHleYYUSUOkGlSW
bNFMxYQWGpFq6qVMQoxXlkYjiVFSZiqalJr373WdPz6v+/5+7+/vnHNd17nO
OfdZvYd2GnJCLpfbhdK4tSCXe9fn2JK53ENom8/lruQ9x+tA34AWvKGFudyX
JXK5T0rlcttxP6+j3Gq5q2Va4RK6n9y/5FbILEcX+k7s4C2iX0Brug/+yVtG
L8WNyfuEt5HejFH6mK3NQt5i7S/CuIKs31X67U7fjivlVqu9xIX1dVH98BG9
1mcdudX8N1BX7mq1i3id1HXG5VErV523SGYxavN6yP2d11/mLrTkdeOt5U2k
J6M3/abaWrxl6l5CHbkX9V3H93J+K4sn6GH4ynX8Viq78RPojnif9zpvFYrz
2b3aznuHXosRvC76eUvZEH0Ox7W8ztE3ry3dBlfRd6vdq/ZddW/i93Ln8Z7h
LaAXohV9h+yHaovVDcM1cj/wi4252NiKsIteg+a8QfRgbKd7qt2gdo66uSgu
yMayhtePHhhzQXvVeON4zWP+4EJ6sPr9xrLJOD7EvXL9ebt5e+gv8ADvHX2d
rXaFvl/DubwBcp/J7ZM5gLH57Ho/5x2iD8f9K8ye0Xtqe+jzFlwh9zS/gnaq
aLcq/sAr4h1SW5ouwOMxT9V+pHahumcxOs3nT+V2an8XRqtdzD+ddwJdEm/T
z+DkuA51X0TfcrvV9tDvvdofFfMgn9379fqYKTMLQ+i/oIbab+iD6Ca3hteI
d5Q+gu68P/NOTd6PeJl+HlV42+itMafl3tDvpfrtr88B2EJvQgdeD7o7psm9
kGp/UXccr8d7JddM7k6Z3lhP/xUXptrb8C59P46m+7IDA0NjRLrekdhD/ymN
eb321+HmfDavWsh1lrkZU3nz5MrKLZd5FY/TvbDRvZpHz8cIeg5OlFtKL8HD
Bdm7H9fbRlvXxrOMZ8Srmby2WEkX8MfzptNPYSY9Xf3xXHb/tmMhPQs5fXxO
78VzdAP1z/P6uda+OCPmI/9GXjP6YnxHV8VY5RfHeogG9I8YkHIXoXc+m2ub
5SbJTMD1vIa8GbwmdGM05/XlbUvvVl/8jj6A7tqrqq0q+DjWtDQnY8y70VVt
Zd7o1N4FOJfulN7V1vR1sf7R1VzLY2qv09a1KFGYrTlvpz2gfaw59E8YJNdC
pjn66KO67BRee7odTqRvSXtKrLEdo54+mz9Tro9ML/RTW5P3BK8jfTMq0t1l
16nto65XrGtpLQ5vGv0E+qf3rbzaVTFv8RRdH0/K1afr4TK1f9NmK8/8Qs/7
Aiyjq6RndJpMJTSTey3N8cYyDTCR9zzvDF4L+nIsp09RO0rtcf6xyMt95bd2
vC30ZtTn9ZTdEs/Dde3FPYXZmviQ3Fn6rIlL89m+cDDldmMMb4v2mqT2/oF9
9CY05H1Ib8Bu+iTt3cPbQ3+G73nleMN4/6b342feS/qon9a/yphPl5crljvE
/xol6SX8ur5XlKkQ7wf9eloP4h5cisnGt99nmzSW9ajH+5p3A287vQ3n805N
9yqex/moFescJvFy9G9yZenT0jw9kVcQe4XaY/od5fcHtDsGB+iS/HG8KfQf
MSP65fdL3lT8j97m87K0Jy/F23GvZCf6Psf32ZhFf+rzqnQ+WIWN9GH1A9Ma
MQO/0d9hcKqdi9JqzzLmR9WWNd4yqBjriNxoufGxx+Bbejx+9XyPeLY/YFza
e76J9Z4+iAd56+Xra+899e9jB7031rPkrcV5cpPUlojnqu4YHkpnswMlMu+X
aC/OUTFn0x66PNosne2/+9JYjsb5ih6e5l8Jv58Q854uci170vs2Fe30cRNv
OW80PQa3FWRngY3JG4XWcien+Rf3pTwuSuvQGF45+iQ0TXPjvlhm6V+Nrwnv
J/13S3PyGzTgVZIbwTtT7hycTn8be4Mx13EN56BnPttDq/MK6EK8F/tEnInU
/qCtH9EotTeSd4T+Lxrmsz20stpj2v8Zr6X1tBovF+thnKfoZ1Epzlcyb+HG
fOZVjDMIfRgvxrzAkVy2Nq2OM7TcBt4VcpW0dQpu423mtUzreDXcziuT3ul4
P0rGus37gNdcrqxMOfTgbeVdw6tJ18Id+WxvzPM+ULch1t589p4Xae5Uugou
5r3qGTd07e3incWUdGatHWctuh4eTmMZonYv/3McjTkZ58f0Xo7Fk/nsPg+S
+5S/C9/yS/DH+v6o749gepobw+W+5B/Acf7+OHeld2ZC7MtyXdPeUxR7fuxT
vFfkGsi1lrk+3n/e0rRexdreLPrhreA1ibN+nCGjTV6FtNZV1dYZsS/zXk5r
4pUyrfBYqm3M60R3wZtp/buI15PuhXWF2Xpaj9ecvgKP5rMzUlNe01i7MYm3
zmdd/b4VaxC2xvoRe4jvNXyvifHpP05BnPmNbS1uivec910uOw+tQAfegrTn
7aMP4NZ0fv4s/YdYGXODHonv0/+oDbiLHpTe/fX0OoxUW5c3jzeXnocWdEus
TN4cFMn1Tv/LltAvon3cYyzmFdHDcSZ9bmpvdKwtGKx2SFqbttFbcV+cadKZ
+lX6FXSmd7q2trx6dH3sp7/ALemdqYhN9O3p/DzU9Q/G1do7GH56F2rEOZ0e
j8O57Jy4LM4gct/z+so1lmmEO3m19T2bNzTGG+dY3n/keqexnBfnldgreO1T
bRMcoi9Xu4I3g54e90GuTmovvJloVpj9B1vAm0RPwNB07+fzHow9P84HvBrp
LBX3dAQGpfbm8IrpYbibNz+dlXe6rl3oks7PZXgf0zvinMg7PZ3r4sw6EAPS
e9Qwzb/qeI6em87UG9VtRqfY3/jTeT3UdY05xKvKe4TXPdaqOAfzzuHN4vWP
DPqnfh/ntaFboxR9GV7hTaWnxLWk2pnJmxbPJJ0d3/Hc7jeOB+K/bbovU+Vu
kOmAMoXZWCbzWtEtY99TV4v3JK8z3SnW2cLMizPm2NgrMSRd21O8ifRk1KPL
8ie7LwvdkwV4mv4/2a0fNg==
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0u1K02Ecx+Ff0+VT+ZDPJrNSz8BAQT0EBQPFt74qqKankFA0rdTyWcs5
FaNIREspwlMoUOgYCsroBLr+CPt4fUG33ffczbHs0MNLEZHXfeOx+oojNjjC
zzxVwf7NryxNRdxSWTqil+0c5riydo5bKiS/K43YZD55jr3BG3zD12qz15nh
GlfVaq+whctcUrO9yAU12vNs4Cu+VJ09x1rOckY19gtW8zmfqdKe5pQm9NR5
R9inYbudnSzjH/c9d98znvAL88rZTzjKB7yjDruHbfpbFJFOnsNfPtfvmrKP
OMp1TqrTvsd/3muQt3ViX2fyPzGj4Cz+LLx8bNsesePHZZZo13aleJucmeV6
Z1fwPa/wqj7YlazSnl3Nfdbwmg7sWh6yjvX6aDfwiI1s0rHdzBZ16YdDDvCu
Ohz0Efu5xk/K2d+4xZ/JPZLP1M6w3KW6OaTt1MX37z9slkTn
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1443, 1442, 1465, 2084, 2201, 1491, 1492, 1517, 2217, 1518, 
       1545, 2094, 2224, 1563, 1564, 1590, 2245, 1591, 1617, 2110, 2252, 1635,
        1636, 1663, 2274, 1664, 1689, 2127, 2281, 1707, 1708, 1736, 2139, 
       2303, 1761, 1762, 1787, 2317, 1788, 1816, 2149, 2325, 1834, 1835, 1861,
        2346, 1862, 1889, 2165, 2354, 1908, 1909, 1936, 2376, 1937, 1962, 
       2181, 2383, 1981, 1982, 2010, 2405, 2011, 2036, 2037, 2062}], 
      Line3DBox[{1445, 1444, 1467, 2202, 1470, 1493, 1496, 1520, 2218, 1523, 
       1546, 2227, 1548, 1565, 1568, 1593, 2246, 1596, 1618, 2255, 1620, 1637,
        1640, 1666, 2275, 1669, 1690, 2129, 2283, 1709, 1712, 1738, 2304, 
       1741, 1763, 1766, 1790, 2318, 1793, 1817, 2328, 1819, 1836, 1839, 1864,
        2347, 1867, 1890, 2357, 1892, 1910, 1913, 1939, 2377, 1942, 1963, 
       2386, 1965, 1983, 1986, 2013, 2406, 2016, 2038, 2041, 2064}], 
      Line3DBox[{1446, 1447, 1468, 2085, 2203, 1494, 1499, 1521, 2219, 1526, 
       1547, 2097, 2228, 1566, 1571, 1594, 2247, 1599, 1619, 2113, 2256, 1638,
        1643, 1667, 2123, 2276, 1691, 2130, 2284, 1710, 1715, 1739, 2140, 
       2305, 1764, 1769, 1791, 2319, 1796, 1818, 2152, 2329, 1837, 1842, 1865,
        2348, 1870, 1891, 2168, 2358, 1911, 1916, 1940, 1298, 1964, 2184, 
       2387, 1984, 1989, 2014, 2193, 2407, 2039, 2044, 2065}], 
      Line3DBox[{1448, 1450, 1471, 2204, 1477, 1497, 1503, 1524, 2220, 1531, 
       1549, 2231, 1553, 1569, 1575, 1597, 2248, 1604, 1621, 2116, 2259, 1641,
        1647, 1670, 2277, 1676, 1692, 2132, 2286, 1713, 1720, 1742, 2306, 
       1748, 1767, 1773, 1794, 2320, 1801, 1820, 2332, 1824, 1840, 1846, 1868,
        2349, 1875, 1893, 2361, 1897, 1914, 1920, 1943, 2378, 1949, 1966, 
       2186, 2389, 1987, 1994, 2017, 2408, 2023, 2042, 2048, 2067}], 
      Line3DBox[{1449, 1453, 1472, 2086, 2205, 1498, 1505, 1525, 2221, 1533, 
       1550, 2100, 2232, 1570, 1577, 1598, 2107, 2249, 1622, 2117, 2260, 1642,
        1649, 1671, 2124, 2278, 1693, 2133, 2288, 1714, 1722, 1743, 2141, 
       2307, 1768, 1775, 1795, 2321, 1803, 1821, 2155, 2333, 1841, 1848, 1869,
        2350, 1877, 1894, 2171, 2362, 1915, 1922, 1944, 2178, 2379, 1967, 
       2187, 2391, 1988, 1996, 2018, 2194, 2409, 2043, 2050, 2068}], 
      Line3DBox[{1451, 1456, 1474, 2206, 1484, 1500, 1510, 1528, 2222, 1539, 
       1551, 2102, 2234, 1572, 1582, 1601, 2250, 1611, 1623, 2119, 2262, 1644,
        1655, 1673, 2279, 1683, 1694, 2135, 2290, 1717, 1728, 1745, 2308, 
       1755, 1770, 1780, 1798, 2322, 1809, 1822, 1149, 1843, 1853, 1872, 2351,
        1883, 1895, 2173, 2364, 1917, 1928, 1946, 2380, 1956, 1968, 2189, 
       2393, 1991, 2002, 2020, 2410, 2030, 2045, 2055, 2070}], 
      Line3DBox[{1452, 1458, 1475, 2087, 2207, 1501, 1512, 1529, 2092, 2223, 
       1552, 2103, 2235, 1573, 1584, 1602, 2108, 2251, 1624, 2120, 2264, 1645,
        1657, 1674, 2125, 2280, 1695, 2136, 2292, 1718, 1730, 1746, 2142, 
       2309, 1771, 1782, 1799, 2323, 1811, 1823, 2158, 2336, 1844, 1855, 1873,
        2163, 2352, 1896, 2174, 2366, 1918, 1930, 1947, 2179, 2381, 1969, 
       2190, 2395, 1992, 2004, 2021, 2195, 2411, 2046, 2057, 2071}], 
      Line3DBox[{1454, 1462, 1478, 1490, 2208, 1504, 1516, 1532, 2216, 2093, 
       1554, 1562, 2237, 1576, 1589, 1605, 2244, 2109, 1625, 1634, 2266, 1648,
        1662, 1677, 2273, 2126, 1697, 1706, 2294, 1721, 1735, 1749, 2302, 
       2143, 1774, 1786, 1802, 2324, 2148, 1825, 1833, 2338, 1847, 1860, 1876,
        2353, 2164, 1898, 1907, 2368, 1921, 1935, 1950, 2382, 2180, 1971, 
       1980, 2397, 1995, 2009, 2024, 2412, 2196, 2049, 2061, 2073}], 
      Line3DBox[{1455, 1466, 1479, 2209, 2088, 1506, 1519, 1534, 2225, 2095, 
       1555, 2238, 2105, 1578, 1592, 1606, 2253, 2111, 1626, 2267, 2122, 1650,
        1665, 1678, 2282, 2128, 1698, 2295, 2138, 1723, 1737, 1750, 2310, 
       2144, 1776, 1789, 1804, 2326, 2150, 1826, 2339, 2160, 1849, 1863, 1878,
        2355, 2166, 1899, 2369, 2176, 1923, 1938, 1951, 2384, 2182, 1972, 
       2398, 2192, 1997, 2012, 2025, 2413, 2197, 2051, 2063, 2074}], 
      Line3DBox[{1457, 1469, 1481, 1495, 2210, 1507, 1522, 1536, 2226, 2096, 
       1556, 1567, 2239, 1579, 1595, 1608, 2254, 2112, 1627, 1639, 2268, 1652,
        1668, 1680, 970, 1699, 1711, 2296, 1725, 1740, 1752, 1765, 2311, 1777,
        1792, 1806, 2327, 2151, 1827, 1838, 2340, 1850, 1866, 1880, 2356, 
       2167, 1900, 1912, 2370, 1925, 1941, 1953, 2385, 2183, 1973, 1985, 2399,
        1999, 2015, 2027, 2040, 2414, 2052, 2066, 2076}], 
      Line3DBox[{1459, 1473, 1483, 2211, 2089, 1509, 1527, 1538, 2229, 2098, 
       1557, 2240, 2106, 1581, 1600, 1610, 2257, 2114, 1629, 917, 1654, 1672, 
       1682, 2285, 2131, 1701, 1716, 2297, 1727, 1744, 1754, 2312, 2145, 1779,
        1797, 1808, 2330, 2153, 1828, 2341, 2161, 1852, 1871, 1882, 2359, 
       2169, 1902, 2371, 2177, 1927, 1945, 1955, 2388, 2185, 1975, 1990, 2400,
        2001, 2019, 2029, 2415, 2198, 2054, 2069, 2078}], 
      Line3DBox[{1460, 1476, 1485, 1502, 2212, 1511, 1530, 1540, 2230, 2099, 
       1558, 1574, 2241, 1583, 1603, 1612, 2258, 2115, 1630, 1646, 2269, 1656,
        1675, 1684, 1696, 2287, 1702, 1719, 2298, 1729, 1747, 1756, 1772, 
       2313, 1781, 1800, 1810, 2331, 2154, 1829, 1845, 2342, 1854, 1874, 1884,
        2360, 2170, 1903, 1919, 2372, 1929, 1948, 1957, 1970, 2390, 1976, 
       1993, 2401, 2003, 2022, 2031, 2047, 2416, 2056, 2072, 2079}], 
      Line3DBox[{1461, 1480, 1486, 2213, 2090, 1513, 1535, 1541, 2233, 2101, 
       1559, 821, 1585, 1607, 1613, 2261, 2118, 1631, 1651, 2270, 1658, 1679, 
       1685, 2289, 2134, 1703, 1724, 2299, 1731, 1751, 1757, 2314, 2146, 1783,
        1805, 1812, 2334, 2156, 1830, 2343, 2162, 1856, 1879, 1885, 2363, 
       2172, 1904, 1924, 2373, 1931, 1952, 1958, 2392, 2188, 1977, 1998, 2402,
        2005, 2026, 2032, 2417, 2199, 2058, 2075, 2080}], 
      Line3DBox[{1463, 1482, 1488, 1508, 2214, 1514, 1537, 1543, 790, 1560, 
       1580, 2242, 1587, 1609, 1615, 1628, 2263, 1632, 1653, 2271, 1660, 1681,
        1687, 1700, 2291, 1704, 1726, 2300, 1733, 1753, 1759, 1778, 2315, 
       1784, 1807, 1814, 2335, 2157, 1831, 1851, 2344, 1858, 1881, 1887, 1901,
        2365, 1905, 1926, 2374, 1933, 1954, 1960, 1974, 2394, 1978, 2000, 
       2403, 2007, 2028, 2034, 2053, 2418, 2059, 2077, 2082}], 
      Line3DBox[{1464, 1487, 1489, 2215, 2091, 1515, 1542, 1544, 2236, 2104, 
       1561, 1586, 2243, 1588, 1614, 1616, 2265, 2121, 1633, 1659, 2272, 1661,
        1686, 1688, 2293, 2137, 1705, 1732, 2301, 1734, 1758, 1760, 2316, 
       2147, 1785, 1813, 1815, 2337, 2159, 1832, 1857, 2345, 1859, 1886, 1888,
        2367, 2175, 1906, 1932, 2375, 1934, 1959, 1961, 2396, 2191, 1979, 
       2006, 2404, 2008, 2033, 2035, 2419, 2200, 2060, 2081, 2083}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{677, 1084, 1083, 1082, 2316, 1081, 1080, 1079, 2315, 1078, 
       1077, 1076, 2314, 1075, 1074, 1073, 2313, 1072, 1071, 1070, 2312, 1069,
        1068, 1067, 2311, 1066, 1065, 1064, 2310, 1063, 1062, 1061, 1059, 
       2302, 1058, 1057, 1056, 2309, 1055, 1054, 1053, 2308, 1052, 1051, 1050,
        2307, 1049, 1048, 1047, 2306, 1046, 1045, 1044, 2305, 1043, 1042, 
       1041, 2304, 1040, 1039, 1038, 2303, 1037, 1036, 1035, 1060}], 
      Line3DBox[{703, 678, 679, 680, 2201, 681, 682, 683, 2202, 684, 685, 686,
        2203, 687, 688, 689, 2204, 690, 691, 692, 2205, 693, 694, 695, 2206, 
       696, 697, 698, 2207, 699, 700, 701, 702, 2208, 704, 705, 706, 2209, 
       707, 708, 709, 2210, 710, 711, 712, 2211, 713, 714, 715, 2212, 716, 
       717, 718, 2213, 719, 720, 721, 2214, 722, 723, 724, 2215, 725, 726, 
       727, 728}], 
      Line3DBox[{755, 729, 730, 2217, 731, 732, 733, 734, 2218, 735, 736, 
       2219, 737, 738, 739, 740, 2220, 741, 742, 2221, 743, 744, 745, 746, 
       2222, 747, 748, 749, 2223, 750, 751, 752, 2216, 753, 757, 758, 761, 
       2225, 762, 765, 2226, 766, 769, 770, 773, 2229, 774, 777, 2230, 778, 
       781, 782, 785, 2233, 786, 789, 790, 793, 794, 797, 2236, 798, 801, 802,
        804}], Line3DBox[{805, 754, 756, 759, 2224, 760, 763, 764, 2227, 767, 
       768, 771, 2228, 772, 775, 776, 2231, 779, 780, 783, 2232, 784, 787, 
       788, 791, 2234, 792, 795, 2235, 796, 799, 800, 803, 2237, 806, 807, 
       808, 2238, 809, 810, 811, 2239, 812, 813, 814, 2240, 815, 816, 817, 
       2241, 818, 819, 820, 821, 822, 823, 2242, 824, 825, 826, 827, 2243, 
       828, 829, 830}], 
      Line3DBox[{857, 831, 832, 2245, 833, 834, 835, 836, 2246, 837, 838, 
       2247, 839, 840, 841, 842, 2248, 843, 844, 845, 2249, 846, 847, 848, 
       2250, 849, 850, 851, 2251, 852, 853, 854, 2244, 855, 859, 860, 863, 
       2253, 864, 867, 2254, 868, 871, 872, 875, 2257, 876, 879, 2258, 880, 
       883, 884, 887, 2261, 888, 891, 892, 2263, 895, 896, 899, 2265, 900, 
       903, 904, 906}], 
      Line3DBox[{907, 856, 858, 861, 2252, 862, 865, 866, 2255, 869, 870, 873,
        2256, 874, 877, 878, 881, 2259, 882, 885, 2260, 886, 889, 890, 893, 
       2262, 894, 897, 2264, 898, 901, 902, 905, 2266, 908, 909, 910, 2267, 
       911, 912, 913, 2268, 914, 915, 916, 917, 918, 919, 2269, 920, 921, 922,
        923, 2270, 924, 925, 2271, 926, 927, 928, 929, 2272, 930, 931, 932}], 
      Line3DBox[{959, 933, 934, 2274, 935, 936, 937, 938, 2275, 939, 940, 941,
        2276, 942, 943, 944, 2277, 945, 946, 947, 2278, 948, 949, 950, 2279, 
       951, 952, 953, 2280, 954, 955, 956, 2273, 957, 961, 962, 965, 2282, 
       966, 969, 970, 973, 974, 977, 2285, 978, 981, 982, 2287, 985, 986, 989,
        2289, 990, 993, 994, 2291, 997, 998, 1001, 2293, 1002, 1005, 1006, 
       1008}], Line3DBox[{1009, 958, 960, 963, 2281, 964, 967, 968, 971, 2283,
        972, 975, 2284, 976, 979, 980, 983, 2286, 984, 987, 2288, 988, 991, 
       992, 995, 2290, 996, 999, 2292, 1000, 1003, 1004, 1007, 2294, 1010, 
       1011, 1012, 2295, 1013, 1014, 1015, 2296, 1016, 1017, 1018, 1019, 2297,
        1020, 1021, 2298, 1022, 1023, 1024, 1025, 2299, 1026, 1027, 2300, 
       1028, 1029, 1030, 1031, 2301, 1032, 1033, 1034}], 
      Line3DBox[{1085, 1160, 1159, 1156, 2337, 1155, 1152, 1151, 1148, 2335, 
       1147, 1144, 2334, 1143, 1140, 1139, 1136, 2331, 1135, 1132, 2330, 1131,
        1128, 1127, 1124, 2327, 1123, 1120, 2326, 1119, 1116, 1115, 1110, 
       2324, 1109, 1108, 1107, 1106, 2323, 1105, 1104, 2322, 1103, 1102, 1101,
        1100, 2321, 1099, 1098, 2320, 1097, 1096, 1095, 1094, 2319, 1093, 
       1092, 2318, 1091, 1090, 1089, 1088, 2317, 1087, 1086, 1113}], 
      Line3DBox[{1111, 1186, 1185, 2345, 1184, 1183, 1182, 1181, 2344, 1180, 
       1179, 1178, 2343, 1177, 1176, 1175, 2342, 1174, 1173, 1172, 2341, 1171,
        1170, 1169, 2340, 1168, 1167, 1166, 2339, 1165, 1164, 1163, 2338, 
       1161, 1158, 1157, 1154, 2336, 1153, 1150, 1149, 1146, 1145, 1142, 2333,
        1141, 1138, 1137, 2332, 1134, 1133, 1130, 2329, 1129, 1126, 1125, 
       2328, 1122, 1121, 1118, 2325, 1117, 1114, 1112, 1162}], 
      Line3DBox[{1187, 1262, 1261, 1258, 2367, 1257, 1254, 1253, 2365, 1250, 
       1249, 1246, 2363, 1245, 1242, 1241, 1238, 2360, 1237, 1234, 2359, 1233,
        1230, 1229, 1226, 2356, 1225, 1222, 2355, 1221, 1218, 1217, 1212, 
       2353, 1211, 1210, 1209, 2352, 1208, 1207, 1206, 2351, 1205, 1204, 1203,
        1202, 2350, 1201, 1200, 2349, 1199, 1198, 1197, 1196, 2348, 1195, 
       1194, 2347, 1193, 1192, 1191, 1190, 2346, 1189, 1188, 1215}], 
      Line3DBox[{1213, 1288, 1287, 2375, 1286, 1285, 1284, 1283, 2374, 1282, 
       1281, 2373, 1280, 1279, 1278, 1277, 2372, 1276, 1275, 1274, 2371, 1273,
        1272, 1271, 2370, 1270, 1269, 1268, 2369, 1267, 1266, 1265, 2368, 
       1263, 1260, 1259, 1256, 2366, 1255, 1252, 2364, 1251, 1248, 1247, 1244,
        2362, 1243, 1240, 1239, 2361, 1236, 1235, 1232, 2358, 1231, 1228, 
       1227, 2357, 1224, 1223, 1220, 2354, 1219, 1216, 1214, 1264}], 
      Line3DBox[{1289, 1364, 1363, 1360, 2396, 1359, 1356, 1355, 2394, 1352, 
       1351, 1348, 2392, 1347, 1344, 1343, 2390, 1340, 1339, 1336, 2388, 1335,
        1332, 1331, 1328, 2385, 1327, 1324, 2384, 1323, 1320, 1319, 1314, 
       2382, 1313, 1312, 1311, 2381, 1310, 1309, 1308, 2380, 1307, 1306, 1305,
        2379, 1304, 1303, 1302, 2378, 1301, 1300, 1299, 1298, 1297, 1296, 
       2377, 1295, 1294, 1293, 1292, 2376, 1291, 1290, 1317}], 
      Line3DBox[{1315, 1390, 1389, 2404, 1388, 1387, 1386, 1385, 2403, 1384, 
       1383, 2402, 1382, 1381, 1380, 1379, 2401, 1378, 1377, 2400, 1376, 1375,
        1374, 1373, 2399, 1372, 1371, 1370, 2398, 1369, 1368, 1367, 2397, 
       1365, 1362, 1361, 1358, 2395, 1357, 1354, 2393, 1353, 1350, 1349, 1346,
        2391, 1345, 1342, 2389, 1341, 1338, 1337, 1334, 2387, 1333, 1330, 
       1329, 2386, 1326, 1325, 1322, 2383, 1321, 1318, 1316, 1366}], 
      Line3DBox[{1391, 1441, 1440, 1439, 2419, 1438, 1437, 1436, 2418, 1435, 
       1434, 1433, 2417, 1432, 1431, 1430, 2416, 1429, 1428, 1427, 2415, 1426,
        1425, 1424, 2414, 1423, 1422, 1421, 2413, 1420, 1419, 1418, 1416, 
       2412, 1415, 1414, 1413, 2411, 1412, 1411, 1410, 2410, 1409, 1408, 1407,
        2409, 1406, 1405, 1404, 2408, 1403, 1402, 1401, 2407, 1400, 1399, 
       1398, 2406, 1397, 1396, 1395, 1394, 2405, 1393, 1392, 1417}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
5XDdrtH12I0jepSfQY7NJb75/0m683Aqvj8O4NbIzFzZWigRorQg2TUSKolU
opKULUKyZi3Kcm1pJSqhQkLSQpZTqWwha6Kk7HwrslRCv8+Z37+v5/O859y5
Z86cz/O4h3wthX4HfHjPjLO+KrManCh9JOUIz7W39ELGNf+raY+GHBP1bd65
/CQ6EVDA5FzTVNiThOePw/J3098I5HuAl/HY7bfV6yCnNCOmWOI29BfUUBvO
uRJreekjeOuZe6uTzsF+L38l49fl2LXXIed5WqOJeB+BSre8lcU582reqd4D
51q3/kByDYGKpqUY3/kmRrIbcn5aVvBZB8O60fqnFefk3lnn+AM8/ESTzEJY
N5JOajA+JB6ZmQc5zfv7CmpgX2SsOCiDc1aFfPhXAq768uVoUCaBcp/qMh75
5NV/PyGnfCUpNbgP1rdGgsm54BwixRXLpi1V440+q1OI02FHC/Zd4z9cn0PO
QZ+R32U3CcS3npfJ2f/E3iu8jE2LZTVpaMYR6MPL4P3Y9+4+nc4bi8/h0dNF
ShSKmZVkcqY59PSWl7LpRwd5ZxwjCeQ5/8xxXG9reOR+aQJ8vwlPXXX5BdEV
l5eJuL7/nu9LUch5xn7e8FOIQimRh5uxi1mM0IvB5VWKr3cLUKjOagPjbs+N
TOTBMx5XzJn9RyKF995N2I/Nqb9eDd4/bhiyo49Eid3bGOeKWFauCb5rt63Y
1BsSeZjHNGL3Frmsogu+d9UK2X+IRA8vHmacdXjVYhPwvw0vLXvTSLRpIv0d
duUva6PMwL1ejjRNJ5NoyNWP8dvqSQdswF0rvEjxYOhHykoasLvobnhzBLyx
L7lR15dEwm4JjF8KTwz3AF9pvTPoqhWJSu611mNfEdX4nxd4Wqafc6U5ibgv
3GP8lPHea2Hgybe9flqpkkjy2WgddqXcjTPh4HXFwv1X15Iope014x9F/165
DH4hYEep7QL4vEMk4/VysROJ4CGW2ldy5sN1tb++xT7DWRR4F/zsjMeq3P8I
dFVtNeOy0xxt2eClf6be8PQTaGf5v1rsJHpiXAReefBBjG41gUJStzEe9hLd
KgGP2eFfl/aSQJusJRl/zV7BXQM+bjCrJnQX9l0rjtVgF80a31sHfnLJ0tnQ
VAKdFtnEeM6GlXc6waXnu4TKnyWQTWlUNXMftj2Zq4f5HLruWXN1CIHC/40y
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
frNrkb/3ZhnQf379/7nGfrELr4B+7pjg8d1nCDSNbGLyi7W+fg2Qw7mxp07l
Lesj0Yrgg7//V15wu9RjRwfgqhY1bLyO803cZHJ+zVkjfmdxfm6UwpcGmJ+u
hXpMnu/qJ/L2scCHkwOtj8D85Jn2MLm0H/uMiMfAfQfq3LJgfr72u8zk7Ybs
CT9XB9x02SX1izA/M3aoMzm5FckqRX049/nHwy9i9gSSLe9icm//W5+bkb2p
3PYHl64Pv9dnepqNtqwuYXJped7Cxb7AZcaMwkbV2Sh5szGTP2uofN8nDriY
TaCJ018KGch8ZPJhW7RCR/OAN89LOHGpmEL8/CeYHNhIozeq74D7ldCvfAIo
pFY6h8l7dY5L0hgC3hh4rmeJPoVe66YweayP+X35BWGcBxWnNfvOgfU9n2Zy
Vz877fy2Bbif1eKZVldJNOOVP5NnOncifaYzcL6ODts3sJ4mmUszuaX1GQ3d
54CPHNZyHIZ5VXG/+v/zRv9mXrkO/LLbKYFnMH9Skk4y+aE+xQdm5wEvaXeb
vxHmSeea5UxO6J7bFvpvgRvtzI01g/nQf+Atk+N5tUnBZAC4T93oRiF9AikQ
gUwuJ1nQ/Pkn9L89Ujkde22gf5cVY/I0Pb8L3BQs5tIvuLrn1RezUWhLFpOD
eR99W6oA/EIEy7irnUKPOLpMrmWh8Jz924BXzLRcZpJMod1z25jcyVXrTx85
CHzonXT/CWcKrbH2YfIlL7qFbwgEXtn8e9ceOQo1Ry3s/1/v/+v5bZN6CjxD
5uk6nYckkpGzY3IePWpZt+XCQF/V3hWnxUbq0clMTmI6uVurGfSzVrWRm07B
/fQQYHISR768WjoC/HqxatUg1KW7gh8w+YNLeLkKBjhHT1/y85N/FDrAt4nJ
MWRtFPJ0An7e2DLjZimF5m9tZPIBz2U/r5mLuPQZ8ca1hlDHDirsY3IG85fs
11sNvE28baYJ1A8ux0gmH5C3PeKcP/jwbnHUDAIppLXjJJMDyM/y354AXOSt
W/StLRQ6o7WQye+z7Jx2fgv4eDdbTv2F74v7nmImR+/bFtMwR+CCoiF3DOH7
si3rOJN/J3tZfON78JEcmXkwpg7qbVVnJodu/UGZfWdBnxDUnKkjT6DFuSuZ
PLufIjP3DuFcwvhGnWXRJIpQZDO5chfNXWh2OJcedHcqt7Qh0cPBAib3Ta+2
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
dHUlzZzv/X/YldqW
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0.5, 3.}, {0.5, 3.}, {0.00803081640187653, 
   0.03864786600920403}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6872016940162373`*^9, 3.687201713658778*^9}, 
   3.687201803070809*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ntensors = 8", "Subsubsection",
 CellChangeTimes->{{3.687201502285074*^9, 3.687201507938756*^9}, 
   3.687201841502605*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"error8Kn0p1", "=", 
   RowBox[{
    RowBox[{"ReturnError", "[", 
     RowBox[{"8", ",", "0.1", ",", "2"}], "]"}], "\[LeftDoubleBracket]", 
    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"error8Kn1p0", "=", 
   RowBox[{
    RowBox[{"ReturnError", "[", 
     RowBox[{"8", ",", "1.0", ",", "2"}], "]"}], "\[LeftDoubleBracket]", 
    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"error8Kn10p0", "=", 
   RowBox[{
    RowBox[{"ReturnError", "[", 
     RowBox[{"8", ",", "10.0", ",", "2"}], "]"}], "\[LeftDoubleBracket]", 
    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"error8Kn0p1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"onsagercoeff", "[", "7", "]"}], "\[LeftDoubleBracket]", 
         "ii", "\[RightDoubleBracket]"}], ",", 
        RowBox[{
        "error8Kn0p1", "\[LeftDoubleBracket]", "ii", 
         "\[RightDoubleBracket]"}]}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "1", ",", 
       RowBox[{"Length", "[", "error8Kn0p1", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"error8Kn1p0", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"onsagercoeff", "[", "7", "]"}], "\[LeftDoubleBracket]", 
         "ii", "\[RightDoubleBracket]"}], ",", 
        RowBox[{
        "error8Kn1p0", "\[LeftDoubleBracket]", "ii", 
         "\[RightDoubleBracket]"}]}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "1", ",", 
       RowBox[{"Length", "[", "error8Kn1p0", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"error8Kn10p0", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"onsagercoeff", "[", "7", "]"}], "\[LeftDoubleBracket]", 
         "ii", "\[RightDoubleBracket]"}], ",", 
        RowBox[{
        "error8Kn10p0", "\[LeftDoubleBracket]", "ii", 
         "\[RightDoubleBracket]"}]}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "1", ",", 
       RowBox[{"Length", "[", "error8Kn10p0", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6872015241272707`*^9, 3.68720152633563*^9}, {
  3.6872016201705647`*^9, 3.687201779194633*^9}, {3.687201852264195*^9, 
  3.687201875931794*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], ":", 
  " ", "\<\"Input value \[NoBreak]\\!\\({\\(-0.48695326425858587`\\)}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{{3.6872016831899967`*^9, 3.687201710332197*^9}, 
   3.687201784539228*^9, 3.6872018827476053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], ":", 
  " ", "\<\"Input value \[NoBreak]\\!\\({0.48695326425858587`}\\)\[NoBreak] \
lies outside the range of data in the interpolating function. Extrapolation \
will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{{3.6872016831899967`*^9, 3.687201710332197*^9}, 
   3.687201784539228*^9, 3.6872018828857822`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], ":", 
  " ", "\<\"Input value \[NoBreak]\\!\\({\\(-0.48695326425858587`\\)}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{{3.6872016831899967`*^9, 3.687201710332197*^9}, 
   3.687201784539228*^9, 3.687201882893976*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(InterpolatingFunction :: dmval\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6872016831899967`*^9, 3.687201710332197*^9}, 
   3.687201784539228*^9, 3.687201882902154*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "6.31554999999999999715782905695959925652`6.82101109106312", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   6.31554999999999999715782905695959925652`6.82101109106312, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687201683825392*^9, 3.6872017109785633`*^9}, 
   3.6872017851640377`*^9, 3.687201883449957*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.72681899999999999284483465089579112828`5.882026185090224", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.72681899999999999284483465089579112828`5.882026185090224, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687201683825392*^9, 3.6872017109785633`*^9}, 
   3.6872017851640377`*^9, 3.687201883458778*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], ":", 
  " ", "\<\"Input value \[NoBreak]\\!\\({\\(-0.48695326425858587`\\)}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{{3.6872016831899967`*^9, 3.687201710332197*^9}, 
   3.687201784539228*^9, 3.687201889696776*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], ":", 
  " ", "\<\"Input value \[NoBreak]\\!\\({0.48695326425858587`}\\)\[NoBreak] \
lies outside the range of data in the interpolating function. Extrapolation \
will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{{3.6872016831899967`*^9, 3.687201710332197*^9}, 
   3.687201784539228*^9, 3.687201889734685*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], ":", 
  " ", "\<\"Input value \[NoBreak]\\!\\({\\(-0.48695326425858587`\\)}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{{3.6872016831899967`*^9, 3.687201710332197*^9}, 
   3.687201784539228*^9, 3.687201889816465*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(InterpolatingFunction :: dmval\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6872016831899967`*^9, 3.687201710332197*^9}, 
   3.687201784539228*^9, 3.687201889824719*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "6.20566399999999962489027893752790987492`6.813388170686927", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   6.20566399999999962489027893752790987492`6.813388170686927, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687201683825392*^9, 3.6872017109785633`*^9}, 
   3.6872017851640377`*^9, 3.6872018903949833`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.72141999999999995019095422321697697043`5.878788091418937", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.72141999999999995019095422321697697043`5.878788091418937, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687201683825392*^9, 3.6872017109785633`*^9}, 
   3.6872017851640377`*^9, 3.687201890403109*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], ":", 
  " ", "\<\"Input value \[NoBreak]\\!\\({\\(-0.48695326425858587`\\)}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{{3.6872016831899967`*^9, 3.687201710332197*^9}, 
   3.687201784539228*^9, 3.687201896614141*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], ":", 
  " ", "\<\"Input value \[NoBreak]\\!\\({0.48695326425858587`}\\)\[NoBreak] \
lies outside the range of data in the interpolating function. Extrapolation \
will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{{3.6872016831899967`*^9, 3.687201710332197*^9}, 
   3.687201784539228*^9, 3.687201896706098*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], ":", 
  " ", "\<\"Input value \[NoBreak]\\!\\({\\(-0.48695326425858587`\\)}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{{3.6872016831899967`*^9, 3.687201710332197*^9}, 
   3.687201784539228*^9, 3.687201896714291*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(InterpolatingFunction :: dmval\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6872016831899967`*^9, 3.687201710332197*^9}, 
   3.687201784539228*^9, 3.687201896722337*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "6.17608599999999974272668623598292469978`6.811313248059603", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   6.17608599999999974272668623598292469978`6.811313248059603, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687201683825392*^9, 3.6872017109785633`*^9}, 
   3.6872017851640377`*^9, 3.687201897295467*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.70443100000000002935962584160733968019`5.868438373057399", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.70443100000000002935962584160733968019`5.868438373057399, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687201683825392*^9, 3.6872017109785633`*^9}, 
   3.6872017851640377`*^9, 3.687201897305394*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ListPlot3D", "[", "error8Kn0p1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot3D", "[", "error8Kn1p0", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot3D", "[", "error8Kn10p0", "]"}]}], "Input",
 CellChangeTimes->{{3.6872016864793167`*^9, 3.687201693541184*^9}, {
  3.6872017874446487`*^9, 3.687201802011362*^9}, {3.6872018814874983`*^9, 
  3.6872018845492563`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJxkfXVcVG3X9SSDio2BHRggdmGxL1QQFRssEAssbBS4LUJSQUGRFumQLhNF
xRYURUVMVBrpERhmwHce8TrnY3/+Mz/WfT1rrb33OjVzznmGbzuw2ozH4XAs
OnE4fA79Vwj0878Fv60yJGnM31P//vsJBRW9N2krpjP4jr//SmC6W3Wvmt4s
7u/3v3/l0GJ5T+Y8mMVzsv/37xcIH2oXnhvF4u2ftXDS8XWDiQbmqQPHExmP
Z01h8Wl//TQAhz8vYcVMzC+GSf7pyo/mYJ+NQMaZ1aQD1m2GCZ+P9dBcgHUl
cOz17UxjXawrBcO9FQWTF2NdGZRc+RX0YCmL7/yr2wadTi/W678c63LIq0GP
rGevxDwcElW+1mPiauyHSyLnjfklW4Pr4hHHA2X9ogyxTz4xD1whnrwO6wpI
wJXN74LXY10BsX9+3L9xA9YVkqTRqfenG+G6FEil21qrLcZYV0R+ZUWFWm/C
uopEb7JWrY1JOpMn+t/XpVQVHL8Xx+DM54jLLhm8eOZvmje92Ec9JmmyOM3b
7sJd3pqmLE7zNlnP89ZQ13ikWwsj3neLsYnGPHUgvTF4tm0Wi9O8nTbXmSj7
iPnFEGw04LFvDfbZCFmfxqi+4yYg3WbIzOl8Q7lXAtKVwNDF8dsihyUgXSl8
2iJ0eDY+AenKQP36mcDkWSxO82Z+Re23y0KsyyH292x8Dy/HPBxSax3w6uw6
7IdLrEsvL6zanIDq4hHbbxN/xu7EPvlkx4WbzgX7sa6ATNN2dHU8inUFJLs5
fOyd41hXSF4EDCk5a4frUiC3FDVfSJ2wrohk9DsT1scN6yqS0XXBGt89Epjc
0LzdrllRK90dyuD0fxddnV/rc5/F6adbZeH4Q4phzN80b9uaTlpXzmdxmrf8
fbqJ3CNhSLcWFIbp/nhxGfPUwduosU9z7rM4zVtRwPY7o79jfjGMdC6YnyQL
Qz4boTz5B6dXn3Ck2wwuS+L1XqmHI10JjGlaar5SKxzpSuF15eY15SvCka4M
TH7M1P26mcVp3hZuSdu8cz/W5RAffZ566nHMwyGB0ccvlDljP1xy19Bq19iL
4aguHuHc0HE8dxn75JP04ydTp0RhXQEpNrU3U0vCugLCc/ui63AD6wrJuIr6
pNX3cF0KZEmwRafQJ1hXRE7Axu6nXmJdRVK2pf+AurfhTD5o3kZ/7TZi3BQv
Bqd5k34V8B9LWJzy1erqPrIJuMTg9LPnpAFuk4d7M3/TvA22mzXLw9Mb6dYC
WEYeNKzzRjx1EP82q1P1Ah8Gp3kLzBk3qvisD+IXQ+2mjbvHvvBBPhvhob9Z
6TS+L9JtBt7v8dbTp/siXQnsrb74uN82X6QrhVGDNKcFnPFFujJIHjfC1yiR
xWneTj5TH16Qi3U5RE+pfPqpGszDIecCSorCuvghP1wy8k7R4kuj/FBdPGJ9
xn/ChXl+yCef+F8q7P96jR/SFZA91vMqbHf5IV0B2TKj87jnx7GukKzY6qyc
6+6H6lIg3hfW7EoOwroi8uzP6GGuCVhXkTyoHdK2/44fkwOat8nZD2enDTzG
4DRvr0tnnrh44CSD07wdMtu/+kBPWwanOmqp+3+7TrRjcPrZb7hKp4XD7JFu
LZiWOo0MqrJHPHVwPGD3y09Bpxmc5q0wTtLbdJYD4heDRreH1SvvOyCfjaBj
cvJjzixHpCs/fxuaWbouwhHpSsDR4dm0CqET0pWC5vcai8GbnJCuTO5fN1kr
jsVp3o6XLu+6ReyEdDnk5J6FM81mOCMeDrGC6M9KFs7ID5dstP78o+mqM6qL
R7qI0/4kfHVGPvmkzOP6gKhuLkhXQGbrzsxaOMcF6QqIyvDv9V9NXZCukLRm
P9e5f9YF1aVAJggSHo9PckG6IjJqoOUOkzdYV5Hsdn8wyanehZk3c96noZXk
ecWCwWneCrdobnKbfJDBad7C1Evjp+TuYXCatx4/J3x5YbaDwan+s6+OFndP
mCLdWlBfHHJl3qdtiKcOWge+vB91eCuD07xlPz5n0E9zC+IXw4Lk2JUuuibI
ZyPwptfJzhoZI91m0CJ8/tiIjUhXAkNAqWjtwA1IVwpuu+5avklYj3RlsKJZ
OfXARnY9zdvHRd0GlTduQLocYnxfrVLNaSPi4ZCyxw5pOZ2MkB8uiT40t2Li
aSNUF49YXt38w6rBCPnkk6Nhltqh/1+9AtLf7eJelwxjpCsgQZdq/yvpuwnp
ColghHLzZvNNqC4F0m3InJzTtzYhXRHZX5m45ZXABOkqkj6aZVOTl5gwc6V5
GyMuekE03Rmc5m238dXPz0+cZXCat4Q/A8OUlM8wOM1bfvn1Rx/LXBic5u2i
u8Or5F/OSLcWzm+9vnZxH2fEUwcDqi+oqRo5MX/TvL0Lnfgx7oYj4heDjeu1
kjA1R+SzEW4eLNLOvOqAdJshOP/lo12zHJCuBG6lVPp45J1GulKIt8m+72Z1
GunKYIHXkDtcVRaneVP41Gvy63x7pMsh05Zs7Nr1gj3i4ZAJvEWPq1bZIz9c
Yuar9OF5X3tUF48obd7crFxoh3zyyQTxY9dV8XZIV0B2d57H63fKDukKiOaV
F106r7ZDukJS5fFs2qexdqguBdLZWdBDh4d1RcTIrySu81dbpKtIHJYaGDbe
tmW/X/iXt21iU+nABm8Gp3n7oZT9tqwPi9O8iaF704utlxic5k23as7bpdle
DE7zds2hpm3Gci+kWwsFondKFj8uIp46eNN38KFFjixOPxuH+OtUTb2I+MWw
PWrfnEW/LiCfjVATuuZ7ctwFpNsMg65Kxv20uIB0JaCVPL4gj1xAulLw03Iy
Sux1AenKYINX/LSnZZ4MTvNWdv7o1vMPPJEuh9gM0q11v+KJeDjkyC/NUVts
PJEfLnEtL8hM3uqJ6uKRE+45fefoeiKffGIiOZh3VwPrCki9ldNoxT5YV0Aa
9aw2lLd5IF0hERsOiJpd4YHqUiAVe+bpF7z3QLoi4uMoehj50APpKpK78weP
cUn1YOZE86aXNX1r1OQgBqd5C791fvi9tZcZnOatqKzlq1F4IIPTvJ1w1Twy
sQeL07wN7Zn4aPTFAKQr33/vaEmdPTYA8dTBpoWK7zJf+DM4rcPsR4xV8zF/
xC+GU+rfKnKm+iOfjVDVz9ovROyHdJvB8djxgeMz/JCuBD4mvm8wd/VDulKo
y4ebZ438kK4Mfvvl+RdOZnGaN809svLPXbAuh2xduvBx53JfxMMhWZrCVaJn
vsgPlwxfFN92KtYX1cUj6SMFt9U9fJFPPvmUuyY2x9IX6QrIpMK+u6ZuxroC
ssh+wIUJi7GukKTd1k/wmeaL6lIgEcoxmvrDsa6IqPLsfozvjnUVyf27oxqG
t/kw86B5s191XemlTiiD07xd6pk3qMfHEAaneeO+HD1tij2L07xVzl9sOG4W
i9O8FSRd4jpIg5FuLTQevj/50eNgxFMHyrMCa4b7sTjN240DNdHah4IRvxgs
+Gkhg5cHI5+NEJHLFVZMwLrNsKrhwgKF3lhXAvweXuuLGq4gXSksORe70u3x
FaQrgwqN7ClGl1mc5s3WZprZI6srSJdDgs5U3VxriHk4ZIcd50b89CvID5cs
HflVZtX/CqqLR0qCivceaA1CPvlE401T27qiIKQrIMutjra2ZgchXQE5vX5w
yLTrQUhXSJa4mNa9DQ1CdSmQA8G8Txnnsa6I9DykeujlSayrSNbeOryyZm8Q
03fm/K3foFumyhEMTvNmvmLW2/Sr4QxO86aq2/uQlQGLM9/3Tp0z4p4Si9O8
WT3kTx6fG4Z0a2HClNxsw8AwxFMH1puMFK0OsDjNW66Rky/ohSF+Mdw16jw2
YVQY8tkIqZp8SYsC1m2Gjwv/hLpUhiJdCSzxWLO34E0o0pWC7v1Zqc4ZoUhX
Bmrfv5uTaBanedML29Qj81Io0uUQ30/1l547YB4OsRi+cMjUo9gPlxi+Ojk5
d0coqotHnp15v8lmA/bJJ0WltSNGLsO6AvLkxo2+odpYV0D2PVswo2QG1hWS
lctvr/+sgetSIK6ubzMsRmJdEdHJnRR7eQDWVSRu3deoLesVyvSX5u3R/rKu
w72iGJzmbXXT4jHXNFic5o3/XRKw8EMkg9O8BbTlSPgXWJz5feHsU4uotZFI
txYiN24weDcS89RBtz6x5u+aIhic5m32i406Jq8jEL8YTvYauuNIYgTy2Qhd
vmxwMPCMQLrNoPHD/aqpZQTSlUCktsY7NROsK4UPkVZniR7WlQFvrI/Numks
TvNW5TDaZ9wIrMshYTGJ9Q49MQ+HdL5tGjeNh/1wye2+XoN6i8NRXTyyemhn
u7aScOSTT/yLz1UXfAxHugIy3sftmNurcKQrIA+lN85zHoUjXSGZm8Q3HXk7
HNWlQCbonXApSsa6ImJaF+M+PQbrKpIZvwfe6BQSzvSR5u367umFK1/HMDjN
24VNTca6e1mc5u1z+b3oWyosTvPWN0D3lsK7aAanefv00ENF7B+NdOXnbz09
zmrujkY8dfA1b33NaC0Wp3nzToqqPNkf84vhxdn5/fWaopDPRhg4du+rxwVR
SLcZ1J12X9ueGYV0JTBFc3JIZFQU0pVCqmSO8YQLUUhXBkOaXQ7EnmJxmjez
QZfI571Yl0M+TvHVOGOMeTgkWLLc0HkZ9sMlnZ8Mqo0DXBePKIwP/V0wBfvk
k3xBgEr9aKwrIDtUnSSfB2JdAbn2R+eoY0+sKyT9R80eWyDCdSmQT9Up0idt
kUhXRIZcNspZ0BiJdBXJ7t0nRpHqSKZfNG99S60G5r2LZXCat//W97g+zYLF
ad6sIjtx/EewOM3bxrBng05+u8rgNG9hjj5f70ReRbq1kBvyxG245VXEUweS
ykGjFPRZnObtsFnI8SljML8YjjTOXXZd4Sry2QiLC+ujP5bHIN1mOB/c/Wun
3BikK4G+OlERr27EIF0p5H7ZOTgnLAbpyuBkVmp8mgeL07xpLVPT0bXBuhyS
vTzbUf8A5pEfT68Jg/23YD9cEmfsFdd5TQyqi0fWfDhqekIX++STrYZaQ9/O
xroConc4X6FlItYVkM9P1Y8UjMK6QvLznqX5lkG4LgUS7Ltpsk1vrCsiCY/2
NYzpgnUViXvmUNvl/BimLzRvd5YM/u9qTDyD07x1W+YeZr2YxWnehp9ICMpt
iWNwmjfxivODl91kcZq3QMvH33/axSHdWrjS1ef07tWYpw4Ky1/zF6mxOM1b
vJePwVIh5hdDcJ+aFe7FschnIxiteJu+7lks0m2G2TdWnRqYFIt0JZD46uGi
HX6xSFcKvXf1sv/kEIt0ZZBhetRq4mEWp58WM4xCRm7FuhxyYr1h2elVmIdD
TEM03VUXYD9ckmGR6144HdfFI8Ou9jLzVcM++WTa9aruk4dgXQF5v2Ww7sXe
WFdA0hd8+3i1E9YVko3fT8/dwcF1KZBXhgOUrjVdRboiouzV/6lbzVWkq0j2
evR1+lp6lamf5s1OciRk15pEBqd5y0q4Nz7wdwKD07xp+Fwe8yOaxWne3K8+
KRfvYnGat4EGEwK/TUlAurUgNrz02lGAeerggFa1odHnePZ70n95O/KDKM+8
GY/4xcCX7qiY7h+PfDbCm8AnM6NOxSNded4an3r8MYtHuvLzjj/TDr5agXWl
IDp42zNjDtaVwWqzjEEn1Vic9rtnk7Tn2/5Yl0Pu3BQEneuEeTjkTIRaD3tp
HPLDJYLhuYvPVMehunhk6NVXTi4/4pBPPindcmXXtvw4pCsgPi8nTuPmxCFd
ATEqCpyxKgvrColRad0i7VtxqC4F8ubRHrMHyVhXRLq9mmHyJAbrKhLd0VXn
FobGMdtVO14I4mqvV1p7kxic5u32r3FjHbVYnOZN95Nb+AAVFqd5iytPtMlv
SGRwmjfnTWYfe2QmIt1aOC6pss7zTEQ8dXC5/GD05T0sTvO2zsRVZbke5hdD
Xf0GV5F6IvLZCAdch30e3B3rNsMTUcWETk0JSFcC0vgez42/JyBdKRwXJMbc
y0lAujIgeZbPft1mcZq3n729rkbEJiBdDvEsU7xxMxDzcEih55ylf85hP1yy
74XPqDX2CaguHhFWVhAfS+yTTxZr5xQmm2NdAVmbZ/bObSvWFRD3VkGR8nqs
KyTHenRZNmsFrkuBrPVO2VWpi3VFZKvTT8MhgHUVyRHhhuuPZyYw+2uat+7Z
UW9uDklmcJq3UMWuUtX6JAaneXsX975rVA6L07w9Xaq1YE4ii9O83VVR9Dx+
KQnp1oIgtqT7LhvMUwd5Fy/LFu5lcZq3DMfZRxyNML8YcueNSbyjj302QtKn
R6/9AOs2w8YtGaH5U7GuBFJdQkbOV8O6UggRmJsnDMW6MliRt9ZY0pfFad5a
ki7WC7tjXQ6xlI76c1uEeTik2f7+JBEX++ESEgSxcb8TUV08omE99Pz0ikTk
k08WWJjWnP+WiHQFpOK8rWrku0SkKyD2slO7zbITka6QXH/UbHonKxHVpUA2
XF/39MptrCsiO2RxHE4a1lUko+JO/n4Tl8jeR/Uvb+lDqpZ3y0pmcJo3/66D
bS/5sDjNm/lNHeNWCxaneXNTdF+wYi2L07yVaPnmTJiXjHRr4e7IGx9Dx2Ce
OrB8dcBDrMziNG/7bnCT/AWYXwzvq3OnajQmIZ+NYDw3dMu68iSk2wwuv32j
Pn1JQroSULVR3eSYl4R0pTB03dto9edJSFcGyj0TlsTcZ3GatyvvVH8X3cS6
HLIoeHePxymYh0Pe9Q1+phmH/XCJpr/HBo1IXBePtN3978iFYOyTTw4/yfhg
EoB1BWRZkVjs5I11BUQyVhDMvYB1heQidPr22B3XpUC65k+99soV64pI5Hh1
Xl8nrKtIvibMXe9ln8ScX9K8jalsjvi4MYXBad6OxH50ODKJxWnerhmsyb/V
lcVp3kbOzTv/sDaZwZnzN7VfjlofkpFuLdTFVQ2ZkZWMeOpAbeuq2ZIkFqd5
6z8geyAvBPOL4WDo8x0VF5KRz0a46RO9b5sT1m2G+kP+88Ydx7oSsNe5erjX
IawrBRWLIXNrdmJdGcg0oyYFb2ZxmrfswbNTO63HuhyyaprNXeVVmIdDNn8c
3RK/BPvhklOflyo8Wojr4pGfx4qrlwL2ySfrGhffmTEb6wrI036nhx2fjnUF
ROfLyDE9JmNdIfneM16hWgPXpUBi7p2p6qqGdUXkdLX5l92jsK4iKRDNc5MN
T2auW2jeBId6rLctTWFwmreo12sXjrzL4jRv3avNLEkgi9O8JVl4fpPasDjN
24XL6jO67EpBurUw4LF0uP0azFMHsbv+65qqzeI0byf00gMHTsH8Yjg+toC3
XhX7bIT+QxLdBvTHus3gH3Lz7aiuWFcCz/v3SNXjY10pJBx3NDRqSUa6Mkib
0H/EvHoWp3lrCNAZnVeB+8whRRY6FQpFmIdDup7QcXv0JRn54RI34xU9/uQn
o7p4pH7BrPyIN8nIJ58YLi+akpCDdQVk9OebPbo9w7oCsi9vVnrGQ6wrJE06
9x1S7uG6FMi6y5HvyzKwrohwph7P3XAT6yoShSePFnGuJTPXw+14IZj4NmVP
2JPK4DRvyUtX9H+tzeI0b/UvdU7dGcbiNG9jSNhmVSGL07xN7GJan1WVgnRr
YYX9jm/pBSmIpw5ye6ZWrXzK4jRvz4sq//S5mYL4xZCh+ywzLDYF+WyEvo+2
bk24gnWboezp7VaJF9aVwNWrWy6vPYt1pfBw7pHtl+2xrgxSs/JOJhxjcZq3
J3Osgg5YYF0OWUY03j/fi3k4pOrAyfT4HdiP/Dw6uiZYcSuui0ce7lqx9KUR
9skn5ws89BvWYl0Bke7Z+nLfaqwrIHePmiyevhzrCskzweQV85fguhRI3Ya7
Jud0sa6IDGxdcq/3AqyrSAq3V+/MgRTmexaatxiFxuLKn6kMTvM29sSSltMZ
LE7zpmwyVjwzkMVp3vqbmKsstGNxmrcxB3yz9u9JRbq10GzI3ZS/FvPUwfVC
8acPOixO8/aj61nSNAPzi+GK7fILeWrYZyOsXP68YOQQrNsMTQ3VV+J7Y10J
XAyf02t+Z6wrhRGbW+E2F+vK4L67e78WCdtPmjeV8vXlRfW4zxwSvDpn8Y5f
KYiHQ2YdTJ25tyQF+eESl88+R0oLU1BdPBJcvYb34lMK8sknFnZHM7rkY10B
uemTqxD8BusKyORVy91sXmJdIXmjtKpz2HNclwJ531I9SvAE64qI09JqvctZ
WFeR8DQrHXbfS2G+v6N5631s7Wd/wzQGp3nbE9VoOHQii9O8KSyrM7vYncVp
3vJfOKRo/U5lcJq3TO1eW2q+piLdWlhqX2P8/EUq4qkDf9280Am3WZzm7X3K
mIlhcZhfDL4BM1e8uJKKfDbC4WmhOSZeWLcZDqe3eqmewboSsJxp96vaFutK
oYcs+rGvNdaVQZO40wv+IRanedt22O9H3z1Yl0OMT54edmc75uGQ6NK7VUWb
sB8ucR9gbWazHtfFI3b30t7ZrME++aS1s7rRp+VYV0DKXG95uizBugLS/DDH
wEYX6wrJeY3aszfm47oUiGdwV+4EwLoiMvqcltbHOVhXkQyL9jt0QzOV+V6Y
5m2gBu8l914ag9O8ld9Rct/tz+I0b5fOP9nhfZzFad7WRar+/LiVxWnejiw7
Gqikn4Z0awHmKD83nIV56uDs9GItFTUWp3l72jfsfeEAzC+Gua7KXVd3wz4b
Yc+Z4ZtG87FuM/z3eKJwtCQV6UpgcuV8I9XaVKQrhSr3pRqtpalIVwY6kzq/
uVDI4szvWUEznmYX4D5zyDlZY4B3HubhkAsHrAd9y8F+uGRTwJTbPk9TUV08
Up3i1D0tC/vkk6dZlUfUMrGugBxw0rlTfQvrCsgzk/R66TWsKySSyt2jlqTi
uhTIwJRX8/MSsa6I8MaPEXvGYV1F4pYitbeLSWV+b6B5G7HlsvbLkekMTvMW
/Uz1aI8/aQxO8+a/IURUU8jiNG9LrEZXPH7C4jRvvBWVn46kpCHdWsitK1Qd
G4x56sBFdllvkQeL07xtlOz8aWKP+cWQuHSYa19L7LMRpsTlrVEzx7rNELLH
5OmWrVhXAh/GCLU912NdKTyovW3ssxLrysCzxXfY2sUsztwfcunUpfT5WJdD
JnGr74TMxTwckvXj4ItOM7EfLlHpf87+22RcF4/sL9C533c89sknzw+dGBox
FusKSOyJfmF2qlhXQOouzTodPgzrCsnEB9ObFAbjuhTI7dtx3cJUsK6IbJhf
5GHRF+sqkhX5n79b9KY4+7vqMeWXq580R/37u/jf9yjf4WV63ZRcJRanOZw2
XauhnxaL/7XpVwTj616dOmaIeUpg3x/VZIOTLP633OxSiNsRaO7rweI0twZ3
vKafTGbx9s9KyNizwzD0PovTPJuMn/lW6wv2WQ1WA89lN1dgnlpIrpnneowX
3XF9ai3UHk57uqRbNPJTBwbf+B/PjojuqKtfDwfn6fR5o8HidLu4uWPG0CNa
LP53XiUN8Oj81BDrRYhHvr2oFOnIfq+N7ujT9jeMzTY3qzWJRv1sBE3xyi1R
e6M79l+lCfpqCSZnWSAe+fZVM3VHTKsNrrcZyhd3Nd3khOuVAO+sk2itJ663
Bcz6DN7RxwfXKwXBiuhd0mBcrxSehG9rmBSJ/RTCV7FDSV5NJOqDDCyHym6r
J+I+tELviPv1ZamIX75dF8X269k3A/lX+QMmG9319t7DuvLrtYkbKkqeoPUb
OKR1xdH67y/wXDjk3sVZrZlvkO5oLhkYvid4z3vcNy45Nf2py93PqM8NXMLr
NbZ6eCGeI48sUjM2kRYjn/d4xG3n+rVDy3Gf+ST00bqks9XIpxufDPoxrM6y
DtcrIIsiFqTbNeJ6BcTP8Xvn2RJcr/x68UW4WlUrrldIynlnAq04MaheISkU
zbjxSRDT0WeDkLiOORQ3VxSD5qVAWtxnLd/QhcW5f+tVIGePfAn06op45Pux
fhMmbjnYMwbVKyIzxqvtde0dg+qVXy8MmzZCvR/FK/7V9QNsdh8r2jPuIoPT
/Zgxz+lrJ10Wb/8sgdXzbHa55bE43Y+Zmz68P7qcxdt9lsOu3DsrRph4MTjd
jy14VyXhH2Tx9j78gglzd79e+8YL+fwFSj/DDm/7jnlq4MyskfyJ0y8hn7VQ
0+d5uGD+JcRfB+efZqkvOXMJ8dTB64ZDQpNLLP63/5wGCK3aO2/t20uorga4
Uf3oftsXzCMGXvz+yxv6eCP/Yui7ZqD5h8HeqM/y6+ixZht+LvdG/WyEVXeG
jTVfi3maQE8pN3KcvTeqtxnWjg1fVOTijeqVX3dvm6evnuSNfEqgTLHboanX
vFG9UqhIaj0YWeCN6pVCet/acJVvmEcGK4uMZdp/KF7z7/M7vJshgwtJlshn
ITwcG7Y568QFZj3Nm9KcMu9qgyOoXhmkGkzpMU3gg/y0waOvKmV2w30QTxFw
HwT0btQ4yuA0nz0s9f9YzrdA/WmDJyYfW/mjfZDuH9As4Bx8S3wQTymERmpE
LPptweA0z4rL9y1LO3gY1cshuyYHPxAv9Ok491QOedzt7u1Lm3wQTwXceXPd
b6yI5af5X3jTrLXL5sPIJ4f00VeesWWrT0ddWy6xjjm8v7e1D+KpgmmGFctM
vx1G86qFx/d7CwtXHEbz5RKFqndDLhxH/dHnkSTO7x3nPXw68tjWgsHh7+cj
7x5GddVB9sfgLqnzWX66nzd3efDh+UWfjroqfKL2JrNYOwr1R6Ue4ooHzNQL
Y/np9rh9mLvn6JmHUU74pEl6YKf2VZ+Ocy/hk33zQ7SMMnw68qQ2wNTLS/0H
uB1GfRODQZf+/HoNPF8BeTBPTWVUJp6vgEi2f54szEX91/8N27+Y9yXWh1Gu
GkExV3Tj80g8XwGJ4ua/DXqD5yskms6qXNMfKJ8ljeBftpLTeyeebzO48oxf
3xyI5yskjcPXjH5ThOerQPrkRKzwacDzbYZvdvbafdbj+UogoeuklWbKhzv2
WX5cc+Gk9fv6G89XRJQ57h9u8X3RfFsgSBS9rngJnq8U7kR+9dLSxPMVEQc7
1x9fhL5oviJicuSBoLSXL5qvFHw7TzdK3Y3nqEjs5+y0K1f2RX0rhKlaLseN
I4+iPMhgWeXFrVOcUU70W8G4sv+cRWksTvczokcjVTReIbykDcpmbFpzoBnP
i0Oe1/y27NbToiNOOKTUwECraQbeP3DIZ0mNqc8yhCtxye7LuXpnDuL9FZc8
mKCkvtMR4QVc0vNE78CbERYdcyXfTt+53mwR3kR4JI98GxfQhZtvgebFJ7FD
GtaUlSHcgk/aauZ/eS44guoVkJbS2L2H+yCcCMijHpbPD088guoVkF3dHohb
tBCuJCT5Kl679NYdQfUKiWT6/CU5ZggvEBJLzdwBnieOoHkpkGeVhxeMO4Pw
SAUysmVFlOuVI6heETnYNTp8eRzCLUTk49t+p3few/UqEpG92Zo92RSv/6f7
A+4M9et5sYsHg9Pj460Xxefdos8zeHtdxTBB4XZRq985BqfHu+tXPh+tARZ/
+bdvZbD2/OvuZza7I55y+FO8s+2ZMou3nw/8guwt93Vi17kxOD0eOWgM/BTc
n8Xb+1ADdkvtbHtZnWXw9s9a6NX1iPMk7bNofR0cu+Yb4ZV+Bvmpg6Y7Gflt
TmeQ/3o4rTPFeFTXM4inAbyfHdS1LnJF/RTDpcZ35yf/54r8iyH7VuYZE0NX
5LMRZo4d0X1qowvqZyO0juqzbdd7F+SzCdQbBI477VwQTzPcb1ynzjFzQT4l
oBxQJQrqj3kkEBHkbNL3jzOqtwWMNWtP9r7ljHik0MlmEHDDnFG9MjjWzV+6
3vQfbkufSy2E3nXfIy3iApHPQgjvv2Lpt2QPZj3NW7fO47J8WgJQ32Sw8eb4
XWYrnFFO2mBvteof0pfVbV//E0LDfDa8+RDA4DSfM26e+lm4KAD5b4Opv1wu
qfKdUX/+gLfN3WOvXzoxPO3/vRTSVZo+fxgXgOoth0kasx4fSfVH9XLI90ej
H6y844T4OeTLig/6s9xZ/vY+V4D3h9lfcwP8UV2/4Plo89xZM/xRfzgk//qq
nSNOOqG6uMS2LGLa05UsfzteBVsmKvQWjvBHddXCW9OwhaNe+CGfXNJlZyO3
Tpvlb58XjyiemOZf1t+po0/9WggrPdgv/qYf6k8dvBmnP991P8tP9/O85Qk6
47s4ofnyyafW2ykDih07+i+pg/WXR27U2+yH+tYAmVW6JpGDWX56XMhO7epp
/MER9Y1PrBfuiK1NY/n/6to2wBofk7kze/ih/ouh7LskxvS9L5qv/HyMX2fQ
J8YR9U1ATBoGBnZxcezYB5Xf0IvbJ8b6uS/KZyPItOsiVX18kU8BKTTymi47
4YjmKyRjX69WVjFh+dvPAxvBYHtt0Uk3XzTfZjg48qLWFRNf5FNIItep3r6/
xhH1TYHM9fAY+nqGI5pvMzwuUtqsZOiL5iuBQZz8/a/G+SKfCuT6gBGHh413
RPMVkSPRL6LEPfF8JRDov8hn7EhfNF8pTOwSv/NHqw/yKSLP05O2f1LE8xWR
3VLeCP0aBzRfKSwwN+0havRBc1QkrQXueRklDqhvhXAicIhW1btAlAcZlFjH
iTTe+qD5tkLP5p5buDk+Hev633O4w7dvGZLg07Gu1DYIn6M+8FyUD9LlkEuh
qiYLziKe0RxyUa3X09mOPsgPh1hUvGyeaY74G+Tnbyo5OlFmyKd8u74YUWwf
vQzp3uOSVQZTF9jrsTjdTl1LZ2Uvm4J03Xgk66yvjdN4pPu/+w/1Cn5U9Ee6
G/hkwsp9odbKuF4BCct+sXQpF9crIG8b1juOavVG9QqIU+lxH+1Kb1SvgDT+
1/n9llJvVK+QXNFrmBv53rtjHu4Jifvncik/zxvNS4HkFhnErc1i8b/HRzcF
8vrZ8ylVmUhXnsOns5+7TUtGuhtEhCw3edUW743qVSQ2Y4oGjQqm32M0wZ+/
/75DnMXL/JruYQxOj4+Pd/lpLy8LZfApf/FicL073mN7MovT413343/UlTwx
XgbDBenfdm5ncXr8Gtg6csRpPRb/C/tVQu79PPeW4SxOj0fTm00sFnRh8b9w
djU4rzo2Wb8ihMHbP2shtqXE/NN7jNfBqWvntxneCkF+6uBWyc8PdjEYr4fC
sutxlzxYnO7/tRWf/ii0C0F9E4N30XyTCvMQ5F8MHqbKbxtMQpD/3/BKMOqC
xdIQ1LdGiF1nv6UWMN4Ea7teFtlPwHU1Q7Gn0ZiZqhiXQF5bju8ZZVyXBAYH
LCvS64LxFrhY/3br4NZgVK8U6heaZ9wVB6N6ZeBg2Wf7t9J/uC19TrkQXp1Y
tvGMWRTyUwjBA++4664JY9bTvOX96j/CWxCF+iaD/+wNohcWBiO8FfQG9fng
+JbVbd+OfoKWW8mcKX8iGZzm08Bq6TNRUiTDQ/eTvR2zDC/lBKM+/wH39fPu
vXnA8rf3pwTUGjcZuMVGIrwcSl8bZCTujkT1ckjsMsNeVhnBHXFbDnk2+7b2
hRSWv/18uByaN2q7l5ix/DT/j7QCX8GESNQHDpGmFRy5GYf6oy/f3zaZXPUN
Y/nbj4NVECzcsIE3juVv/9/VwpCnhUabpBEoD1zy1NfLc2oQy/8XVuGRXTXe
Rfcuof6o1MKbY34HzjdHoP7UgZeKpeOKVxGozzySNl3z0gOP4I5zKeGRW8Vf
5le6oFylyq+nnll3+5wdgfLWAAsc3DdmR7P89LgQ/vRJnJ4Dym0qn2gprXCT
nUD912+A+Q8dF4RFRqD+i6HHk3m8D04RaL4CcrHl5pg4azxfAREf/Dr7yyGU
zxIxFBose/XLgeWn2/ujw+GVCbsi0HwFZIpPyuP3+/B8hWTY+6ffrHcGd5yj
bSM4T134uGlHBJpvM6xtVq64tgzPV0gao9I10rcHd8RVFIhd9+sRdzbh+TZD
13lXG8fp4/lKwONa0Msj0yM6zlF+XLvmSMxnbMTzVSDlfcdVBBjg+UrgikrX
1O7T8HylcOppQ6vDUDxfETmY7B62dBWer4gYjl1bLtTH85XCiSWnXMkQPEdF
0oMTdqNUD/VTvr9aGhOrN2pvFMqDDLzyjLp5d4lA85XBtfNhzfs6I1y+n3nT
ePOlqSS84/Zo2wbrlvR2NmwOR7oc8uDzT/2bZeEddZU4ZGjdrneZpQiX7wcO
JttfNC0I7ziXAg5Zrn/N9NQHhMu364UpP6q0XoR39BnJJdJ50YW7n7M43U47
lbw/N/oui//tswWPfDw79sWWO+FoXnxyV/jOri0Z1Uvk10f2PQ/pJuN6BUR3
w4q38ZG4XgFZ2VmvLw/j/3vfY/TwiiGBuF4B+TVssf6pAFyvkAxWX9GgdQHX
KyS5dzx2R3siXJ7bBdn3j7e6oLosFEiiR9SAgxiX53D1Zvvu+ra4XhHRPW0q
emKD61Ukn3ZMrBlsTd8XRJ+X/w5rQmdmKIVcZXB6fBR+4p+5c4DF248XRaAe
UpZopcvi9HinpmdmoD6Exdv3/2XweNjYTbnSGKRbDjOHulRqf2Tx9roqYcC0
8QGad1icHo+0RinLPgSz+K6/utUQ9KL3dKkzi7d/1kJawTil+AMxyH8tvJ/d
Q0t1I/ZTB5XfZp/pq4P562HR8m2K86dgnw3APxs+9cPQGFSvGIKa6xbP6479
i2Ho/cyUP23RSPc3LDpv0A1qo1E/G2Gyw8SM3O/RSLcJZk1NmHjlbTSqtxmM
L859fu1JNKq3GbbsDYYPt7GuBMK09o6ckxSN6m0B0yt1HJsIrCuF+5WvM1r9
o1G9MmjcY6071xP7KYQd0e9bPfOuoj7IPzcFdUtyxn5aofaAqtXTUyxO92Ov
p32b39MS+/kDXe4Vapbtw7oc8oZM2VBphnk4ZHq4e9Vuk2jkh0M6rb/a0mMd
5ueSu1o9n45ciX1yyUfP9S+NFmNdHvmwcOCq+vl4jjwSx1MaHzsX6/KI135F
uD4D6/LJwPi9g35Owrp88nPuNrf147CugKx9McG2chSuV0DabnS7mzkM6wqI
numNI4kDsa6QSCynLC/oi3WFpPXwh2eDeuG5K5Cv+V5TvbpiXQVyZ4GL98hO
OIfy9f7GNt8FWFdEzJJNC9M5WFdEzvY7qpQmo8dB9j0JzyRhJQ78WAZv9/MT
3j4xD+u3J57B6X5M7fSkz7NNWbxdtwSWXLmy7uQAFqf7sdf75l1P7sPi7dtF
OeycNmm/7oc4Bqf7scvvVvsvesviAX/xX/DRVbfeIJjF6X7MQrz3ckMgi7f3
pwYU7IcVHzwYh+qtBdV6S72z++I61mtbByHDEmpbdLGfOhib2KBnvRD5UWkA
vT9xBhkj4lAfGsBV7UKPM8MQniqGfVOm/XrCw/7F0HjRuyCfg3D9RuhzbLCf
WUks6mcjTHFoiI8rYvH285YmON23fJYgJxbV2wwqGv9l/vcCzVd+HOvXy/Dz
xGuxqF75fuzN0o/ZabGoXinYeYrvnQmJRfVK4UKz0sXFwQhPlcHBRyqLn56j
OPvc+gPPSWXpV+IZvJ3nOwyesepMWs8k5L8QYh6FGuk+ZNfTHFqobeZrVySi
fsrg0dtnq8LdYzvmQb8NtizuOSvmJOunffsqAn9OL+3jOYkMTnP7VP3soGtB
iR37LN9/nphvFh10Avf/D5g9qKlo3sfyt/ezFJTqN46645SI8HLgvLF2frA5
EdXLIeeXJ10U7ENzvMch5dt0JpzdzPK357wCLq3afObYUpafbhdtN3tsP6WO
+8Mhkck7za6axHbE3bjkg0JjxOzVLH/7fqAakjb2uz5IJRHNsRbGZmhsfC9L
QPnhEo/9Hmrmq1CuNvDIOTuT06U6uD+1sLb3S/PHVQkIr4O95TbPFr5j+en+
f+ixCTvH6KD+j+aTbe+NnC1nx6Jc1UNVyddJ/Z4mILwBfkw8ZxWRktAxt/Lj
xavX1qMezkJ5buCT97Y6mrkTcf8boN9/n0XCqATUfzE0v7tb1d8rAc1XQJKd
21TVJ+L5Csh2/SOkcBTO52+I6JW1J8s1AeWzEdIm2ZjUWSeg+QpI5uAAojMK
z1dIXA+N+uU1CG+PTTAn5ZtNyoEEhDfDlJDLFyO24PkKyc37s6v4g/B8FUjp
y/zMr73xfJvhhOoO5zXr8XwlsEnf5OmTJQkd5/i/9/wYJ75e2xvPV0QmXq8a
ntQFz7cFMq/VppEFeL5SeBWXOuzPDDxfEcmyOnZoUhc8XxFZ6+Xbu5WP5yuF
F4pvDcZMwv0phOECfuGSkUlo7jJQqEgq441KQHNshYR70Q5ZQzDeBsqdjHr6
KLN4+3b3B5RXfxV+6YZ15f993aJzrkKUN30O2T+xT8FCDs4hh5ACZcOkpviO
/VfhEvdFqXvy6hEu334dKzXySiviO/os4ZLau0rqO0viUQ55JCFl2O2e39D+
OZVHZvu8PPDzI97P84lq14zeym/jO9Zryye6M3oFT8yNR/UKyDnPOusPz+JR
vQJy47+P/814jHB5/geIW+2X3sP1CsnsdyddizNwvULSLWT4UuPruF4hOS6e
cE0jDeHyfKpGW4lkCaiuVAUSMO5hUWssrldEQu/zbg6OwvWKyLoRi2L1w//h
99j3bBz64qa4vSqRwdt9/oBHSk9urVRJZnB6HPToxFFW78ni7X0ohpavC7JO
NyQxOD2uTbY5Ozf/F4u3560c1ibVRA19m4R0y2F892X88y9ZvL2uX+CgYDc/
7GYS0v0F6cO2a1SlsXh732rgbqPVmtbQJFRvLUTVVfVpCGLx9uN1Hbw6N997
x3nspw64fwzKis+y+N/zyZJ6OH/aYfGSU9hnA8z7duDArOOo3v/9LjRt5dCZ
B7B/MXC7i3bZ70W6Ko2wqGbMwndbcT8bIXf8eeN9m5FuahP4/7fO+5shrrcZ
VmdEbL+xBtcrgYFVm38NWYrrlUBZ3z13JyzG9baA34s7N3Zo43ql0P9h9bUI
wPXK90vGCf4XNP/hHPa9B/51c21GtLD4q799KISsBjvjTuopyH8hnHshjnGd
l8yspzlsXRCbNbdzCuqnDIomiDa0zGD9tJ9PtsGf0P4XHSaxury/n0VQtz/9
1lpuCoPT3P6sOm+9tDQZ5aoNCkq7ZXWfiPv/BzY91IkfqcbyT//rsxRi72+t
//aN9U9zPi/x/twxz5NRvRyy6eq2HzljUJ4jOcRKMbll4wiWf/dfPxWQd2Lh
0G9ZLD/dLtwn5PscS8bbKYcka5mfHDYc+bfgkgufN7/oP4jlD/zrswqyxgwN
6BeXjOZYC+FLCpetCkxG+ZHz/Ta2bByAckh4JKO4ptfyvix/+3VZLVyYvvx2
hA/uTx1kyD50b3ZNRvnnkZBA6UztPijPSnwSFtqvpqoHnm89tFje8fnuyPLT
7TTeroCU/ZeM8swnmtOKtMXd0XZRwCefr1gtqurC8rdfJzbAohU5IfqWuP9i
cJ2u9PGWOZ6vQH6u9CBb0AXPV34+ZvfMdr4oCfn8DZUuJMJxVzLKZyN85+y8
OnQznq+ALDD5bLtbAc9XSLgfhFDMY/nbzzcaQSNRNYMY4/k2Q36vAevz1+D5
ColW9vvZA3hoeyfy86iMPTsCWxPRfJtB6/eJR9qr8HwlUJGnNz5xMd6+FMjl
9AHXh8oS0XxF5Hrrt6Kq34lovi1Q/mya7fpFeL5SGPBrab9TBM9XRCabGGu7
iNHxrkBEZL90olOrE9F8peCz8UHmJi3cn0Lo3Dzdo3RaCpq7DHg1Y61GaGI/
raAa/Hjr5BksTvcn916knbadlIzm0gZ72hyf35iAdTlk+StJLzs1zM8h9XsX
3f8yBueQQ06oCRN6jGTx9uMvlxgu4V5wH47nwiW/ugz+NGQw9sMlQwzzt94Y
iHPII+Vnl3hc7od5eERhuVHMyr7YJ59cvjr6oW2vZJQTPnmbPO3Fkp64XgEp
P3Olz92umEdAlI233wtUwvUKyJRaI0f9TrheIfkwffC7eYrYp5AsG/xwrqoQ
1yskGlnnDo8W4HkpkPkK6Zu1uMkoJwqkLCClfgUH+xSRpacCSrxa8X5PRPyG
DDuRJvuHE/a9GZ2t32zt8T2ZwduPdz/gXvdO30oaUhD+E55beXkvLmXx9rkU
w+pPbdGtrzBeAmuLPrlEPWLx9j6UwfRcta2aKRgvh0t8H2ffGBZv73MlbF05
rPdIP4z/grzzstq3nimorhpINhqUeu00xmuhctj4ZYdPIl2VOkiw7V0z9RD2
UwfO+85uf2jO4u3H33rY4SPQVdqKcPl+3mDDtU+LjZFPfTEY8Gu25q3G/sVQ
M7ko/spy1LeS3/BiSdTe6bq4n/LztPrRmdbzUV22TZCskWBbOxvX2ww/lp0Z
7jsT1yuBvEyzAbmTcL0S2KK7WClnPK63BTa1SD7FjMH1SkHYv1BSo4rrlYFK
g8MMo6H/cFv2vRmnLi/lrk1i8fZ8FsKSidpu0a9Skf9CWBnv+3ltj1RmPc2h
St8uQePjU1E/ZbAw58G5wkGsn/brnVbYrBia/KQfq9u+Hf0Eu5Jn6l1iWH6a
20lKeyOeuqV25JHvP4sHv+vi0Af3/w8Y8S6F5vdg+du3a3n+b/nYGbqy/DTn
GzdOGXHvEK6XQx5dbB35sBvqpxuHbPXbNNWqM8vffjyqgNsWZ5Tf7mf56XYR
/ePQ7oKNuD8csqB5tMo5RTT3DfLj0oOqsEsClr/9fLIK3Cb3ilq3PhXNsRZO
S5eNn7ooFeWHSyYdsev6hodyO5pHdBfMv6b6J5nhac9PLVi49zuvoIP7Uwcf
IzW+jpmRivLPI0cm2h63b03umMMGHvF97Di7f0sy6n8dzLpvYUumpSLdBsgc
a9V/zphUlGc+yZ9V8fxic3LHudzjk3Vd9qWa/U5GuW2A1reHc91G4f6LYVtB
q0/XAXi+AvJMs00qbUhG85XjU/p2FdSx/O3Hkd8woXzSr3P9cT4bQW3eHXXD
bni+AjJa13F7Sk0ymq+QFJtO2Vb5Kxn1uRHCTuoFtSnh+TbDpXPR4/L5eL5C
4jdZcCSxkuVv//5KgcR+WZWtXI7n2ww56pczQ3l4vhJYqxMcZtqCtlP58W6R
4gTPX6V4vgpk3MTauceK8Xwl4Hd924llkhSkK4X3s/c65Nfh/ZWIjB2xt3J7
EZ6viFTtPLCp7w88XymkjbsRVVCL92OF8E3z/fy0t3juMrAxWBveoyIFzbEV
7LP2PB1bzuJ0f3IgVQaNP/B+SX79uKYhcvgPrMshhpM2fDr8OaVjP1U4ZPHa
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
p+hxW9j3YnKimk+TApn69WS+hs/EgdaSTXS8kNGvtODrneWD/2L6XBKda9T9
xy13Osv0WyLjvtZr/f6y8RQ9LxHjf97ZISapkedpHvbceJh7TEn7+2Cm3j3R
M6dPyct2E3L+WcT4n9+uNaAunozLnifPnxgyPcH8CiJ1Won+NZ2rHhUGByBS
F5L4/5Xu40n643Lof+fl6k1+2hTM9N0k83UXZe9XWEufY88QMXlJPRO7zr/Z
l+nrRvJyL9nZ0HbsVaZfFPGn0m/lX+eyAxGpl0Hysuu3y6iqlT5MHX/igwNv
U8ewy8FMX3My3116Z9Ju3w1n+msSnb32/e7i1pD+ROw50hfrbwf10wmjdYqZ
vNS2WEZfW0B42POQsVOf1g8KIufBxIwel2njXylti6B9Y8/Xrc3K1CqZSfqF
secku0o7VwTsp+93Z4iZvKzP33Ft6btwOr/sObr7zQ3twqX054MFe34yes+5
SXVRpB+cmPG/9tLT2Hwb0p+OPS/368Mb5QlB9HktVfZcpcs0Y61BnfS5OAsx
47/6GfG8/XVhTN8CMl8buu/SHx/Yc1xz47nK9Vr0eaoM9lxWjdOJaa4acUxf
T6L/+urGvmYbY5n+UkRP9oiuSr0n5LwKey5FTPdn+cPPnj8JNg07qbaB8LPn
Sf7+vtBHro3ws+dAPGU2Ie5nYunz2+x5j5Cc0Gm3tcl5ni5m3M3bg3u1WyfS
36PY97B6g3ffzXBPYfoQED0T/DYpO0jJe16Cc6jTE0+v8m2jzyNR7HvYleus
zcr9yfv0LkZ/zrXWL6EhiYjUwfwTz6WEU6PbFgYkMH1GiZ+3/prtVs3UD+9i
5mt4a+GMdkTrD2HPCeTIFV9/OCOB6Y9F/Pez1FKcv52cV+li/Bnw4srXJ620
/vvse9K5I57OPHWRPmcSzb73NFxQMX6DEf2e0Zd9XxmrUDxVrT6J6ZtFxj3e
VZ973ojUtZCniP/Gly/LB+4h778I3oQsP/C99j4i+9vyjJ7Oj4VOD5LJfj77
nqvdL6wweX4q05+e+L/Dacaxl/ak7pY8oz9wj2F/yalUROp+Ev871BqvdKjT
+/C+ZNwfSMRfYWk0lH5foy3PzNfFqDFspwPRQ8YVo+aczR8MFqUx/cCID1a1
urldNfS4ikQPn9Ln3HrdOIu892f3k38MUTp0exm9z6nI7t+K9//w+T2O6GH3
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw1nAf81uP3xj/PZz9WUwmhtFQkI6SshoqSjJRKtIgke+9VZkpLoUhmQijZ
kZWMbCUys8peyf96/677/3p1d53n/px7r3POfe5vo+NG9zk5jqLolSyKEuFf
RRRdr4iaZRTtKfr5ShT1FJ6ljw/p++nCrvp2tvBd4bnCZxV/jrCd+O4W/87C
U/X7A8WfITxAfC+LHphH0Wn6PU/0KcKTFd4XPUbYUWnuU9pdhQPEdz7flO4i
4eviuTiU+5roY3KnfUr0KOHmSnOi0v6l+DaiZ4tuHfJ5RDyHCHfR72cU313Y
TflcQv2ErfT7ScV3KdyWj8R/QeJ6vhra26V0O94RPqq46Qq3KPRSvvOFvYUH
6PttovcXrqZ+yvMf4b7K90XRhwr3yP39ReVzr3jvUxiv0Flxtws7CQ8Sz6GU
LZ4jhfco/ghhJ8VPEt1GuHvu+C65+/YkfX9LeGPkfMlzb32bIGwl7Kbvs0Qf
KOyg312ES0rz3K/4boH3AYWJCvvm5n1JPPuJnqu4HrnTPiG6T27euYG/h3jv
EHYX7pm7XV1zt4W50Vd4YmL+44W/6vdA9cm3tEVlXKD4+qIb6NtForcU1lU4
VXQd4R7i2Uq4SJipH4cp7S/ir6e4YeIpRP+rcJzi14V8iK8X8rmW/IVbKFwX
Oa+GCsNDWcz5MzTnfxderrjLFGYo1NK3IcLNhLup7BrCBcLthGcoflvaq9/b
CJ8sTV+s+AZhjBiPFsIm+n686MaJ21tbuFDYUaGv6BeElyWeS8zzffX7RdH9
lfZwhWGKe0Nxa0WfrjYmquc1jLl4jhL+oPj+iv9a+LvCWaIL8byt798pfK9w
dOK5QXn7KK+BwqXC/on5+H1M4rEbILxSYaXosYnTvhDimf+PhTXwlcrqq7I+
F45IPCeGJq7zO6KHCTdVPY4Xzx+MT+L5cyx9z/4h+gTh/qXxzdJtH8yaF65R
mjFK+1/I/6Uwf/opPM48FVYUzhEdC6dGXu/TFO5XmvZK+7LweYVOot8WttK3
1gq1FR7SmDcSzhPuxlxQ2FXhZuX1StivtovMU7C2tEeqWtHdwgcUGot+NnM8
PM8In1Je+4t+Wvi9fh8g+tPM+ZJ/A+aEMukkXK349zPXif33CZW3n+r5hnCB
QjPRD7GGYufznPDtzHnfrjye1bcdxPOosJ2+785ep/CGeHYRviWcp7Axe41w
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
7YM80ef+KV3ul6wL9A+l/y3sUfg/TIl87zA45EneL7AnVGynehF9PvT5Ocij
ok/GBpJ6TaBbYdOgbujpe6fWq1gXzyqsq3gskT2o7wuFdbprK7Y5oOtdI3pL
7gaR/0SfWLie7+v7XmrXQan9wXqEvl0m+j3qhV6EPCqeIZnvj4dyT6v4n8Pe
i75/veiG6DXMS9EvhXqyttHB0FvHVqx3d0nti4XOzJoaoPyOqTrP1xhP0cMU
t0coizovQX8N8dxdD88sJ2APHZd7jfdW3ICq9SDW0eCwFveL7X+wSHm8pPgn
aJfmX92w3/QLPPsis5e2gWOzhWbf+q70+c46uo25VHjODlRZ65TXWsU/LXyo
4rn3sMIPSZBLEtOMNfbJR8S3GJ7Uey/rdEbuelAfZBL6njX+qMI3ie3n2D+p
MzZ8ztfltKNife+FxDIJMtW7iW3j7K2Pq4xVil+Q2tb3c1jjB6ru26itnblP
Kv1956r3D/ptQcW2qRsqtv8ckHledRH2QHZnHgoPL22T556CcutXfG5dg4yI
vomtqLT/BfI287Qa+4w8vfQ6bqty7xC+Q/+kzpNz7MfS5wt7xS2hznuie2eW
CX+LLI8epHzvVbpWyuc6dHB97yd6UmK/O+zP0J9Htk1PT+zjxF1Fj8yyd0/h
/Ir7nT7vozxfFw5gnAuP1U7K8zDRHyt+GPMdG5rSPlRYB1yq+P6F7fa1wh7L
nUJR8X3Eg8x10XOFp+W2xX5Seg9sw7zLLLvmFcvb1IE67VOYf2lkX2XqME95
7Fj1/QX8U3O3fUf0FH3/LPFeh9wJjVyNjL4isb0KefUB9g7R9wv7lpaxscND
I4f+XHqsmdPthY1Uv82V/3aZ+5w1flxhGbsIdcC+wT52ZOF1sDSshcOUplHs
9TkrsZzOnUWvwuW3VlvOU/o3ItvPDxHfduI/WNgrs98R/QMPdyCfIjOk9k3F
Lrk+sR8UdzPsn2+zb1atMx4YbBH4bN8lnh2FE/R9iuibhC8I7614TZ5aevzR
9/EhxEcR38XFgeeein0Uqds9wjHin6g8mlZ9//Jb2Is4o+iHByu2w6NznZTb
n5yzpptwfNgvqMNOrBNhk6rX9TthbTNf5lQ8Tuh33OFiX2qusDN3hsIrVIcd
hIdU7c+G/v2DcInSPMD4gsq/reL6VL3/Ec93/LFvjuxvgP3nSGwGwW7TT/Rf
mW1T+JXhb7ZrZvlnt8x1om70KfYT/O7wOWymsE/sOnVWuXP1fQ/hM2rfu6Lv
5FzQ7xmimxe2dx2G3i2co29PkWfqOrMn42NJPtT78JDfy6Fv8fNn/Hoj7ylM
E91UOFXpbxE9BTkK2wT7O3KIvnWgnVXvUftj4xE9VvSeog8X3V7YSfwdM9M7
iN6Ls0hhy9D2a0ufTQuxDylsi12r8H0Z7xROEHYVX+uwZ8LPXntU1feVn0a+
j+ukuIahbvAjG3QP/dxA9M7Cq5V2d/pIaXfJ7HfKb+q8m+jHC7dra+yBhe+S
8NG+KHefTFIfNOP+RWkaY1/IPG9Zl9isWJdlbL9b7H6dI/sS44+Bf3uT3POt
nr43zrxGpinP5lW/6WBNtEXf0rem2Joyv91g7h5c+E5qbZDljtS3juJpkvks
WBvOA2Tpf/ideu70je1TOzn1Hsg4cneGjzd+4JeXrksv7Lrh3ETXvS312XW7
cIbC4+xpws1S32dxn4JP7wHK+1lkvMx9OCjz/Qh6Mz7eF6WenxcLRyv+VtEt
xH+y6EsUt13V9zv4beKf11fhdtGzhOPF1wTbjnAHhbGKa1x1WfjWDc6cP/dJ
5wtPUZ7XIy9zfqW+e7o29Z0I+jZ+oVemXrPkxRuTO0S3FF6Y+p0LdaqbWmdH
J9oytS0cvRI5k/v2f5Xf/NxnNLrhW6n3Z+TVpan1aGTcd1KfcctZiwo/ii4z
p8Um8VfpPsf3FfvINanXJHXGpoc/4WeFdX/8z7kfRXfGZx4d+LLUdwT/37eX
CxtV3cYJir9CODCz/yHj0rXwftCyalmUtbygsN2AOxj829lPpounRdXls34H
xN5r0evZU85Kfd90emr/ojsj+/6dlnrfIP7U1G+Ozkjto4VPFP5LF6Te/3lP
dJLKPZs2Ve1jdlVkf9oTS6drWHV5lMs44RuGPbId4yietqrXfOWzE3ul6B0z
v+thn96t8By+NcxbymIfa1Z4nrDncXfAeYEPzPaF/ZdmKv/2wlbKq344F85N
fU93jvDk1Hevo1L7vM2J7AN5EGdcOGdPKH0mNgmyDTLR0VXHn8ScqjpP+oH+
GBD6mbXEfRx3iNzJYcfuGeyN7I3Ia/2r7mfuC09J3Q+tOavoQ85RxW1d9Xuf
myL78hHP+cL7rxNT30Ph83O80p4gbCD+4anfZ50Q9o2OYe94M7GNCnvFo+GM
ny88W3n9jjyrtDszjpF9BS9N3f/Mvbqx96K/FS7FhoW8I/7Zqe8bOb/YB24S
vW1Y49wjNyrs84+4dYfwKvHdVvEdGfaoX5mDwj9S21j+ZK2nvjuYFOipFcsT
t2f2W8XfC/vzicqzmjse36WZIX/u2Fg/rJH3RB8rjGOfBYnCdP3eKpwL+L9d
GPltFHconGV3COsrr5ax2zk9pB8r7FRafsYPpHPptwb4/JN3w5A/vkPI1fiN
zCh8Vs4tfNfDm6baud8g1BP9qPBH5P5gM4e/HjJN1X6AZwb+G9SeSRXvidxb
9Q9yCO9Haop+MDMP92jITFvpd23lt2Xmtxs59w5CBmJUZN/3q0qfpYciM4v+
Ven25y618Bixt0Nzbuyg+Jmp9Sr2c2x6P7E/CH9JrTv/jHyhML3isxD5du9w
tiKPNQ37/0WFbRSjC9dhl2A74h5qZBjTzWLbCpgfnO/NY8tqLTPro+wPlMU9
FHscdz1jwl3AJWX0v4cr3IVhB2AOoIe2UZotYq+xv1LbE5hv8P/NXly17XQT
8Uwo/HaGdzX3C/+NfbfC+5MaoW7UkfXCe4KHS8tp71dsM2FNYfc4qXDf/lvx
nd3Gse0D9N17hfsH+xtvnXgvdI/wz9h+s7xtQRf4ULxDhPelfl+JXveTwvrQ
56cVlhH2UwajSvc/MuSswvrs3WHe8h70bcZBZWyPvpn5HeIilXWYcFpmf+yp
QS9pHGSgiZl95vGT5i3bgshv4ojHlxsfa3yhedPAvQxvIZ+M/Faxa+J9mPeQ
vEejLN7a7Vf6Hdsy4ZDEbyR5k8abCPyieafAW84FwbZ5Q+H2XlL4fQHvj/D1
500o9k/edcKDLnZrkD3RR/LY+wpyI3OC94CLI99lY9dlPsxkb8/sw4/vNT7z
+HPiszpJ32oqrnvVd6+cI7cVjuecuk84KLGfEm/ursjs14o/P2+ROE95z1Mn
83ypjc6lsi+J/IYRGh/qxejHYZ7DQ33w9+aNR7vEtjL8lWtknp/Ikx0S22zx
f+b9LP75R+aWSaknc+5/70pi+5nzBvDJMNbMPd6pDK163PHbxz91ZGJfKd78
npPZz513ELw7Y3+7q/DbCu7yeBNyZ2F5Hv2atzl1lPaRzOO7JLIfVxZ7PBiL
yxS/DXJM1Wm3pp+qnqvwXVd4X+W98vLSbzSwC3Jv2C7s1ezZoxO/jeJdLm+N
n2dOsl8m9t3irfR5id+U8Y76qsTvKrnDuDSxT+AVIR79Gv8xZHXW5ybCUZnv
W7HTIrsS1w2fkNLvuXhvy3ysF/r5xsTtxR8UGl1mfKgDNgreWt+VWAfB35L3
Atxj8k7josw+zhcH/WbLMFc3z7zX1M1cLm+m3yv9FgY5g/d3vI1iz+QOd5Ow
t9CGQanlLHyudhX/eZF96f9LbaPegG6h8HXFex93TH+IPk94ucK3FduxoXmk
16XqN8KcUzVzp8XfYH3qPDn34GuY2d7CGC8rbI88TmmXFJbxB1ddH3ztH8Om
mPhOH396/O1PiexnX8n8zjHOnHb32DrditT1xK5eZNbPkMOPznyO9M+sazcJ
+hRnIPcItWL7HiAzrAzzEJkG/wruKT5FjgpnE23qrHo2yGyv4wzdOXEf8lYB
GvsA7yWw13HfMbJw2/HZYE7/ltpPA7mKunG3jj3339SyBP1/rdLkjK3KaplY
xuMNA/E/VHxfQz5fVHw2jyutfx9RNd0yyBVpYl99/PZHZPYl4N0a76k5EzfL
bW+kbwZV/a4N+faJwvc4K5X/cNGvpLZhYlM+t/Tc4Ix+M/U5jO7DvTz2+i8K
37OsqNhW/m5q2yA2pn6kqfjOBR2K8wv7NfcFH4WzDB0Uuyp6Kf4k2HUHsreX
bi/nZr/Ad4DwaIXHOMOr5uEeY7eq47lnGcG+VPq+qEPV9cdOv6foF1Kft9je
seti4+FvBTA/sZ1ir6gX9hbeRCxMPR+wh7cr7ReEz0zfzG/njsp8T/R+kC3H
ZNbLeUNXM/F7C97UYyNdEfr22My+JdwZYCfHTvVI4XeyyDNPcXaFOtQLNmr+
pgFtxja+Msjq/TLrStSBuvHm/onSaYdGfvdOP6wKfbJPZn8SbDr4upwS5kPt
cB5xFzwytb0KPWi/xHrZvuHMahH2H+6X2YsmB9mY+2jk1NGpfVPRhfCvYL1N
K6wLja/YHxJfVvQC/BXxRx0fdISRpfWerar2o5sQ9AXikfmxWX2Wei5x18X7
mpPZH4JeiR2eu5W9M+8P2LC+im2vwwdoRGmZGX3wysJ7Sdeq7SRtQv+fmdpW
c07Qobgb4j7ovNR+m+i0yFTYJLZV2iTzOZVmtjOMD3of/mPYBvFbQl/m3gf9
rVHis56/S4AfC/XH1wU7M2sBuzcyC7oV+9G2me3n2JOpM/etYwr7g6F7XVhY
/2I/wx9gSGrfS/xu6Qf0Gmx236Tm5x62XWZ9FHsd/cnezp3uQ6n/9gh2c/Yf
9D7ecdUKeyb7bO0gk9zPWZ34HRV/k+HT2PbJVaGfeYNSv2pZdHXYD/Ex5m6L
e8Ms8x00/UafjIj8Nx1+SG3b5d4Xmn2P+w58eEaFscbW1yLUYePM9yTIruSJ
TMEeiuyEbwOyGvov93q8U/o/lEedVg==
          "]], Polygon3DBox[CompressedData["
1:eJwtnAn8FtMXxmfembkzLxUhW5QlIkTKUllKCaVFkX0phWzt9kpE2ZfIvkay
y75vEcq+U0JSsiThb43/8/Xcz6fTe87cmTszd+5yznOe+9tw4NC+J9aSJPk1
TxL9S5rov13TJNlFsob0S8skWVkn/CR7tPR3Q5J0ld5K8qL0mTrWReWHSmZL
XyA5XPruktelj5H8rnNXkz1JeqMiSRrUXGdD6Wfr2AqVryX7culb6dim0jeR
tJK+gaSJ9DUkzaXP0j130PmVnm1FlSR1/TaTvX48dovqWFvnbq1z96knyUmy
l6e+56nSL5aU0kuV76Hyq2U3lv2bzjlLeqXjS6X/kPqcNSSrqLyRZHXqlGwt
vbWkl/R1C78bdawj/V893whde4BkifQLVGeuslRlu+t+p8n+NXWdZ0rfV8c3
kr6hpJ/0mbqmncprepe/9H5XlL73Lzp2hvR3JL1lD9C5R6i+R3T+ZirbTfK8
9L8kQ6XvJ1kgfRfVM1H6JMmu0lvoup11/S6STaXPV32HSN9N8rL0YTo2XPoI
yXDpn+rYgdJ3lTwb2y9I30Byh/TnJJ2kHyR5UfpESSJ9Xck10q8r/e3+1P3P
l76S6txYdgv6QOH2yaSvL7lZ+pF65vdUxWGZ+o/e/yvZ/XXtMMkiynTNDiq/
k/pV/oB+O8juKJkh/cPC9v3Sr1P5G/QF2a0lr0tfrPI9o36byt8sXP6m7Nvj
+ZTvFY/9JTlH+rmSv6U/pfObSb9b+rU6/1vZPWS/K3ua7C9k7yb7ed5H9nv6
3VZ2m3jOqnqHUdKXSr9f5XfV/D47xjqf0/Ubxne5XuX/yD5U9h+yZ8heQzKZ
viypSf+ffk9S+cnxnKbBz/u79AdU/mPN9xstWSZ9jurbUvqr0qeqfCWdf3x8
t4dk19TuR8g+XJJK/5T+Iv0Rld+g8kdrtneRPCb9M5V3kv6U9JtU/qLsFrHs
RtlP11zeWfKM9Bdqbp8ukhejvbn0zWKbvcLcIb1bfMYl9EPpIyTfMg5U/37S
F0q/h+eXnMO9eXfpDSSTpN/KmJL+q87vr/MXyb5X9jLZfWXPl32X7CA5i7aW
NKG/6fdElQ+N9+ig9rlV+iTJxtJ/0vX9pH+hsrt1/mY6dqnsTdVWz8T2O1X2
aZJCei24PdEfqTx+e+naYyRfSf9Ivz1V3kvysfS/Vf/B8VtN1/nT9Lue7KaS
56Q3C36WXPU9XLm9+J5bSGbRfoXbk7a9hfcp3J6U3Sp7he55mvQrmANl/67y
A2Lb3ic7k4xjbElWkf6JfvuovLfkZ+rU+cP0O5T+LX0tnTNF+hmSuvTP9Htc
4j5FG/9Q+PpPpd+p8tMKrxXMOadKX67fY1U+RLJJ5v5Mfz+ENUl6e73vzdK7
qmyWrj9X1xyp4wMZl9Ib6dhF0kdKftW77azzrtP519NHpe8quVH6DZIDpbdV
fdcw3qS/qGs/Zg7mm0t+Kv29b6H/qfwVlZ+p3zeYCyRnZx7PjPe9Je/TNjr/
4Vj2ic7vot8nZD8Zn3n74Pt3kv6yyk+QPU/2WbI/lr277Dtl95f9Ev2j8HxB
3XfIPoTjsl9mTEo/QPI440tygfRuuv7uWPaGzt9Z9lTZ3WW/KntA5vn0fclA
6e0lZ0ofF9tgP9pB+sz4DL0lzzEWJX3i+bTXtZIO0vsHl/eS/prqPyD4+n1l
z5G9l36fZqzHZ+is8mmxrtkq30i/43l/SYvM7Uv7PcQzMfcEtzf6R/H77Ke2
OEHtMkjr3am0M/2JMSb9RB3fSeUd4zmjuI/K5jAnSu+p+mZE/QPV1zf429AW
b8n+unRf2lPyvvRjg+s/SeXvq7ytfsfIPkOybeb6qe8ByUj6iK7ppmuPkLwr
/Q1JD+mDJfOkjyq8NrKGjpR+Tubv/5nkXOlH6X4fSj9W+tu63we6Zh/GkORb
6X9KTpZ+mSShr2fuC/SJC6UP0/Xzo/6pyg8KLr9Y9tx4PuWfx2PHSO6Tfq/k
aOmTaAfpb0vOj+WvMPdKjuP7FH43fLpx0hurzktZc5ir9GwnZH7+jyQnMn55
Z5VdLPlDevfg+1HXO7p2/eC1lDG9gfQNJecl7rMtpbfMvJadFOfU9qrjfq39
r0n2KL0eMF/tL/lG+geF107m9I+lH8I30LkfyNfZUf3lPf3Olf2p5G3p9+PP
JZ4jn5S+pPBaf6Tk38LzP+vLvpIF+Ai65gNd+6HkdunnSCZLvxx/Ufruut8z
0qdKtpA+ScfOlX6OZKL0rwuvZawBvxVej5nfD0rsA7D+40+sn9ineUXXfKxr
P5K8JH2p5H3p7+GT5l5PW9I2iddc5td9EvsQ7xf2t//QuQt17k56/+/0+6Xs
LyTfSJ9a/Oee/bem3Fp4fmfuPTbO0cw3zCd3SQ6WPk3n6F/SXHKHlIfwdxOv
OS+wduh+s/k+qrud7ndn8V83TTaij0m/R7Iyc7vkQemPS9ZOPMe9JX1NXX+W
rj9d1zfneQvPrUdJgvrDliq/TeXPSraW3jS3r9tZsq70vXTseenTJNtK35Bv
kjpG2SB3vLC99D6S+azlOnaz9Jskt+T2t9tK70mbS99Gddwh/QXJ9qXH9x5q
l+56rgP1fD1lz1TZnZIdpbdnvVX5ZpLtpU/OPHYYQ5dnjo+6qmwX/BZdf4Lu
eZGuvVByrPRnJT9KX4b/ntsfaKdr20o+ZI0kBlPZJZKTpM8r7HsxBhYV9m8Y
C/hkX/JtdL9xOneozm1at79CX8Ynniu9i8qfiO++uco/Kew70+c/py+pfJbK
7yFeoC8V7qudGG+F13fGGn1uXs3r99nSJ0h+kd5W19xF35XsTDxY2NdjTf8R
XwT/U+dtgR8o/XM9x3yd+5lknvT7crc93/ReAlJ9k8P0s0LnP6iOtYnsi+m/
atunKvvn+Br4HPi8W6h8Mv2TdUzl62Ze61jz1pe+VebyKyStpTcM9vUq6Y/F
9ekY5kbJhtLLzP7WefGc5pl96VHxGTYixpO+Kuuyrm+UeS4ZKGkY/Q/WatZs
fIDVM/uyw+M1PA++4qnxmXPVN0B6Xfqjlf0Z1krWzJ2ktwv2b9BnqnwX2bcn
fobNpe8mmZ64jbYJfl70S5hvpTcJvh/v/nzl+Rb/9TLJZtJbqPzCxGt2a+lV
8Fik7Z7W+asHz8+c+2zl9qH98Jnz6O/clDgGWU/61pIpidfOF2K8RnyzQeIY
jfWV8qsk7eL9L5K+tvQndX6r4GdjTtox2L9grcAn3zOzv8Vawj13y9y/H1ff
eVdyGHhC8LdmDerE2q8+9UrqPv6E9Om55xbm8Dty+z+8O22Kj/MI+EPiGPHV
wu2PL4TP0is4HiLe2ThxjLST7vmg6npd0lt6m+B3w2fYQ3oR3D8a4ydW9r/w
//hm+FBDVP6x9BH4bbE/4XuMidfQf/jWfKM1Mvdvvs9gyTrRP3xH+ruSg6Tv
qfrukX6k9DdVXyc90yN6trck+5f2D/GH8FmJufGvnk/s4+ED7a3r75c+VPq7
0T/pq/c8Wm0xsO71H18Pnw8f5nidP1f6WPwCnf9w7rmAOfOh3PHMdirfXnJH
zfPll9IXMCYZ07p+K9Z61hTpi3TNd9K/B0+RPry0/bX0nXX/saWxBda2XWQf
J/sr2T/L7lz39fSFd+I1R5S2qWtXlY+X/bfsn2R3kr089/UL4jHWl+ek3y19
y7rxsJVqxi72rBsvAk+qJM/kXm95nr945tz1Uf+K+Ex54XfhHbLC6wFrF2vO
iawNqr+ouayb6j9H9r8q+411T/a+pfvvU7LbyD609Lf8THbHuv0FsCswrKnS
X8ztO73KmhbXG3wZfJpluedfsC8wui+k/yNZQnvyzNLPU/21mvWudeM3vH9d
son033M/H07FH7ntRbR1fGbq43ownn+ln1i6nHO71N0evC+YUiF9vdLrI22x
nsqP0e9Vsq+WHCd9VZWPjfq6Kr9RvzfKvgGhjVT+WNQ3i+XYzAk3ST9TMkH6
2ZJx+Cyl1zp8uQ3AA/X7cOoxco30TcGwot5S5XuWni/ulL2F7F1Kn38V59bt
Lz7N95E8F+cXfLmP4zX4i09HX7JVvB/1XxvraKDy06UfLn1NlR+i3ytkXxmP
Dcjta+ITDczdPrTHGMnR0kflros6T87tP+CrsCafJn0N1T8+ljVT/W1Kl+Nb
rF/39ZSfKRkpfavS/RNfZZ26/VOwYDDVV6UfkBtbBGM8P7f/i2+Fj7Uz1+j6
8+Ozrq3rW5V+/sNkN4nvx/ueJjlYekm8I30f6avT33P72vjc+0lfSeWnRn2N
uv05/Jknmc9if2fsMoZfzj3f4/t+GcfM7Zpjvld3/Y45jrmXNV5lFW0k/SbJ
Ynwdyc3MvcH2jdI/r1wOFvBGPDZVskT6t5LbpF+k839jPmReAw/T7x/4JpIX
pE9XeVPGh/SfVX6l7H9V9pnsn2R/qt+1Vb5O6mOfS1qmxni/wDcnZpL+EvfV
+afIXqjrr5b9mexF+q2pPI33uCZzLDw7njMu+P2nSV8AngKmJfsB2V/Lvl+/
K+nalVMfewIfnO9NbMfzye4ueyu1ZaX2/5k1SfZq8ZwbVN5Q+sPSF4GtyV6a
uG2/kn1dcP33yV4o+zzZv6j8Udqd9pW9Kt9T9jeyn8psN07dps9KgvSC+Zn1
OfP9GqWug/elPb6WXIsPFZyr+Eb6L6pvaeZcATmDZdKvDm6vJdJ/5f1yz6dv
Sj6hb5aeH/FNO8R4EiweDP996W/mnuuY096RflDptR99B50/uHT8ybnt666f
uXVJnLP7l56f6attVb53af/3fsYe81/p/ouvsk2MP16UPUN267rXV3xnfOhH
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
          "]], Polygon3DBox[CompressedData["
1:eJwt13ncjlUex/FbeJ67kKWylKWFRLaSFlpoQWjBUKiIbJHleYYUSUOkGlSW
bNFMxYQWGpFq6qVMQoxXlkYjiVFSZiqalJr373WdPz6v+/5+7+/vnHNd17nO
OfdZvYd2GnJCLpfbhdK4tSCXe9fn2JK53ENom8/lruQ9x+tA34AWvKGFudyX
JXK5T0rlcttxP6+j3Gq5q2Va4RK6n9y/5FbILEcX+k7s4C2iX0Brug/+yVtG
L8WNyfuEt5HejFH6mK3NQt5i7S/CuIKs31X67U7fjivlVqu9xIX1dVH98BG9
1mcdudX8N1BX7mq1i3id1HXG5VErV523SGYxavN6yP2d11/mLrTkdeOt5U2k
J6M3/abaWrxl6l5CHbkX9V3H93J+K4sn6GH4ynX8Viq78RPojnif9zpvFYrz
2b3aznuHXosRvC76eUvZEH0Ox7W8ztE3ry3dBlfRd6vdq/ZddW/i93Ln8Z7h
LaAXohV9h+yHaovVDcM1cj/wi4252NiKsIteg+a8QfRgbKd7qt2gdo66uSgu
yMayhtePHhhzQXvVeON4zWP+4EJ6sPr9xrLJOD7EvXL9ebt5e+gv8ADvHX2d
rXaFvl/DubwBcp/J7ZM5gLH57Ho/5x2iD8f9K8ye0Xtqe+jzFlwh9zS/gnaq
aLcq/sAr4h1SW5ouwOMxT9V+pHahumcxOs3nT+V2an8XRqtdzD+ddwJdEm/T
z+DkuA51X0TfcrvV9tDvvdofFfMgn9379fqYKTMLQ+i/oIbab+iD6Ca3hteI
d5Q+gu68P/NOTd6PeJl+HlV42+itMafl3tDvpfrtr88B2EJvQgdeD7o7psm9
kGp/UXccr8d7JddM7k6Z3lhP/xUXptrb8C59P46m+7IDA0NjRLrekdhD/ymN
eb321+HmfDavWsh1lrkZU3nz5MrKLZd5FY/TvbDRvZpHz8cIeg5OlFtKL8HD
Bdm7H9fbRlvXxrOMZ8Srmby2WEkX8MfzptNPYSY9Xf3xXHb/tmMhPQs5fXxO
78VzdAP1z/P6uda+OCPmI/9GXjP6YnxHV8VY5RfHeogG9I8YkHIXoXc+m2ub
5SbJTMD1vIa8GbwmdGM05/XlbUvvVl/8jj6A7tqrqq0q+DjWtDQnY8y70VVt
Zd7o1N4FOJfulN7V1vR1sf7R1VzLY2qv09a1KFGYrTlvpz2gfaw59E8YJNdC
pjn66KO67BRee7odTqRvSXtKrLEdo54+mz9Tro9ML/RTW5P3BK8jfTMq0t1l
16nto65XrGtpLQ5vGv0E+qf3rbzaVTFv8RRdH0/K1afr4TK1f9NmK8/8Qs/7
Aiyjq6RndJpMJTSTey3N8cYyDTCR9zzvDF4L+nIsp09RO0rtcf6xyMt95bd2
vC30ZtTn9ZTdEs/Dde3FPYXZmviQ3Fn6rIlL89m+cDDldmMMb4v2mqT2/oF9
9CY05H1Ib8Bu+iTt3cPbQ3+G73nleMN4/6b342feS/qon9a/yphPl5crljvE
/xol6SX8ur5XlKkQ7wf9eloP4h5cisnGt99nmzSW9ajH+5p3A287vQ3n805N
9yqex/moFescJvFy9G9yZenT0jw9kVcQe4XaY/od5fcHtDsGB+iS/HG8KfQf
MSP65fdL3lT8j97m87K0Jy/F23GvZCf6Psf32ZhFf+rzqnQ+WIWN9GH1A9Ma
MQO/0d9hcKqdi9JqzzLmR9WWNd4yqBjriNxoufGxx+Bbejx+9XyPeLY/YFza
e76J9Z4+iAd56+Xra+899e9jB7031rPkrcV5cpPUlojnqu4YHkpnswMlMu+X
aC/OUTFn0x66PNosne2/+9JYjsb5ih6e5l8Jv58Q854uci170vs2Fe30cRNv
OW80PQa3FWRngY3JG4XWcien+Rf3pTwuSuvQGF45+iQ0TXPjvlhm6V+Nrwnv
J/13S3PyGzTgVZIbwTtT7hycTn8be4Mx13EN56BnPttDq/MK6EK8F/tEnInU
/qCtH9EotTeSd4T+Lxrmsz20stpj2v8Zr6X1tBovF+thnKfoZ1Epzlcyb+HG
fOZVjDMIfRgvxrzAkVy2Nq2OM7TcBt4VcpW0dQpu423mtUzreDXcziuT3ul4
P0rGus37gNdcrqxMOfTgbeVdw6tJ18Id+WxvzPM+ULch1t589p4Xae5Uugou
5r3qGTd07e3incWUdGatHWctuh4eTmMZonYv/3McjTkZ58f0Xo7Fk/nsPg+S
+5S/C9/yS/DH+v6o749gepobw+W+5B/Acf7+OHeld2ZC7MtyXdPeUxR7fuxT
vFfkGsi1lrk+3n/e0rRexdreLPrhreA1ibN+nCGjTV6FtNZV1dYZsS/zXk5r
4pUyrfBYqm3M60R3wZtp/buI15PuhXWF2Xpaj9ecvgKP5rMzUlNe01i7MYm3
zmdd/b4VaxC2xvoRe4jvNXyvifHpP05BnPmNbS1uivec910uOw+tQAfegrTn
7aMP4NZ0fv4s/YdYGXODHonv0/+oDbiLHpTe/fX0OoxUW5c3jzeXnocWdEus
TN4cFMn1Tv/LltAvon3cYyzmFdHDcSZ9bmpvdKwtGKx2SFqbttFbcV+cadKZ
+lX6FXSmd7q2trx6dH3sp7/ALemdqYhN9O3p/DzU9Q/G1do7GH56F2rEOZ0e
j8O57Jy4LM4gct/z+so1lmmEO3m19T2bNzTGG+dY3n/keqexnBfnldgreO1T
bRMcoi9Xu4I3g54e90GuTmovvJloVpj9B1vAm0RPwNB07+fzHow9P84HvBrp
LBX3dAQGpfbm8IrpYbibNz+dlXe6rl3oks7PZXgf0zvinMg7PZ3r4sw6EAPS
e9Qwzb/qeI6em87UG9VtRqfY3/jTeT3UdY05xKvKe4TXPdaqOAfzzuHN4vWP
DPqnfh/ntaFboxR9GV7hTaWnxLWk2pnJmxbPJJ0d3/Hc7jeOB+K/bbovU+Vu
kOmAMoXZWCbzWtEtY99TV4v3JK8z3SnW2cLMizPm2NgrMSRd21O8ifRk1KPL
8ie7LwvdkwV4mv4/2a0fNg==
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0u1K02Ecx+Ff0+VT+ZDPJrNSz8BAQT0EBQPFt74qqKankFA0rdTyWcs5
FaNIREspwlMoUOgYCsroBLr+CPt4fUG33ffczbHs0MNLEZHXfeOx+oojNjjC
zzxVwf7NryxNRdxSWTqil+0c5riydo5bKiS/K43YZD55jr3BG3zD12qz15nh
GlfVaq+whctcUrO9yAU12vNs4Cu+VJ09x1rOckY19gtW8zmfqdKe5pQm9NR5
R9inYbudnSzjH/c9d98znvAL88rZTzjKB7yjDruHbfpbFJFOnsNfPtfvmrKP
OMp1TqrTvsd/3muQt3ViX2fyPzGj4Cz+LLx8bNsesePHZZZo13aleJucmeV6
Z1fwPa/wqj7YlazSnl3Nfdbwmg7sWh6yjvX6aDfwiI1s0rHdzBZ16YdDDvCu
Ohz0Efu5xk/K2d+4xZ/JPZLP1M6w3KW6OaTt1MX37z9slkTn
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1443, 1442, 1465, 2084, 2201, 1491, 1492, 1517, 2217, 1518, 
       1545, 2094, 2224, 1563, 1564, 1590, 2245, 1591, 1617, 2110, 2252, 1635,
        1636, 1663, 2274, 1664, 1689, 2127, 2281, 1707, 1708, 1736, 2139, 
       2303, 1761, 1762, 1787, 2317, 1788, 1816, 2149, 2325, 1834, 1835, 1861,
        2346, 1862, 1889, 2165, 2354, 1908, 1909, 1936, 2376, 1937, 1962, 
       2181, 2383, 1981, 1982, 2010, 2405, 2011, 2036, 2037, 2062}], 
      Line3DBox[{1445, 1444, 1467, 2202, 1470, 1493, 1496, 1520, 2218, 1523, 
       1546, 2227, 1548, 1565, 1568, 1593, 2246, 1596, 1618, 2255, 1620, 1637,
        1640, 1666, 2275, 1669, 1690, 2129, 2283, 1709, 1712, 1738, 2304, 
       1741, 1763, 1766, 1790, 2318, 1793, 1817, 2328, 1819, 1836, 1839, 1864,
        2347, 1867, 1890, 2357, 1892, 1910, 1913, 1939, 2377, 1942, 1963, 
       2386, 1965, 1983, 1986, 2013, 2406, 2016, 2038, 2041, 2064}], 
      Line3DBox[{1446, 1447, 1468, 2085, 2203, 1494, 1499, 1521, 2219, 1526, 
       1547, 2097, 2228, 1566, 1571, 1594, 2247, 1599, 1619, 2113, 2256, 1638,
        1643, 1667, 2123, 2276, 1691, 2130, 2284, 1710, 1715, 1739, 2140, 
       2305, 1764, 1769, 1791, 2319, 1796, 1818, 2152, 2329, 1837, 1842, 1865,
        2348, 1870, 1891, 2168, 2358, 1911, 1916, 1940, 1298, 1964, 2184, 
       2387, 1984, 1989, 2014, 2193, 2407, 2039, 2044, 2065}], 
      Line3DBox[{1448, 1450, 1471, 2204, 1477, 1497, 1503, 1524, 2220, 1531, 
       1549, 2231, 1553, 1569, 1575, 1597, 2248, 1604, 1621, 2116, 2259, 1641,
        1647, 1670, 2277, 1676, 1692, 2132, 2286, 1713, 1720, 1742, 2306, 
       1748, 1767, 1773, 1794, 2320, 1801, 1820, 2332, 1824, 1840, 1846, 1868,
        2349, 1875, 1893, 2361, 1897, 1914, 1920, 1943, 2378, 1949, 1966, 
       2186, 2389, 1987, 1994, 2017, 2408, 2023, 2042, 2048, 2067}], 
      Line3DBox[{1449, 1453, 1472, 2086, 2205, 1498, 1505, 1525, 2221, 1533, 
       1550, 2100, 2232, 1570, 1577, 1598, 2107, 2249, 1622, 2117, 2260, 1642,
        1649, 1671, 2124, 2278, 1693, 2133, 2288, 1714, 1722, 1743, 2141, 
       2307, 1768, 1775, 1795, 2321, 1803, 1821, 2155, 2333, 1841, 1848, 1869,
        2350, 1877, 1894, 2171, 2362, 1915, 1922, 1944, 2178, 2379, 1967, 
       2187, 2391, 1988, 1996, 2018, 2194, 2409, 2043, 2050, 2068}], 
      Line3DBox[{1451, 1456, 1474, 2206, 1484, 1500, 1510, 1528, 2222, 1539, 
       1551, 2102, 2234, 1572, 1582, 1601, 2250, 1611, 1623, 2119, 2262, 1644,
        1655, 1673, 2279, 1683, 1694, 2135, 2290, 1717, 1728, 1745, 2308, 
       1755, 1770, 1780, 1798, 2322, 1809, 1822, 1149, 1843, 1853, 1872, 2351,
        1883, 1895, 2173, 2364, 1917, 1928, 1946, 2380, 1956, 1968, 2189, 
       2393, 1991, 2002, 2020, 2410, 2030, 2045, 2055, 2070}], 
      Line3DBox[{1452, 1458, 1475, 2087, 2207, 1501, 1512, 1529, 2092, 2223, 
       1552, 2103, 2235, 1573, 1584, 1602, 2108, 2251, 1624, 2120, 2264, 1645,
        1657, 1674, 2125, 2280, 1695, 2136, 2292, 1718, 1730, 1746, 2142, 
       2309, 1771, 1782, 1799, 2323, 1811, 1823, 2158, 2336, 1844, 1855, 1873,
        2163, 2352, 1896, 2174, 2366, 1918, 1930, 1947, 2179, 2381, 1969, 
       2190, 2395, 1992, 2004, 2021, 2195, 2411, 2046, 2057, 2071}], 
      Line3DBox[{1454, 1462, 1478, 1490, 2208, 1504, 1516, 1532, 2216, 2093, 
       1554, 1562, 2237, 1576, 1589, 1605, 2244, 2109, 1625, 1634, 2266, 1648,
        1662, 1677, 2273, 2126, 1697, 1706, 2294, 1721, 1735, 1749, 2302, 
       2143, 1774, 1786, 1802, 2324, 2148, 1825, 1833, 2338, 1847, 1860, 1876,
        2353, 2164, 1898, 1907, 2368, 1921, 1935, 1950, 2382, 2180, 1971, 
       1980, 2397, 1995, 2009, 2024, 2412, 2196, 2049, 2061, 2073}], 
      Line3DBox[{1455, 1466, 1479, 2209, 2088, 1506, 1519, 1534, 2225, 2095, 
       1555, 2238, 2105, 1578, 1592, 1606, 2253, 2111, 1626, 2267, 2122, 1650,
        1665, 1678, 2282, 2128, 1698, 2295, 2138, 1723, 1737, 1750, 2310, 
       2144, 1776, 1789, 1804, 2326, 2150, 1826, 2339, 2160, 1849, 1863, 1878,
        2355, 2166, 1899, 2369, 2176, 1923, 1938, 1951, 2384, 2182, 1972, 
       2398, 2192, 1997, 2012, 2025, 2413, 2197, 2051, 2063, 2074}], 
      Line3DBox[{1457, 1469, 1481, 1495, 2210, 1507, 1522, 1536, 2226, 2096, 
       1556, 1567, 2239, 1579, 1595, 1608, 2254, 2112, 1627, 1639, 2268, 1652,
        1668, 1680, 970, 1699, 1711, 2296, 1725, 1740, 1752, 1765, 2311, 1777,
        1792, 1806, 2327, 2151, 1827, 1838, 2340, 1850, 1866, 1880, 2356, 
       2167, 1900, 1912, 2370, 1925, 1941, 1953, 2385, 2183, 1973, 1985, 2399,
        1999, 2015, 2027, 2040, 2414, 2052, 2066, 2076}], 
      Line3DBox[{1459, 1473, 1483, 2211, 2089, 1509, 1527, 1538, 2229, 2098, 
       1557, 2240, 2106, 1581, 1600, 1610, 2257, 2114, 1629, 917, 1654, 1672, 
       1682, 2285, 2131, 1701, 1716, 2297, 1727, 1744, 1754, 2312, 2145, 1779,
        1797, 1808, 2330, 2153, 1828, 2341, 2161, 1852, 1871, 1882, 2359, 
       2169, 1902, 2371, 2177, 1927, 1945, 1955, 2388, 2185, 1975, 1990, 2400,
        2001, 2019, 2029, 2415, 2198, 2054, 2069, 2078}], 
      Line3DBox[{1460, 1476, 1485, 1502, 2212, 1511, 1530, 1540, 2230, 2099, 
       1558, 1574, 2241, 1583, 1603, 1612, 2258, 2115, 1630, 1646, 2269, 1656,
        1675, 1684, 1696, 2287, 1702, 1719, 2298, 1729, 1747, 1756, 1772, 
       2313, 1781, 1800, 1810, 2331, 2154, 1829, 1845, 2342, 1854, 1874, 1884,
        2360, 2170, 1903, 1919, 2372, 1929, 1948, 1957, 1970, 2390, 1976, 
       1993, 2401, 2003, 2022, 2031, 2047, 2416, 2056, 2072, 2079}], 
      Line3DBox[{1461, 1480, 1486, 2213, 2090, 1513, 1535, 1541, 2233, 2101, 
       1559, 821, 1585, 1607, 1613, 2261, 2118, 1631, 1651, 2270, 1658, 1679, 
       1685, 2289, 2134, 1703, 1724, 2299, 1731, 1751, 1757, 2314, 2146, 1783,
        1805, 1812, 2334, 2156, 1830, 2343, 2162, 1856, 1879, 1885, 2363, 
       2172, 1904, 1924, 2373, 1931, 1952, 1958, 2392, 2188, 1977, 1998, 2402,
        2005, 2026, 2032, 2417, 2199, 2058, 2075, 2080}], 
      Line3DBox[{1463, 1482, 1488, 1508, 2214, 1514, 1537, 1543, 790, 1560, 
       1580, 2242, 1587, 1609, 1615, 1628, 2263, 1632, 1653, 2271, 1660, 1681,
        1687, 1700, 2291, 1704, 1726, 2300, 1733, 1753, 1759, 1778, 2315, 
       1784, 1807, 1814, 2335, 2157, 1831, 1851, 2344, 1858, 1881, 1887, 1901,
        2365, 1905, 1926, 2374, 1933, 1954, 1960, 1974, 2394, 1978, 2000, 
       2403, 2007, 2028, 2034, 2053, 2418, 2059, 2077, 2082}], 
      Line3DBox[{1464, 1487, 1489, 2215, 2091, 1515, 1542, 1544, 2236, 2104, 
       1561, 1586, 2243, 1588, 1614, 1616, 2265, 2121, 1633, 1659, 2272, 1661,
        1686, 1688, 2293, 2137, 1705, 1732, 2301, 1734, 1758, 1760, 2316, 
       2147, 1785, 1813, 1815, 2337, 2159, 1832, 1857, 2345, 1859, 1886, 1888,
        2367, 2175, 1906, 1932, 2375, 1934, 1959, 1961, 2396, 2191, 1979, 
       2006, 2404, 2008, 2033, 2035, 2419, 2200, 2060, 2081, 2083}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{677, 1084, 1083, 1082, 2316, 1081, 1080, 1079, 2315, 1078, 
       1077, 1076, 2314, 1075, 1074, 1073, 2313, 1072, 1071, 1070, 2312, 1069,
        1068, 1067, 2311, 1066, 1065, 1064, 2310, 1063, 1062, 1061, 1059, 
       2302, 1058, 1057, 1056, 2309, 1055, 1054, 1053, 2308, 1052, 1051, 1050,
        2307, 1049, 1048, 1047, 2306, 1046, 1045, 1044, 2305, 1043, 1042, 
       1041, 2304, 1040, 1039, 1038, 2303, 1037, 1036, 1035, 1060}], 
      Line3DBox[{703, 678, 679, 680, 2201, 681, 682, 683, 2202, 684, 685, 686,
        2203, 687, 688, 689, 2204, 690, 691, 692, 2205, 693, 694, 695, 2206, 
       696, 697, 698, 2207, 699, 700, 701, 702, 2208, 704, 705, 706, 2209, 
       707, 708, 709, 2210, 710, 711, 712, 2211, 713, 714, 715, 2212, 716, 
       717, 718, 2213, 719, 720, 721, 2214, 722, 723, 724, 2215, 725, 726, 
       727, 728}], 
      Line3DBox[{755, 729, 730, 2217, 731, 732, 733, 734, 2218, 735, 736, 
       2219, 737, 738, 739, 740, 2220, 741, 742, 2221, 743, 744, 745, 746, 
       2222, 747, 748, 749, 2223, 750, 751, 752, 2216, 753, 757, 758, 761, 
       2225, 762, 765, 2226, 766, 769, 770, 773, 2229, 774, 777, 2230, 778, 
       781, 782, 785, 2233, 786, 789, 790, 793, 794, 797, 2236, 798, 801, 802,
        804}], Line3DBox[{805, 754, 756, 759, 2224, 760, 763, 764, 2227, 767, 
       768, 771, 2228, 772, 775, 776, 2231, 779, 780, 783, 2232, 784, 787, 
       788, 791, 2234, 792, 795, 2235, 796, 799, 800, 803, 2237, 806, 807, 
       808, 2238, 809, 810, 811, 2239, 812, 813, 814, 2240, 815, 816, 817, 
       2241, 818, 819, 820, 821, 822, 823, 2242, 824, 825, 826, 827, 2243, 
       828, 829, 830}], 
      Line3DBox[{857, 831, 832, 2245, 833, 834, 835, 836, 2246, 837, 838, 
       2247, 839, 840, 841, 842, 2248, 843, 844, 845, 2249, 846, 847, 848, 
       2250, 849, 850, 851, 2251, 852, 853, 854, 2244, 855, 859, 860, 863, 
       2253, 864, 867, 2254, 868, 871, 872, 875, 2257, 876, 879, 2258, 880, 
       883, 884, 887, 2261, 888, 891, 892, 2263, 895, 896, 899, 2265, 900, 
       903, 904, 906}], 
      Line3DBox[{907, 856, 858, 861, 2252, 862, 865, 866, 2255, 869, 870, 873,
        2256, 874, 877, 878, 881, 2259, 882, 885, 2260, 886, 889, 890, 893, 
       2262, 894, 897, 2264, 898, 901, 902, 905, 2266, 908, 909, 910, 2267, 
       911, 912, 913, 2268, 914, 915, 916, 917, 918, 919, 2269, 920, 921, 922,
        923, 2270, 924, 925, 2271, 926, 927, 928, 929, 2272, 930, 931, 932}], 
      Line3DBox[{959, 933, 934, 2274, 935, 936, 937, 938, 2275, 939, 940, 941,
        2276, 942, 943, 944, 2277, 945, 946, 947, 2278, 948, 949, 950, 2279, 
       951, 952, 953, 2280, 954, 955, 956, 2273, 957, 961, 962, 965, 2282, 
       966, 969, 970, 973, 974, 977, 2285, 978, 981, 982, 2287, 985, 986, 989,
        2289, 990, 993, 994, 2291, 997, 998, 1001, 2293, 1002, 1005, 1006, 
       1008}], Line3DBox[{1009, 958, 960, 963, 2281, 964, 967, 968, 971, 2283,
        972, 975, 2284, 976, 979, 980, 983, 2286, 984, 987, 2288, 988, 991, 
       992, 995, 2290, 996, 999, 2292, 1000, 1003, 1004, 1007, 2294, 1010, 
       1011, 1012, 2295, 1013, 1014, 1015, 2296, 1016, 1017, 1018, 1019, 2297,
        1020, 1021, 2298, 1022, 1023, 1024, 1025, 2299, 1026, 1027, 2300, 
       1028, 1029, 1030, 1031, 2301, 1032, 1033, 1034}], 
      Line3DBox[{1085, 1160, 1159, 1156, 2337, 1155, 1152, 1151, 1148, 2335, 
       1147, 1144, 2334, 1143, 1140, 1139, 1136, 2331, 1135, 1132, 2330, 1131,
        1128, 1127, 1124, 2327, 1123, 1120, 2326, 1119, 1116, 1115, 1110, 
       2324, 1109, 1108, 1107, 1106, 2323, 1105, 1104, 2322, 1103, 1102, 1101,
        1100, 2321, 1099, 1098, 2320, 1097, 1096, 1095, 1094, 2319, 1093, 
       1092, 2318, 1091, 1090, 1089, 1088, 2317, 1087, 1086, 1113}], 
      Line3DBox[{1111, 1186, 1185, 2345, 1184, 1183, 1182, 1181, 2344, 1180, 
       1179, 1178, 2343, 1177, 1176, 1175, 2342, 1174, 1173, 1172, 2341, 1171,
        1170, 1169, 2340, 1168, 1167, 1166, 2339, 1165, 1164, 1163, 2338, 
       1161, 1158, 1157, 1154, 2336, 1153, 1150, 1149, 1146, 1145, 1142, 2333,
        1141, 1138, 1137, 2332, 1134, 1133, 1130, 2329, 1129, 1126, 1125, 
       2328, 1122, 1121, 1118, 2325, 1117, 1114, 1112, 1162}], 
      Line3DBox[{1187, 1262, 1261, 1258, 2367, 1257, 1254, 1253, 2365, 1250, 
       1249, 1246, 2363, 1245, 1242, 1241, 1238, 2360, 1237, 1234, 2359, 1233,
        1230, 1229, 1226, 2356, 1225, 1222, 2355, 1221, 1218, 1217, 1212, 
       2353, 1211, 1210, 1209, 2352, 1208, 1207, 1206, 2351, 1205, 1204, 1203,
        1202, 2350, 1201, 1200, 2349, 1199, 1198, 1197, 1196, 2348, 1195, 
       1194, 2347, 1193, 1192, 1191, 1190, 2346, 1189, 1188, 1215}], 
      Line3DBox[{1213, 1288, 1287, 2375, 1286, 1285, 1284, 1283, 2374, 1282, 
       1281, 2373, 1280, 1279, 1278, 1277, 2372, 1276, 1275, 1274, 2371, 1273,
        1272, 1271, 2370, 1270, 1269, 1268, 2369, 1267, 1266, 1265, 2368, 
       1263, 1260, 1259, 1256, 2366, 1255, 1252, 2364, 1251, 1248, 1247, 1244,
        2362, 1243, 1240, 1239, 2361, 1236, 1235, 1232, 2358, 1231, 1228, 
       1227, 2357, 1224, 1223, 1220, 2354, 1219, 1216, 1214, 1264}], 
      Line3DBox[{1289, 1364, 1363, 1360, 2396, 1359, 1356, 1355, 2394, 1352, 
       1351, 1348, 2392, 1347, 1344, 1343, 2390, 1340, 1339, 1336, 2388, 1335,
        1332, 1331, 1328, 2385, 1327, 1324, 2384, 1323, 1320, 1319, 1314, 
       2382, 1313, 1312, 1311, 2381, 1310, 1309, 1308, 2380, 1307, 1306, 1305,
        2379, 1304, 1303, 1302, 2378, 1301, 1300, 1299, 1298, 1297, 1296, 
       2377, 1295, 1294, 1293, 1292, 2376, 1291, 1290, 1317}], 
      Line3DBox[{1315, 1390, 1389, 2404, 1388, 1387, 1386, 1385, 2403, 1384, 
       1383, 2402, 1382, 1381, 1380, 1379, 2401, 1378, 1377, 2400, 1376, 1375,
        1374, 1373, 2399, 1372, 1371, 1370, 2398, 1369, 1368, 1367, 2397, 
       1365, 1362, 1361, 1358, 2395, 1357, 1354, 2393, 1353, 1350, 1349, 1346,
        2391, 1345, 1342, 2389, 1341, 1338, 1337, 1334, 2387, 1333, 1330, 
       1329, 2386, 1326, 1325, 1322, 2383, 1321, 1318, 1316, 1366}], 
      Line3DBox[{1391, 1441, 1440, 1439, 2419, 1438, 1437, 1436, 2418, 1435, 
       1434, 1433, 2417, 1432, 1431, 1430, 2416, 1429, 1428, 1427, 2415, 1426,
        1425, 1424, 2414, 1423, 1422, 1421, 2413, 1420, 1419, 1418, 1416, 
       2412, 1415, 1414, 1413, 2411, 1412, 1411, 1410, 2410, 1409, 1408, 1407,
        2409, 1406, 1405, 1404, 2408, 1403, 1402, 1401, 2407, 1400, 1399, 
       1398, 2406, 1397, 1396, 1395, 1394, 2405, 1393, 1392, 1417}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
5EDkjs45kqNoExR1Wa0SzUg58wx6KUIoNftoFR538RT1RlWcsyIh0fp5wBRa
/j2nJzlB53U+T/NXIssYzhE+FUUIPktn8ovUkSi9c8GvD8+rkSXfFa5QsNuu
0j26sAQ2l3cyUIWXo+asR+v5b4yhOtN0lKwz+n3id2iwZ/HEbs13NwaOGeFP
xEXvP1Yvw86nyu2yp8oQ3KQS2huxm2sMp1Rh/7P7KtWQiSHMpOzsJe5bJPpQ
LaIcJeoyj+0d0gf95Z+tZD2cCmXeqol9bzwrVeJNfXCm9Oki/mMiv3QIe4+F
VsMWAT1QyPR4U4/91Z9mxWHsJm73pRI/68K/Xtn3xC0aJ67pRZajxfeFbznq
dKCQcuhXHZmHPLZ+Bti30PvdueyvA8V6x9aJv9A9M96K3bz4toG9mza4dI/z
Es9N49Vux67/tbvCTlQbRr4MnyT+1MpCjD+qHCVo5Qmv3tQEJXNtpyfYKT+x
SQlg79ijlOJ9WBNWvXe4ER9+lvYiCvutXuO5/R4aUJD3p6qW9A83p+dd7Pqx
s7fjmDXAICr0CfH6Qp64aex77swfPhmtBoc5W+iIj1T/WiYeW7I2q39WDfZn
HmEkfo/3Q4jY3XJ0zyvdynpUBVoXsjxrsCc1FT0kHiLas8kTpwLrgtM+xFcO
iuqGYtdt2/xMoasM8tsefajGPj51WZH4r9rrDwPplYHy5cAkcYaM+qI27BSl
41KiC4rgWfvbkPhhqyNrLHg9t/RlcRHtUoTCVCc0ib1W/D9uU8FyNP2yEVmJ
KYJTTejMtcUlMKGeP9/2tggxONbslroaDBLcgZnoxxL4US4GDBYWoXKvW9GX
5a9CAbP31wXsJbevLZyuLkKsFLT1AZP+kG8ynrCEfX5B6GVDQxEqovWZdp/x
AwNGlePfsG/0VJTKPC9C6h+og0RMLsG1t0Y/iIsX3hy89rII0URYuoi+8wG9
WFuF//txvtP5vUWoeHJZrPGDF1CbieeS/M7bI782Xheh6Mb2/fY1npC2cM72
K/azLAxj+4aLUNjf9jURHg9oeKe+ZxH7Z+q47U/fF6GSuKrhAL+L8DB/M5W0
n9o9g5t+oggtdjtYz6+6wnarU5tz2Dm35bZzTeH2oJDz+4JcwMjF1/czdpEc
/bqhmSJ0T+hPY6unE1TYbmmewX5/fOZN0FwRqhs9ctTnrCNkhdVLT2Nn3MFW
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
//W0pyOeJ3/5vlpUtMHZqHjZsXRfpF4+9JXxKl5/qnPuyH56AfX2O/1nT11G
6dd2f6SMw/ui0ZbnN2+1gU5Mqbs0jQe6LXdxjCVkCRiMF36L27fBxbq7xc+n
nFBoS498augS0Ahk/uM72AHNRR4a41EqiMHIr7TVCu8PA590Mf9rAUOvU2rV
8l6odkaASuTBEuzeAtfD1drgo5fJxMJrW1RkIRnedQ3vZyYagsZE28Am79g9
/xNWKC3+UmDLdbyPonWn2OBuBcoQ5/WP4IJkOH0bLaOXYO4Mg+UPzjbovEif
zvbZFCUox3tH3cDrz7k/e+uY2mC0L8eavdwQ/ZVgP3T6Jp4nvWNVOY864OLa
RI2OtRzaU3VkW6sJ3h/eq/KuM3wO08EsNc1KDshBQrvla/YShErvqR7b1gbJ
W6TMr3rpoXiL2PgOnHOP/yGf3pVWGG2oz6uptkJsUVz5ExFLQHGiyjrrbyss
ud+9mt+njermcgKVb+H2dAnuW/jeCheHBZQSXM4hhXsca5XYRy+0qIaKdkIM
i+FoiaAUosozZg/Uxe9HbVYdmnOtwDvu1Uu9oIpk4yTWmW7j99xtw9watc/h
OfWo3JlmC7TV6eK20xlLYG3PkVX+sRWO9ypZ9FMro5mdRg1O+HjrjG6ng29a
4V+c59OEH4Zo362+9FnsZ69Me02NtMJO7bLTpYkK6LNmn1kV9v6FbX+fDbbC
p6QXB6ZC5dAlwwS7NewLHpYl0n2toONh19XxVAZNmaVdPRWG89F4xc8DLyB9
4bkn8yEDlMSusEcybQm8n+p/UU9pgcR/alEDn/3Qw4BF/+/5S8Ao1Owz3vEU
6n8d1ksa80HtNK+DpF/ifVHgpfoY5xb4Mmq5k/eCHrIaYeXofrwEu2Q5Oj9f
bYHhZA/f72Fe6Pl3lulvBfh5fcCf6oJrC6iVFNK9fu2GuFNuCpTi47OiBe80
33wB0747DhobaaHwq3URVElLoDcyzPZFog40xBePy951Qe+/pF9kG8bjLhi+
Um3WAltSGnN4Nh3Qss+NVcVCfD9uafIY12z5H1dvHo3l98X9N1CIBiRKSqRE
hUgDtnme53mehxIilCkqMs8yz7NMqYhjDEUoIgkZo0wZC3nO9azPWr/n9/33
td5r3/s+Z59znXPf194b4hkiLp9rNUXLK7efI8zf8g8VfPSqh+0/BslZKbbI
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

    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0.5, 3.}, {0.5, 3.}, {0., 0.0834732018976797}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6872016940162373`*^9, 3.687201713658778*^9}, 
   3.687201802658058*^9, 3.68720189786512*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
/+uHZtlN/WhL9y3A41Wk+i7984HZx2V0f8mNtxLhVL6YfVm2l3I8PQpD6L6e
WP8vnQ+ufhFBdH8prEfP7Ee9Skog3ZcF56WR6s/yj5/ZfzJueuj8umjMz+wn
KdQbLzedj/mZfSAe6eV2a7SuU/u3mf0eOnNGqpQ/w/up+ujrHlkxIbfAIIb6
HsW8hz3V1ijSmZ1I9yHAesLHeYSX78bvizHOIuaIq4UWeFPnngjmPWzh7Rpf
eUnqvSS3j9Y/u/nOIg2nGITrYP6LZxNFyZ8OZ7lH0X1GsZ9Wkhuzr0njuuV9
9HgzdfZrGhfhc6nMPoHtZ/J32Q+PpPtjYf8/XtFR2bcQ71fpo/2xVylSNuJQ
+ouZ96Q6elcypNuofSaJzHtPVfsrmg4zqL8LXsz7ygqJu9abDOLovln4urzA
e2e8CVyXeBCB/b/8MS3RdSSuC43xFrTkVPrqJ2eougc6g2g9keb27J53KQjX
T8f+D5s9b9eHTcl0f3rsf+IUbyULS2pdjhhE608z07/uPDUF4bqf2P+CmmeH
tnpS72298HV/IZezMc3ertR7n7mD6PHOLjDRlzJMpvvz/eMRorIRsaN9VdLp
fmDYh/qSnUVyaanU8xTWQ87Pzz47xt/F7/2Z9WSda7zCh0rpCNf/xfrHziT0
Ax2wHmYdb7B5jdSY4dl0nzB8XYvH4yJvqmbRfXew/9bdUt3Kfyl8LrNOpdDS
wRk6HNddYdbrfnDz3/fp4nUnZr1ORuWT7VqCWjcbwawj3eGMnlLji9c9mPW6
yMtnSngsXP+EWaeSr3tcs+w99ZzYwYxLf9JBZ90Z1LqlF7OON3at8/I1+7Po
/n/Y/82DhCO+WON1LcaHqeGssuJCat3JilnfUzv091dWPrWe7MWsI32eJfkl
1ATrZ9Yx6tzHuPhFcSk9zPpD3u/6z1ry1HOKFbOeYGqzZUdBDV5PYNYHHO+P
idKcxaX7MeDrCr8mfvh1lotwXWDsW9Cztbc1Z1L8Hcxz+hGD36oPanMRrqeD
x2U0Xr7X2y2Xvo/jnw3FlpOvVycDnIf+cudZL1FPATgfNSZ9sx3zCOICdN36
vZa2UupAnPThDitjunMswPvPqbXtEJzgpIH4LrTS4qW0wVGAk/64PTSMmlAI
43uRhuu4ha0j0gHOItyeBTxbpQfw/vWfkB2VpxMATn7ezcIeHXreBnDSz9Gv
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw1nAf81uP3xj/PZz9WUwmhtFQkI6SshoqSjJRKtIgke+9VZkpLoUhmQijZ
kZWMbCUys8peyf96/677/3p1d53n/px7r3POfe5vo+NG9zk5jqLolSyKEuFf
RRRdr4iaZRTtKfr5ShT1FJ6ljw/p++nCrvp2tvBd4bnCZxV/jrCd+O4W/87C
U/X7A8WfITxAfC+LHphH0Wn6PU/0KcKTFd4XPUbYUWnuU9pdhQPEdz7flO4i
4eviuTiU+5roY3KnfUr0KOHmSnOi0v6l+DaiZ4tuHfJ5RDyHCHfR72cU313Y
TflcQv2ErfT7ScV3KdyWj8R/QeJ6vhra26V0O94RPqq46Qq3KPRSvvOFvYUH
6PttovcXrqZ+yvMf4b7K90XRhwr3yP39ReVzr3jvUxiv0Flxtws7CQ8Sz6GU
LZ4jhfco/ghhJ8VPEt1GuHvu+C65+/YkfX9LeGPkfMlzb32bIGwl7Kbvs0Qf
KOyg312ES0rz3K/4boH3AYWJCvvm5n1JPPuJnqu4HrnTPiG6T27euYG/h3jv
EHYX7pm7XV1zt4W50Vd4YmL+44W/6vdA9cm3tEVlXKD4+qIb6NtForcU1lU4
VXQd4R7i2Uq4SJipH4cp7S/ir6e4YeIpRP+rcJzi14V8iK8X8rmW/IVbKFwX
Oa+GCsNDWcz5MzTnfxderrjLFGYo1NK3IcLNhLup7BrCBcLthGcoflvaq9/b
CJ8sTV+s+AZhjBiPFsIm+n686MaJ21tbuFDYUaGv6BeElyWeS8zzffX7RdH9
lfZwhWGKe0Nxa0WfrjYmquc1jLl4jhL+oPj+iv9a+LvCWaIL8byt798pfK9w
dOK5QXn7KK+BwqXC/on5+H1M4rEbILxSYaXosYnTvhDimf+PhTXwlcrqq7I+
F45IPCeGJq7zO6KHCTdVPY4Xzx+MT+L5cyx9z/4h+gTh/qXxzdJtH8yaF65R
mjFK+1/I/6Uwf/opPM48FVYUzhEdC6dGXu/TFO5XmvZK+7LweYVOot8WttK3
1gq1FR7SmDcSzhPuxlxQ2FXhZuX1StivtovMU7C2tEeqWtHdwgcUGot+NnM8
PM8In1Je+4t+Wvi9fh8g+tPM+ZJ/A+aEMukkXK349zPXif33CZW3n+r5hnCB
QjPRD7GGYufznPDtzHnfrjye1bcdxPOosJ2+785ep/CGeHYRviWcp7Axe41w
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
7YM80ef+KV3ul6wL9A+l/y3sUfg/TIl87zA45EneL7AnVGynehF9PvT5Ocij
ok/GBpJ6TaBbYdOgbujpe6fWq1gXzyqsq3gskT2o7wuFdbprK7Y5oOtdI3pL
7gaR/0SfWLie7+v7XmrXQan9wXqEvl0m+j3qhV6EPCqeIZnvj4dyT6v4n8Pe
i75/veiG6DXMS9EvhXqyttHB0FvHVqx3d0nti4XOzJoaoPyOqTrP1xhP0cMU
t0coizovQX8N8dxdD88sJ2APHZd7jfdW3ICq9SDW0eCwFveL7X+wSHm8pPgn
aJfmX92w3/QLPPsis5e2gWOzhWbf+q70+c46uo25VHjODlRZ65TXWsU/LXyo
4rn3sMIPSZBLEtOMNfbJR8S3GJ7Uey/rdEbuelAfZBL6njX+qMI3ie3n2D+p
MzZ8ztfltKNife+FxDIJMtW7iW3j7K2Pq4xVil+Q2tb3c1jjB6ru26itnblP
Kv1956r3D/ptQcW2qRsqtv8ckHledRH2QHZnHgoPL22T556CcutXfG5dg4yI
vomtqLT/BfI287Qa+4w8vfQ6bqty7xC+Q/+kzpNz7MfS5wt7xS2hznuie2eW
CX+LLI8epHzvVbpWyuc6dHB97yd6UmK/O+zP0J9Htk1PT+zjxF1Fj8yyd0/h
/Ir7nT7vozxfFw5gnAuP1U7K8zDRHyt+GPMdG5rSPlRYB1yq+P6F7fa1wh7L
nUJR8X3Eg8x10XOFp+W2xX5Seg9sw7zLLLvmFcvb1IE67VOYf2lkX2XqME95
7Fj1/QX8U3O3fUf0FH3/LPFeh9wJjVyNjL4isb0KefUB9g7R9wv7lpaxscND
I4f+XHqsmdPthY1Uv82V/3aZ+5w1flxhGbsIdcC+wT52ZOF1sDSshcOUplHs
9TkrsZzOnUWvwuW3VlvOU/o3ItvPDxHfduI/WNgrs98R/QMPdyCfIjOk9k3F
Lrk+sR8UdzPsn2+zb1atMx4YbBH4bN8lnh2FE/R9iuibhC8I7614TZ5aevzR
9/EhxEcR38XFgeeein0Uqds9wjHin6g8mlZ9//Jb2Is4o+iHByu2w6NznZTb
n5yzpptwfNgvqMNOrBNhk6rX9TthbTNf5lQ8Tuh33OFiX2qusDN3hsIrVIcd
hIdU7c+G/v2DcInSPMD4gsq/reL6VL3/Ec93/LFvjuxvgP3nSGwGwW7TT/Rf
mW1T+JXhb7ZrZvlnt8x1om70KfYT/O7wOWymsE/sOnVWuXP1fQ/hM2rfu6Lv
5FzQ7xmimxe2dx2G3i2co29PkWfqOrMn42NJPtT78JDfy6Fv8fNn/Hoj7ylM
E91UOFXpbxE9BTkK2wT7O3KIvnWgnVXvUftj4xE9VvSeog8X3V7YSfwdM9M7
iN6Ls0hhy9D2a0ufTQuxDylsi12r8H0Z7xROEHYVX+uwZ8LPXntU1feVn0a+
j+ukuIahbvAjG3QP/dxA9M7Cq5V2d/pIaXfJ7HfKb+q8m+jHC7dra+yBhe+S
8NG+KHefTFIfNOP+RWkaY1/IPG9Zl9isWJdlbL9b7H6dI/sS44+Bf3uT3POt
nr43zrxGpinP5lW/6WBNtEXf0rem2Joyv91g7h5c+E5qbZDljtS3juJpkvks
WBvOA2Tpf/ideu70je1TOzn1Hsg4cneGjzd+4JeXrksv7Lrh3ETXvS312XW7
cIbC4+xpws1S32dxn4JP7wHK+1lkvMx9OCjz/Qh6Mz7eF6WenxcLRyv+VtEt
xH+y6EsUt13V9zv4beKf11fhdtGzhOPF1wTbjnAHhbGKa1x1WfjWDc6cP/dJ
5wtPUZ7XIy9zfqW+e7o29Z0I+jZ+oVemXrPkxRuTO0S3FF6Y+p0LdaqbWmdH
J9oytS0cvRI5k/v2f5Xf/NxnNLrhW6n3Z+TVpan1aGTcd1KfcctZiwo/ii4z
p8Um8VfpPsf3FfvINanXJHXGpoc/4WeFdX/8z7kfRXfGZx4d+LLUdwT/37eX
CxtV3cYJir9CODCz/yHj0rXwftCyalmUtbygsN2AOxj829lPpounRdXls34H
xN5r0evZU85Kfd90emr/ojsj+/6dlnrfIP7U1G+Ozkjto4VPFP5LF6Te/3lP
dJLKPZs2Ve1jdlVkf9oTS6drWHV5lMs44RuGPbId4yietqrXfOWzE3ul6B0z
v+thn96t8By+NcxbymIfa1Z4nrDncXfAeYEPzPaF/ZdmKv/2wlbKq344F85N
fU93jvDk1Hevo1L7vM2J7AN5EGdcOGdPKH0mNgmyDTLR0VXHn8ScqjpP+oH+
GBD6mbXEfRx3iNzJYcfuGeyN7I3Ia/2r7mfuC09J3Q+tOavoQ85RxW1d9Xuf
myL78hHP+cL7rxNT30Ph83O80p4gbCD+4anfZ50Q9o2OYe94M7GNCnvFo+GM
ny88W3n9jjyrtDszjpF9BS9N3f/Mvbqx96K/FS7FhoW8I/7Zqe8bOb/YB24S
vW1Y49wjNyrs84+4dYfwKvHdVvEdGfaoX5mDwj9S21j+ZK2nvjuYFOipFcsT
t2f2W8XfC/vzicqzmjse36WZIX/u2Fg/rJH3RB8rjGOfBYnCdP3eKpwL+L9d
GPltFHconGV3COsrr5ax2zk9pB8r7FRafsYPpHPptwb4/JN3w5A/vkPI1fiN
zCh8Vs4tfNfDm6baud8g1BP9qPBH5P5gM4e/HjJN1X6AZwb+G9SeSRXvidxb
9Q9yCO9Haop+MDMP92jITFvpd23lt2Xmtxs59w5CBmJUZN/3q0qfpYciM4v+
Ven25y618Bixt0Nzbuyg+Jmp9Sr2c2x6P7E/CH9JrTv/jHyhML3isxD5du9w
tiKPNQ37/0WFbRSjC9dhl2A74h5qZBjTzWLbCpgfnO/NY8tqLTPro+wPlMU9
FHscdz1jwl3AJWX0v4cr3IVhB2AOoIe2UZotYq+xv1LbE5hv8P/NXly17XQT
8Uwo/HaGdzX3C/+NfbfC+5MaoW7UkfXCe4KHS8tp71dsM2FNYfc4qXDf/lvx
nd3Gse0D9N17hfsH+xtvnXgvdI/wz9h+s7xtQRf4ULxDhPelfl+JXveTwvrQ
56cVlhH2UwajSvc/MuSswvrs3WHe8h70bcZBZWyPvpn5HeIilXWYcFpmf+yp
QS9pHGSgiZl95vGT5i3bgshv4ojHlxsfa3yhedPAvQxvIZ+M/Faxa+J9mPeQ
vEejLN7a7Vf6Hdsy4ZDEbyR5k8abCPyieafAW84FwbZ5Q+H2XlL4fQHvj/D1
500o9k/edcKDLnZrkD3RR/LY+wpyI3OC94CLI99lY9dlPsxkb8/sw4/vNT7z
+HPiszpJ32oqrnvVd6+cI7cVjuecuk84KLGfEm/ursjs14o/P2+ROE95z1Mn
83ypjc6lsi+J/IYRGh/qxejHYZ7DQ33w9+aNR7vEtjL8lWtknp/Ikx0S22zx
f+b9LP75R+aWSaknc+5/70pi+5nzBvDJMNbMPd6pDK163PHbxz91ZGJfKd78
npPZz513ELw7Y3+7q/DbCu7yeBNyZ2F5Hv2atzl1lPaRzOO7JLIfVxZ7PBiL
yxS/DXJM1Wm3pp+qnqvwXVd4X+W98vLSbzSwC3Jv2C7s1ezZoxO/jeJdLm+N
n2dOsl8m9t3irfR5id+U8Y76qsTvKrnDuDSxT+AVIR79Gv8xZHXW5ybCUZnv
W7HTIrsS1w2fkNLvuXhvy3ysF/r5xsTtxR8UGl1mfKgDNgreWt+VWAfB35L3
Atxj8k7josw+zhcH/WbLMFc3z7zX1M1cLm+m3yv9FgY5g/d3vI1iz+QOd5Ow
t9CGQanlLHyudhX/eZF96f9LbaPegG6h8HXFex93TH+IPk94ucK3FduxoXmk
16XqN8KcUzVzp8XfYH3qPDn34GuY2d7CGC8rbI88TmmXFJbxB1ddH3ztH8Om
mPhOH396/O1PiexnX8n8zjHOnHb32DrditT1xK5eZNbPkMOPznyO9M+sazcJ
+hRnIPcItWL7HiAzrAzzEJkG/wruKT5FjgpnE23qrHo2yGyv4wzdOXEf8lYB
GvsA7yWw13HfMbJw2/HZYE7/ltpPA7mKunG3jj3339SyBP1/rdLkjK3KaplY
xuMNA/E/VHxfQz5fVHw2jyutfx9RNd0yyBVpYl99/PZHZPYl4N0a76k5EzfL
bW+kbwZV/a4N+faJwvc4K5X/cNGvpLZhYlM+t/Tc4Ix+M/U5jO7DvTz2+i8K
37OsqNhW/m5q2yA2pn6kqfjOBR2K8wv7NfcFH4WzDB0Uuyp6Kf4k2HUHsreX
bi/nZr/Ad4DwaIXHOMOr5uEeY7eq47lnGcG+VPq+qEPV9cdOv6foF1Kft9je
seti4+FvBTA/sZ1ir6gX9hbeRCxMPR+wh7cr7ReEz0zfzG/njsp8T/R+kC3H
ZNbLeUNXM/F7C97UYyNdEfr22My+JdwZYCfHTvVI4XeyyDNPcXaFOtQLNmr+
pgFtxja+Msjq/TLrStSBuvHm/onSaYdGfvdOP6wKfbJPZn8SbDr4upwS5kPt
cB5xFzwytb0KPWi/xHrZvuHMahH2H+6X2YsmB9mY+2jk1NGpfVPRhfCvYL1N
K6wLja/YHxJfVvQC/BXxRx0fdISRpfWerar2o5sQ9AXikfmxWX2Wei5x18X7
mpPZH4JeiR2eu5W9M+8P2LC+im2vwwdoRGmZGX3wysJ7Sdeq7SRtQv+fmdpW
c07Qobgb4j7ovNR+m+i0yFTYJLZV2iTzOZVmtjOMD3of/mPYBvFbQl/m3gf9
rVHis56/S4AfC/XH1wU7M2sBuzcyC7oV+9G2me3n2JOpM/etYwr7g6F7XVhY
/2I/wx9gSGrfS/xu6Qf0Gmx236Tm5x62XWZ9FHsd/cnezp3uQ6n/9gh2c/Yf
9D7ecdUKeyb7bO0gk9zPWZ34HRV/k+HT2PbJVaGfeYNSv2pZdHXYD/Ex5m6L
e8Ms8x00/UafjIj8Nx1+SG3b5d4Xmn2P+w58eEaFscbW1yLUYePM9yTIruSJ
TMEeiuyEbwOyGvov93q8U/o/lEedVg==
          "]], Polygon3DBox[CompressedData["
1:eJwtnAn8FtMXxmfembkzLxUhW5QlIkTKUllKCaVFkX0phWzt9kpE2ZfIvkay
y75vEcq+U0JSsiThb43/8/Xcz6fTe87cmTszd+5yznOe+9tw4NC+J9aSJPk1
TxL9S5rov13TJNlFsob0S8skWVkn/CR7tPR3Q5J0ld5K8qL0mTrWReWHSmZL
XyA5XPruktelj5H8rnNXkz1JeqMiSRrUXGdD6Wfr2AqVryX7culb6dim0jeR
tJK+gaSJ9DUkzaXP0j130PmVnm1FlSR1/TaTvX48dovqWFvnbq1z96knyUmy
l6e+56nSL5aU0kuV76Hyq2U3lv2bzjlLeqXjS6X/kPqcNSSrqLyRZHXqlGwt
vbWkl/R1C78bdawj/V893whde4BkifQLVGeuslRlu+t+p8n+NXWdZ0rfV8c3
kr6hpJ/0mbqmncprepe/9H5XlL73Lzp2hvR3JL1lD9C5R6i+R3T+ZirbTfK8
9L8kQ6XvJ1kgfRfVM1H6JMmu0lvoup11/S6STaXPV32HSN9N8rL0YTo2XPoI
yXDpn+rYgdJ3lTwb2y9I30Byh/TnJJ2kHyR5UfpESSJ9Xck10q8r/e3+1P3P
l76S6txYdgv6QOH2yaSvL7lZ+pF65vdUxWGZ+o/e/yvZ/XXtMMkiynTNDiq/
k/pV/oB+O8juKJkh/cPC9v3Sr1P5G/QF2a0lr0tfrPI9o36byt8sXP6m7Nvj
+ZTvFY/9JTlH+rmSv6U/pfObSb9b+rU6/1vZPWS/K3ua7C9k7yb7ed5H9nv6
3VZ2m3jOqnqHUdKXSr9f5XfV/D47xjqf0/Ubxne5XuX/yD5U9h+yZ8heQzKZ
viypSf+ffk9S+cnxnKbBz/u79AdU/mPN9xstWSZ9jurbUvqr0qeqfCWdf3x8
t4dk19TuR8g+XJJK/5T+Iv0Rld+g8kdrtneRPCb9M5V3kv6U9JtU/qLsFrHs
RtlP11zeWfKM9Bdqbp8ukhejvbn0zWKbvcLcIb1bfMYl9EPpIyTfMg5U/37S
F0q/h+eXnMO9eXfpDSSTpN/KmJL+q87vr/MXyb5X9jLZfWXPl32X7CA5i7aW
NKG/6fdElQ+N9+ig9rlV+iTJxtJ/0vX9pH+hsrt1/mY6dqnsTdVWz8T2O1X2
aZJCei24PdEfqTx+e+naYyRfSf9Ivz1V3kvysfS/Vf/B8VtN1/nT9Lue7KaS
56Q3C36WXPU9XLm9+J5bSGbRfoXbk7a9hfcp3J6U3Sp7he55mvQrmANl/67y
A2Lb3ic7k4xjbElWkf6JfvuovLfkZ+rU+cP0O5T+LX0tnTNF+hmSuvTP9Htc
4j5FG/9Q+PpPpd+p8tMKrxXMOadKX67fY1U+RLJJ5v5Mfz+ENUl6e73vzdK7
qmyWrj9X1xyp4wMZl9Ib6dhF0kdKftW77azzrtP519NHpe8quVH6DZIDpbdV
fdcw3qS/qGs/Zg7mm0t+Kv29b6H/qfwVlZ+p3zeYCyRnZx7PjPe9Je/TNjr/
4Vj2ic7vot8nZD8Zn3n74Pt3kv6yyk+QPU/2WbI/lr277Dtl95f9Ev2j8HxB
3XfIPoTjsl9mTEo/QPI440tygfRuuv7uWPaGzt9Z9lTZ3WW/KntA5vn0fclA
6e0lZ0ofF9tgP9pB+sz4DL0lzzEWJX3i+bTXtZIO0vsHl/eS/prqPyD4+n1l
z5G9l36fZqzHZ+is8mmxrtkq30i/43l/SYvM7Uv7PcQzMfcEtzf6R/H77Ke2
OEHtMkjr3am0M/2JMSb9RB3fSeUd4zmjuI/K5jAnSu+p+mZE/QPV1zf429AW
b8n+unRf2lPyvvRjg+s/SeXvq7ytfsfIPkOybeb6qe8ByUj6iK7ppmuPkLwr
/Q1JD+mDJfOkjyq8NrKGjpR+Tubv/5nkXOlH6X4fSj9W+tu63we6Zh/GkORb
6X9KTpZ+mSShr2fuC/SJC6UP0/Xzo/6pyg8KLr9Y9tx4PuWfx2PHSO6Tfq/k
aOmTaAfpb0vOj+WvMPdKjuP7FH43fLpx0hurzktZc5ir9GwnZH7+jyQnMn55
Z5VdLPlDevfg+1HXO7p2/eC1lDG9gfQNJecl7rMtpbfMvJadFOfU9qrjfq39
r0n2KL0eMF/tL/lG+geF107m9I+lH8I30LkfyNfZUf3lPf3Olf2p5G3p9+PP
JZ4jn5S+pPBaf6Tk38LzP+vLvpIF+Ai65gNd+6HkdunnSCZLvxx/Ufruut8z
0qdKtpA+ScfOlX6OZKL0rwuvZawBvxVej5nfD0rsA7D+40+sn9ineUXXfKxr
P5K8JH2p5H3p7+GT5l5PW9I2iddc5td9EvsQ7xf2t//QuQt17k56/+/0+6Xs
LyTfSJ9a/Oee/bem3Fp4fmfuPTbO0cw3zCd3SQ6WPk3n6F/SXHKHlIfwdxOv
OS+wduh+s/k+qrud7ndn8V83TTaij0m/R7Iyc7vkQemPS9ZOPMe9JX1NXX+W
rj9d1zfneQvPrUdJgvrDliq/TeXPSraW3jS3r9tZsq70vXTseenTJNtK35Bv
kjpG2SB3vLC99D6S+azlOnaz9Jskt+T2t9tK70mbS99Gddwh/QXJ9qXH9x5q
l+56rgP1fD1lz1TZnZIdpbdnvVX5ZpLtpU/OPHYYQ5dnjo+6qmwX/BZdf4Lu
eZGuvVByrPRnJT9KX4b/ntsfaKdr20o+ZI0kBlPZJZKTpM8r7HsxBhYV9m8Y
C/hkX/JtdL9xOneozm1at79CX8Ynniu9i8qfiO++uco/Kew70+c/py+pfJbK
7yFeoC8V7qudGG+F13fGGn1uXs3r99nSJ0h+kd5W19xF35XsTDxY2NdjTf8R
XwT/U+dtgR8o/XM9x3yd+5lknvT7crc93/ReAlJ9k8P0s0LnP6iOtYnsi+m/
atunKvvn+Br4HPi8W6h8Mv2TdUzl62Ze61jz1pe+VebyKyStpTcM9vUq6Y/F
9ekY5kbJhtLLzP7WefGc5pl96VHxGTYixpO+Kuuyrm+UeS4ZKGkY/Q/WatZs
fIDVM/uyw+M1PA++4qnxmXPVN0B6Xfqjlf0Z1krWzJ2ktwv2b9BnqnwX2bcn
fobNpe8mmZ64jbYJfl70S5hvpTcJvh/v/nzl+Rb/9TLJZtJbqPzCxGt2a+lV
8Fik7Z7W+asHz8+c+2zl9qH98Jnz6O/clDgGWU/61pIpidfOF2K8RnyzQeIY
jfWV8qsk7eL9L5K+tvQndX6r4GdjTtox2L9grcAn3zOzv8Vawj13y9y/H1ff
eVdyGHhC8LdmDerE2q8+9UrqPv6E9Om55xbm8Dty+z+8O22Kj/MI+EPiGPHV
wu2PL4TP0is4HiLe2ThxjLST7vmg6npd0lt6m+B3w2fYQ3oR3D8a4ydW9r/w
//hm+FBDVP6x9BH4bbE/4XuMidfQf/jWfKM1Mvdvvs9gyTrRP3xH+ruSg6Tv
qfrukX6k9DdVXyc90yN6trck+5f2D/GH8FmJufGvnk/s4+ED7a3r75c+VPq7
0T/pq/c8Wm0xsO71H18Pnw8f5nidP1f6WPwCnf9w7rmAOfOh3PHMdirfXnJH
zfPll9IXMCYZ07p+K9Z61hTpi3TNd9K/B0+RPry0/bX0nXX/saWxBda2XWQf
J/sr2T/L7lz39fSFd+I1R5S2qWtXlY+X/bfsn2R3kr089/UL4jHWl+ek3y19
y7rxsJVqxi72rBsvAk+qJM/kXm95nr945tz1Uf+K+Ex54XfhHbLC6wFrF2vO
iawNqr+ouayb6j9H9r8q+411T/a+pfvvU7LbyD609Lf8THbHuv0FsCswrKnS
X8ztO73KmhbXG3wZfJpluedfsC8wui+k/yNZQnvyzNLPU/21mvWudeM3vH9d
son033M/H07FH7ntRbR1fGbq43ownn+ln1i6nHO71N0evC+YUiF9vdLrI22x
nsqP0e9Vsq+WHCd9VZWPjfq6Kr9RvzfKvgGhjVT+WNQ3i+XYzAk3ST9TMkH6
2ZJx+Cyl1zp8uQ3AA/X7cOoxco30TcGwot5S5XuWni/ulL2F7F1Kn38V59bt
Lz7N95E8F+cXfLmP4zX4i09HX7JVvB/1XxvraKDy06UfLn1NlR+i3ytkXxmP
Dcjta+ITDczdPrTHGMnR0kflros6T87tP+CrsCafJn0N1T8+ljVT/W1Kl+Nb
rF/39ZSfKRkpfavS/RNfZZ26/VOwYDDVV6UfkBtbBGM8P7f/i2+Fj7Uz1+j6
8+Ozrq3rW5V+/sNkN4nvx/ueJjlYekm8I30f6avT33P72vjc+0lfSeWnRn2N
uv05/Jknmc9if2fsMoZfzj3f4/t+GcfM7Zpjvld3/Y45jrmXNV5lFW0k/SbJ
Ynwdyc3MvcH2jdI/r1wOFvBGPDZVskT6t5LbpF+k839jPmReAw/T7x/4JpIX
pE9XeVPGh/SfVX6l7H9V9pnsn2R/qt+1Vb5O6mOfS1qmxni/wDcnZpL+EvfV
+afIXqjrr5b9mexF+q2pPI33uCZzLDw7njMu+P2nSV8AngKmJfsB2V/Lvl+/
K+nalVMfewIfnO9NbMfzye4ueyu1ZaX2/5k1SfZq8ZwbVN5Q+sPSF4GtyV6a
uG2/kn1dcP33yV4o+zzZv6j8Udqd9pW9Kt9T9jeyn8psN07dps9KgvSC+Zn1
OfP9GqWug/elPb6WXIsPFZyr+Eb6L6pvaeZcATmDZdKvDm6vJdJ/5f1yz6dv
Sj6hb5aeH/FNO8R4EiweDP996W/mnuuY096RflDptR99B50/uHT8ybnt666f
uXVJnLP7l56f6attVb53af/3fsYe81/p/ouvsk2MP16UPUN267rXV3xnfOhH
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
          "]], Polygon3DBox[CompressedData["
1:eJwt13ncjlUex/FbeJ67kKWylKWFRLaSFlpoQWjBUKiIbJHleYYUSUOkGlSW
bNFMxYQWGpFq6qVMQoxXlkYjiVFSZiqalJr373WdPz6v+/5+7+/vnHNd17nO
OfdZvYd2GnJCLpfbhdK4tSCXe9fn2JK53ENom8/lruQ9x+tA34AWvKGFudyX
JXK5T0rlcttxP6+j3Gq5q2Va4RK6n9y/5FbILEcX+k7s4C2iX0Brug/+yVtG
L8WNyfuEt5HejFH6mK3NQt5i7S/CuIKs31X67U7fjivlVqu9xIX1dVH98BG9
1mcdudX8N1BX7mq1i3id1HXG5VErV523SGYxavN6yP2d11/mLrTkdeOt5U2k
J6M3/abaWrxl6l5CHbkX9V3H93J+K4sn6GH4ynX8Viq78RPojnif9zpvFYrz
2b3aznuHXosRvC76eUvZEH0Ox7W8ztE3ry3dBlfRd6vdq/ZddW/i93Ln8Z7h
LaAXohV9h+yHaovVDcM1cj/wi4252NiKsIteg+a8QfRgbKd7qt2gdo66uSgu
yMayhtePHhhzQXvVeON4zWP+4EJ6sPr9xrLJOD7EvXL9ebt5e+gv8ADvHX2d
rXaFvl/DubwBcp/J7ZM5gLH57Ho/5x2iD8f9K8ye0Xtqe+jzFlwh9zS/gnaq
aLcq/sAr4h1SW5ouwOMxT9V+pHahumcxOs3nT+V2an8XRqtdzD+ddwJdEm/T
z+DkuA51X0TfcrvV9tDvvdofFfMgn9379fqYKTMLQ+i/oIbab+iD6Ca3hteI
d5Q+gu68P/NOTd6PeJl+HlV42+itMafl3tDvpfrtr88B2EJvQgdeD7o7psm9
kGp/UXccr8d7JddM7k6Z3lhP/xUXptrb8C59P46m+7IDA0NjRLrekdhD/ymN
eb321+HmfDavWsh1lrkZU3nz5MrKLZd5FY/TvbDRvZpHz8cIeg5OlFtKL8HD
Bdm7H9fbRlvXxrOMZ8Srmby2WEkX8MfzptNPYSY9Xf3xXHb/tmMhPQs5fXxO
78VzdAP1z/P6uda+OCPmI/9GXjP6YnxHV8VY5RfHeogG9I8YkHIXoXc+m2ub
5SbJTMD1vIa8GbwmdGM05/XlbUvvVl/8jj6A7tqrqq0q+DjWtDQnY8y70VVt
Zd7o1N4FOJfulN7V1vR1sf7R1VzLY2qv09a1KFGYrTlvpz2gfaw59E8YJNdC
pjn66KO67BRee7odTqRvSXtKrLEdo54+mz9Tro9ML/RTW5P3BK8jfTMq0t1l
16nto65XrGtpLQ5vGv0E+qf3rbzaVTFv8RRdH0/K1afr4TK1f9NmK8/8Qs/7
Aiyjq6RndJpMJTSTey3N8cYyDTCR9zzvDF4L+nIsp09RO0rtcf6xyMt95bd2
vC30ZtTn9ZTdEs/Dde3FPYXZmviQ3Fn6rIlL89m+cDDldmMMb4v2mqT2/oF9
9CY05H1Ib8Bu+iTt3cPbQ3+G73nleMN4/6b342feS/qon9a/yphPl5crljvE
/xol6SX8ur5XlKkQ7wf9eloP4h5cisnGt99nmzSW9ajH+5p3A287vQ3n805N
9yqex/moFescJvFy9G9yZenT0jw9kVcQe4XaY/od5fcHtDsGB+iS/HG8KfQf
MSP65fdL3lT8j97m87K0Jy/F23GvZCf6Psf32ZhFf+rzqnQ+WIWN9GH1A9Ma
MQO/0d9hcKqdi9JqzzLmR9WWNd4yqBjriNxoufGxx+Bbejx+9XyPeLY/YFza
e76J9Z4+iAd56+Xra+899e9jB7031rPkrcV5cpPUlojnqu4YHkpnswMlMu+X
aC/OUTFn0x66PNosne2/+9JYjsb5ih6e5l8Jv58Q854uci170vs2Fe30cRNv
OW80PQa3FWRngY3JG4XWcien+Rf3pTwuSuvQGF45+iQ0TXPjvlhm6V+Nrwnv
J/13S3PyGzTgVZIbwTtT7hycTn8be4Mx13EN56BnPttDq/MK6EK8F/tEnInU
/qCtH9EotTeSd4T+Lxrmsz20stpj2v8Zr6X1tBovF+thnKfoZ1Epzlcyb+HG
fOZVjDMIfRgvxrzAkVy2Nq2OM7TcBt4VcpW0dQpu423mtUzreDXcziuT3ul4
P0rGus37gNdcrqxMOfTgbeVdw6tJ18Id+WxvzPM+ULch1t589p4Xae5Uugou
5r3qGTd07e3incWUdGatHWctuh4eTmMZonYv/3McjTkZ58f0Xo7Fk/nsPg+S
+5S/C9/yS/DH+v6o749gepobw+W+5B/Acf7+OHeld2ZC7MtyXdPeUxR7fuxT
vFfkGsi1lrk+3n/e0rRexdreLPrhreA1ibN+nCGjTV6FtNZV1dYZsS/zXk5r
4pUyrfBYqm3M60R3wZtp/buI15PuhXWF2Xpaj9ecvgKP5rMzUlNe01i7MYm3
zmdd/b4VaxC2xvoRe4jvNXyvifHpP05BnPmNbS1uivec910uOw+tQAfegrTn
7aMP4NZ0fv4s/YdYGXODHonv0/+oDbiLHpTe/fX0OoxUW5c3jzeXnocWdEus
TN4cFMn1Tv/LltAvon3cYyzmFdHDcSZ9bmpvdKwtGKx2SFqbttFbcV+cadKZ
+lX6FXSmd7q2trx6dH3sp7/ALemdqYhN9O3p/DzU9Q/G1do7GH56F2rEOZ0e
j8O57Jy4LM4gct/z+so1lmmEO3m19T2bNzTGG+dY3n/keqexnBfnldgreO1T
bRMcoi9Xu4I3g54e90GuTmovvJloVpj9B1vAm0RPwNB07+fzHow9P84HvBrp
LBX3dAQGpfbm8IrpYbibNz+dlXe6rl3oks7PZXgf0zvinMg7PZ3r4sw6EAPS
e9Qwzb/qeI6em87UG9VtRqfY3/jTeT3UdY05xKvKe4TXPdaqOAfzzuHN4vWP
DPqnfh/ntaFboxR9GV7hTaWnxLWk2pnJmxbPJJ0d3/Hc7jeOB+K/bbovU+Vu
kOmAMoXZWCbzWtEtY99TV4v3JK8z3SnW2cLMizPm2NgrMSRd21O8ifRk1KPL
8ie7LwvdkwV4mv4/2a0fNg==
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0u1K02Ecx+Ff0+VT+ZDPJrNSz8BAQT0EBQPFt74qqKankFA0rdTyWcs5
FaNIREspwlMoUOgYCsroBLr+CPt4fUG33ffczbHs0MNLEZHXfeOx+oojNjjC
zzxVwf7NryxNRdxSWTqil+0c5riydo5bKiS/K43YZD55jr3BG3zD12qz15nh
GlfVaq+whctcUrO9yAU12vNs4Cu+VJ09x1rOckY19gtW8zmfqdKe5pQm9NR5
R9inYbudnSzjH/c9d98znvAL88rZTzjKB7yjDruHbfpbFJFOnsNfPtfvmrKP
OMp1TqrTvsd/3muQt3ViX2fyPzGj4Cz+LLx8bNsesePHZZZo13aleJucmeV6
Z1fwPa/wqj7YlazSnl3Nfdbwmg7sWh6yjvX6aDfwiI1s0rHdzBZ16YdDDvCu
Ohz0Efu5xk/K2d+4xZ/JPZLP1M6w3KW6OaTt1MX37z9slkTn
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1443, 1442, 1465, 2084, 2201, 1491, 1492, 1517, 2217, 1518, 
       1545, 2094, 2224, 1563, 1564, 1590, 2245, 1591, 1617, 2110, 2252, 1635,
        1636, 1663, 2274, 1664, 1689, 2127, 2281, 1707, 1708, 1736, 2139, 
       2303, 1761, 1762, 1787, 2317, 1788, 1816, 2149, 2325, 1834, 1835, 1861,
        2346, 1862, 1889, 2165, 2354, 1908, 1909, 1936, 2376, 1937, 1962, 
       2181, 2383, 1981, 1982, 2010, 2405, 2011, 2036, 2037, 2062}], 
      Line3DBox[{1445, 1444, 1467, 2202, 1470, 1493, 1496, 1520, 2218, 1523, 
       1546, 2227, 1548, 1565, 1568, 1593, 2246, 1596, 1618, 2255, 1620, 1637,
        1640, 1666, 2275, 1669, 1690, 2129, 2283, 1709, 1712, 1738, 2304, 
       1741, 1763, 1766, 1790, 2318, 1793, 1817, 2328, 1819, 1836, 1839, 1864,
        2347, 1867, 1890, 2357, 1892, 1910, 1913, 1939, 2377, 1942, 1963, 
       2386, 1965, 1983, 1986, 2013, 2406, 2016, 2038, 2041, 2064}], 
      Line3DBox[{1446, 1447, 1468, 2085, 2203, 1494, 1499, 1521, 2219, 1526, 
       1547, 2097, 2228, 1566, 1571, 1594, 2247, 1599, 1619, 2113, 2256, 1638,
        1643, 1667, 2123, 2276, 1691, 2130, 2284, 1710, 1715, 1739, 2140, 
       2305, 1764, 1769, 1791, 2319, 1796, 1818, 2152, 2329, 1837, 1842, 1865,
        2348, 1870, 1891, 2168, 2358, 1911, 1916, 1940, 1298, 1964, 2184, 
       2387, 1984, 1989, 2014, 2193, 2407, 2039, 2044, 2065}], 
      Line3DBox[{1448, 1450, 1471, 2204, 1477, 1497, 1503, 1524, 2220, 1531, 
       1549, 2231, 1553, 1569, 1575, 1597, 2248, 1604, 1621, 2116, 2259, 1641,
        1647, 1670, 2277, 1676, 1692, 2132, 2286, 1713, 1720, 1742, 2306, 
       1748, 1767, 1773, 1794, 2320, 1801, 1820, 2332, 1824, 1840, 1846, 1868,
        2349, 1875, 1893, 2361, 1897, 1914, 1920, 1943, 2378, 1949, 1966, 
       2186, 2389, 1987, 1994, 2017, 2408, 2023, 2042, 2048, 2067}], 
      Line3DBox[{1449, 1453, 1472, 2086, 2205, 1498, 1505, 1525, 2221, 1533, 
       1550, 2100, 2232, 1570, 1577, 1598, 2107, 2249, 1622, 2117, 2260, 1642,
        1649, 1671, 2124, 2278, 1693, 2133, 2288, 1714, 1722, 1743, 2141, 
       2307, 1768, 1775, 1795, 2321, 1803, 1821, 2155, 2333, 1841, 1848, 1869,
        2350, 1877, 1894, 2171, 2362, 1915, 1922, 1944, 2178, 2379, 1967, 
       2187, 2391, 1988, 1996, 2018, 2194, 2409, 2043, 2050, 2068}], 
      Line3DBox[{1451, 1456, 1474, 2206, 1484, 1500, 1510, 1528, 2222, 1539, 
       1551, 2102, 2234, 1572, 1582, 1601, 2250, 1611, 1623, 2119, 2262, 1644,
        1655, 1673, 2279, 1683, 1694, 2135, 2290, 1717, 1728, 1745, 2308, 
       1755, 1770, 1780, 1798, 2322, 1809, 1822, 1149, 1843, 1853, 1872, 2351,
        1883, 1895, 2173, 2364, 1917, 1928, 1946, 2380, 1956, 1968, 2189, 
       2393, 1991, 2002, 2020, 2410, 2030, 2045, 2055, 2070}], 
      Line3DBox[{1452, 1458, 1475, 2087, 2207, 1501, 1512, 1529, 2092, 2223, 
       1552, 2103, 2235, 1573, 1584, 1602, 2108, 2251, 1624, 2120, 2264, 1645,
        1657, 1674, 2125, 2280, 1695, 2136, 2292, 1718, 1730, 1746, 2142, 
       2309, 1771, 1782, 1799, 2323, 1811, 1823, 2158, 2336, 1844, 1855, 1873,
        2163, 2352, 1896, 2174, 2366, 1918, 1930, 1947, 2179, 2381, 1969, 
       2190, 2395, 1992, 2004, 2021, 2195, 2411, 2046, 2057, 2071}], 
      Line3DBox[{1454, 1462, 1478, 1490, 2208, 1504, 1516, 1532, 2216, 2093, 
       1554, 1562, 2237, 1576, 1589, 1605, 2244, 2109, 1625, 1634, 2266, 1648,
        1662, 1677, 2273, 2126, 1697, 1706, 2294, 1721, 1735, 1749, 2302, 
       2143, 1774, 1786, 1802, 2324, 2148, 1825, 1833, 2338, 1847, 1860, 1876,
        2353, 2164, 1898, 1907, 2368, 1921, 1935, 1950, 2382, 2180, 1971, 
       1980, 2397, 1995, 2009, 2024, 2412, 2196, 2049, 2061, 2073}], 
      Line3DBox[{1455, 1466, 1479, 2209, 2088, 1506, 1519, 1534, 2225, 2095, 
       1555, 2238, 2105, 1578, 1592, 1606, 2253, 2111, 1626, 2267, 2122, 1650,
        1665, 1678, 2282, 2128, 1698, 2295, 2138, 1723, 1737, 1750, 2310, 
       2144, 1776, 1789, 1804, 2326, 2150, 1826, 2339, 2160, 1849, 1863, 1878,
        2355, 2166, 1899, 2369, 2176, 1923, 1938, 1951, 2384, 2182, 1972, 
       2398, 2192, 1997, 2012, 2025, 2413, 2197, 2051, 2063, 2074}], 
      Line3DBox[{1457, 1469, 1481, 1495, 2210, 1507, 1522, 1536, 2226, 2096, 
       1556, 1567, 2239, 1579, 1595, 1608, 2254, 2112, 1627, 1639, 2268, 1652,
        1668, 1680, 970, 1699, 1711, 2296, 1725, 1740, 1752, 1765, 2311, 1777,
        1792, 1806, 2327, 2151, 1827, 1838, 2340, 1850, 1866, 1880, 2356, 
       2167, 1900, 1912, 2370, 1925, 1941, 1953, 2385, 2183, 1973, 1985, 2399,
        1999, 2015, 2027, 2040, 2414, 2052, 2066, 2076}], 
      Line3DBox[{1459, 1473, 1483, 2211, 2089, 1509, 1527, 1538, 2229, 2098, 
       1557, 2240, 2106, 1581, 1600, 1610, 2257, 2114, 1629, 917, 1654, 1672, 
       1682, 2285, 2131, 1701, 1716, 2297, 1727, 1744, 1754, 2312, 2145, 1779,
        1797, 1808, 2330, 2153, 1828, 2341, 2161, 1852, 1871, 1882, 2359, 
       2169, 1902, 2371, 2177, 1927, 1945, 1955, 2388, 2185, 1975, 1990, 2400,
        2001, 2019, 2029, 2415, 2198, 2054, 2069, 2078}], 
      Line3DBox[{1460, 1476, 1485, 1502, 2212, 1511, 1530, 1540, 2230, 2099, 
       1558, 1574, 2241, 1583, 1603, 1612, 2258, 2115, 1630, 1646, 2269, 1656,
        1675, 1684, 1696, 2287, 1702, 1719, 2298, 1729, 1747, 1756, 1772, 
       2313, 1781, 1800, 1810, 2331, 2154, 1829, 1845, 2342, 1854, 1874, 1884,
        2360, 2170, 1903, 1919, 2372, 1929, 1948, 1957, 1970, 2390, 1976, 
       1993, 2401, 2003, 2022, 2031, 2047, 2416, 2056, 2072, 2079}], 
      Line3DBox[{1461, 1480, 1486, 2213, 2090, 1513, 1535, 1541, 2233, 2101, 
       1559, 821, 1585, 1607, 1613, 2261, 2118, 1631, 1651, 2270, 1658, 1679, 
       1685, 2289, 2134, 1703, 1724, 2299, 1731, 1751, 1757, 2314, 2146, 1783,
        1805, 1812, 2334, 2156, 1830, 2343, 2162, 1856, 1879, 1885, 2363, 
       2172, 1904, 1924, 2373, 1931, 1952, 1958, 2392, 2188, 1977, 1998, 2402,
        2005, 2026, 2032, 2417, 2199, 2058, 2075, 2080}], 
      Line3DBox[{1463, 1482, 1488, 1508, 2214, 1514, 1537, 1543, 790, 1560, 
       1580, 2242, 1587, 1609, 1615, 1628, 2263, 1632, 1653, 2271, 1660, 1681,
        1687, 1700, 2291, 1704, 1726, 2300, 1733, 1753, 1759, 1778, 2315, 
       1784, 1807, 1814, 2335, 2157, 1831, 1851, 2344, 1858, 1881, 1887, 1901,
        2365, 1905, 1926, 2374, 1933, 1954, 1960, 1974, 2394, 1978, 2000, 
       2403, 2007, 2028, 2034, 2053, 2418, 2059, 2077, 2082}], 
      Line3DBox[{1464, 1487, 1489, 2215, 2091, 1515, 1542, 1544, 2236, 2104, 
       1561, 1586, 2243, 1588, 1614, 1616, 2265, 2121, 1633, 1659, 2272, 1661,
        1686, 1688, 2293, 2137, 1705, 1732, 2301, 1734, 1758, 1760, 2316, 
       2147, 1785, 1813, 1815, 2337, 2159, 1832, 1857, 2345, 1859, 1886, 1888,
        2367, 2175, 1906, 1932, 2375, 1934, 1959, 1961, 2396, 2191, 1979, 
       2006, 2404, 2008, 2033, 2035, 2419, 2200, 2060, 2081, 2083}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{677, 1084, 1083, 1082, 2316, 1081, 1080, 1079, 2315, 1078, 
       1077, 1076, 2314, 1075, 1074, 1073, 2313, 1072, 1071, 1070, 2312, 1069,
        1068, 1067, 2311, 1066, 1065, 1064, 2310, 1063, 1062, 1061, 1059, 
       2302, 1058, 1057, 1056, 2309, 1055, 1054, 1053, 2308, 1052, 1051, 1050,
        2307, 1049, 1048, 1047, 2306, 1046, 1045, 1044, 2305, 1043, 1042, 
       1041, 2304, 1040, 1039, 1038, 2303, 1037, 1036, 1035, 1060}], 
      Line3DBox[{703, 678, 679, 680, 2201, 681, 682, 683, 2202, 684, 685, 686,
        2203, 687, 688, 689, 2204, 690, 691, 692, 2205, 693, 694, 695, 2206, 
       696, 697, 698, 2207, 699, 700, 701, 702, 2208, 704, 705, 706, 2209, 
       707, 708, 709, 2210, 710, 711, 712, 2211, 713, 714, 715, 2212, 716, 
       717, 718, 2213, 719, 720, 721, 2214, 722, 723, 724, 2215, 725, 726, 
       727, 728}], 
      Line3DBox[{755, 729, 730, 2217, 731, 732, 733, 734, 2218, 735, 736, 
       2219, 737, 738, 739, 740, 2220, 741, 742, 2221, 743, 744, 745, 746, 
       2222, 747, 748, 749, 2223, 750, 751, 752, 2216, 753, 757, 758, 761, 
       2225, 762, 765, 2226, 766, 769, 770, 773, 2229, 774, 777, 2230, 778, 
       781, 782, 785, 2233, 786, 789, 790, 793, 794, 797, 2236, 798, 801, 802,
        804}], Line3DBox[{805, 754, 756, 759, 2224, 760, 763, 764, 2227, 767, 
       768, 771, 2228, 772, 775, 776, 2231, 779, 780, 783, 2232, 784, 787, 
       788, 791, 2234, 792, 795, 2235, 796, 799, 800, 803, 2237, 806, 807, 
       808, 2238, 809, 810, 811, 2239, 812, 813, 814, 2240, 815, 816, 817, 
       2241, 818, 819, 820, 821, 822, 823, 2242, 824, 825, 826, 827, 2243, 
       828, 829, 830}], 
      Line3DBox[{857, 831, 832, 2245, 833, 834, 835, 836, 2246, 837, 838, 
       2247, 839, 840, 841, 842, 2248, 843, 844, 845, 2249, 846, 847, 848, 
       2250, 849, 850, 851, 2251, 852, 853, 854, 2244, 855, 859, 860, 863, 
       2253, 864, 867, 2254, 868, 871, 872, 875, 2257, 876, 879, 2258, 880, 
       883, 884, 887, 2261, 888, 891, 892, 2263, 895, 896, 899, 2265, 900, 
       903, 904, 906}], 
      Line3DBox[{907, 856, 858, 861, 2252, 862, 865, 866, 2255, 869, 870, 873,
        2256, 874, 877, 878, 881, 2259, 882, 885, 2260, 886, 889, 890, 893, 
       2262, 894, 897, 2264, 898, 901, 902, 905, 2266, 908, 909, 910, 2267, 
       911, 912, 913, 2268, 914, 915, 916, 917, 918, 919, 2269, 920, 921, 922,
        923, 2270, 924, 925, 2271, 926, 927, 928, 929, 2272, 930, 931, 932}], 
      Line3DBox[{959, 933, 934, 2274, 935, 936, 937, 938, 2275, 939, 940, 941,
        2276, 942, 943, 944, 2277, 945, 946, 947, 2278, 948, 949, 950, 2279, 
       951, 952, 953, 2280, 954, 955, 956, 2273, 957, 961, 962, 965, 2282, 
       966, 969, 970, 973, 974, 977, 2285, 978, 981, 982, 2287, 985, 986, 989,
        2289, 990, 993, 994, 2291, 997, 998, 1001, 2293, 1002, 1005, 1006, 
       1008}], Line3DBox[{1009, 958, 960, 963, 2281, 964, 967, 968, 971, 2283,
        972, 975, 2284, 976, 979, 980, 983, 2286, 984, 987, 2288, 988, 991, 
       992, 995, 2290, 996, 999, 2292, 1000, 1003, 1004, 1007, 2294, 1010, 
       1011, 1012, 2295, 1013, 1014, 1015, 2296, 1016, 1017, 1018, 1019, 2297,
        1020, 1021, 2298, 1022, 1023, 1024, 1025, 2299, 1026, 1027, 2300, 
       1028, 1029, 1030, 1031, 2301, 1032, 1033, 1034}], 
      Line3DBox[{1085, 1160, 1159, 1156, 2337, 1155, 1152, 1151, 1148, 2335, 
       1147, 1144, 2334, 1143, 1140, 1139, 1136, 2331, 1135, 1132, 2330, 1131,
        1128, 1127, 1124, 2327, 1123, 1120, 2326, 1119, 1116, 1115, 1110, 
       2324, 1109, 1108, 1107, 1106, 2323, 1105, 1104, 2322, 1103, 1102, 1101,
        1100, 2321, 1099, 1098, 2320, 1097, 1096, 1095, 1094, 2319, 1093, 
       1092, 2318, 1091, 1090, 1089, 1088, 2317, 1087, 1086, 1113}], 
      Line3DBox[{1111, 1186, 1185, 2345, 1184, 1183, 1182, 1181, 2344, 1180, 
       1179, 1178, 2343, 1177, 1176, 1175, 2342, 1174, 1173, 1172, 2341, 1171,
        1170, 1169, 2340, 1168, 1167, 1166, 2339, 1165, 1164, 1163, 2338, 
       1161, 1158, 1157, 1154, 2336, 1153, 1150, 1149, 1146, 1145, 1142, 2333,
        1141, 1138, 1137, 2332, 1134, 1133, 1130, 2329, 1129, 1126, 1125, 
       2328, 1122, 1121, 1118, 2325, 1117, 1114, 1112, 1162}], 
      Line3DBox[{1187, 1262, 1261, 1258, 2367, 1257, 1254, 1253, 2365, 1250, 
       1249, 1246, 2363, 1245, 1242, 1241, 1238, 2360, 1237, 1234, 2359, 1233,
        1230, 1229, 1226, 2356, 1225, 1222, 2355, 1221, 1218, 1217, 1212, 
       2353, 1211, 1210, 1209, 2352, 1208, 1207, 1206, 2351, 1205, 1204, 1203,
        1202, 2350, 1201, 1200, 2349, 1199, 1198, 1197, 1196, 2348, 1195, 
       1194, 2347, 1193, 1192, 1191, 1190, 2346, 1189, 1188, 1215}], 
      Line3DBox[{1213, 1288, 1287, 2375, 1286, 1285, 1284, 1283, 2374, 1282, 
       1281, 2373, 1280, 1279, 1278, 1277, 2372, 1276, 1275, 1274, 2371, 1273,
        1272, 1271, 2370, 1270, 1269, 1268, 2369, 1267, 1266, 1265, 2368, 
       1263, 1260, 1259, 1256, 2366, 1255, 1252, 2364, 1251, 1248, 1247, 1244,
        2362, 1243, 1240, 1239, 2361, 1236, 1235, 1232, 2358, 1231, 1228, 
       1227, 2357, 1224, 1223, 1220, 2354, 1219, 1216, 1214, 1264}], 
      Line3DBox[{1289, 1364, 1363, 1360, 2396, 1359, 1356, 1355, 2394, 1352, 
       1351, 1348, 2392, 1347, 1344, 1343, 2390, 1340, 1339, 1336, 2388, 1335,
        1332, 1331, 1328, 2385, 1327, 1324, 2384, 1323, 1320, 1319, 1314, 
       2382, 1313, 1312, 1311, 2381, 1310, 1309, 1308, 2380, 1307, 1306, 1305,
        2379, 1304, 1303, 1302, 2378, 1301, 1300, 1299, 1298, 1297, 1296, 
       2377, 1295, 1294, 1293, 1292, 2376, 1291, 1290, 1317}], 
      Line3DBox[{1315, 1390, 1389, 2404, 1388, 1387, 1386, 1385, 2403, 1384, 
       1383, 2402, 1382, 1381, 1380, 1379, 2401, 1378, 1377, 2400, 1376, 1375,
        1374, 1373, 2399, 1372, 1371, 1370, 2398, 1369, 1368, 1367, 2397, 
       1365, 1362, 1361, 1358, 2395, 1357, 1354, 2393, 1353, 1350, 1349, 1346,
        2391, 1345, 1342, 2389, 1341, 1338, 1337, 1334, 2387, 1333, 1330, 
       1329, 2386, 1326, 1325, 1322, 2383, 1321, 1318, 1316, 1366}], 
      Line3DBox[{1391, 1441, 1440, 1439, 2419, 1438, 1437, 1436, 2418, 1435, 
       1434, 1433, 2417, 1432, 1431, 1430, 2416, 1429, 1428, 1427, 2415, 1426,
        1425, 1424, 2414, 1423, 1422, 1421, 2413, 1420, 1419, 1418, 1416, 
       2412, 1415, 1414, 1413, 2411, 1412, 1411, 1410, 2410, 1409, 1408, 1407,
        2409, 1406, 1405, 1404, 2408, 1403, 1402, 1401, 2407, 1400, 1399, 
       1398, 2406, 1397, 1396, 1395, 1394, 2405, 1393, 1392, 1417}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
vKLuWImiL/c87UhyBpJbPp8r9nCtmdQYj0rEy7T+6EO6E0zyt6rYY08yjC2J
8q9EJxqfNi9UOcKVEKc0S+wK9q8+KN2oRLvV6XN3v3CAZ3I3GU2wL36XtemL
qESvn4k+NN6wB70jI5V6O+N269Jx9thKZL8suCkpZg928Rc8tHfGx+DVl1OJ
lUiemjt8yt0OgteT9NSxD+qqy7I8rEQPnTi72xpsYc6v2lwZe/dHg3SVlEo0
3Rpa3p1oA2sFmf0q2KUn5sUaQitRVVDO0JNb1kCKybhogX2M7rrTeTw+nyK7
UofnreC6ztyZcOziV2/uHTtTiW5u9V9vMbCCXb5nNnbmUfjJlmwqTyXayv/Y
u/LcCrTPO/GSsLstuHX0M1Yg9QcfQ1a7/ICr9LxHPF53fLLhfQnfytHzrGkn
ZX4/OOc+xPUYe6HqfertP+Xoh2zj4qyAL4wMpfYVY1eMlm+e312BepK013nP
+cDPKtWcXOx/23OCjekrEH30+uUHxt6w3H8yPQ27bHUmszF7Bbp7JKB8KdYL
0rJrWx5gd76ZV73EW4GulJXeYunxBLfRPpo47N2MHdNHhSuQ3q/omL8HPeHD
wdlbd7DPHX5PWj5dgQSCfwaTbT2AUoGWP2znPPB4ttXpfAUKHFxZ+xDpDnlH
9n4PwC61UsV9/3IFEtmnsf+5jhuQo6ynvbAfemGRaqdegRR6XeS6T7tCw5uw
fy47/39liLE/cX4zXL09kMXnArtupV3eyW/meueYzhpXIK5fbAUneJzhZNXr
akvsJBbiTxmrCmSC9uiYCTvBV1EFBRPsH/xra7YdKpBN5jNXdQVHuE27sKGH
3SHZOyXSvQJVzOwWZLF3gBfbz0a1sc9flywf8a1A+sW9l76l2MN5uhcj6tgz
vq70fQ+uQGe7XihyvrCD/Sabq8rYHcdR7utbFeiR14H+HwftIPDmxXMKO/Vs
JBdFR1Ug67/Dh1+Z2sIu+fSMC9ifNU6JM96rQDzUgROnam1AYZPyiAz2vuY6
T6cHFcjrbN3iTXob0G0PbD6D/apoulf6wwr0uuikpaqXNZTz7gsUx+5ad5k3
P7MCpcekpXG8t4Lp7kZtEex7fEICkHcFst178FZqkBU8uC5Cfw07t2RevjNT
OVr0lxPjdPCDhwOmq0447+l491qLLZchqhvndj3s9oWW5QvP72KvLaMdvPi3
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
DxoplBRLwrz7BDfXja4aaLd+PxnE4I0GFy9HSWD+791Vb3VrM2DMHaMEM7++
7zbaX7GO97G7flh6j22rBf2pVbaqDHeU5P328DX8XCy5u3ecE6+FovT2XsDn
O863OV90MKfTNqy0UIwAi32b576y7EBlTGsK97EfJsbUr2NjCWCUMhIjBuJo
p/jqrCTmr+uOHLpmVAtkrVaZA8UuyKpSQeo7Pk/J/nfOmv+fc5bq8Aj9ttU0
cDGUP2jta4ReeTCneOHzSMX3lIhPx7PA6KeZheS6NWKW+Sdehffz8Qv6a73e
tdCqN9VSnO2EBgqenK3Cfn6ft/8XzZQLi4Gwnr1ohcxHwxTn8DlCKaOGacvl
Wrg1Vbv+OtARCRR7cd/C9m3Fi1zDAwVQ5UqnVaRoiYYfx35nxvbvsksb+q/X
gjAtr1OJswO6cVrtfRi25+ZXzbVKKQR1ztnd/J4X0TUNieUD+PwVrhW0vChP
AnfXLr24+fNo09rPlwr4vHnHkln2WWsRvEn8J3Ax2BypCsQrqOP1JddYxmxF
sxjekUIL5oZtkMaet2+v4v3J0IFbt+96lcDxnYFV6hvWiId9oJCM9zljGQkU
CWopOAcs3GCVsUadhyXnKoh7r6I5rd43loH0G6Erx9mskMrej+TnxH1tXB4K
PqnZyLpL9v5fTVOgJ2VVK+N6q/4pRlq7TUHX22Pdv+j4gsyXkg7if4zXsvtr
hq+T0c0STyEPOh8Y6noUVoXX9/3Kf00znIpQpVpzHtnVE4JDV0KI99trt9lk
hMJI6MfHZfeHTTYw4VWpSbzXUnLq/ak0WYjqbtA8jui7AAc+2W+nwfUj3nJW
zRDuoOyR84G/hc+D5dJNsUnMmS1TM/lj8lBjb5Bc6jUzeOeQmp6B6z9eq9da
erkCvdI6YXhUMxBoYhR/E/d6C9Nf0/T8nYnc9WliaV8a4/P2SAjCz+XNO26c
+bcCjeaz5oZW+sOuLzFGL7A966vU1aTXFSjwyvbs/ExfuMGd4rSK+cdExeTJ
mlTkk2+QGGBlCJD/TacQ9zeFRz35ZzwrkOYKS9NnYXw+7eOmsyV0rP/Ic/eO
3kTJBW/W33kYQCb9/G5WQk86pmkStKkCffrw660htzfcjqd/1IPtZW8pf1Iq
jkMBN6eZSsTO4PVzNfo8tp/SDvp9JZWKznXPivGd8oTGnrEC4h7VgRuK26Xs
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
eDfJr6gUJa0yDhdg0xSfkQLvYBhJva1AuDNrVmztsIkRoIamyM+FGQSc5X/T
yHkae+kJhS8JAmw4ezhNPZMGndFtr4iP1Orm7AnbGzy02Wk9J3ldHNju91Ld
S/wzWqNuI494GK4z1OQwEgOre6zPx1P6lqn7hy+852FHgMueLlY01LAM48NI
nrl5is+nzzw80lv59q99UaB1949jwZSe6DTgtV+Jj20xG1lJDRHwOOz5ix2U
vs4gck2UFh8DWE+fBi+g3hPY18IITyRV7vzrJl0+bm3c8cMzcSi8NjGa60nO
kZgsh7JLXNwsb55xvy0W8o/qR64kudBGyzuKF/Jxy/h8ozPuTIhZ0qlEuBs7
QyYnjyzjY/06OG43jQFl+1gGzv/Hd3dG1TLt0wMuQgbPajuTDeXjsg3E5+Mw
fZ7tnxZ83Df27Kna2xAwLbMJI9yKwFDNHHYvF1/ptWY217GgxUm/cy5Vv+2p
vZ+/LR97D2/smdQTDENltY//zQuQDj9fPMjFkzYwWvwgEtKrbpfqEp+JfE5L
4jo+/jK58I+QviDw3jmQakvVR4UUp9r9zcVF7CnbvxhEgCv76AHij7qgOL7X
0Zm6bmPHozaP00CzVt+d+D9PbMHyukk81DXgiE2zw0Cpcuox4o8ydE3QP7eV
jzkKyn4bFtJgmUf8Jgvio9Z8UcBX4WFF2qPuH+eEQrHkYqsa+b5vVLNKT5uH
O8cS0460MKBr+/3VhC8wU2B8R0uXh0zW0JPmfDrQpv9wR47S9zzLyuXOp/TL
krTT8SHg2FqaRfL/xzrze28u5mGPbqSqRRS1Xmhf5oxR+sXqezm/mPKwfVfe
o4EE6v4svpJK8vlH3ZnGOtY89KnOnmGeT4P1HL1akqs/ZOHFXmvHw68VXuem
XA4E3oZ7WiQ//79+p4lv/E6rwn9/mHK3Em3coqZ/XBIDRR78n0gufT5DLnNV
VyW6ZMo3X1Blg2vxyWKSM79lyZTiJS8rMaCsH0bUWaCnpX+1kdLnl3/uZb2v
RP9n4r2LLSOhouKIOsmB/zKcYj1tvBJ3FV+Z5pwWDh/GkxLOk+/1E/I7jKZw
MXDS6QUFn0MhkLFW+RzJ3255fKlGnYv5N0w+xBYwQVNp1kWSr/5khTGzaToX
B9e3r6zezACmxqUSkouuZDLjdbg+F68bR0/Y6NFBLKCXkJzzgAfbpnIXcnF1
kH/bO7kQSF/0+2WS/x/72rD+wFIuDiUt1x6bCIIzjsNqJIfc8m1NioIZFxs2
9DXA1CDw203fQ3xcnN+s1Fev4qItz+/KYTMaxB0/r0pywusG45fOs+finMhT
gb1BgaDlLqon+d7/AvCFYDc=
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0.5, 3.}, {0.5, 3.}, {0., 0.08506882090567441}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6872016940162373`*^9, 3.687201713658778*^9}, 
   3.687201802658058*^9, 3.687201898135887*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJxcXXc8le8bPvuotLRoaGsppaV5Pyolo6EkhUpUZGQkQqkkGUlWstqLBtp7
iBTtpSgkInFsh4Pf+abnfX/d/XM+XT3f67ru+77e9z3jfZ/vYEtHI2seh8Nx
6cDh8Dn0Tz7Q1+fq4yaoHD/K/H3inz/f4dmNsd3fnWDxDX/+FMMmzw7Hgk6x
+JHo//6UwoKKdT/mnGHx7Kz//pTD4JnPC+vPsnj7qwRibbLjzp7HPFWwybuo
78okFp/0x08NVJ/xsRBexPy1oGUrsr98Cfush8l3XuiZJmPdRjirOULWloJ1
pTB+mNHek1ewbjMovfArm38N68pgmHuVRsl1Ft/4R7cVVh9ONd17E+tyyIe6
75sH38Y8HKLz/IDt7TvYD5dk/LxquuwerotHtr9fMqv0PvbJJwskBireD7Gu
gFgcDK7q8hjrCsiI4eWZ8WlYV0guGGudVk/HdYlI4kCtgBsZWFdM+tSf8ZiT
iXUViPq36e7Pnh1l8kT//VRQPj+pNoHB6Ss598tjYCOL07x1uX/P6EAzi9O8
vTwWHtXYyuI0b++fZ4zU4GJdCax8n5v2jXcU8VTBfq/dww4IWJzm7RdXzWC6
6CjirwX31pGkSHwU+ayH0/sLBEEdsG4jGK45Ej+hE9aVwhFBWPf3ili3GY6V
t61z64J1ZWAc2zG8VzcWp3lry36dmNId63JIx3CbC4Y9MA+HeHh+iS3uif1w
yeULaju8e+O6eORpd2KspIx98omdvZLaKRWsKyAT9u6ondwP6wqI/czVaWn9
sa6QHLmyNXqpKq5LRKbbhW7LHYh1xcTGfJOl9WCsq0Du9ks0Lx9ylMkNzZtl
r1/zi0/HMzj9704bi91MzrM4fVXv3tAx7QKL07ypCyq7qCezOM3bbvtOgSFX
4pGuBJTWLvGvuI55qsBM6XzXhbdZnObt2tjfoxLuYf5asOn38ZvkIfZZD6OW
dpk++wnWbYQ5sUO09z3FulLYvTm45flzrNsMU5VTtim+xLoyyBj79bruGxan
efO9vDDd5z3W5ZDe6/skXvmEeThkfidjh6Iv2A+XzL3a3KfbN1wXj8yur7w0
tRD75JPvY3mzV//AugLSmF6Ruf0n1hWQS24WqyN/YV0hOehZLL1QgesSkezP
ChceVmFdMVkcN8nrdS3WVSBBndId8hrimXzQvLWeF5/PWxXH4DRvY7UmRRhY
sDjlO/ZgRum1dSxOX3tWGVzqb83iNG/9OuyQeG+KQ7oS6K2effXzZsxTBb8u
D1KY6MjiNG/ntyyQ+Dlj/lq42EPq9mEr9lkPNeYfTg72wLqN8NrDZvcmL6wr
hc5z1JQTd2Jded4CbB1Kd2NdGRzesCN4qB+L07wZOod7m+7Huhwi6vVsfmAQ
5uGQSRkjqm6EYD9cYmd8zLfwEK6LR54N6d1BIRL75JPetkv9RkVjXQGx3NFR
sCAW68qvpx1/7F+bgHWFhLvIaaDbcVyXiPw0V8/adwrriklHC5+oiLNYV4FY
30vzT0iMY3JA8wZ+va4e6BbL4DRvs0/or2nuweI0b/baa7eu78PiVKdN6MXJ
6Mvi9HXAtEsd1FRjka4EtveujvYZjHmqoLb/8FsfhrE4zZuSeXeXkSMxfy18
ebIpe+sY7LMefm1Jf31vHNZtBM3fF/35mlhXCgf9DzbNnYx1m8Ho8GMNHy2s
K4OIBwHjb8xgcZq3sOk9hOWzsS6HFKlsvdpvDubhkIsHUxcu0MF+uCRd826m
gy6ui0faptrNOqSPffJJx7t+ScmLsK6AFPPvq2YvxboC0iU1NaZoOdYVkjM9
JKMbTXBdIiJdVP5WvBrriknO+c7xPSywrgKZ+OT0wX7rYpl507yZOI+U1mUc
YXCat4WBq63XPmdxmjfRTTuS/oLFad5GHdsRNuINizOfF2JjNvq+P4J0JfBe
eO1J7ifMUwX3gs5eG5/L4jRva3ymzPX5hvlr4ecARdfnhdhnPSjl3luqVIx1
G+Hi1eyi5aVYVwodXI5NDivHus2gXR1kkF2JdWUQ5pA9gV/D4jRvs9MDfk+q
x7oc8uz+x32WUszDIRLDFIUgGfbDJY/e8N2T23BdPGK87ljeG14M8sknw9v0
tSXCGKQrILe+Xz7foUMM0hWQtus2gwcqxiBdIVn0TpY0vmsMqktEorzzls9W
wrpicnuw3SDdXlhXgZQdqu+9SDmGmSvNm5qpbbduu6IZnOYtVslf292XxWne
cvbvLPqyj8Vp3jLt7HkzAlmc5u3HmBUnIw5EI10JfNJTe/srFPNUgdOllKhZ
ESxO83as8kZTwGHMXwvT4r8J3sVgn/WwPvLaPeUErNsIfeZfH296HOtKwahh
3vqIU1i3GbSUL1hkn8W6MlDYPWIMN4nFad6G3f/wavwlrCvP1eKnJmYpmIdD
EipqM/ZcxX64pM8bMurMDVwXj1yq9NyTfhv75BP+TMuvBfewroA0lMVoSx9i
XQHZcPHuFcUnWFdIJtXqQv+nuC4R8Rqa9HPEc6wrJpaf5tzQeIF1FcitgSuu
TnwdzcyP5u3pgpa4nBmHGZzm7Vbw70gAFqd5CzG5JDg2h8Vp3iavN5W06LA4
zVstKbNcsfAw0pVA8Qld6/MGmKcK9lyey2lazOL09bVe2EydZZi/FoItPw0J
WoF91sPF2XG3X5hi3UbwzzDu2tkc60qh9uUatQVrsW4z9DLnd/Bej3VlsPa3
8/2LG1ic5m3svedLc22wLocc79b7qdAe83CIur3O6DFbsB8uWVms5WPgguvi
EcNVt1/buGGffHIkdY/aHg+sKyDpIyf7HfbCugIyxnNN47mdWFdIbk/a6Xt9
N65LRL4UtUx4uBfrisk2M02FDH+sq0C6lq7tkhl4mJkTzZtlaZ7h4sZIBqd5
G9a6u3tqM4vTvB3e9dtAqY3Fad7MF47rYM+LYnCatyGdZy9+LIxCuhKov9Yy
oleHKMRTBaeTp8RaKrI4rcN3SsyVxK6YvxaiotM9JEpRyGc9VIfPqh3fG+s2
gs0hB3V7FawrhfTa5NGn+mPdZtBdo9fwaSDWlcEWmdURhaEsTvO257FK/0lq
WJdDNO9u9l09CvNwiGz+wi871LEfLkk0DhoZr4Hr4pHia00uNzWxTz6JWDr/
yavJWFdAgqw7DyvSwroC0pr5OapmBtYVEo0xaiPbZuO6RGTRguW5ojlYV0z6
jr5+u6MO1lUgso0HsjvqRjHzoHnzdUt/Z38tgsFp3rZzW6xf3mRxmrdOSqVO
6ndZnDm/xUVw9z5gcZq3B/vrBuQ8jkC6EujPKXo5MgPzVMGDG8MGuT5jcZq3
tIVWfW5nY/5aeOSsda/lFfZZD1UbBw2Y+Q7rNkJFv70z3T5iXSls9r85LOkz
1m2Ge3VNeXl5WFcGTtpOWzoVsDjNm/tQjaJJRViXQ4qdNbVXlWAeDnm/ySrE
swz74ZIe36M/HP6N6+IRo1NhqikS7JNPVke3OmTUYF0BOd/F9eWneqwrIJcb
PRYUS7GukNir7/laKcN1iciP2MqYujasKybcKMV9DbxIpKtARst6nqkTRjJ9
p3l71FtJMsEtnMFp3m5qJi8N9WBxmrdc1erx5V4sTvPWuSEnco4Pi9O8nf1k
HBS+Jxzpys9vE2b0LfTDPFUQ2k134ZgAFqd5c3IYOmRLMOavBeUd5hcuH8Q+
66FPnWNNeRjWbYRU43uyYVFYVwqXp0a+XnkE6zbDuhCN7f5xWFcGPWuTWlOP
sjjN26Yf/TZ+OYF1OWRJ1623W09jHg4xC47lq57Hfrjkh7rlgmkXcF080vHi
rgNLLmOffNJFcCJ/fSrWFRDH8FU6Ltewrvx6unVU2o6bWFdIxp/3tvK7g+sS
kdR1KWMD7mNdMcnQ6DYi4BHWVSAS3WwTvyfhTH9p3vqnHLU+PDWMwWnesps9
jtRNZ3Gat84xeYsXzWZxmrfln58dOK7N4jRvDT1Hra2eF4Z0JbBX9DRrli7m
qYJ65bV5vvosTvMWnHzoSMYizF8LF7zKFEVG2Gc9GN/4MpMYY1153rzTNN1W
Yl0pLO7wu/7MaqzbDPY8/9D3FlhXBo0PUjq2rWNxmreCQ1tth1ljXQ5Jbnt8
Q2cT5uEQFUXvFsvN2I/8/ZvnZuLlgOvikVPd5u8PdcI++aT5xaVvx12xroDM
1tLSv7wN6wrIwsDVb29ux7pCMoG7Z+d9b1yXiNh0EJo89MG6YrJm7/B19/dg
XQVyk9f71E2/MKaPNG/CCbf58U2hDE7zJn13pIu0hcVp3kZGlsYu5h5icJq3
xtqj148JWJzmbeqh4xsrxYeQrgT4O25c1eqEeapAujfivHcXFmeup7veL7rX
HfPXQk58y/mmnoeQz3q4fN4rQ1MZ6zbCDLPEpA39sK4UnsdkWUaqYt1mmP+s
c/XDwVhXBirifZalw1ic5q3D1hl3FEdiXQ7pvENFrD4G83CITu9mvQXjsB8u
2dtyKsRiAq6LRzZzsnKdJmGffNJNq9P0XVOxroAIFlZcDJqOdQVE81j5nPBZ
WFdIOFdtW6IIrktEls249SNqLtYVk7xNffnh87GuAtk2+oZZ0MJDTL9o3nRH
Nh6F+wcZnOatRXLS9/AjFqd5+1VyrKL8CYvTvLU+KyyZmcniNG/J++Z6+Gcd
RLoS6Bzgn/jyJeapgn0d1+xTesviNG/LV5n3WvoB89dC3Ti+RWAO9lkPTuU3
bR7mYt1GmFPxjtR8w7pS8HoZ+mvQd6wrP78lKzvrFWNdGRzd5ZXrWMriNG+W
s29rhpZjXQ45Ov2e18VKzMMha9euepRRjf1wSZDzkk55dbguHnExNFxT0Yh9
8skNtbInzc1YV0DuP0+aL2zDunL8m7i0Iy8U6QqJn/LqK4rCUFSXiNhtr7nU
USEU6YrJnrBO3wWdQpGuAjl79fny5s6hTF9o3m5/1daq7RjC4DRvhaduXDvW
ncVp3g4GBSyYr8ziNG/zDofJClRZnOZN2cCnxHV4CNKVwIL5L1TaxmCeKkj6
knXSR5PFmd/rL8VFS7Uwfy1YGkzuYAvYZz08SV0teKODdRuha21SzAQDrCsF
nWvR3/yNsG4zWDzfmP9xJdaVgeS65kXVNSxOX7mzyleaW2NdDlH8ZiYJ24x5
5NfTzcN8HzlhP1xy1+PW0NJtuC4eyal0+CregX3ySZW37WNVX6wrIKoDLhWM
DcC6AhIZoKw7+SDWFRLJAzPh5Ehcl4i8cFQcOTYW64qJxCns3oDjWFeB1JFp
H0VnQ5j6ad7mzR53I/xIEIPTvP2Inl4z6xiL07wZ7zOe//UMi9O8GZ1c/Hjr
RRanefMb/cxTcDUI6UrgbdDUXQG3MU8V9FfKLRI/YnGaN3v7F9e9nmL+Wui7
vLFj6Qvssx62dO9TafAe6zZCT+U7rme/YF0pzAs1TGouwLrN8KFUdHr+T6wr
gyYzqdP+ChZnrqfeioPSarEuh6y+1Xq/vgnzcEhCifW6wdxg5IdL7t+51GOe
OBjVxSNBJkOKLToHI598onErt8SpRzDSFRAL3Y8jvFWCka6A6MwpuuIzEOsK
ieusy3Few4NRXSKyK/aRZMsYrCsmwYIdd8wnYF0FUvpqUNe5U4OZ46odz4dJ
Fa4Jq8YGMDjNm9Mz39i2iSxO81a6cfH1mOksTvM2vNMRroY2i9O8paQ0Bd1c
EIB0JbD1yifbGYswTxXomdgnXVnO4jRvuzenWQ5fjflrwTb/TnzwOuyzHnab
dHD6vRHrNoLv1fFl8xywrhQskw/0DXfFuvL3O2uXK33ZjnVlUPrIv0BlF4vT
vDnqdji8ZB/W5ZAhqwJ0dgZjHg6ZnhclPRWG/XDJmasRj9OicV08ojf/QcqX
BOyTT8Iq1T+UncK6AvIj8NnM6kSsKyDOZevqqpKxrpB8XxDZpew6rktEdj75
Efn5LtYVE8+v52IfP8a6CsTvS59xpzIDmPM1zduQxfFf4PE+Bqd545JeR/Mz
WZzmLbL81z73VyxO87Z9Ue5J8UcWp3k7NNVJ4UDePqQrgZgKUVqnIsxTBaFP
n//0KWNxmrcuDx/s+y3B/LXwsMut5KUN2Gc9FF9bs+1CC9ZthO8DxpVyBP5I
VwqxEW59DDr6I93/zm9rlEK6+SNdGViVFZdm9mZxmrd1NV8vyPr7I10OeeFc
bT9iKObhkCa7E9P0RmE/XKLTqj/IWsMf1cUjg76oTnCfjH3yicOLEZ57ZmBd
AbGZbNB5nzbWFZBh2/Xrdy/AukJiF3R/3jZDXJeIFJgMEFstw7pi4j/tqv5C
U6yrQN46pw4ascafeR9A8zav5anNbLO9DE7z1raS0/zZksVp3mznTr7qYMPi
NG+vPHqflzqyOM2b+6Whvzzd9iJdCZSNuri/zgvzVIHVqpzIDXtYnOatxTVm
6Mv9mL8WioT3iMZB7LMelu352uoXiXUb4dBXB4cPsVhXCindryUMOIF15Z/b
El8dNzuHdWWQb5q8L+wSi9O8eW8ZbPHoKtblkADHh5NLb2MeDvnq10FV4RH2
wyUpffTUBj7FdfGI2aQk83EvsE/59VRV8+3kd1hXQMwfXo+Y/BnrCkjJuJrU
sflYV0jm99o6U7UY1yUic6acmyUux7piMif3w5OfVVhXgXwwGPz9UcNe5v0l
zdvj8m0rljTuZnCat9Af927+bGVxmjcztSP67sI97O92f/OmOvvCgLZOLE7z
duulnba30h6kKwGHsQOfVitjnipYUZ37aM1AFqd5kx0OnZM2HPPXQvduMpNB
6nuQz3o4bHCph6sm1m2EpzlKfve1sK4Uqjasv88DrNsMzUapL2fpYF0ZDJry
K32LPovTvIlsnl2JWYp1OWRqQMnZeyaYh0PCuMkpOebYD5d47rIvKF+P6+KR
zX4z5zXaYJ98Mvxd77JmR6wrILerXhQ0bMW6AlJ7vPv0ck+sKyQH1m7g5uzC
dYmI/guN+ff2YV0xmaaR1Ds2GOsqkPOf6nycw/Ywn1to3sbPX3fXMcqHwWne
MvktDfx4Fqd5M7p2Z0PISRanebuWpdVPKZHFad4GlXxWC0r2QboSCHD+eqTl
OuapgkDtpf4b7rE4zdvxIT05GWmYvxYCXb8oDXyOfdaD6g2N1w6vsW4jHB/o
oH/tI9aVwun+maF1eVi3Gfr90r2iXoR1ZbC4b9aj1WUsTvOm31Mhe7cE63JI
xPH9hcfqMQ+HmDldVbopw364xOngU7unvF2oLvn7t+pPbS8VdiGffLKm9P3n
l112IV0BMT3hr/i05y6kKyD7j4efuNF3F9IVkpTJ7hePDdqF6hKRS7+DZuxR
w7piUtNdwdRcHesqEB+l5p7jNXcxn4fb8XwwbPI8NNbFi8Fp3ibYvX1g6MPi
NG8VQ30tzYJZnOaN8+XsEdMjLE7zNu5na6DOGS+kK4FFbiUrB13BPFXgfmXT
0LIHLE7zFsDT6HwiG/PXQrDygan6n7HPehg2evfjwmKs2wjWguTXNjVYVwqh
Izfvzm/Dus1woyCpbr6iN9KVgfWKgfpxyixO89YtUuX492HeSJdD4o4fU+k7
AfNwyLat9q/ILG/kh0tsuUVFJgu9UV08YqWhunWNsTfyySdWOSXxJuuwroDs
vv9gJ7HHugLyeHvepL4eWFdIDm8e+aXIF9clIgtPzQk5ehDrionHe197w1is
q0BMR3IO/TrjzX6P/DdvxnMmbdx5dxuD07yd2tjFNOoZi9O8zdLXyYz7yOI0
b75xeZ8PFbE4zdvlkh2X3aq2IV0JbH7garewFfNUwYfmS+M7dXJn78f6mzf9
jxmqd/q4I/5a+DSw2cRsmDvyKc+b8YSWX+PdkW4jbEpvHrd5ljvSlcKtpMjO
nxdi3WYohbIbWiuwrgyWZwQu2WfJ4jRvt07fq3nigHU5ZMTGrQ9rt2MeDjl+
2+hTj33YD5d03n1+xdAwXBePuN3fvWpoAvbJJ+pHwrk9E7GugJxcZGhTdw3r
CkiPwS8vZjzCukKiYVBdEfAC1yUi9WU68+Ez1hWT+Pxur4t+YF0FknrbKNGz
yp35/o7mbcsT/f2ZnV0YnOYt90uDbk5fFqd5e2NRH/pxBIvTvG1QmrIvbRKL
07xFZenqH9V2QboS0E+04mxehHmqYP0c66fDVrM4zVtlelZa9kbMXwtbJj/p
vcEV+6wHI5fB3377YN1GeLfZYrZ1MNaVgtaok8uzorFuM3QuTdceehrrymCc
uu5w2xQWp3m78dhE9dg9rMshGp/e6T99hnk4ZEHFoqxvH7AfLrlYLLpXUojr
4hGbpsrZ+RXYJ59sTr1sl9mEdQUkoeCE1QmRK9IVkLTAnLkOSq5IV0gqc/uM
GK3qiuoSkXtdckd/HOWKdMVk9pLVm7dOdkW6CmTR2T0CobYr870wzZuD+gAD
7lM7Bqd5s1cJ9exWyOI0b8I8j7eyZhaneTu4en90ei97Bqd50+pxQ8lBwx7p
SmDC7gV7anTtEU8VqOxNG2diyeI0b70TO6yM9sT8taCwU1v7Vrg98lkPkmc/
x9y6gHUbYc+rVyuj07GuFMrdByus/IZ1m2Ge12qP+gasK4PSXat+uXZzYHCa
N90pJrFvRzogXQ4ZtKo0U0nbAfFwiMqzDsmapg7ID5cYefc8MNHJAdXFI4c9
n8X22u+AfPKJy8tlyjlHsa48b/baM3bcwLoCYtcrBISvsK6Q5Iw5ZeFQgusS
kebgVa9vtmJdMbloVv+ypJcj0lUgRo8nHGpUd2R+b6B52xuU0mWiz3oGp3k7
/zmMp3mExWneLF7FT+pyhcVp3mb/MC3LyGZxmreSuEOb1pSsR7oS+Fq1puYd
xwrxVEH26WEvRvZlcZq3ZydCZ6yeaIX4a8Fr+llvOwMr5LMeemy8897M2grp
NsI2hW2+6juwrhSedfmU+SUS6zbDkGNaP2wvYV0ZXJxp2OtzBovTvM3PHHF4
VD7W5ZBFZ6YlmjZiHg6xumYcaNvNGvnhEp+lKa5mI61RXTxiMv/XcQ1ijXzy
ybLH/KVFJtZIV0CCYdPN7Y7WSFdAMk0lvWr8sK6QPErJTzCMt0Z1iYjS3fKQ
gKtYV57f/Vqq57OwrgKZG7hqd9J3irO/q3aTPPz0ODH0799//P0epQB6rJhh
6Dg9gcFpDqdNv91gMZPF/9iMLoLHYVFu32YlIJ5iAHuLgCxg8T/lZpWAC8dL
QV+bxWluh3pcD5g8l8XbX39B6rxeiinzWJzmuQZ+cI/Mxz4rYP7ZbQE9dTGP
BK5vqWiULkTrUyXAW58Q5KyP/VSBwceH7saGSNegGrjlW/plLWJxelxYJU4J
SFrC4n/mVVwDa3RvwmAj7L8Wen5VnNK2DPn0qYNck3E8Z2Pcz3pQ3vDb19AE
9V+lAToOdtx8byWutxF0A213Rq3C9TZCeT+Br8gM1ysFn/GccXnmuN4m8PNc
s1xvDa63GZL694xWXYfrbQYbt7yi/ZbYTz6EeERmlmvhPsggYE7909VWuA8t
0BacNuuJNeKXH9f7xQVPwjci/ypt8PadzkbZJqzLITr7pVGZtmi9KYekT/S2
0bDDfjhkXeHiBU32SFeNS5ZedDKwcMR94xKJ/bcvak6ozzVcsvdUL+X9zniO
PKLUMcR8sSvy+YBHtPsueHdpK+4znxwwnfDOZRvyGcQnqype+r9xx/UKiJtg
74Lw7bheAXk+bMOsKk9cr4Acb5h0/7I3rldIMgclSTvtxPUKif+JT3MyfZDP
Gvn7+qLxT4bsxvMSkfRptTl5e1ic+6deEXlpsOXM5L24XjHRKmsMrPDD9YrJ
oyVvz8zzx/UqkDRVnbXN+yle9reuQqhcNz4nfFIcg9PzWMjwbQ68ySze/loM
dXdatrVNZXF6Hru95MF2Oy0Wb/dZCgNXd/W3nsHi9DyW8tZZ+vr/8PY+lMON
p95KGbPjkM9y6KdxskYTME8lXLdfOGjYHOxTAuszlzqHzMH8VRCXt+qWlw7m
qQK72et2lPwf/qf/nBqYqLan9JUurqsGpl48OmjGQsxTC1/6e10bZID910Jt
h4x1AQa4z/L3med/jrJbjPsp/7yz1lXv/WLM0wBXlI0NUo1wvY0wa6Tm937L
cL1ScDaZqlZvjH1K4WuAyySLFbjeZuDpVd6fZIrrbYbmxIj5saaYRwYvFTMG
O5pRvPLvawEkOPU4d10jBvn8bx8Um+dhE9j1NG/ph9zedtOMQfXK4FPVt8Ef
zLCfVug9s2bZqTWYpwgmCcxXDZ4Yw+A0n6ffNq7dNjkG9acVVuj7vui0Fve5
DW5MC7P4aBmHeEqg5y4nL78pLD/Nc9KrYOscLVwvhxzfmrB81no091QOCXBK
XijcEId4yuDUK3vlkmksP83/+LvaZVNm4v5wyHoy7Y7tBpQHHy55Fzt3gIZN
HOL5DebHV0ydOysGzUsCHZ4rNIZADJovl/R5Pa9zuA3qjwGPPBOMKVhuh+bu
I4Gud5ULjxDcnyp46XE/qmgOy0/P804/ji6+aYdypcInbx9PinNzRP1RqYZP
hvsHV8xl+enxaPJj9JtJ82NQTvhka0/lwM+O6Lgo5pOpor6m4c5x//Kkyj8n
TtnQOnMB7n8tWClJL/ksxPMVkB5d12U0OOP5CsiahT79L25F/TeogxyTFbv2
6eF81kPk9IfTnhrg+QrIvG+qit3d8HyF5MQRacVjd5TP4nqwKyhNyTbE820E
cR+Be6cleL5Cck2tYK2aB56viBx9J/j03hPPtxEioo7EdF2K5yuFx6PUXfSW
4eNLRDqaDcue6oXnKyYjczt/+74Dz7cJLqtmzTVcjufbDGqiAxP3rsDzFZOT
YqOVOjvxfMWk9ot9p4pdeL7NcHtOVqqfCZ6jAoG2Bx0W78bnsXw46F+Yemoc
zoMMJh3e9PC2KcINWmDZ7Lc1t1exOD3PRNv+GFZhhvDiVrDkCBR/m+N5cUj1
L+UN/dcinHBIdyc7Qd912A+HPE/hBc9fj3BFLnG5KvwxxwrPi0sePwg+ZrcB
4TlcYu185erGjTifPGKbdjDxgA3CT/NIa+eFO/xt8bz4xHvVi5QkO4S78Mkx
yc75p+xxvQLy1LDuXrojrldAfNO4ve9twfUKiOuHox9znXG9QnLyyvraNy64
XiHp+2mloHIrrld+HJ0fUfrdDc9LREQDDxm0uCP8tIjcCbzTLPHA9YpJeOzF
62IvXK+YvHbdMbHJC9erQI4dbzHospPi1X91C6FkzanDSzSjGZxeH62cCnqP
nsji7XX9gDcd+72+MpnF6fVugXegevAUFn/xp28/wbOkZXfPaZinFKxsf979
9X94+/uBcrgpXXHdcSaL0+vRqAnNb3VmsXh7Hyrln+P6bEsHFm9/lUD/govb
YgheXwUh6srPlediP1VwrfJDcvlc7L8aPif0u7NhPuapAXs/jcBpC6JRP2th
zf4so8sLsf9aWPTSXHG3HvZZDw4d7kfVGeB+1oMbkcxKN8Q+G2BW2pawKUsw
TyO4FluMFC3FPqWwdszCRS7LMI8UPC90eqe9HNfbBCPSo18lrsA8zbDl3JyF
Hia4XhlkuccPyTf9i/vQ51LzYeKng6tjJ0chn/nwsudLl0ca7Hqat25SP1tz
rSjUNxl8NZt+MGkVzkkrpD7zNuhmzvK0r/8OPxf1u9RGeXzY56Cv56zrendG
FPLfCiWtPZK/mOP+tIHPmIUrZq5l+dv/vQSKb4d6WsyMQvWWwhQLv0nKgOvl
kAEPvqSK1mF+Dhk0tWWB1XqWv73PZfBsH/fZDYhCdZXD5xUVhQ5zcH84ZG6X
/UfHWuG5cEle465R/htY/nb8N2zssPZEl7lRqC7555fHnkMf6kQhn1wy8mPr
jiUb8fmBR1aNTeSdtUH9N5DAw/cB3dbOx/2pgi2Dpa1dFrL89Dxv8qyTiaMt
ni+fRO7R+vLYDvkvrgKLLrp9LyyMQn2rgWW3VHasNGD56XWhNNp2fIA9Ph75
ZFDe+1tfHFn+P7o+NZB+cX5mnQHufy3oVHqci1uM5ysgm6c/Ujq2Bc9XQFqD
+p2rdEbHhUodBH1SVZu+BOezHtJ9E/Z/NcLzFZDDg08Lr7jg+QpJdcSBC21b
0XGUKj+fqBpN274Mz7cR1pRL1fqtwPMVkhW+kd0eu+HjXUSySo6+7OSB59sI
Ndn6na6twPOVwrfgwv3LTPHxJSLvwjgzXnjg+YrJrpjk3j298HylYKy17uRv
UzzfZvjWJe7WPjM8XzHZdHN20HsvPF8xKRvXOUB5J55vM/yWvlYcbI7nqEC6
vTncKWcnPt7zodfz7zOlk3AeZBAXbfLw+hrUB5UWSCNPDZasjfq3rv/2GRgy
5vR3S1RXaitIu5vaea7H8+KQj0n9nDptQDxqHDLhgK/L8Q3YD4cMP6A8WsMG
8ddwyNdJU2yf2OB5cUnWZdmnRXZI9wGXBKjprCyyw/nkkYD3B/baOiLdIB7R
3eCq0+aI58Un9W93Td3tjHRN+aRCxWVabxdcr4CM+OxaH7EV1ysgRzJzZ4xy
w/UKyNTEmsxT7rheAeHFT1uu5YHrFZKmXLebyZ5R/+bhgZBw4lv3z/XC8xKR
nJ5WWTd3sPif62OQiMz/FVyktxPXKyZBc7t0vLcL1ysmP1umbF60G9erQMbn
X/W450tz2ABtf/4UwNbSNFNXEsHg9PpYFbZW9YY2i2v+wX+Ageo7nTdzWZxe
73Lcgkx76mD8J7w1XJk6ZgGL0+tX8ewQFTtdFv8DR/+Cu5r6iT56LE6vRyZn
TDfe12fxP3BWBSxJPjDltSGLt79K4EVKmn6XxRivgklqv80HLMV+quCiNPTl
SiOMV8PSKyqjrZezOD3/723Y3BxvjPtWC0NDL584a4L91wLPpPhj/krsvw5g
ydS3Jatw3+rh28wd9qpmGG8A87EDHg6xwHU1wuHQI2kmazAuhQ3Gt7earsN1
SWG4XtCPIEuMN4HHOGNpoBWutxlWXzrw6a41rlcGifHKy29t/Iv70OeU80Ht
1rra6/phyE8+xLzhrTGZza6neZvp+Nv426Iw1DcZOJzMOFW2CfezBVKWqh4o
smV52o+j79DqXcDvtTiMwWk+9b5XjNUyYvnpeVKzfIFxDzvc5zb42GJzqaMD
y9/en2LIXmsYbm8UhvBSGJSlHxJkjOvlkAP2nSqnOqK5+MjfR50pu6/uxPK3
vx8uhekBJy4+NGb5af41C37tzl2J+8Mh+9yk21c6o/4YcElF4fYMPVeWv/06
+Bsypjxb3d2U5W//7yQwc1pC95FmYSgPXPKotYizdSs6TlV4ZJRyQbbVNtQf
FQmoiQ+eNDPD/ZG/HzusOs9xTRjqM49E/QzyD3aP+HcuxTzS/+HLz9u3o1yl
VsGiRUmhJ9aEobzVgNndTkNTLFl+el2w0I5VOe6JcpvKJ5fO/6gL8kb9N6iB
FRb3xxRb4v7XQlpS1TWJNZ6vgLzzOX87ZQeer4D0mXhRLcYH5bNYfv5+Z+Q5
bAPOZz0Mls1TGGOD5ysgFhkz3O7vwvMVkiv7jrme2hPx7xx96mFMYY6/hQ2e
byNM7Gc1cJ0dnq+QRPZ7uOSpLzoPqIhIQcGwkkQ/PN9GWBadbBZuh+crhcmx
UYIwR3x8iUjK6cNG2fvwfEVE8Dhg78X9eL5SuDxhcNsTRzzfZpjpqfTggTOe
r5joSzrveRGA5ysmezV6mFwIwvNtBv+lq9xrnPEcFUit8qrS58Gon//tL/50
QesufZwHGYy2qjYt2xqG5isDWObxqr8bwuXnmY6N8LmrB4u3vz9shbMBe7vO
8cDz4pDEbpW6E7yQriKHBPk7zVqPcfl5YKzg24VFO9FccjhEzaKfpQ/G/7v/
ufhzt027kc/TXLLnq8He6N04nzzi9Szaw3svi//pswuP5H67ffHiXjwvPjHg
3a884I/qJXxi5Nmx+L4/rldAuBaft8cG4noFpLNBhmY2xv97fsRm05DTB3C9
AqJ1wT72A8blOX+Y+OZ3YiiuV0imNViPzsW4PLcVXx2LLoSjulxE5OVtYVEe
xuU5FI337ZwUhesVk8Pcg6++ROF6FciAbdpbTh+hOaTPyxfAsR2ZJrEWoQxO
r4/NhQmZumtZvP16UQRhczO61a5jcXq963j/iU78ehZvP///BGeHwcsWWIci
3VJo/vZwceUGFm+v6xfEXHw0InITi9PrUa2ii2SGLYtv+qNbAZ95O6LyN7N4
+6sEFHyPjve1x/4lwFfomqjmiP1UAdFtUn66BfNXg9r8vps3OWOfNaDooJIi
dsX11kKU19j8U1ux/1oo2eAjmLsN69bB2/L7St/ccT/rIVQ/Rnn7dqzbACtO
anbq6YXrbQQY/qA+yRvX2wjiJ69ez9uJdaVwcrLGmS8+uN4mKMh66eC0G+s2
w+dZPTRFvrheGczNXVwWvRf7yYczSaZvKsxwH2RgnrYrQX0f9tMCxs2rDe75
szg9j10z9WxYFID9tIGWRVns10CsyyEmub+07YMxD4e4nM393nQA++GQZbfP
++07iPm5pGYcZ1SPQ9gnl3TQ8syOC8O68vPVtC6uIyLwHHmk8rSi6uVIrMsj
j+YkZU09jHX5xOpS08570ViXT75OtZs+LwbrCohlQHbT01hcr4B4XMtKM4jH
unKcNEW8TMC6QrJWb5rL0mNYV0geFxeufHMcz11Efp/raGh0EuuKSP7nD3qv
T+EcisipKj/TxWewrpiMb1VyyTqLdcWk5WtBgu75v7jP/+2TcPP6kSafEAZv
9/MdbNpeFo8vO8Dg9Dw29InP9pj/w9t1i2FDsM6j9xIWp+exWTO3ZUAVi7cf
F6Uw5brGQ6cGFqfnMZFpm9aX/8Nj/uDlEKs9q07QyuL0PMYpS8u3/z+8vT+V
ECSocAwRhKB6JZD8ed6rBgGq16cK7vuFzeneKQT5qYKeL7OVPf4P/+NHpQa6
Ri7dEdA9BPWhBtJu+zyvwnhqLbh+VZ3U3CcE+a+Fr15LpeuUEW5QD8+9n7iu
Vw1B/ayHYzbi1Mz/w9vftzRAccT3JY+H4XobYUnxrA6jhuN6pbA+99envmNw
vVKor7FS9BmD622GuyPUBthOwPU2w/y7D7NeYDxVBl2bL41Nnkpx9rn1oKme
lg9SAhm8nacAorp8+/pSORD5z4crJwmp+H6AWU9zOKtRoaW+fyDqpwy0hziu
6qUV8m8eDOR1d/XuK5nF+mk/vopgQfeJ/V0Gsn5oblNSq5LChwb+22f5+ZOn
bfFk2Wzc/zb4/cmkRm0ey9/ezxII3fHSs7NaIMJLIXLY7IBRo3G9HPJItmJA
wDw0xwcc0qVbYYaxHsvfnvMyKOtt1zVBneWnx8Xxnf6nr47H/eGQwt2NTjf0
UN6CuCR2fMQZryUsf/t5oAJ2+ob+HDExEM1RAtE6M3tMmxqI8iP/3Jp9883X
JShXpjxyVvboWMwK3B8JhDdEK5+dhvtTBaZ5kQWps1h+ev43Vitb1LIC9V+N
T4KaI56kmIWgXFXD4fvJlwcSnLcamK5+dojavMB/cyu/Xlw7llzXwxzluYZP
JPXdhzyyxP2vgduFHx8emI/7XwtZY5aVhOjh+QrI24TuH4asx/MVEBe3numZ
m3A+6yA75atZnQHOZz3M9F5Eqpbg+QqI0vwfraNs8HyFRDTN+EGmAz4eG+Dm
GrtDy5bh+TbC9qZhs/VM8HyF5GZjwY5Rjni+InIuacPAR654vo1Qvq/Z+Zwp
nq8UTHSmVB0xx8eXiBx5E2U1eCuer5gcsbpWlbIdz7cJDqR/6dKwBs+3GSYs
v27zfT2er5j06+d8r7snnq+YaAQH68T64Pk2gwVous3cgPuTD9Ptbm1a0hvP
XQaXZSnXh9oGojm2wNWRTTc87DDeCqO8Ov5avYXF24+7Nhi5TFhy0RnrcohW
69YeQW5I14BDJlySdc11x344ZNDgveSKF+q/Cpcovl47l7sTz4VLlrgn7Hq3
G/ks5hJz54CDqntxDnnksaKwuNyfxds/v/PIg6rzokmBeC58cuDLC6+WA6he
Hz7Jf5V1RTsU1ysgYUaVy0URuF4BWTj+3bkFUbhe+fu355re4hhcr5CELdxZ
qxOH6xWSJj4RcI/heoUkoWTDiZkn8LxEZFDk4cbq06iuVBEZnteaNuYcrldM
HtlFb8pLwvWKibVH5MYel/7iD9h9Nq50Gmmc9msfg7f7LIQdNcWTjYxZnF4H
k5cPDg1ZweLtffgBZQ92tpStZnF6XfuaZHNZzZzF2/NWCptk5Q3bLbFuKcRM
+Si8up7F2+sqh9aJD6bwbLBuOXS5WH18ui2Lt/etEp4YmT33cdyH6pXA7YW9
o69vYfH263UVvJlen16/FfupgtJlDtIx21j8z/vJ4mp4aR4x3coL+6yBrEfS
d1HeqF6fWvi9tOfUzN3Yfy0oZwfMbN6DdFXq4Zr14Ozh+3E/62GGdwZZEYB0
UxugdDx03h6C620E4ZzR1WcP4nqloD/0iTg9AtcrhQIv3rqaSFxvEyzpnp/V
IRbX2wzqXbbGTY7D9cog4d4hO53jf3EOu+/Btas+0X7qvgz+8k8f8uGd+Ehb
9aE9yH8+ZC6eH1m5mOWhOXSY01XvR9Qe1E8ZGHzzuu54gvXT/n5Sft3YcK3e
/SzLw/vzWgQdvGO1AqL3MDjN7bHfnOKt8XtQrlrho+2ve8fO4f63wdo5zdtP
XmT5J//xWQLTZ0w7oXyU5ac5VwzOeNByEtfLIZpzbB4/v4TyfJpD3DqXKjy9
wvLb/PFTBm6fOy6NP83y0+Micd/nX16JuD8c8iHU7d3vq8i/C5cU7vt26fst
lj/2j8/foKvmvazfhT1ojhI4UL7bvSZ5D8oPl3Q8sZmrcAflkMg/X9f33tnw
gOVv/1wmgQs3sm+HpOL+VMFqxdxt627sQfnnkdzVHqZ9H6E8K/JJ4LGje/kZ
eL7VwA1TjGm+yfLT47S167um9Ht7UJ75ZP3dc7+GPUXHRQ6fdF268Y04m+Vv
/5xYA1pX+vPWPMD9r4V9wepKw57g+QrI2TX56SNe4PkKyM4MDVfB233IZx18
T7rCvZWO81kPun09X7g/x/MVkA7ln6VD3uH5CknR9GgP6SeWv/39Rj0oT1hz
XjEbz7cRZJ9HkSev8XyFpHfkhLDen9HxTkTE+vmAquKveL6NkHbGU9HkLZ6v
FE50d9/W4RM+vkQkPNTkGC8fz1dMyhuVSrOK8HybYMCN2VrROXi+zTDs3HZf
na94vmKi6B+jWfIDz1dMonufd0wsw/NthmvvUma9/Yb7kw8/xht80Q/Fc5eB
0v3+2zyKsJ8WuJl2Q11YzOL0fPJj9KA1p8r2oLm0wtnRCr00yrEuhwTzVQ0y
JZifQyw7jBctrcZ+OKRkyD7DH/Us3n795ZL+C6K6bm7Ec5Efv2dOOktl2A+X
TB7nTbxbcQ55pNTp8DMh3xfx8IhFufTMPoEv8skn506bW3Xs4ItywieuXduW
B3T0RfUKyKnhmYvEXTGPgChwV67Y280X1Ssg1cKAw7KevqheIQnYef6We2/s
U0judR69pKyvL6pXSGS9th206u+L5iUieiO7+L4a5ItyIiLPQlWKdYdgn2Li
/dltziU1XK+YHHfLzBw+8i9O2H0zRCdm5t119WHw9utdIdifeJQy9+5OhH8H
QcOsh+YPWbx9Lj/AJ2ivh/kzjBdD+RNFRecXLN7eh59w1WpqmvVHjJfCr7xH
P1y/sHh7n3/BzEcPr5oVYbwcVp9Wd9rwcyeqqxIU/ZK3zKnCuATcNG+9ml+H
dFWqQLmrVp8+rdhPFcyZRnp04rL9ab/+VgNvUqS1vRDh8vP85PED9GzFPv/6
NKiFvVqij+mdEC4/b9f3ODXgYWeff/tWXAebeTslfZQQLj8Pjx5uHt+1p8+/
dfk0gLHipkdrlREuP686WiTkGvf1QfVKwbK8xeyYKsL/+/+y8WJ+hg3C9TaB
9JvRq5xhuN5m+DnM+E2mGq5XBquNF6t3HPMX92H3zdCzGXl2ob8Hg7fnMx/C
RmzSzDF2R/7z4dYO9cKpV3Yy62kOpymI1Ratc0f9lEHk1HPnGtRZP+2fd1rA
1SXFR3MC66f9OPoO4wfOaqq0dGdwmltjNftYYwf3f3n+2yc4eOGOARNx/9tg
WoJSntFUlr/9uC4GrbtOc+scWX7m/ljhxxR9T1wvh2gU3F8zYxrqZxCHrGzL
W7J5Fsvffj0qg9x07oRSL5afHhePSioCx/vj/nCI3id786WA5m7KJWdbVv3y
nMvyt7+f/A1+0sAfz/e7ozlKYHQfvp4gwh3lh0v89gT7rdFBuVXjkaz0s7d9
F7L87fmRQOXsZXviInF/qqBcSdw145g7yj+PNOdNKLPWRzms4ZGcjPuv9i7G
/a+CS7mgbnHCHenWwNU74TL3i+4oz/L3uXoLoqyWovk+4BOd0c7Tdhr7oNzW
gFtCPrfLZdz/Wqja8Xti39t4vgIyvUt47GoTPF8BSTS0EzitZvnbryN1MIxr
N/zCHZzPekh3bH5/PgPPV0B+P7uhoG+O5yskKmQyWb3OB/W5HrroP7w+IxPP
txFGOxjxx7zD8xWSW3XjyzTXo+NLTUS0Jmk0z9qI59sIl1Jscm6+x/OVwtSZ
E3KP5OPjS0RmGi5b3MMGz1dExtRHzVWxx/OVgplL9PkRhXi+zTA8fLdPUzme
r5ikGBrNL3fA8xWTHhb7R/x2xvNthtuF4/X3VuD+5MOKaXHqk5fjuctAa9rX
rnpSdzTHFhi36+7nN00sTs8nZwQB5/YL2fNh+3mpFbREnu7dxB5Il0MOV2y3
u9nd499+qnBIzablc2f38EB+OOSb0optOQM8/tUt5hDzoiJTs4GIR378Nic7
/Swd5fFvP1O55FaD+2fbMR4ohzziNvZDXtlk5NOHR65Zdv1uMxXxyI+vXjzY
mqvt8e8cDfgkR3VVqOlcXK+APLrTL+ueIa5XQEYvv8+bvhjXKyD65QfbQk1x
vfLzh96q5Z1W43qFRLWbh/oKa1yvkCw3kR3P3oB4/tvnc7e1Yycnj3/n6yMi
uk/HdtrljOsVk5lrEoqSvXC9YnI4c9y54Tv+4g/YfX5sq3w1baY4M3j79xUF
sCk7edfnjk4MTq+DZFSPd8HdWLz9uvADyoyG5OX2YXF6XUudZX7QfwCLT/nD
8xOuKS39nD2Mxel1ytrtZIvTaBZv/x7gFwxqq4i5MIHF6XXHcKrTbL2pLN7+
ub4CDhUtmec12wnVK4GceRLX7vNYvP37Hwl8iN5SN00f+6kCj+qaRxlLUL0+
1aAwtuJVsQmLM8+lGtYttDdn8fbvZ2rBp1P3xt1W2H8t5Gn3GsOzRTypdZA0
LDOwixPuZz0suDtgn58bi7fPtwG6dbictN8b19sIus9272jajetthFeCjp61
+3G9Ujhzbv0EixBcbxOETM7ovTgS19sMesWB95NjcL0y6BzrmxB9HPvJh+ec
glO7+LgPMlho7apbd4bF/7wfSG0Bv9HBk95dZHF6Hmt2mvdr5BXchzbYkf25
tvUW1uWQFU/epBs8QP5dOOSxU582lQzsh0O0A05L12axePv3APLzlTDeafhb
3DcuGW/eeMz6E+JR5JGF7p62g7/hOfLIzwWpeauKUN9yeKTpkqO4yy/cZz5Z
emvrMyJBfTjNJ4t9K6x/1eN6BeTnjkN7+8hwvQISd3HQiZs8Z1SvgBgldlf/
JnZG9QpJ042iL+5dnFG9QlIYnPw5qofzv/1XFJHi0pfqo/o6o3mJiEVUyQXt
gc6oXvn5QF0j5dlwZ1SvmNhrFzzMHY14TotJfbXY33yCM7MvT3u9P8CpkLRY
rz4KNGcUn7tCpfD5yaPM/hfteBksdjgfn9gTry8DnnJXa48zGK+EDbfNegw+
T/ECBl90dsa5lK14fTV09H+++XESwn1q4bmx4aq1l44yz3/S9evFvJpf4zBP
Axz9uTi7IRnzSKHP1vszA64cZZ73o/znVuTOLwvBPDLoN3Rm5z7XMU8rTIz/
0Dfh5lHm+QeqKz4Xs6vPQryeQ2bc7pI4+M5R5r526qfwTPGKzufR+gdcMqrO
0jXhHvbDJ+GlhkOUHyJc/v4oT3XMj8DHR5n7/6h/y5TGp+PWYz9CEvvyYlnT
E6wrIts7Swutnh5l7rNp//cf4Gtd+LZzUwJzXw7tg5fkTdTC/nh9GQRw3i2y
bktAeCWsmdM7fCWP9qGA6U/Ih6NzNb2pn2KGJ7b3XBOjL/GIpxoKzDePkwqQ
rnyOqo6bLMPFtA+FTD/VIlqTtadgnw3wJMdPdXRHzCMFne3rP99SPAr0dwja
/zM3Fm4aEkX5fzB+bh14UxXWFdcrA895wmadrpi/Fdbq/Vqd1Z3ihcwcx2WM
v662BK/nkEtp3eYayo87+jmcznFviuxc22W0Xl6v6xbPDZm9jzLP29B6J96a
2S9pLvbJJ3s+5DkRFcQj9+O6wyUipR/tQwGTkwBdT2WpDfYpJOHWb1oHqmI/
InJ/62IL/0FHmftNaX+2nP3+MmZbAnOfFs3bYI0X++clxTP7fFF81hunjLa+
8Wh9GZiEOu84nIzxStB5Nzon/1r8374VMf3cOXCGwCoxgdl/h/Icf5DWsVNI
HOKpBs2c6ZGqdxC/PG8fZ98OXvqQ4iWM7o+TX1f2W4z9NIDR76uxHumYRwoH
7qUnRz2PB/r7E51L8rE+p4TfEpjn0qmfAa/CunV5jH3KoG3I06jzr+L//r2E
8Wk9ppzXeQ/WbYULgZGCK+8xziGTygfsTfkcD/T7Fzpfpx+y56TD0X/Xy/Pm
vMvD98y3eOZ5LVrv0jrn+yX12CefNCV4rzpUFM88D0P7sFH9y5P315AfeQ4L
Lqzb6FKKfQpJ7fZeIv0KhMvzVtyWGKVcE8/cr8z0Z/WwHtGj45n7/GiuKlzd
rbSY/W1+MXh6amHulZexzP2CtG+mx+zGL46PQzxl0Kuny0d/a4xXwkinYTey
bSlewvS5osKnbYhFPLOvE+WxnO/11XteLOKphi9rR/MUtiB++XwHPLkePHUr
xctY3Vd8cogfB/T3dTqvsB4PvB69xj4bYIP/76lm2zG/FPZvfVbhtjMO6O+X
dI79x2Rs8QuNZ/ZBoD4Lki9kzHHH/mWw0b3W2883jnlunPp3Ojbrg85UrNsK
HlkjjgTtp/hPJg9Nt5e/7CpEc5T3c/3Jea/3HYgD+r0ezYmlYbF+WhpaL+9D
xYxtwR5hccxzg7QP2uF816+J2D+fzD3MG7HuMPIp99Pt2deW2XFxQD+n0Rye
lGp00NLCPoXE78l9ux7HEY98fcOAwe/zTsex95X+zaHWzOu/fvSKRXgZrLc7
XqDZD+OVYDghz8B1EPVfyawfcWWe5ZnmI2h9NTSrrx2ZOBzxyOcy2dLd4ONo
zN8AfgnmkY0aeL0UPjs413SdHMvsc0H53zx4dGqcRgzikYGL+ojx/adjnlbw
X6nCGQgY55Ahw/pX956HcPkcH/IdHIULsU8+yej34FWpIcLl8zq+/fnWNCPM
L79+7VO4GWGC+UVkTMkqmZlZLPN8AvVvmxN471EE3Z9EwsyLPzni8sLsI8y+
kMwcL/8cNG/2EbS+DPwJb1zYG4xXQnaa4cjXHylewfRh5RDurtdPY5j92ijP
Fc0eGr5XohFPNZzukBUtyEP88vladCtaNbbwL+7D6t7qrht42gn7aYAL9kW6
+iWYRwoTp4YvWVN+5O/14jd7ftiQ3XizOYbZx4T6SToRNudFCfYp7+f4sbCp
6gizLwP1OX2vgfm3k1i3FT5GaGRsrMc4hxxfudbdTJ5z+v04na+m7v0O3uNi
/10vz88O8+63F3DoHKuYegfOaTOo7Iv7IL8um6z7OVIYwzyvSPsw/ZVRROVH
tP6/88PpZ2s4HWOAfs/Srisi60MLT24+gfIj95m2JcDzRReE//d57sevuEM9
YpjnXmjfrOfO0v1peIS5X7wd/wEXdSYarvWLZvYbpXhQYsjuPo2HmfvOaT/H
vZxf/vZxNOIpgyTf8ytOB2K8EtS19xblH6Q42//LB1ap3fI5wuwPSHn0ZZ+K
uzkeRjzV4A2ukm6RiF8+dy/zRqMpMdHMvmZU98G+HoNmjYkGep8WnWN1udLq
kHrsswEWfHIrXXIU80thdv/+R9edigZ63wmd74Lmj6+tU48w++lQn3qcgtmq
x7F/GQwyLJu38Tzmb4UJn3T2r79E/VcxeegwI6jP8FFoXvK+DZhY1LJcfvzS
311oHg5W1o4t/4HWy+s9UTKm46ybVLeaqdeNu+8M7z32yScVZ8+K+91DPuV+
OrpHGlc++tuHYjZv14Z040auxj6FZHtgg+GtDMQjX39Maccyz6xo5jkEmrc5
Ieet1LQPI7wMfu9IbN00H+OV0DQscNhRfeq/llm/5Kn1JL0xUWh9NfSOMnmZ
tQTxyPPT1yHxY4Ux5m8AjjOvn2g1Xi8Fe41K3x5r8XoZTB8+o6iXNV7fCsvX
jy/tYotxDnE/7zK8xeEw0N+3aN+Unmyu75yA+iOfY2+zXW0FLlhXnsO4pa/v
uCNcPi8/y0JpsDfWFZL9s5rfGO9GuHwuGjlX7vfYd5h5no3Wtfy0xZe5j6OY
50DovHr9rDh+uCXyL28dgwcuLBI/2RKJ1pfBB23J6488zFMJRa+1wzspRAG9
T532Z9zzHgZxdVHM/p6URzNR77l6aQTiqYa8N4sLJ3VG/PL58re9CF+mFMXs
G0h134/8YuV8AvtsgLaaxfs39sE8Ujh6L/u8U/8ooPdv0f7buRbcfDXi8N+/
1zN+JqycI3zUD/PLIPfCx6dbBkcx++ZQnwmjl2+rf4/Wy/Oj+j3+0Aa1v/0x
qGXma6i4sZ6bgH1yyJKJ144sleef/q5J577+TJnom+nhf9fLc1UsTp4/cXwU
s08E7cPX63m7xy3C/vmk1LZG0nFyFPOcOe2P1oiXM4wUkB+5T0n4rMZP06La
r2sqtUzeDmzZW9n0CvsXkg73+1+Lm41w+fp9AV0PrJwbxTw/SfvZR6ox08Un
knnuiOYw61nyndTbEcy+1RQ3Ofoq7LBGBPP8Eu1zj9+ai/Y1RiCeMkg/Mnhv
5QOMV8JAz4U/B6ZHAH3+gfbf9brP4NAU2rcGhme9zd2NV8+GI55q4MbV5uk8
R/zyPCglSmavexUB9L5eOq9nHfvXHhiN622ALWOKfzq9xzxSOKE9Jd39cwTQ
+wLpHPecju63vyiS2X+NOY5UX87s+gX7lEFUvylnXL9h/lZwXNk2bWPRX7y4
jpn7pFE9xzmZIZ/y/sQkdVdaLD9+6e/idO5fT3ZTNOsd9e96eb07ryuHj62g
ug1MvWe/f3QgnfFc+MQ093tfXg3C5X6ySuoE2Q1/+5Bax+QqsexDzrgD2KeQ
1AmPJx6QIR75+qV6Wc7zuX/Pe5xGJlfB13UcXT3DEV4GxGX/+yQfjFdCF7/v
eTl7MV4NHX7u2CkLQLg8D6Ni5oT1PIjXN4CR6e/6wRF4vRQO3tQNH34kHOj9
mrQ/ey2+XSs9HoF4ZHBL22GmagLmaQWR+7rYzicxziF97gXrVsvzTO8/oH3z
rZt6e9c7xC+fY/9eN05mX8D++ST4Yl/FhBSEy+d1fnpz7obrWFdIQoa6bBl+
B+HyueRufj7684Nw5vlnWhfx7Ps0rS2MeW6QzmudcLfPx5lhzL7zFLeyWsIf
lXIIrS+Ds8fq/RXnYJ5K6LD6w/QpCyjO9mfmysASuwnhzH7QlKexMTkrUR3z
V0P/+0lBxgaIXz73KNF2E9ulYcy+rlR3rJG64fCiQ0Dvy6d9zjnZteu789hn
A6zk9fBwXYH5pRDhc/6z6+qwv+cxdi4TM57rVVqGM/snUp9fX4WrHbTA/mWQ
sm7AItu1Ycx+Z9T/seD50Y29sG4rXPRYtXOFNa1LysxdN4b/muTi9RzifOY6
X8s2DOj9KDQPyzaYvjEID/93vbwPK7b1nN3NkfI0MX14HX29q8FB7J9PrNf0
CvjqEsbsD0L7s6NCt/DEAuRH7nPCnMc6J9zDgP7uS3M4oayD5v7OyI/cp6tS
a6aFN+KRrz8FLp7ddocxz+HTfiborN2R//AQ8/wqzeeJwWfu5bSFMs+70n6m
tvANus3E68vg6Mhj9p2EGK+EZSeXZk/oSPEmps/vrvVZt6iG9kfG8Px4/Hlq
j6qDiKcayn1PvTXsivj/+z5Z5Zrpmp6HgD4HQufSj+uquske+2mAeWMdZm1Q
wTxSeLPPduN61UNA79um81rxpT4+chjtm4zxs+LsTI+7Q0IRvwwubdI7bzwU
87dCtHHp5dkj/+KpTcx8b9oveXYkHq/nkPHeft0HjP173GWx850wWdLnlnHY
v+vl9XZTHTCuegLlkTH1mrm9s4Tl2CefjLC9bXl3CtKV+zmUNrbzzhl/++DT
xOTn+pibY869xD6FxK+6r99UgnD5elgcrlk87xDzHDLN1fcZcznuaQf//vct
DH7PbeLp8TMOovVlEF7YZdXpTIxXwhLpm82ZLw4CfS6R9q1k7smW7Gu03laG
Z4TY6MsIhxDEUw3b47+OLnyL+OW56tPHaovk00Fmn2iqm12m0vGmHfbTAAM7
W/WtzcM8UtjELe5WUXgQ6P36tP+b7q7ek1sSyuzHSv2ULdUVdXiNfcrAL1pv
RF7JQWafROrzlEXmceV4rNsKag6rxY/LMc4hWm9AN15+fNH71egcTVZ9XZWu
jOYlz1XUl676W+opTwtTr9+upJwsFdwHPtkomWOn1XyQ2T+I9mFY32s2S16i
9fK8tWnbdGhowz6FxD5Zsj1JEIr8iMgG4SK1lR1CmX09aH/OTFxZ/FvvIPNc
Os3VyevjdC16hfztWxuDWx86c1xTcIB5Hp72zZfUGbUEhSCeMrg3rsr0ykCM
V4Lyz15lNaMo3sL0uUvx/sifnrSuNoZH7+b7M8YtQYinGu504xaqTkL88vkq
ftOtnTQ7hNl/nOrGtNg9fbXhANDnx+i8anemvUqvwD4boGBM37zJuphfCkPK
Vm0eahQC9DkQOkeB56xXd5MOMvv5Up8hHopGaWuCEb+8/9qGC/5X15XHxdiF
7alpJtmVEkUl9VJJSSjLeQhJQkpaSG+LsrQvWqSU9k29SVpESLbXkve1tIjI
lmQXimjCRJMhYxjT9/TrOc/zdb/f91e/3+X+Xec6133MPHOec+77l0sWXZcT
68+VFaaMv50JxpWiiZYe12q98Lx+0+uh6+hGQ+3JII+kn7l5l4YG+mchfD4S
r5MJ822D/FpAPOnD25VVHcMjsuj6d9iHrUvun357FepnE1sK9Afvi8ui61hh
f9ypuhAD4kmddiPOGI8k1wk+54TX58+s/Kc1jlA/h9AxPz8sdA/gIeOrY99v
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
Pej6pNifVW8t9GeHeYF4PrKTaL742eQBcAE6eLN31psfHgjXncR+Dq1+uaLt
8WYQL0RDO2I2hWp6DsTJfM2RWiy4ZOlJff8yPrs3zzSI4W8EPCK0z2PhheN+
kIdcV9KdT1bt8US47hL2X/eU+PLfS7cCHgn60LUwurQS8kiR7nvHfSfbKLyW
yYu7uz27bL0PiGcRVUbWszzlvRCuL4DzlZOd2eNa6Tswvu93Yu+6YY8NoM9s
YvThaB2RLcDJcWtvrnZoIvOC7/3283CJVmG3S8V9kF9y3ENHS1e4FwIeMv5w
x1TX8ite1L0YfB+Nh7pjDVdzffD9QYwLUM4s7VS3ohLq/yNzH1NZRaN2d1MJ
3VcJ+z/9Y9xPa/oeKHMf7bdljn8Ofz/Fw6P3+b6khHy1mIB5ePT7oEzDDK/7
tiVIjtKH9d9bHnDUNKGE7oeEx73SYFjStBnfP8L3fSQopPdAq+3rImpeXfR8
q41dJ0xMLKTrv2Od5uWG4ht2RdS5SnyPiUXMrL/+s1gR39/5TPszf+SsO1cv
FVL3EZh7K/WvixN+JeJ7JfjeFpvYPV71fN3iYrr/JfbzsWNM3azP+B5NJ+3D
C5650ZDLRXQ/s34eEdrx1rE+3b2Q7tuEfXB3maGQoInH7aR9260c3dzzqYiu
X4/nG75Fwfnr4EIqXkDrr/aSL+6cV0j3ucQ696ywRWau++h+S3jcNXLc1qHZ
+6h5CWn/M/2Vx12Rp/AO5tx4QLc1P79iL13vHuuxStJf7bkDn3MW0v67ucgk
25vjcZnz5LftvQzjOqhzsx1CWr9q+BO3d2fyEa4Lif3Ppfp44v64LOrfu5/Z
LFJz3Uv33cTzteYbDF84ltJTIaTzkvzwyuO57/Lpvm44L/yjG3fU7d5L94vC
/qhV1SY2W1N6YoV0XrxGVKUHKuN5MeeH7ZObZx4030v3NcfzvfXXzcjB7nvo
/ppYp3DnNyO7XNyfiDlHip6YnQuup+JNRHReNvms6rFCmIc5D5mQNX7lyG58
HkxE6yFWVNsrXcylfGPO12mYb298Q/eTYs5JdiQrG1lOzKX4RXReIoIrBa8/
5lL5Zc7R2Xft/ru3EJ/rY85P1mx7Jra3p84Nxopo/+s85GYmqeHziv/rvFxF
k9z3e/h8GnOucqT6saPmidS5uOUi2n+55ttyg2320H0L8HyPUn2X+n1gznHx
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
yM8hogxql2opBgF+LsFdpMF3mBSE/gfxJV5T
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw1nAf81uP3xj/PZz9WUwmhtFQkI6SshoqSjJRKtIgke+9VZkpLoUhmQijZ
kZWMbCUys8peyf96/677/3p1d53n/px7r3POfe5vo+NG9zk5jqLolSyKEuFf
RRRdr4iaZRTtKfr5ShT1FJ6ljw/p++nCrvp2tvBd4bnCZxV/jrCd+O4W/87C
U/X7A8WfITxAfC+LHphH0Wn6PU/0KcKTFd4XPUbYUWnuU9pdhQPEdz7flO4i
4eviuTiU+5roY3KnfUr0KOHmSnOi0v6l+DaiZ4tuHfJ5RDyHCHfR72cU313Y
TflcQv2ErfT7ScV3KdyWj8R/QeJ6vhra26V0O94RPqq46Qq3KPRSvvOFvYUH
6PttovcXrqZ+yvMf4b7K90XRhwr3yP39ReVzr3jvUxiv0Flxtws7CQ8Sz6GU
LZ4jhfco/ghhJ8VPEt1GuHvu+C65+/YkfX9LeGPkfMlzb32bIGwl7Kbvs0Qf
KOyg312ES0rz3K/4boH3AYWJCvvm5n1JPPuJnqu4HrnTPiG6T27euYG/h3jv
EHYX7pm7XV1zt4W50Vd4YmL+44W/6vdA9cm3tEVlXKD4+qIb6NtForcU1lU4
VXQd4R7i2Uq4SJipH4cp7S/ir6e4YeIpRP+rcJzi14V8iK8X8rmW/IVbKFwX
Oa+GCsNDWcz5MzTnfxderrjLFGYo1NK3IcLNhLup7BrCBcLthGcoflvaq9/b
CJ8sTV+s+AZhjBiPFsIm+n686MaJ21tbuFDYUaGv6BeElyWeS8zzffX7RdH9
lfZwhWGKe0Nxa0WfrjYmquc1jLl4jhL+oPj+iv9a+LvCWaIL8byt798pfK9w
dOK5QXn7KK+BwqXC/on5+H1M4rEbILxSYaXosYnTvhDimf+PhTXwlcrqq7I+
F45IPCeGJq7zO6KHCTdVPY4Xzx+MT+L5cyx9z/4h+gTh/qXxzdJtH8yaF65R
mjFK+1/I/6Uwf/opPM48FVYUzhEdC6dGXu/TFO5XmvZK+7LweYVOot8WttK3
1gq1FR7SmDcSzhPuxlxQ2FXhZuX1StivtovMU7C2tEeqWtHdwgcUGot+NnM8
PM8In1Je+4t+Wvi9fh8g+tPM+ZJ/A+aEMukkXK349zPXif33CZW3n+r5hnCB
QjPRD7GGYufznPDtzHnfrjye1bcdxPOosJ2+785ep/CGeHYRviWcp7Axe41w
e2EThY0UqpF/Qyv5/9pJG58W357Cd6mPwg6iX6K9KnMv1rzwKf2uRf8J5yhR
objrhbcrpKKvETYtzXuLcBPxNlPYNOR/v+KnKf5h0U0Vt1j4gUIf0etCnann
88KGwm0UUtYt46ygJkdbB5q4OeLbVvik8EWVfbQ+fCK8M3PaRcLn9Xt/xT8j
fFrhKNEfFT7zGob8Z2XOd2HmtPoXzdZ/3dVBD0c+Rxjf5pQlPDRyX+2h0Ebt
+VtxDwnXC09S3D+xzzrOzckKB6uwp4U92XP0baDo34VLVcY+olcIX1ZoI3pZ
5vgF+n6r8nxVdH3FPy7cu3QerwhvUJ2+Uvy54XyYF8piHcwPa6Fz7rPyCPZw
pTlMaV8T9hE+F/k3bWT97Mren7vOPYW99e0u2p44n4OEL5c+jx6kTcLm+v2E
6nlb6Tq2Vdgicp13Fr4pfDz2mD4W+/sugWehfu8bOf0L4ttR9OvCT5TvHhro
Jazf2POQ+f9O5v5ennkdLVbcTOH74ttN/ItzzyPGhfGpq7CTwuasMX3bSTyL
WFtKM19pZ7DXKq+HRU8vzdsm8M8T3/bif4C+VVijuAuQKRQ6Kv414a+xz4w/
hM9l3ltey9wWyp6fOf+9RX8ofFNp2irtM+SjNB0i14N97BjRG0Rvom//CR8p
TV/JHGX/VFx3hW4Kb7KvKr8hWsgnCA9T3EjhaOEpCkfSV4V5X0Y+0rfDmZeZ
6faBf6TwROaywpCQP+Wcpm/9hKcKPy6Mw1TWUMUNUzhI4RLFDRZeLLxR4RLR
44V/iv8G4cniP5X9QOFahQ8V30P4WmGa8r7h7BVvf9GnZ/4+NOQ/Vr/H0B7h
V+LrLXq58HPaLvoH4dcK5+v78VXTZyn+b+GUzO2aLIzVj+eI/ofvmc/6szPP
ge3DHs48ZC9ivT2q0DHMVcaIfZ75wTxvFvYr9uEWopcIx5fOb4Tq8LrGqVbq
Dban0oxQ6KXwqco+UzzDFX+B8GzFXShcUbg/1xRu4wmi1wpvKv39hKrbPTKM
0XmKGyg8N3Pex4f8VxUu743CZZ0e5Bnih4v+TnhP7LVzb+wxGhHib0bOFp0I
xynfCxkz4VWZx+jKzOM4Jozl6MxzbGZmfsbrauG3hft8nfD7wnPyfeGPyNai
/w30pcw7tWti6XQnif5J8SgivxSew8zfI2LvV3erzgfk3vdmi94HuUjr5fnI
snEvhWfCHsWeNieyDN1I/GNZT8iPCleK3kj4Xuzz+N3YdE/R7ws3Rw4T5qXr
f5LonwvPn5tE1xWOil1P1hJ6Ev18HQeRvo0X1hFOUrg05DNJ7bs8zMOqft8s
ur7wP/qdflTb1zM3FP8H4555TFlH5DOBNV01/8gwN64L5Z4Wu0zm/I0hQJPX
BKW9nDWgtJcJz4v9m3qeHdYI4zMqtIU63CCspe+/Fc77V8720mn/DfPkOuUx
Snlem3neMk9qIPeG+fOgsH1kmQqZgXOZ8x55YLtwRu9VWkdpqXHcNrf8VhdZ
K7cetFduXYp97wpkB/ZMziql21n09Yprik6X+MzbVdg+sey9V6A59/ZOXNYO
nLul8yZP8t46d95bCVsn1n92DHrSWIWrFdorTRv0W2Hz3DpOx9z1OV90vdw8
6EA7im4h3rNEN0fGVrgU/sRtbMUcLa233RB5Tt8daNqzZ5BfqX9rzj7mt/g3
FR6n+I0S05SLPrKJwrjIOkkt8W+MTCz+XRRy5HR0JeHgyLJxW/1O0DFKyyrU
sw6Cn+KuivyNfGh7o9BWaPqDPM/lTFT8lpyJ4n2KszK3bLA/cqjCNaIbcw4n
1ukYF2jkkd2DHIEuNjsEaNI0S6wrNQ9tRwfcInca0rYVXYoeLboQbp97fLbh
PE9cN8ZuK/ZS7b1baH5uqvpN1rxrUHo/mxJ7j5ukcIHC+bF5+FYR3pp5Xc8I
65TvG5TfdPbBED8x9j42IQRozpUp7GNhn5mscEXYZ4i/TelOqzp+KueZ6Ddj
y0VvCD9S6I1sIFyksF9k2RKeHqLfEr6qcCByRaCRkV4RNiktuyKvvqDfnUW/
GJtuGVk2mhzaS7uR2dE10H2ysJexv0Hfwh5f9V51a+w21Fb8NOHWpc/2W2Lv
a+D0QLNnQm8j3KJ0+lI4QuNwgeScoanpyaKPT80zg32hdDm3hbLYZ+jfemGv
Jn474R3CcbH38Tmx5fO7Yu85U4Vblh7bqWF8G7LOhY1L04zdxsKZwlmxx4n8
yPfO0EbalgbemYGHswP+7UvrO/QnOtp9sXUKzlDOf+TSGsxl1qDaOJ11oPCF
4s5GXlb6BzQ3vxB+prh/FFYH/ocU/6XiH8MmorhHkbGVRyuFlgqXi+dvxd/I
eaffoyq2K12t3+sVf5PwfqWpVlwGea8P+fdAN1Dcx8LrE9sTrsNWEFk3X65w
htLPUNwqxkL4NXtjYn2Z8h8T5hqzdtgThPP07SfxPCjsEupJfTco7j+FLxUO
Vl6P6PtX6HfsUxX/pk/+1feJwksU/mLfE96rbz+Kvkd4oX7/QT2Fz+h3prSz
hanK3l10JrxY3+YobjVyQWgPvz8R/qmwKuBfgX6ccvX979Ll0HbS3K64ZaG9
lImt43fOG/YalTUtN32fvn9eejw3hDYyLozl6cJjkCFVrw3CXswV8X9WOv9v
xDMzcb7kv0LhTuwcwjuwW+SOGyXcoN+7YOtIPHbU/dTQ/1uHtq+LbC99L7KN
gnE+Uzwn57ZVDhKOzj1GVwaEn3QTE9tgJ3AmKP8Wyi+vOu1kbD2leVaHvNEr
GdObheNzz43zhRMUNlN9buW8Fm6rsJfCaIUjFY5Q+J6zRPid8F7xraUPlP8p
gQfedYyr8EfsOaXbeI94X+I8Fr0wzPnDwryfkngMpgqbqu5dK+536MGim6We
z9iKBwvfUegXbGLH5bZjfVQ6vr54Y7W9e+k5cKzirg1ziDWyPPdYPCc8Pve8
uVQ4IrcN6mjh0NxraEjueUvaU4Q3JZ4b9PO4xLayqxPb2LDXYY/7JbKd+UOF
E3OP53DhWbn3gbHCaYnn2i1hb/gopBuTO93IUJ/x+r6itM2Zvv8spH0t9FVz
tfXA0D9P61siXF/a1tRc8Q+zxyCDid5IZ0EVHU08Naumr1P81uglwssURjIm
+n62sI+w1LeLRNcuTA8X/VtuvFhhRMU22wuFNYVL9a2b6A+EdQrnUUdl9RfO
UvxA4bDSuHnV+nIPxX8kPFpxE0UPSE2fy3wSDkeuFt1Y+bXBxs8dRKjv5aHO
8AwWbz3leYzwvJDPcQrjRB8rrJ3anllH2F3hNNHdhMcq7dBgc+7JPBN9cJiD
9O2OtE2/OwhrpJ7D7I/vCjdJPY83TW1/gP+9MMe7hrTojEcGOyr9Qxueor2l
0/1Xug470d+q/zjhTPEcJTy14nl+lMIh+n2msJewFvoybaqavlHx2xQek0vC
uNRAFxPWE25cuE21qo5nvP/M3Zc9Qn9iyyVtXe5WSvdTpWpb8WL2TuERqefS
4cImqdfvxmFsF1V814Ktnv7fBIMjdgDRP+WeU8coDFI4QKGFwv4KnVLvHQek
5v2fXFGxPfxo4TfCvfStt+g9Q/nkQ37kf75ws8J5kSfzvqLfncW7WdXziPoc
W/FaYD/5EdlY33eFV9hP4SrR+wivEF6pcFLFvOeGtENKzzXuodYr7CfeTZX/
/qn3PH6TZ4Owz1MH5l6Dwnvgt4r7Tdg29frZhfIVegY6FV9XYQ3leWAYe37/
rLIOEb0qd99cGPpnaOn1UVf8HVPX+WrhRgrbiK6mvjtjjdQv3C7axF3acaXn
CHb77xV2Fm+1apszY/NW7nLbKX7jqvl3I++q7yNYO3HhtAeLXpF7bg6oeP2c
EWjGb4/U842xow/bCzep+i6DufBd7r1rK9F3574/Iq+88N7O3UQ/4Rr1X6z4
r4RHlu7nOawpyWrdxPO6sG9kWyv2nZbi6S5cI7nui8x2SWyVn2SWte/U9wNV
xjzls5fw5dj2vZeEq8RzhOhfsY9l1nnfEx4V8qecZbFtiZRLWcj7s4UHRb6f
OpgzW/kuZI4LK5wrke+zWovvB/E/iC0CXT/yb9IND2k/y9yOj4RrM9uTNwh/
yWx/3gi9rLSucEfp+mKHPDwEaOoNT1dkG6X7JrMOshJbrOJ/Utq7hR/EviPB
TjJOda2DHiB8J7Ytd7nwJv3ewL6LDT7yPUh/ziHapu9XCVuVtrvMEQ6IXOdO
Cknu+74anKWxbbgrhT/Sv8J7So8R+tBdor8Kff1nGC/sttiN+6qMx1hrhe9f
qMd6+kTpToisZx2ib4+Ip0Phe5UBoQ4rYtuMKe/t2ONEu/qHtuwX6vmd4uai
Z+cei5IzVGUcy/LOPdfQ2Zlb/2TWWzfNTX+ptPcr7TdhLn4dm3dI4Mf2gq10
M/H8m/n7A6VtnoeIfku4RNglzEPuj9D5ZpXWB+9GFyqtK3EnxO9mke8suH95
TPybCedm/s59EfrnM7Hvj9Ct4IF/SbDp9VHcu8JX2TNFLy6cB/oPug+2O2x1
HxTuB9r/tfCPLNgf2CtEDxLNZdOIyPehvSLbzrlrvTVyPHHY45omvof9ObaN
9GDh62GNMC7fKr/fYo8dcxT6zMj3KTuVtsfPK31Xi40Fm8W62PNhbez60Ief
C5cq30GKW104Djs86+GL2Gvm89hrapXwXuX5tvgOFP2ScHXstfRZbHv7scIv
hd/Gnp9rYuc3OOT5e2be+5TPf5nHPVObrlaavzjbwhphfX+HLRYdLrK/AvI2
sjb3mknF8vO3+vZcYp0H3eOnxDL504ll9cfR65Rfq3B2tk69N34Cb+k7DuSW
V4WHCvuwD1ecZ23h8+gNiXWil9AjE+tWxKMXcBk3GblIeS1E5xEuENao+Dd6
Q6ViXYg7FPbnKbnrT925U3k2tG2x8JDSuKa0HoGOif7woNJsLvoOYf/SchP3
OHsLGys0qpjnD/pC339OLGP9kvgumO/3CT9NrL+sEh4lvq+Rr4VfJj5fODvu
FN9q4S/sOYnvWL8OehPn/LqQD7LE5+iWieWjfxK3NQ7tJb4e8oBwX2FT5Afk
qsQyHvEdQv1pB+36DX2U9qWWuxgv7puaiJ6bW5/dQvRdnIPirRPayF05MuAX
ue+OKW9Z7vIol/Rf6ndL5VfobH0y6L2LhL1V3hLht9hwUvsSNEitBx0Uzm70
Ic5x5KGBpb8nyudSzdeams9TCn/vGXi4j4NeKbxY335HThKeo/CL6DMLywjI
rsgx5+v3pspnovDD3Pr+i8LGqWXpRsEGgJyDPQJb350V+/mgx12u+n9YOm2v
IAttk9rPZFvhoNKYqc4f55Y98D85Q+k3Urk3Fs67d8gfnobIXFXPh0qY51un
ln+2Sn1HCf+nwtvR41SHtaX7k3GZpbgPEt/jf5zYXwI5doPwncTj8r7wsNLz
ZHbuMULmRj9amVgH/yhx/tgfsJ8cUTq/deg9qvd/4r+Cfks8N+Anf+xRy4Wv
J147y4R9kEOE3wuXJr7ffCPwYD96Nax35uRrwrcS25SWhXq+jc2l9F7BPsEd
7ashLXaq2bH3kA6p/UwWKv5QxddLPSc3F+6QWgfEBnER65w5oPrvnnrskCNv
KH1HuaiwnxX+VruhG6X2/0EeHcX+K+yoMfpS+B3rF92O/hG2V/xz4tlV+TyK
PKC4z5AnhRey9qlj1b4B3D+uLGzPQXdA/qee+BS1DPX8ljaI/1Phn6x94RqF
t0O5+6a2z6EjUE/WDjrbSoU3GBfhB6nXwseh/m+JPkY4X324acU2wCcUala8
NrGfsA/PZK6yNyrdLlXb2bAHXKX45xS3mr06tT1wbWS71RepzxTaeb7414g+
pXD9P2GNpNZPOU/Q0bbXedNB/XByZtvdz5FtlHMVNqrY7tcn8x3xEZn9TPBn
WZDZzomd6bLcZX2i/Pauum4vK+2Twg8Vvgn9wFjjF4T+8LrCa8yjsE6xKeKr
86TClhXL8Nul1gXYB+5ReFr03an1rKtFb8HYqV5dkY0Uzmae63s71SFO7RuA
7YM80ef+KV3ul6wL9A+l/y3sUfg/TIl87zA45EneL7AnVGynehF9PvT5Ocij
ok/GBpJ6TaBbYdOgbujpe6fWq1gXzyqsq3gskT2o7wuFdbprK7Y5oOtdI3pL
7gaR/0SfWLie7+v7XmrXQan9wXqEvl0m+j3qhV6EPCqeIZnvj4dyT6v4n8Pe
i75/veiG6DXMS9EvhXqyttHB0FvHVqx3d0nti4XOzJoaoPyOqTrP1xhP0cMU
t0coizovQX8N8dxdD88sJ2APHZd7jfdW3ICq9SDW0eCwFveL7X+wSHm8pPgn
aJfmX92w3/QLPPsis5e2gWOzhWbf+q70+c46uo25VHjODlRZ65TXWsU/LXyo
4rn3sMIPSZBLEtOMNfbJR8S3GJ7Uey/rdEbuelAfZBL6njX+qMI3ie3n2D+p
MzZ8ztfltKNife+FxDIJMtW7iW3j7K2Pq4xVil+Q2tb3c1jjB6ru26itnblP
Kv1956r3D/ptQcW2qRsqtv8ckHledRH2QHZnHgoPL22T556CcutXfG5dg4yI
vomtqLT/BfI287Qa+4w8vfQ6bqty7xC+Q/+kzpNz7MfS5wt7xS2hznuie2eW
CX+LLI8epHzvVbpWyuc6dHB97yd6UmK/O+zP0J9Htk1PT+zjxF1Fj8yyd0/h
/Ir7nT7vozxfFw5gnAuP1U7K8zDRHyt+GPMdG5rSPlRYB1yq+P6F7fa1wh7L
nUJR8X3Eg8x10XOFp+W2xX5Seg9sw7zLLLvmFcvb1IE67VOYf2lkX2XqME95
7Fj1/QX8U3O3fUf0FH3/LPFeh9wJjVyNjL4isb0KefUB9g7R9wv7lpaxscND
I4f+XHqsmdPthY1Uv82V/3aZ+5w1flxhGbsIdcC+wT52ZOF1sDSshcOUplHs
9TkrsZzOnUWvwuW3VlvOU/o3ItvPDxHfduI/WNgrs98R/QMPdyCfIjOk9k3F
Lrk+sR8UdzPsn2+zb1atMx4YbBH4bN8lnh2FE/R9iuibhC8I7614TZ5aevzR
9/EhxEcR38XFgeeein0Uqds9wjHin6g8mlZ9//Jb2Is4o+iHByu2w6NznZTb
n5yzpptwfNgvqMNOrBNhk6rX9TthbTNf5lQ8Tuh33OFiX2qusDN3hsIrVIcd
hIdU7c+G/v2DcInSPMD4gsq/reL6VL3/Ec93/LFvjuxvgP3nSGwGwW7TT/Rf
mW1T+JXhb7ZrZvlnt8x1om70KfYT/O7wOWymsE/sOnVWuXP1fQ/hM2rfu6Lv
5FzQ7xmimxe2dx2G3i2co29PkWfqOrMn42NJPtT78JDfy6Fv8fNn/Hoj7ylM
E91UOFXpbxE9BTkK2wT7O3KIvnWgnVXvUftj4xE9VvSeog8X3V7YSfwdM9M7
iN6Ls0hhy9D2a0ufTQuxDylsi12r8H0Z7xROEHYVX+uwZ8LPXntU1feVn0a+
j+ukuIahbvAjG3QP/dxA9M7Cq5V2d/pIaXfJ7HfKb+q8m+jHC7dra+yBhe+S
8NG+KHefTFIfNOP+RWkaY1/IPG9Zl9isWJdlbL9b7H6dI/sS44+Bf3uT3POt
nr43zrxGpinP5lW/6WBNtEXf0rem2Joyv91g7h5c+E5qbZDljtS3juJpkvks
WBvOA2Tpf/ideu70je1TOzn1Hsg4cneGjzd+4JeXrksv7Lrh3ETXvS312XW7
cIbC4+xpws1S32dxn4JP7wHK+1lkvMx9OCjz/Qh6Mz7eF6WenxcLRyv+VtEt
xH+y6EsUt13V9zv4beKf11fhdtGzhOPF1wTbjnAHhbGKa1x1WfjWDc6cP/dJ
5wtPUZ7XIy9zfqW+e7o29Z0I+jZ+oVemXrPkxRuTO0S3FF6Y+p0LdaqbWmdH
J9oytS0cvRI5k/v2f5Xf/NxnNLrhW6n3Z+TVpan1aGTcd1KfcctZiwo/ii4z
p8Um8VfpPsf3FfvINanXJHXGpoc/4WeFdX/8z7kfRXfGZx4d+LLUdwT/37eX
CxtV3cYJir9CODCz/yHj0rXwftCyalmUtbygsN2AOxj829lPpounRdXls34H
xN5r0evZU85Kfd90emr/ojsj+/6dlnrfIP7U1G+Ozkjto4VPFP5LF6Te/3lP
dJLKPZs2Ve1jdlVkf9oTS6drWHV5lMs44RuGPbId4yietqrXfOWzE3ul6B0z
v+thn96t8By+NcxbymIfa1Z4nrDncXfAeYEPzPaF/ZdmKv/2wlbKq344F85N
fU93jvDk1Hevo1L7vM2J7AN5EGdcOGdPKH0mNgmyDTLR0VXHn8ScqjpP+oH+
GBD6mbXEfRx3iNzJYcfuGeyN7I3Ia/2r7mfuC09J3Q+tOavoQ85RxW1d9Xuf
myL78hHP+cL7rxNT30Ph83O80p4gbCD+4anfZ50Q9o2OYe94M7GNCnvFo+GM
ny88W3n9jjyrtDszjpF9BS9N3f/Mvbqx96K/FS7FhoW8I/7Zqe8bOb/YB24S
vW1Y49wjNyrs84+4dYfwKvHdVvEdGfaoX5mDwj9S21j+ZK2nvjuYFOipFcsT
t2f2W8XfC/vzicqzmjse36WZIX/u2Fg/rJH3RB8rjGOfBYnCdP3eKpwL+L9d
GPltFHconGV3COsrr5ax2zk9pB8r7FRafsYPpHPptwb4/JN3w5A/vkPI1fiN
zCh8Vs4tfNfDm6baud8g1BP9qPBH5P5gM4e/HjJN1X6AZwb+G9SeSRXvidxb
9Q9yCO9Haop+MDMP92jITFvpd23lt2Xmtxs59w5CBmJUZN/3q0qfpYciM4v+
Ven25y618Bixt0Nzbuyg+Jmp9Sr2c2x6P7E/CH9JrTv/jHyhML3isxD5du9w
tiKPNQ37/0WFbRSjC9dhl2A74h5qZBjTzWLbCpgfnO/NY8tqLTPro+wPlMU9
FHscdz1jwl3AJWX0v4cr3IVhB2AOoIe2UZotYq+xv1LbE5hv8P/NXly17XQT
8Uwo/HaGdzX3C/+NfbfC+5MaoW7UkfXCe4KHS8tp71dsM2FNYfc4qXDf/lvx
nd3Gse0D9N17hfsH+xtvnXgvdI/wz9h+s7xtQRf4ULxDhPelfl+JXveTwvrQ
56cVlhH2UwajSvc/MuSswvrs3WHe8h70bcZBZWyPvpn5HeIilXWYcFpmf+yp
QS9pHGSgiZl95vGT5i3bgshv4ojHlxsfa3yhedPAvQxvIZ+M/Faxa+J9mPeQ
vEejLN7a7Vf6Hdsy4ZDEbyR5k8abCPyieafAW84FwbZ5Q+H2XlL4fQHvj/D1
500o9k/edcKDLnZrkD3RR/LY+wpyI3OC94CLI99lY9dlPsxkb8/sw4/vNT7z
+HPiszpJ32oqrnvVd6+cI7cVjuecuk84KLGfEm/ursjs14o/P2+ROE95z1Mn
83ypjc6lsi+J/IYRGh/qxejHYZ7DQ33w9+aNR7vEtjL8lWtknp/Ikx0S22zx
f+b9LP75R+aWSaknc+5/70pi+5nzBvDJMNbMPd6pDK163PHbxz91ZGJfKd78
npPZz513ELw7Y3+7q/DbCu7yeBNyZ2F5Hv2atzl1lPaRzOO7JLIfVxZ7PBiL
yxS/DXJM1Wm3pp+qnqvwXVd4X+W98vLSbzSwC3Jv2C7s1ezZoxO/jeJdLm+N
n2dOsl8m9t3irfR5id+U8Y76qsTvKrnDuDSxT+AVIR79Gv8xZHXW5ybCUZnv
W7HTIrsS1w2fkNLvuXhvy3ysF/r5xsTtxR8UGl1mfKgDNgreWt+VWAfB35L3
Atxj8k7josw+zhcH/WbLMFc3z7zX1M1cLm+m3yv9FgY5g/d3vI1iz+QOd5Ow
t9CGQanlLHyudhX/eZF96f9LbaPegG6h8HXFex93TH+IPk94ucK3FduxoXmk
16XqN8KcUzVzp8XfYH3qPDn34GuY2d7CGC8rbI88TmmXFJbxB1ddH3ztH8Om
mPhOH396/O1PiexnX8n8zjHOnHb32DrditT1xK5eZNbPkMOPznyO9M+sazcJ
+hRnIPcItWL7HiAzrAzzEJkG/wruKT5FjgpnE23qrHo2yGyv4wzdOXEf8lYB
GvsA7yWw13HfMbJw2/HZYE7/ltpPA7mKunG3jj3339SyBP1/rdLkjK3KaplY
xuMNA/E/VHxfQz5fVHw2jyutfx9RNd0yyBVpYl99/PZHZPYl4N0a76k5EzfL
bW+kbwZV/a4N+faJwvc4K5X/cNGvpLZhYlM+t/Tc4Ix+M/U5jO7DvTz2+i8K
37OsqNhW/m5q2yA2pn6kqfjOBR2K8wv7NfcFH4WzDB0Uuyp6Kf4k2HUHsreX
bi/nZr/Ad4DwaIXHOMOr5uEeY7eq47lnGcG+VPq+qEPV9cdOv6foF1Kft9je
seti4+FvBTA/sZ1ir6gX9hbeRCxMPR+wh7cr7ReEz0zfzG/njsp8T/R+kC3H
ZNbLeUNXM/F7C97UYyNdEfr22My+JdwZYCfHTvVI4XeyyDNPcXaFOtQLNmr+
pgFtxja+Msjq/TLrStSBuvHm/onSaYdGfvdOP6wKfbJPZn8SbDr4upwS5kPt
cB5xFzwytb0KPWi/xHrZvuHMahH2H+6X2YsmB9mY+2jk1NGpfVPRhfCvYL1N
K6wLja/YHxJfVvQC/BXxRx0fdISRpfWerar2o5sQ9AXikfmxWX2Wei5x18X7
mpPZH4JeiR2eu5W9M+8P2LC+im2vwwdoRGmZGX3wysJ7Sdeq7SRtQv+fmdpW
c07Qobgb4j7ovNR+m+i0yFTYJLZV2iTzOZVmtjOMD3of/mPYBvFbQl/m3gf9
rVHis56/S4AfC/XH1wU7M2sBuzcyC7oV+9G2me3n2JOpM/etYwr7g6F7XVhY
/2I/wx9gSGrfS/xu6Qf0Gmx236Tm5x62XWZ9FHsd/cnezp3uQ6n/9gh2c/Yf
9D7ecdUKeyb7bO0gk9zPWZ34HRV/k+HT2PbJVaGfeYNSv2pZdHXYD/Ex5m6L
e8Ms8x00/UafjIj8Nx1+SG3b5d4Xmn2P+w58eEaFscbW1yLUYePM9yTIruSJ
TMEeiuyEbwOyGvov93q8U/o/lEedVg==
          "]], Polygon3DBox[CompressedData["
1:eJwtnAn8FtMXxmfembkzLxUhW5QlIkTKUllKCaVFkX0phWzt9kpE2ZfIvkay
y75vEcq+U0JSsiThb43/8/Xcz6fTe87cmTszd+5yznOe+9tw4NC+J9aSJPk1
TxL9S5rov13TJNlFsob0S8skWVkn/CR7tPR3Q5J0ld5K8qL0mTrWReWHSmZL
XyA5XPruktelj5H8rnNXkz1JeqMiSRrUXGdD6Wfr2AqVryX7culb6dim0jeR
tJK+gaSJ9DUkzaXP0j130PmVnm1FlSR1/TaTvX48dovqWFvnbq1z96knyUmy
l6e+56nSL5aU0kuV76Hyq2U3lv2bzjlLeqXjS6X/kPqcNSSrqLyRZHXqlGwt
vbWkl/R1C78bdawj/V893whde4BkifQLVGeuslRlu+t+p8n+NXWdZ0rfV8c3
kr6hpJ/0mbqmncprepe/9H5XlL73Lzp2hvR3JL1lD9C5R6i+R3T+ZirbTfK8
9L8kQ6XvJ1kgfRfVM1H6JMmu0lvoup11/S6STaXPV32HSN9N8rL0YTo2XPoI
yXDpn+rYgdJ3lTwb2y9I30Byh/TnJJ2kHyR5UfpESSJ9Xck10q8r/e3+1P3P
l76S6txYdgv6QOH2yaSvL7lZ+pF65vdUxWGZ+o/e/yvZ/XXtMMkiynTNDiq/
k/pV/oB+O8juKJkh/cPC9v3Sr1P5G/QF2a0lr0tfrPI9o36byt8sXP6m7Nvj
+ZTvFY/9JTlH+rmSv6U/pfObSb9b+rU6/1vZPWS/K3ua7C9k7yb7ed5H9nv6
3VZ2m3jOqnqHUdKXSr9f5XfV/D47xjqf0/Ubxne5XuX/yD5U9h+yZ8heQzKZ
viypSf+ffk9S+cnxnKbBz/u79AdU/mPN9xstWSZ9jurbUvqr0qeqfCWdf3x8
t4dk19TuR8g+XJJK/5T+Iv0Rld+g8kdrtneRPCb9M5V3kv6U9JtU/qLsFrHs
RtlP11zeWfKM9Bdqbp8ukhejvbn0zWKbvcLcIb1bfMYl9EPpIyTfMg5U/37S
F0q/h+eXnMO9eXfpDSSTpN/KmJL+q87vr/MXyb5X9jLZfWXPl32X7CA5i7aW
NKG/6fdElQ+N9+ig9rlV+iTJxtJ/0vX9pH+hsrt1/mY6dqnsTdVWz8T2O1X2
aZJCei24PdEfqTx+e+naYyRfSf9Ivz1V3kvysfS/Vf/B8VtN1/nT9Lue7KaS
56Q3C36WXPU9XLm9+J5bSGbRfoXbk7a9hfcp3J6U3Sp7he55mvQrmANl/67y
A2Lb3ic7k4xjbElWkf6JfvuovLfkZ+rU+cP0O5T+LX0tnTNF+hmSuvTP9Htc
4j5FG/9Q+PpPpd+p8tMKrxXMOadKX67fY1U+RLJJ5v5Mfz+ENUl6e73vzdK7
qmyWrj9X1xyp4wMZl9Ib6dhF0kdKftW77azzrtP519NHpe8quVH6DZIDpbdV
fdcw3qS/qGs/Zg7mm0t+Kv29b6H/qfwVlZ+p3zeYCyRnZx7PjPe9Je/TNjr/
4Vj2ic7vot8nZD8Zn3n74Pt3kv6yyk+QPU/2WbI/lr277Dtl95f9Ev2j8HxB
3XfIPoTjsl9mTEo/QPI440tygfRuuv7uWPaGzt9Z9lTZ3WW/KntA5vn0fclA
6e0lZ0ofF9tgP9pB+sz4DL0lzzEWJX3i+bTXtZIO0vsHl/eS/prqPyD4+n1l
z5G9l36fZqzHZ+is8mmxrtkq30i/43l/SYvM7Uv7PcQzMfcEtzf6R/H77Ke2
OEHtMkjr3am0M/2JMSb9RB3fSeUd4zmjuI/K5jAnSu+p+mZE/QPV1zf429AW
b8n+unRf2lPyvvRjg+s/SeXvq7ytfsfIPkOybeb6qe8ByUj6iK7ppmuPkLwr
/Q1JD+mDJfOkjyq8NrKGjpR+Tubv/5nkXOlH6X4fSj9W+tu63we6Zh/GkORb
6X9KTpZ+mSShr2fuC/SJC6UP0/Xzo/6pyg8KLr9Y9tx4PuWfx2PHSO6Tfq/k
aOmTaAfpb0vOj+WvMPdKjuP7FH43fLpx0hurzktZc5ir9GwnZH7+jyQnMn55
Z5VdLPlDevfg+1HXO7p2/eC1lDG9gfQNJecl7rMtpbfMvJadFOfU9qrjfq39
r0n2KL0eMF/tL/lG+geF107m9I+lH8I30LkfyNfZUf3lPf3Olf2p5G3p9+PP
JZ4jn5S+pPBaf6Tk38LzP+vLvpIF+Ai65gNd+6HkdunnSCZLvxx/Ufruut8z
0qdKtpA+ScfOlX6OZKL0rwuvZawBvxVej5nfD0rsA7D+40+sn9ineUXXfKxr
P5K8JH2p5H3p7+GT5l5PW9I2iddc5td9EvsQ7xf2t//QuQt17k56/+/0+6Xs
LyTfSJ9a/Oee/bem3Fp4fmfuPTbO0cw3zCd3SQ6WPk3n6F/SXHKHlIfwdxOv
OS+wduh+s/k+qrud7ndn8V83TTaij0m/R7Iyc7vkQemPS9ZOPMe9JX1NXX+W
rj9d1zfneQvPrUdJgvrDliq/TeXPSraW3jS3r9tZsq70vXTseenTJNtK35Bv
kjpG2SB3vLC99D6S+azlOnaz9Jskt+T2t9tK70mbS99Gddwh/QXJ9qXH9x5q
l+56rgP1fD1lz1TZnZIdpbdnvVX5ZpLtpU/OPHYYQ5dnjo+6qmwX/BZdf4Lu
eZGuvVByrPRnJT9KX4b/ntsfaKdr20o+ZI0kBlPZJZKTpM8r7HsxBhYV9m8Y
C/hkX/JtdL9xOneozm1at79CX8Ynniu9i8qfiO++uco/Kew70+c/py+pfJbK
7yFeoC8V7qudGG+F13fGGn1uXs3r99nSJ0h+kd5W19xF35XsTDxY2NdjTf8R
XwT/U+dtgR8o/XM9x3yd+5lknvT7crc93/ReAlJ9k8P0s0LnP6iOtYnsi+m/
atunKvvn+Br4HPi8W6h8Mv2TdUzl62Ze61jz1pe+VebyKyStpTcM9vUq6Y/F
9ekY5kbJhtLLzP7WefGc5pl96VHxGTYixpO+Kuuyrm+UeS4ZKGkY/Q/WatZs
fIDVM/uyw+M1PA++4qnxmXPVN0B6Xfqjlf0Z1krWzJ2ktwv2b9BnqnwX2bcn
fobNpe8mmZ64jbYJfl70S5hvpTcJvh/v/nzl+Rb/9TLJZtJbqPzCxGt2a+lV
8Fik7Z7W+asHz8+c+2zl9qH98Jnz6O/clDgGWU/61pIpidfOF2K8RnyzQeIY
jfWV8qsk7eL9L5K+tvQndX6r4GdjTtox2L9grcAn3zOzv8Vawj13y9y/H1ff
eVdyGHhC8LdmDerE2q8+9UrqPv6E9Om55xbm8Dty+z+8O22Kj/MI+EPiGPHV
wu2PL4TP0is4HiLe2ThxjLST7vmg6npd0lt6m+B3w2fYQ3oR3D8a4ydW9r/w
//hm+FBDVP6x9BH4bbE/4XuMidfQf/jWfKM1Mvdvvs9gyTrRP3xH+ruSg6Tv
qfrukX6k9DdVXyc90yN6trck+5f2D/GH8FmJufGvnk/s4+ED7a3r75c+VPq7
0T/pq/c8Wm0xsO71H18Pnw8f5nidP1f6WPwCnf9w7rmAOfOh3PHMdirfXnJH
zfPll9IXMCYZ07p+K9Z61hTpi3TNd9K/B0+RPry0/bX0nXX/saWxBda2XWQf
J/sr2T/L7lz39fSFd+I1R5S2qWtXlY+X/bfsn2R3kr089/UL4jHWl+ek3y19
y7rxsJVqxi72rBsvAk+qJM/kXm95nr945tz1Uf+K+Ex54XfhHbLC6wFrF2vO
iawNqr+ouayb6j9H9r8q+411T/a+pfvvU7LbyD609Lf8THbHuv0FsCswrKnS
X8ztO73KmhbXG3wZfJpluedfsC8wui+k/yNZQnvyzNLPU/21mvWudeM3vH9d
son033M/H07FH7ntRbR1fGbq43ownn+ln1i6nHO71N0evC+YUiF9vdLrI22x
nsqP0e9Vsq+WHCd9VZWPjfq6Kr9RvzfKvgGhjVT+WNQ3i+XYzAk3ST9TMkH6
2ZJx+Cyl1zp8uQ3AA/X7cOoxco30TcGwot5S5XuWni/ulL2F7F1Kn38V59bt
Lz7N95E8F+cXfLmP4zX4i09HX7JVvB/1XxvraKDy06UfLn1NlR+i3ytkXxmP
Dcjta+ITDczdPrTHGMnR0kflros6T87tP+CrsCafJn0N1T8+ljVT/W1Kl+Nb
rF/39ZSfKRkpfavS/RNfZZ26/VOwYDDVV6UfkBtbBGM8P7f/i2+Fj7Uz1+j6
8+Ozrq3rW5V+/sNkN4nvx/ueJjlYekm8I30f6avT33P72vjc+0lfSeWnRn2N
uv05/Jknmc9if2fsMoZfzj3f4/t+GcfM7Zpjvld3/Y45jrmXNV5lFW0k/SbJ
Ynwdyc3MvcH2jdI/r1wOFvBGPDZVskT6t5LbpF+k839jPmReAw/T7x/4JpIX
pE9XeVPGh/SfVX6l7H9V9pnsn2R/qt+1Vb5O6mOfS1qmxni/wDcnZpL+EvfV
+afIXqjrr5b9mexF+q2pPI33uCZzLDw7njMu+P2nSV8AngKmJfsB2V/Lvl+/
K+nalVMfewIfnO9NbMfzye4ueyu1ZaX2/5k1SfZq8ZwbVN5Q+sPSF4GtyV6a
uG2/kn1dcP33yV4o+zzZv6j8Udqd9pW9Kt9T9jeyn8psN07dps9KgvSC+Zn1
OfP9GqWug/elPb6WXIsPFZyr+Eb6L6pvaeZcATmDZdKvDm6vJdJ/5f1yz6dv
Sj6hb5aeH/FNO8R4EiweDP996W/mnuuY096RflDptR99B50/uHT8ybnt666f
uXVJnLP7l56f6attVb53af/3fsYe81/p/ouvsk2MP16UPUN267rXV3xnfOhH
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
          "]], Polygon3DBox[CompressedData["
1:eJwt13ncjlUex/FbeJ67kKWylKWFRLaSFlpoQWjBUKiIbJHleYYUSUOkGlSW
bNFMxYQWGpFq6qVMQoxXlkYjiVFSZiqalJr373WdPz6v+/5+7+/vnHNd17nO
OfdZvYd2GnJCLpfbhdK4tSCXe9fn2JK53ENom8/lruQ9x+tA34AWvKGFudyX
JXK5T0rlcttxP6+j3Gq5q2Va4RK6n9y/5FbILEcX+k7s4C2iX0Brug/+yVtG
L8WNyfuEt5HejFH6mK3NQt5i7S/CuIKs31X67U7fjivlVqu9xIX1dVH98BG9
1mcdudX8N1BX7mq1i3id1HXG5VErV523SGYxavN6yP2d11/mLrTkdeOt5U2k
J6M3/abaWrxl6l5CHbkX9V3H93J+K4sn6GH4ynX8Viq78RPojnif9zpvFYrz
2b3aznuHXosRvC76eUvZEH0Ox7W8ztE3ry3dBlfRd6vdq/ZddW/i93Ln8Z7h
LaAXohV9h+yHaovVDcM1cj/wi4252NiKsIteg+a8QfRgbKd7qt2gdo66uSgu
yMayhtePHhhzQXvVeON4zWP+4EJ6sPr9xrLJOD7EvXL9ebt5e+gv8ADvHX2d
rXaFvl/DubwBcp/J7ZM5gLH57Ho/5x2iD8f9K8ye0Xtqe+jzFlwh9zS/gnaq
aLcq/sAr4h1SW5ouwOMxT9V+pHahumcxOs3nT+V2an8XRqtdzD+ddwJdEm/T
z+DkuA51X0TfcrvV9tDvvdofFfMgn9379fqYKTMLQ+i/oIbab+iD6Ca3hteI
d5Q+gu68P/NOTd6PeJl+HlV42+itMafl3tDvpfrtr88B2EJvQgdeD7o7psm9
kGp/UXccr8d7JddM7k6Z3lhP/xUXptrb8C59P46m+7IDA0NjRLrekdhD/ymN
eb321+HmfDavWsh1lrkZU3nz5MrKLZd5FY/TvbDRvZpHz8cIeg5OlFtKL8HD
Bdm7H9fbRlvXxrOMZ8Srmby2WEkX8MfzptNPYSY9Xf3xXHb/tmMhPQs5fXxO
78VzdAP1z/P6uda+OCPmI/9GXjP6YnxHV8VY5RfHeogG9I8YkHIXoXc+m2ub
5SbJTMD1vIa8GbwmdGM05/XlbUvvVl/8jj6A7tqrqq0q+DjWtDQnY8y70VVt
Zd7o1N4FOJfulN7V1vR1sf7R1VzLY2qv09a1KFGYrTlvpz2gfaw59E8YJNdC
pjn66KO67BRee7odTqRvSXtKrLEdo54+mz9Tro9ML/RTW5P3BK8jfTMq0t1l
16nto65XrGtpLQ5vGv0E+qf3rbzaVTFv8RRdH0/K1afr4TK1f9NmK8/8Qs/7
Aiyjq6RndJpMJTSTey3N8cYyDTCR9zzvDF4L+nIsp09RO0rtcf6xyMt95bd2
vC30ZtTn9ZTdEs/Dde3FPYXZmviQ3Fn6rIlL89m+cDDldmMMb4v2mqT2/oF9
9CY05H1Ib8Bu+iTt3cPbQ3+G73nleMN4/6b342feS/qon9a/yphPl5crljvE
/xol6SX8ur5XlKkQ7wf9eloP4h5cisnGt99nmzSW9ajH+5p3A287vQ3n805N
9yqex/moFescJvFy9G9yZenT0jw9kVcQe4XaY/od5fcHtDsGB+iS/HG8KfQf
MSP65fdL3lT8j97m87K0Jy/F23GvZCf6Psf32ZhFf+rzqnQ+WIWN9GH1A9Ma
MQO/0d9hcKqdi9JqzzLmR9WWNd4yqBjriNxoufGxx+Bbejx+9XyPeLY/YFza
e76J9Z4+iAd56+Xra+899e9jB7031rPkrcV5cpPUlojnqu4YHkpnswMlMu+X
aC/OUTFn0x66PNosne2/+9JYjsb5ih6e5l8Jv58Q854uci170vs2Fe30cRNv
OW80PQa3FWRngY3JG4XWcien+Rf3pTwuSuvQGF45+iQ0TXPjvlhm6V+Nrwnv
J/13S3PyGzTgVZIbwTtT7hycTn8be4Mx13EN56BnPttDq/MK6EK8F/tEnInU
/qCtH9EotTeSd4T+Lxrmsz20stpj2v8Zr6X1tBovF+thnKfoZ1Epzlcyb+HG
fOZVjDMIfRgvxrzAkVy2Nq2OM7TcBt4VcpW0dQpu423mtUzreDXcziuT3ul4
P0rGus37gNdcrqxMOfTgbeVdw6tJ18Id+WxvzPM+ULch1t589p4Xae5Uugou
5r3qGTd07e3incWUdGatHWctuh4eTmMZonYv/3McjTkZ58f0Xo7Fk/nsPg+S
+5S/C9/yS/DH+v6o749gepobw+W+5B/Acf7+OHeld2ZC7MtyXdPeUxR7fuxT
vFfkGsi1lrk+3n/e0rRexdreLPrhreA1ibN+nCGjTV6FtNZV1dYZsS/zXk5r
4pUyrfBYqm3M60R3wZtp/buI15PuhXWF2Xpaj9ecvgKP5rMzUlNe01i7MYm3
zmdd/b4VaxC2xvoRe4jvNXyvifHpP05BnPmNbS1uivec910uOw+tQAfegrTn
7aMP4NZ0fv4s/YdYGXODHonv0/+oDbiLHpTe/fX0OoxUW5c3jzeXnocWdEus
TN4cFMn1Tv/LltAvon3cYyzmFdHDcSZ9bmpvdKwtGKx2SFqbttFbcV+cadKZ
+lX6FXSmd7q2trx6dH3sp7/ALemdqYhN9O3p/DzU9Q/G1do7GH56F2rEOZ0e
j8O57Jy4LM4gct/z+so1lmmEO3m19T2bNzTGG+dY3n/keqexnBfnldgreO1T
bRMcoi9Xu4I3g54e90GuTmovvJloVpj9B1vAm0RPwNB07+fzHow9P84HvBrp
LBX3dAQGpfbm8IrpYbibNz+dlXe6rl3oks7PZXgf0zvinMg7PZ3r4sw6EAPS
e9Qwzb/qeI6em87UG9VtRqfY3/jTeT3UdY05xKvKe4TXPdaqOAfzzuHN4vWP
DPqnfh/ntaFboxR9GV7hTaWnxLWk2pnJmxbPJJ0d3/Hc7jeOB+K/bbovU+Vu
kOmAMoXZWCbzWtEtY99TV4v3JK8z3SnW2cLMizPm2NgrMSRd21O8ifRk1KPL
8ie7LwvdkwV4mv4/2a0fNg==
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0u1K02Ecx+Ff0+VT+ZDPJrNSz8BAQT0EBQPFt74qqKankFA0rdTyWcs5
FaNIREspwlMoUOgYCsroBLr+CPt4fUG33ffczbHs0MNLEZHXfeOx+oojNjjC
zzxVwf7NryxNRdxSWTqil+0c5riydo5bKiS/K43YZD55jr3BG3zD12qz15nh
GlfVaq+whctcUrO9yAU12vNs4Cu+VJ09x1rOckY19gtW8zmfqdKe5pQm9NR5
R9inYbudnSzjH/c9d98znvAL88rZTzjKB7yjDruHbfpbFJFOnsNfPtfvmrKP
OMp1TqrTvsd/3muQt3ViX2fyPzGj4Cz+LLx8bNsesePHZZZo13aleJucmeV6
Z1fwPa/wqj7YlazSnl3Nfdbwmg7sWh6yjvX6aDfwiI1s0rHdzBZ16YdDDvCu
Ohz0Efu5xk/K2d+4xZ/JPZLP1M6w3KW6OaTt1MX37z9slkTn
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1443, 1442, 1465, 2084, 2201, 1491, 1492, 1517, 2217, 1518, 
       1545, 2094, 2224, 1563, 1564, 1590, 2245, 1591, 1617, 2110, 2252, 1635,
        1636, 1663, 2274, 1664, 1689, 2127, 2281, 1707, 1708, 1736, 2139, 
       2303, 1761, 1762, 1787, 2317, 1788, 1816, 2149, 2325, 1834, 1835, 1861,
        2346, 1862, 1889, 2165, 2354, 1908, 1909, 1936, 2376, 1937, 1962, 
       2181, 2383, 1981, 1982, 2010, 2405, 2011, 2036, 2037, 2062}], 
      Line3DBox[{1445, 1444, 1467, 2202, 1470, 1493, 1496, 1520, 2218, 1523, 
       1546, 2227, 1548, 1565, 1568, 1593, 2246, 1596, 1618, 2255, 1620, 1637,
        1640, 1666, 2275, 1669, 1690, 2129, 2283, 1709, 1712, 1738, 2304, 
       1741, 1763, 1766, 1790, 2318, 1793, 1817, 2328, 1819, 1836, 1839, 1864,
        2347, 1867, 1890, 2357, 1892, 1910, 1913, 1939, 2377, 1942, 1963, 
       2386, 1965, 1983, 1986, 2013, 2406, 2016, 2038, 2041, 2064}], 
      Line3DBox[{1446, 1447, 1468, 2085, 2203, 1494, 1499, 1521, 2219, 1526, 
       1547, 2097, 2228, 1566, 1571, 1594, 2247, 1599, 1619, 2113, 2256, 1638,
        1643, 1667, 2123, 2276, 1691, 2130, 2284, 1710, 1715, 1739, 2140, 
       2305, 1764, 1769, 1791, 2319, 1796, 1818, 2152, 2329, 1837, 1842, 1865,
        2348, 1870, 1891, 2168, 2358, 1911, 1916, 1940, 1298, 1964, 2184, 
       2387, 1984, 1989, 2014, 2193, 2407, 2039, 2044, 2065}], 
      Line3DBox[{1448, 1450, 1471, 2204, 1477, 1497, 1503, 1524, 2220, 1531, 
       1549, 2231, 1553, 1569, 1575, 1597, 2248, 1604, 1621, 2116, 2259, 1641,
        1647, 1670, 2277, 1676, 1692, 2132, 2286, 1713, 1720, 1742, 2306, 
       1748, 1767, 1773, 1794, 2320, 1801, 1820, 2332, 1824, 1840, 1846, 1868,
        2349, 1875, 1893, 2361, 1897, 1914, 1920, 1943, 2378, 1949, 1966, 
       2186, 2389, 1987, 1994, 2017, 2408, 2023, 2042, 2048, 2067}], 
      Line3DBox[{1449, 1453, 1472, 2086, 2205, 1498, 1505, 1525, 2221, 1533, 
       1550, 2100, 2232, 1570, 1577, 1598, 2107, 2249, 1622, 2117, 2260, 1642,
        1649, 1671, 2124, 2278, 1693, 2133, 2288, 1714, 1722, 1743, 2141, 
       2307, 1768, 1775, 1795, 2321, 1803, 1821, 2155, 2333, 1841, 1848, 1869,
        2350, 1877, 1894, 2171, 2362, 1915, 1922, 1944, 2178, 2379, 1967, 
       2187, 2391, 1988, 1996, 2018, 2194, 2409, 2043, 2050, 2068}], 
      Line3DBox[{1451, 1456, 1474, 2206, 1484, 1500, 1510, 1528, 2222, 1539, 
       1551, 2102, 2234, 1572, 1582, 1601, 2250, 1611, 1623, 2119, 2262, 1644,
        1655, 1673, 2279, 1683, 1694, 2135, 2290, 1717, 1728, 1745, 2308, 
       1755, 1770, 1780, 1798, 2322, 1809, 1822, 1149, 1843, 1853, 1872, 2351,
        1883, 1895, 2173, 2364, 1917, 1928, 1946, 2380, 1956, 1968, 2189, 
       2393, 1991, 2002, 2020, 2410, 2030, 2045, 2055, 2070}], 
      Line3DBox[{1452, 1458, 1475, 2087, 2207, 1501, 1512, 1529, 2092, 2223, 
       1552, 2103, 2235, 1573, 1584, 1602, 2108, 2251, 1624, 2120, 2264, 1645,
        1657, 1674, 2125, 2280, 1695, 2136, 2292, 1718, 1730, 1746, 2142, 
       2309, 1771, 1782, 1799, 2323, 1811, 1823, 2158, 2336, 1844, 1855, 1873,
        2163, 2352, 1896, 2174, 2366, 1918, 1930, 1947, 2179, 2381, 1969, 
       2190, 2395, 1992, 2004, 2021, 2195, 2411, 2046, 2057, 2071}], 
      Line3DBox[{1454, 1462, 1478, 1490, 2208, 1504, 1516, 1532, 2216, 2093, 
       1554, 1562, 2237, 1576, 1589, 1605, 2244, 2109, 1625, 1634, 2266, 1648,
        1662, 1677, 2273, 2126, 1697, 1706, 2294, 1721, 1735, 1749, 2302, 
       2143, 1774, 1786, 1802, 2324, 2148, 1825, 1833, 2338, 1847, 1860, 1876,
        2353, 2164, 1898, 1907, 2368, 1921, 1935, 1950, 2382, 2180, 1971, 
       1980, 2397, 1995, 2009, 2024, 2412, 2196, 2049, 2061, 2073}], 
      Line3DBox[{1455, 1466, 1479, 2209, 2088, 1506, 1519, 1534, 2225, 2095, 
       1555, 2238, 2105, 1578, 1592, 1606, 2253, 2111, 1626, 2267, 2122, 1650,
        1665, 1678, 2282, 2128, 1698, 2295, 2138, 1723, 1737, 1750, 2310, 
       2144, 1776, 1789, 1804, 2326, 2150, 1826, 2339, 2160, 1849, 1863, 1878,
        2355, 2166, 1899, 2369, 2176, 1923, 1938, 1951, 2384, 2182, 1972, 
       2398, 2192, 1997, 2012, 2025, 2413, 2197, 2051, 2063, 2074}], 
      Line3DBox[{1457, 1469, 1481, 1495, 2210, 1507, 1522, 1536, 2226, 2096, 
       1556, 1567, 2239, 1579, 1595, 1608, 2254, 2112, 1627, 1639, 2268, 1652,
        1668, 1680, 970, 1699, 1711, 2296, 1725, 1740, 1752, 1765, 2311, 1777,
        1792, 1806, 2327, 2151, 1827, 1838, 2340, 1850, 1866, 1880, 2356, 
       2167, 1900, 1912, 2370, 1925, 1941, 1953, 2385, 2183, 1973, 1985, 2399,
        1999, 2015, 2027, 2040, 2414, 2052, 2066, 2076}], 
      Line3DBox[{1459, 1473, 1483, 2211, 2089, 1509, 1527, 1538, 2229, 2098, 
       1557, 2240, 2106, 1581, 1600, 1610, 2257, 2114, 1629, 917, 1654, 1672, 
       1682, 2285, 2131, 1701, 1716, 2297, 1727, 1744, 1754, 2312, 2145, 1779,
        1797, 1808, 2330, 2153, 1828, 2341, 2161, 1852, 1871, 1882, 2359, 
       2169, 1902, 2371, 2177, 1927, 1945, 1955, 2388, 2185, 1975, 1990, 2400,
        2001, 2019, 2029, 2415, 2198, 2054, 2069, 2078}], 
      Line3DBox[{1460, 1476, 1485, 1502, 2212, 1511, 1530, 1540, 2230, 2099, 
       1558, 1574, 2241, 1583, 1603, 1612, 2258, 2115, 1630, 1646, 2269, 1656,
        1675, 1684, 1696, 2287, 1702, 1719, 2298, 1729, 1747, 1756, 1772, 
       2313, 1781, 1800, 1810, 2331, 2154, 1829, 1845, 2342, 1854, 1874, 1884,
        2360, 2170, 1903, 1919, 2372, 1929, 1948, 1957, 1970, 2390, 1976, 
       1993, 2401, 2003, 2022, 2031, 2047, 2416, 2056, 2072, 2079}], 
      Line3DBox[{1461, 1480, 1486, 2213, 2090, 1513, 1535, 1541, 2233, 2101, 
       1559, 821, 1585, 1607, 1613, 2261, 2118, 1631, 1651, 2270, 1658, 1679, 
       1685, 2289, 2134, 1703, 1724, 2299, 1731, 1751, 1757, 2314, 2146, 1783,
        1805, 1812, 2334, 2156, 1830, 2343, 2162, 1856, 1879, 1885, 2363, 
       2172, 1904, 1924, 2373, 1931, 1952, 1958, 2392, 2188, 1977, 1998, 2402,
        2005, 2026, 2032, 2417, 2199, 2058, 2075, 2080}], 
      Line3DBox[{1463, 1482, 1488, 1508, 2214, 1514, 1537, 1543, 790, 1560, 
       1580, 2242, 1587, 1609, 1615, 1628, 2263, 1632, 1653, 2271, 1660, 1681,
        1687, 1700, 2291, 1704, 1726, 2300, 1733, 1753, 1759, 1778, 2315, 
       1784, 1807, 1814, 2335, 2157, 1831, 1851, 2344, 1858, 1881, 1887, 1901,
        2365, 1905, 1926, 2374, 1933, 1954, 1960, 1974, 2394, 1978, 2000, 
       2403, 2007, 2028, 2034, 2053, 2418, 2059, 2077, 2082}], 
      Line3DBox[{1464, 1487, 1489, 2215, 2091, 1515, 1542, 1544, 2236, 2104, 
       1561, 1586, 2243, 1588, 1614, 1616, 2265, 2121, 1633, 1659, 2272, 1661,
        1686, 1688, 2293, 2137, 1705, 1732, 2301, 1734, 1758, 1760, 2316, 
       2147, 1785, 1813, 1815, 2337, 2159, 1832, 1857, 2345, 1859, 1886, 1888,
        2367, 2175, 1906, 1932, 2375, 1934, 1959, 1961, 2396, 2191, 1979, 
       2006, 2404, 2008, 2033, 2035, 2419, 2200, 2060, 2081, 2083}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{677, 1084, 1083, 1082, 2316, 1081, 1080, 1079, 2315, 1078, 
       1077, 1076, 2314, 1075, 1074, 1073, 2313, 1072, 1071, 1070, 2312, 1069,
        1068, 1067, 2311, 1066, 1065, 1064, 2310, 1063, 1062, 1061, 1059, 
       2302, 1058, 1057, 1056, 2309, 1055, 1054, 1053, 2308, 1052, 1051, 1050,
        2307, 1049, 1048, 1047, 2306, 1046, 1045, 1044, 2305, 1043, 1042, 
       1041, 2304, 1040, 1039, 1038, 2303, 1037, 1036, 1035, 1060}], 
      Line3DBox[{703, 678, 679, 680, 2201, 681, 682, 683, 2202, 684, 685, 686,
        2203, 687, 688, 689, 2204, 690, 691, 692, 2205, 693, 694, 695, 2206, 
       696, 697, 698, 2207, 699, 700, 701, 702, 2208, 704, 705, 706, 2209, 
       707, 708, 709, 2210, 710, 711, 712, 2211, 713, 714, 715, 2212, 716, 
       717, 718, 2213, 719, 720, 721, 2214, 722, 723, 724, 2215, 725, 726, 
       727, 728}], 
      Line3DBox[{755, 729, 730, 2217, 731, 732, 733, 734, 2218, 735, 736, 
       2219, 737, 738, 739, 740, 2220, 741, 742, 2221, 743, 744, 745, 746, 
       2222, 747, 748, 749, 2223, 750, 751, 752, 2216, 753, 757, 758, 761, 
       2225, 762, 765, 2226, 766, 769, 770, 773, 2229, 774, 777, 2230, 778, 
       781, 782, 785, 2233, 786, 789, 790, 793, 794, 797, 2236, 798, 801, 802,
        804}], Line3DBox[{805, 754, 756, 759, 2224, 760, 763, 764, 2227, 767, 
       768, 771, 2228, 772, 775, 776, 2231, 779, 780, 783, 2232, 784, 787, 
       788, 791, 2234, 792, 795, 2235, 796, 799, 800, 803, 2237, 806, 807, 
       808, 2238, 809, 810, 811, 2239, 812, 813, 814, 2240, 815, 816, 817, 
       2241, 818, 819, 820, 821, 822, 823, 2242, 824, 825, 826, 827, 2243, 
       828, 829, 830}], 
      Line3DBox[{857, 831, 832, 2245, 833, 834, 835, 836, 2246, 837, 838, 
       2247, 839, 840, 841, 842, 2248, 843, 844, 845, 2249, 846, 847, 848, 
       2250, 849, 850, 851, 2251, 852, 853, 854, 2244, 855, 859, 860, 863, 
       2253, 864, 867, 2254, 868, 871, 872, 875, 2257, 876, 879, 2258, 880, 
       883, 884, 887, 2261, 888, 891, 892, 2263, 895, 896, 899, 2265, 900, 
       903, 904, 906}], 
      Line3DBox[{907, 856, 858, 861, 2252, 862, 865, 866, 2255, 869, 870, 873,
        2256, 874, 877, 878, 881, 2259, 882, 885, 2260, 886, 889, 890, 893, 
       2262, 894, 897, 2264, 898, 901, 902, 905, 2266, 908, 909, 910, 2267, 
       911, 912, 913, 2268, 914, 915, 916, 917, 918, 919, 2269, 920, 921, 922,
        923, 2270, 924, 925, 2271, 926, 927, 928, 929, 2272, 930, 931, 932}], 
      Line3DBox[{959, 933, 934, 2274, 935, 936, 937, 938, 2275, 939, 940, 941,
        2276, 942, 943, 944, 2277, 945, 946, 947, 2278, 948, 949, 950, 2279, 
       951, 952, 953, 2280, 954, 955, 956, 2273, 957, 961, 962, 965, 2282, 
       966, 969, 970, 973, 974, 977, 2285, 978, 981, 982, 2287, 985, 986, 989,
        2289, 990, 993, 994, 2291, 997, 998, 1001, 2293, 1002, 1005, 1006, 
       1008}], Line3DBox[{1009, 958, 960, 963, 2281, 964, 967, 968, 971, 2283,
        972, 975, 2284, 976, 979, 980, 983, 2286, 984, 987, 2288, 988, 991, 
       992, 995, 2290, 996, 999, 2292, 1000, 1003, 1004, 1007, 2294, 1010, 
       1011, 1012, 2295, 1013, 1014, 1015, 2296, 1016, 1017, 1018, 1019, 2297,
        1020, 1021, 2298, 1022, 1023, 1024, 1025, 2299, 1026, 1027, 2300, 
       1028, 1029, 1030, 1031, 2301, 1032, 1033, 1034}], 
      Line3DBox[{1085, 1160, 1159, 1156, 2337, 1155, 1152, 1151, 1148, 2335, 
       1147, 1144, 2334, 1143, 1140, 1139, 1136, 2331, 1135, 1132, 2330, 1131,
        1128, 1127, 1124, 2327, 1123, 1120, 2326, 1119, 1116, 1115, 1110, 
       2324, 1109, 1108, 1107, 1106, 2323, 1105, 1104, 2322, 1103, 1102, 1101,
        1100, 2321, 1099, 1098, 2320, 1097, 1096, 1095, 1094, 2319, 1093, 
       1092, 2318, 1091, 1090, 1089, 1088, 2317, 1087, 1086, 1113}], 
      Line3DBox[{1111, 1186, 1185, 2345, 1184, 1183, 1182, 1181, 2344, 1180, 
       1179, 1178, 2343, 1177, 1176, 1175, 2342, 1174, 1173, 1172, 2341, 1171,
        1170, 1169, 2340, 1168, 1167, 1166, 2339, 1165, 1164, 1163, 2338, 
       1161, 1158, 1157, 1154, 2336, 1153, 1150, 1149, 1146, 1145, 1142, 2333,
        1141, 1138, 1137, 2332, 1134, 1133, 1130, 2329, 1129, 1126, 1125, 
       2328, 1122, 1121, 1118, 2325, 1117, 1114, 1112, 1162}], 
      Line3DBox[{1187, 1262, 1261, 1258, 2367, 1257, 1254, 1253, 2365, 1250, 
       1249, 1246, 2363, 1245, 1242, 1241, 1238, 2360, 1237, 1234, 2359, 1233,
        1230, 1229, 1226, 2356, 1225, 1222, 2355, 1221, 1218, 1217, 1212, 
       2353, 1211, 1210, 1209, 2352, 1208, 1207, 1206, 2351, 1205, 1204, 1203,
        1202, 2350, 1201, 1200, 2349, 1199, 1198, 1197, 1196, 2348, 1195, 
       1194, 2347, 1193, 1192, 1191, 1190, 2346, 1189, 1188, 1215}], 
      Line3DBox[{1213, 1288, 1287, 2375, 1286, 1285, 1284, 1283, 2374, 1282, 
       1281, 2373, 1280, 1279, 1278, 1277, 2372, 1276, 1275, 1274, 2371, 1273,
        1272, 1271, 2370, 1270, 1269, 1268, 2369, 1267, 1266, 1265, 2368, 
       1263, 1260, 1259, 1256, 2366, 1255, 1252, 2364, 1251, 1248, 1247, 1244,
        2362, 1243, 1240, 1239, 2361, 1236, 1235, 1232, 2358, 1231, 1228, 
       1227, 2357, 1224, 1223, 1220, 2354, 1219, 1216, 1214, 1264}], 
      Line3DBox[{1289, 1364, 1363, 1360, 2396, 1359, 1356, 1355, 2394, 1352, 
       1351, 1348, 2392, 1347, 1344, 1343, 2390, 1340, 1339, 1336, 2388, 1335,
        1332, 1331, 1328, 2385, 1327, 1324, 2384, 1323, 1320, 1319, 1314, 
       2382, 1313, 1312, 1311, 2381, 1310, 1309, 1308, 2380, 1307, 1306, 1305,
        2379, 1304, 1303, 1302, 2378, 1301, 1300, 1299, 1298, 1297, 1296, 
       2377, 1295, 1294, 1293, 1292, 2376, 1291, 1290, 1317}], 
      Line3DBox[{1315, 1390, 1389, 2404, 1388, 1387, 1386, 1385, 2403, 1384, 
       1383, 2402, 1382, 1381, 1380, 1379, 2401, 1378, 1377, 2400, 1376, 1375,
        1374, 1373, 2399, 1372, 1371, 1370, 2398, 1369, 1368, 1367, 2397, 
       1365, 1362, 1361, 1358, 2395, 1357, 1354, 2393, 1353, 1350, 1349, 1346,
        2391, 1345, 1342, 2389, 1341, 1338, 1337, 1334, 2387, 1333, 1330, 
       1329, 2386, 1326, 1325, 1322, 2383, 1321, 1318, 1316, 1366}], 
      Line3DBox[{1391, 1441, 1440, 1439, 2419, 1438, 1437, 1436, 2418, 1435, 
       1434, 1433, 2417, 1432, 1431, 1430, 2416, 1429, 1428, 1427, 2415, 1426,
        1425, 1424, 2414, 1423, 1422, 1421, 2413, 1420, 1419, 1418, 1416, 
       2412, 1415, 1414, 1413, 2411, 1412, 1411, 1410, 2410, 1409, 1408, 1407,
        2409, 1406, 1405, 1404, 2408, 1403, 1402, 1401, 2407, 1400, 1399, 
       1398, 2406, 1397, 1396, 1395, 1394, 2405, 1393, 1392, 1417}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
YxNcL3k1JvjNCmLQfqgBfSCfYa6uCvvG+NOZMlto8tBO1+0YeGXe+yVW4Olc
+vxjqjQxkK10RTdTuWQVBh72sIpYMGkyL2vKBf3l2Rz3bHAnuZPpX7hpou66
zhk9tNHPpAH88M50H4UeiuR4eR1E39frPDEOTlX+2tT/hCIKJfn70YvvdHpQ
6yJYj+tDqmYvwP5N47cD+u1Pu+9vBT+67oGUsytFSv6o2KOvXitR7g7+pP71
KeYmisS1+e1Dp43yrySC81FveGVFKMI5WmaDXlvpsOUx+Op9gb/CfzEJQ3PB
XvRCpdRHX8GrBQx3yr9gktbrO63QN1GVMwvUIlixovZuK9OZxEwlcw96veR6
gTXg56uOubv6MUlCx+/d6MvfWA3tAhcX+H122pRJam9s3oXe+Cji2jHw3BcZ
3O2rmETiZNIO9PuxkpIZ4KrCA8sWzIPrj/aZoVMjZ448B28byx8JboWe+OmZ
ojfcFTj/A7x2n0KXdhGDCJ9MM0bfnsAM51WPYP0N4V+99SyDGF2aNETvOcOt
qwruE+nIfek/Bpm9b7kdfTRa7r0leMTbgJcqegxytq5kG/r1x63rg8E1vk3c
W8pkkAPfl29FZ+066p4J/mdpFb/W5AoyMHp8C7pcnonvc/Dpisl1t96vIDf/
deqinz1l7NwOfucZL9+pZyvI0tVvN6P3vgr6GnU1krU76bWi8HV4/jvWm+G/
b912gU9jtVA0K754/dOr6yXI5n6+Yfy9arFFUeMEfzRrSKQpj0tJgihvfrAC
f1foJpN9d7FANGtlWLTApJQEYSsoEUcvFRFZLgMeVz2QIyQqQTj2+YihV5+K
adcE37+XR0qcV4JEC/ovR+9oXia1Czz8UFWI+TwJss5+nSi66zPWa2fwiIJf
Hw+N04TfWlMEPUZMbjgUvK8p8W7pT5rs1J1Yhp7/TvtEAriZBl3U84Um0sdn
hNC3MqvP5IIXya+qMntPk0k2Ioh+0GvyLwFXaBPZfL6GJocDXyydm//zv8/N
4H8C3hssfUqTd0mRAuhNy/q0+sFz17ZwuxRBz43O86OvMgn7x7E0mqWzL7iK
LZsmyX9386G/5jnDEgVft68/+b90OGf12fGiO3wN/6oMvrQ05KXYBZpwKkot
QS9z2sizBfyLrWVAUiRNwncrLZ77He7SLzG24Bs4S9rtg2nyW2qMB71uyckr
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
s++yHtg3VaT0dTxk05yGvfvimghUXL1WCPtEi0jvBai/ojH4pH0OhfibxfZj
XyzpIfgKfOHP+EW760kk7jJ/D3Yf671hm2BeKbL4l0mmEujYZxkFPM6wJ9TH
f9fYtHxEY8mJDRS6ZFAax9wLsex0tnAJ5BtkGw9wSDRmK7Qb55QJPG3aCj5i
Wl65zIxExD1hZ+zvVuov2Q3zxHh36L9U6Gueqfm04Pxgm4WHz0P9Vp/LtOw8
6KesxHfget7fvXJ1LWx674D+NxdFAvGGqX3B32NKjsqVOqjPyvNU6XlJoL6d
Cna4PnCTnFtoGpturTxk3vSXRD2EiTMepxXVvkGgFNaxzi5NhxjYp9at2Ybr
ufbXH9wE/t2Qc4a9jUDvH9hZYd/n4hP5roZN/9i6J8p7kIUyuLKu4nHGj51Q
OAf16H71M6+lBHp+/fhWXD9aKu1aCb7qWXP3nC4Wcja/tgV7Zc3kAt14eE+P
GPd4ZVBo/+5Lf5nf9W/eXGT2H5sOW19ZUgl91k+HYzle4NOzDuxAqB9wd3Z/
dQ76rwP+v3H9s+7pww/Ak6MWVNx0gb6AZ/dP7DbFOwvDctj0S8OQSxm8JNpo
EvUJf+5fCa8jNwLYtHdt/0R0IIVqY95a498zJm+g3vyGHG9q49s+6E+vJphP
4Zww877CtQlserGMYFeoNIUKDOjv2HPsr/55zmHT8SWy1/7v68zjqYq6Pi4Z
IiJExT3noEhKZQqpY4pIhQyN5siUZEiUKXXvVSSViAoNiAxJmWo3oKKJqFQy
pSKklDnetc/7/Ps8/34/v8+6y7nrnL3Wdfb+7dhFoePEoQM4T7MXUbOOgP7d
aUtD+RES+Qvr/sT6z9rXO6qAX+k/VjJWSqK/YTp9mH9I1EjnLeDQL60Gv/vE
EWjoBl2K89zvqu5HHIb7V3Xoz1xtCt3WEl2I82ydtW7FJMR5XvrTJDsYnnuG
63qYczwypzevT+DQMn1Bf5JgXc5LOLEG5yM9fllgzTkOneOWlz1LG/p/Z/Ov
WL++utTuEPAXIo6ndEYItP/Wji7MH5za+TDiFoce822I+idJILrk3xGcz9Et
6mp3QV+S8s1PtpxAhe4B7Vh/7t/eQ6lRHDouZXO4TS+Jbi3b1IU/1163i/0H
9OPFQX1V4dBffYhvZc452RtxByVx6D/CHZElt/H/E2/wYX2E0iHPVckc2mHg
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
CfmnL8H7CFYVaBrnNIH+lU6SXCWJdHX+qeI4/o/iA4pucWmriHDiexWFJrar
dGB9/5F9w59ruLT0ojOnfQ+QaLi5qRfrzT1E7ga3cOl+Thd7MU2iXx2iAzhP
CY0bDeF3uXTEhbvTVw5RaLzsxhUchyLvqebVcWl151x58VECPdwz/yaO87Jt
QfSbHC4dOBTgZ7SVQposfmecv31b/8r1VVx6j4qp6Qj0J6/5dD1wnKdGHxOC
4TrsiJsqjo6COfGNhz+OQ83vlfp1iUsfHXi/t+YD9MP6Q59xnIkDb4dKr3Bp
7eqW9CaYBxdbDmVifnBprMHVQC5dlNljo+hOod+8lxn/x3nxeYE7Q7l0Ov+s
C3UKFKppuFOP3392UQv+98OLS3+vNLg9Pk6iUFH/o4wvZ8bbsIoNXPrC/H0O
Ge0U0hUsU8bvhbpInLsZvpNLXxKViTQtJlFu8DM9/L7r/K0hk5f3cWn7NAc3
/iOwrsVVM36IumEqFb6buPSVxhbHNekUyjEN6XNi+skwXzVnLh03U1X5ryaJ
qmWspv+Xj+fO69ei5Ggu7akta7gxGOrzkj/jA7htecWQnA2XTosvGDm4nUKe
twyLmfex+yTt2ty5dHWd87+YSgKFfuh4zPh4XlTwqjfm0qOrpb28NSjECvX1
wHH29//QqLfn0s2TtQMb5lMo9fmCEBxnnqvZgQS4PpUVVkdaTOB5tSmCg+ME
6vCULNLj0levPAkshPW3bHFwO45jecnZWms2l+46sceh/DiFJNxnML5a8Qot
X96IcekWh2+FFiYUSvpq8ge/v5dz5N3R/VJcejHXdu8+mJs0B85WYP58y0EJ
e/w+bavQ1y9VJHpSsNUHx+mwmxTs6ubQT7QG9QYRhdgCX6fxe1m/4vfX641y
6EjDCNWGQBJ9mCqTxfzGxyD97+84dM08mWTfFApZBzYz/kHyI+Hfw3o5tHjA
2GLRwxSa7d9Ui/Wfvw0Jvpnk0B9JPlFfqOe89MBO/LmGG3ufRXzi0Hd5HQ8G
2MF1vjYUhOOMPr5bJ/6TQ49v7Yl/qkshxUev4nGcr9KjQV4zuPTEmZbC9kgC
GS/VzcVxkvrPOUt2cOhbT95fEJWiUIIHoY/jiI19qbg6xKGnwoaKlkK//frY
O1scx0xZnzXFz6U/j8+qmC9MoJ96QvsZP77/+C7l/Md3qfc/vkvflgnlrLvG
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
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0.5, 3.}, {0.5, 3.}, {0., 0.03279717176104521}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6872016940162373`*^9, 3.687201713658778*^9}, 
   3.687201802658058*^9, 3.6872018982917557`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Ntensors = 9", "Subsubsection",
 CellChangeTimes->{{3.687201502285074*^9, 3.687201507938756*^9}, {
  3.6872018432103987`*^9, 3.6872018435934763`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"error9Kn0p1", "=", 
   RowBox[{
    RowBox[{"ReturnError", "[", 
     RowBox[{"9", ",", "0.1", ",", "2"}], "]"}], "\[LeftDoubleBracket]", 
    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"error9Kn1p0", "=", 
   RowBox[{
    RowBox[{"ReturnError", "[", 
     RowBox[{"9", ",", "1.0", ",", "2"}], "]"}], "\[LeftDoubleBracket]", 
    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"error9Kn10p0", "=", 
   RowBox[{
    RowBox[{"ReturnError", "[", 
     RowBox[{"9", ",", "10.0", ",", "2"}], "]"}], "\[LeftDoubleBracket]", 
    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"error9Kn0p1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"onsagercoeff", "[", "7", "]"}], "\[LeftDoubleBracket]", 
         "ii", "\[RightDoubleBracket]"}], ",", 
        RowBox[{
        "error9Kn0p1", "\[LeftDoubleBracket]", "ii", 
         "\[RightDoubleBracket]"}]}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "1", ",", 
       RowBox[{"Length", "[", "error9Kn0p1", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"error9Kn1p0", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"onsagercoeff", "[", "7", "]"}], "\[LeftDoubleBracket]", 
         "ii", "\[RightDoubleBracket]"}], ",", 
        RowBox[{
        "error9Kn1p0", "\[LeftDoubleBracket]", "ii", 
         "\[RightDoubleBracket]"}]}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "1", ",", 
       RowBox[{"Length", "[", "error9Kn1p0", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"error9Kn10p0", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"onsagercoeff", "[", "7", "]"}], "\[LeftDoubleBracket]", 
         "ii", "\[RightDoubleBracket]"}], ",", 
        RowBox[{
        "error9Kn10p0", "\[LeftDoubleBracket]", "ii", 
         "\[RightDoubleBracket]"}]}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "1", ",", 
       RowBox[{"Length", "[", "error9Kn10p0", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6872015241272707`*^9, 3.68720152633563*^9}, {
  3.6872016201705647`*^9, 3.687201779194633*^9}, {3.687201921638892*^9, 
  3.687201947942402*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], ":", 
  " ", "\<\"Input value \[NoBreak]\\!\\({\\(-0.48695326425858587`\\)}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{{3.6872016831899967`*^9, 3.687201710332197*^9}, 
   3.687201784539228*^9, 3.6872019575035057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], ":", 
  " ", "\<\"Input value \[NoBreak]\\!\\({0.48695326425858587`}\\)\[NoBreak] \
lies outside the range of data in the interpolating function. Extrapolation \
will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{{3.6872016831899967`*^9, 3.687201710332197*^9}, 
   3.687201784539228*^9, 3.6872019575699263`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], ":", 
  " ", "\<\"Input value \[NoBreak]\\!\\({\\(-0.48695326425858587`\\)}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{{3.6872016831899967`*^9, 3.687201710332197*^9}, 
   3.687201784539228*^9, 3.6872019575785303`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(InterpolatingFunction :: dmval\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6872016831899967`*^9, 3.687201710332197*^9}, 
   3.687201784539228*^9, 3.6872019576352177`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "7.47200299999999995037569533451460301876`6.894036950870396", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   7.47200299999999995037569533451460301876`6.894036950870396, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687201683825392*^9, 3.6872017109785633`*^9}, 
   3.6872017851640377`*^9, 3.6872019582288113`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.75100100000000002964384293591137975454`5.896240428571666", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.75100100000000002964384293591137975454`5.896240428571666, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687201683825392*^9, 3.6872017109785633`*^9}, 
   3.6872017851640377`*^9, 3.687201958238905*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], ":", 
  " ", "\<\"Input value \[NoBreak]\\!\\({\\(-0.48695326425858587`\\)}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{{3.6872016831899967`*^9, 3.687201710332197*^9}, 
   3.687201784539228*^9, 3.687201965586135*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], ":", 
  " ", "\<\"Input value \[NoBreak]\\!\\({0.48695326425858587`}\\)\[NoBreak] \
lies outside the range of data in the interpolating function. Extrapolation \
will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{{3.6872016831899967`*^9, 3.687201710332197*^9}, 
   3.687201784539228*^9, 3.6872019656801577`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], ":", 
  " ", "\<\"Input value \[NoBreak]\\!\\({\\(-0.48695326425858587`\\)}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{{3.6872016831899967`*^9, 3.687201710332197*^9}, 
   3.687201784539228*^9, 3.6872019656884193`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(InterpolatingFunction :: dmval\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6872016831899967`*^9, 3.687201710332197*^9}, 
   3.687201784539228*^9, 3.687201965696612*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "7.31987599999999982713916324428282678127`6.885103637374643", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   7.31987599999999982713916324428282678127`6.885103637374643, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687201683825392*^9, 3.6872017109785633`*^9}, 
   3.6872017851640377`*^9, 3.687201966276128*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.71083499999999999463540234501124359667`5.872368716673784", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.71083499999999999463540234501124359667`5.872368716673784, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687201683825392*^9, 3.6872017109785633`*^9}, 
   3.6872017851640377`*^9, 3.687201966284902*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], ":", 
  " ", "\<\"Input value \[NoBreak]\\!\\({\\(-0.48695326425858587`\\)}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{{3.6872016831899967`*^9, 3.687201710332197*^9}, 
   3.687201784539228*^9, 3.687201973616061*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], ":", 
  " ", "\<\"Input value \[NoBreak]\\!\\({0.48695326425858587`}\\)\[NoBreak] \
lies outside the range of data in the interpolating function. Extrapolation \
will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{{3.6872016831899967`*^9, 3.687201710332197*^9}, 
   3.687201784539228*^9, 3.687201973654372*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], ":", 
  " ", "\<\"Input value \[NoBreak]\\!\\({\\(-0.48695326425858587`\\)}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{{3.6872016831899967`*^9, 3.687201710332197*^9}, 
   3.687201784539228*^9, 3.687201973738514*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(InterpolatingFunction :: dmval\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6872016831899967`*^9, 3.687201710332197*^9}, 
   3.687201784539228*^9, 3.687201973747052*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in solving \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "7.29555500000000023419488570652902126312`6.8836582491621545", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in solving ", {
   7.29555500000000023419488570652902126312`6.8836582491621545, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687201683825392*^9, 3.6872017109785633`*^9}, 
   3.6872017851640377`*^9, 3.6872019743040133`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time in error computation \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.7116759999999999752873236502637155354`5.872882233548993", ",", 
     "Null"}], "}"}]}],
  SequenceForm[
  "Time in error computation ", {
   0.7116759999999999752873236502637155354`5.872882233548993, Null}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.687201683825392*^9, 3.6872017109785633`*^9}, 
   3.6872017851640377`*^9, 3.687201974314196*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ListPlot3D", "[", "error9Kn0p1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot3D", "[", "error9Kn1p0", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot3D", "[", "error9Kn10p0", "]"}]}], "Input",
 CellChangeTimes->{{3.6872016864793167`*^9, 3.687201693541184*^9}, {
  3.6872017874446487`*^9, 3.687201802011362*^9}, {3.687201955685343*^9, 
  3.6872019570142508`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
h0s+yhw6XSlLQHXxSK/QPuV3vyQgn3xy4sJhH783CUhXQALNFk/TeZqAdAWk
37v1rxbdxbrK61PR8LD21xNQXSqkz5WV5YtSsa6IuHdtFyCKx7qqZJCeuMOY
iARmvaZ5G5AwtfOBBSkMTvPWY3f0dv3+LE7z9km+7MNOeTKD07wZxI9vqb3L
4jRv0cIDdps9k5GuGHxHLI14vAPzVMPn93Ob7sxicZq3c7eyhAaDML8E3HsJ
Yg6oJiOfUvDa3ej6oCoJ6TZA6rIKRXJBEtKVQfSmwe6vHyYhXTkstu1a8zE9
Cekqz98OtGS5RLA4zVtlj06dQn2wLoe439iqL3XBPBziY33+07bD2A+XJFfe
c31hmYTq4pHpHWNCum7FPvmkJMPfqtdarCsgm0PjA98swboC8tonZZ+eEdYV
EjUdp7PqBNelQiZWrDl6ZDLWFZG5qbX/rR2LdVXJ43fFPyOHJzHnATRvu8/y
yh0bUhic5u1sd99TE16yOM3bs35uWvsTWZzmLafnqaLVnixO8+ZR9OOjt10K
0hWD9qXJXSZvwzzK69OhGkcuLGdxmjfJDWvZ0NmYXwKn06et85iEfUph7Kno
+zbDsW4D7Js8+2GMNtaVgaCT+6zK7lhXDokzth7v3xHrKmC50JSvI2Rxmreh
l92/xyj3x7a6yuNpT9OyOX+SEQ+HjJwQ5C4tSkZ+uCSt4meXgPxkVBePHDbq
vrv782Tkk0/eeB/ev/Qe1hWQ4qUfR0+9jnUFpNTMb8XtFKwrJEmNe17lxiaj
ulSI3tRi242XsK6I2P9suro5AOuqktwYzspc72Tm/JLm7aOx87DR/qkMTvPW
7d7StNx9LE7zNsWvyueZCYvTvDnumd3LeAKL07yNT+5srtY3FemK4d2kBWP6
t8M81TAgWj3wS30Kg9O8BTdM8HhQloL4JeB31GHI/k8pyKcUHnTXWBL8MgXp
NoDO4wNNKg9TkK4Mng0MHeGYhXXl4G4ZzC9Ow7oKsBx0NUvtMovTvDks69az
NALrcsjm8kFT1gRjHiWu2/nREj/sh0v4SU0Tsz1xXTxyPb14sb879skng3sK
svJOYV0BsdhudmW9M9YVkFU2rx5NcMC6QjLi2cDzS4/gulSIrfmikAQbrCsi
y+t955IDWFeVpAiHnhZZpTDXLTRvR2slFxpHpjE4zZssVRHjqMLiNG8nTUOz
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
9UEBO9+lvJbdwn1oggftdsrd7iB+5X5txPOIPPQA+ddqgZwEpxklD7Euh0Q6
6pZsfYq2N+UQTpXLpCvP8Fw4ZIup56j8l0hXl0t0V8S+7vAK941L0oZZLit4
i/pcyyW/Zj1dVf8Oz5FHTq5bW3S4APnM5hFL3fhC54+4z3yS4hbm8/AL8unO
J9pDOj3L+orrFZDdhxwu3SvC9QrI6edfFDHFuF4B0epsLrcrwfUKiWX0oKFL
SnG9QrLTmHO6pgz5rBWSXuNSFDfK8bxUyKnEmSbjfrM492+9KiSD237pn9+4
XhHxH0l8DKpwvSLyNaJoVlUVrleVCBsL5b1rKF7xr65iCArVkqseCmJwuo6l
bPcfrnOGxVs/S+GxSc5XWTWL03Xs/O1pBWr8YAZv9VkOg8JHHi9azeJ0HTPR
W1cu38birX34DT8sE3J0E4ORz9/QzXT6jJZMzFMF/Q+HbfOoC0Y+xXD+uPG2
qBbMXw2dLm/582J8COKphvqSKkfH6Sz+t/+cWjgpSy358V8IqqsWRoXu72Rr
hXkkULSC+3aFfwjyr1zHyLUCRWgI6rMUiveavZ1zPwT1UwozDHPb6T3BPPXg
nKemFVoWguptAGHNHM2iyhBUrwymrYt60rN9KPIpgy6CaykvO4WieuXwu+hr
4cyhoaheOWisf1V6YgTmUYDq9qZkv1kUr/r3WQSRc5fcn651DPkshNzwiXbZ
0kBme5q3XgfS21vvsUf1KuDCo0dGB+ZhP81wXt+kh+36UMTzA6SPJ74ZrenA
4DSfRnt+ajZ2d0T9aYaqlaU5ik2hSLcF9Kry+k7cH4p4fsKA3s/62K93ZHCa
5yEDrySeyHVE9XKIv43PwD2HQtvOPZ1D+kWG71d3DUU8FdDl6gnJ7XZODE7z
z41xF5k7OCGfHHJUM2OM6ExoW11HLpluvbrj/MBQxFMJo19VCvNTndC8xNDL
59fJ5gHH0Xy5pMfj8N28ENSfRTxiQqzHt0tEc3cUQ8KNxC1HFh9HdVVDo7jU
VDOF5afrfH7Tl8qzyShXWnyScO695tFbqD9aNWA0MnlwwzuWn+6PMqtpP1X1
nFFO+GT891+/X90JbTv3Uj65p3Gt98PnoW150mthRMcn/KWLnFHfJPD+Y4dT
vf2c0XwFZP4nd5k4F89XQCY0hz/gfUL9X1QHYdVjvC5kOKNcSUFjVP9pn6TO
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
W9f/MjCffSZR408M0i0HUfOQk8W5LN5a1y/InWS8WiODxenxSGpvfPymP4vv
/Kv7B67kOTrnHmfx1k8xjFqv2WH27hjkXwzynJyze9ZgP9Xg1GRV8ms25q+B
irVrqnzHY5+1MMJ7ofaZATGoXgkcWKgwndMN+5fAy9MmC0CAdevg3Wu+MEUa
jfophTyXvOtryqORbj3cSp3aa+qXaFRvA/xJGd3B+FU0qrcBVN8mGu94FI10
ZfA8PCo7MSsa1dsInYNC8t+kYl05VA0yO68TG43qVYDl6ZMJo0Kxn0JIv+uY
v+9qLOqDArSTtdw2+WI/TTDxYujSiR4sTtexFinHWc8F+2mBHR3XpKfYY10O
OVk3aOdyG8zDIR7tN+VZ74tGfjjEy856UuJ/mJ9LlmZHVa4wxz655KH2rl3d
N2BdHnF2Hj5h0mo8Rx4Jvdfr5Z6lWJdHOlxJCGpciHX5RP/bJ8eguViXT+LX
NXd3M8S6ApJpljHpzHRcr4CUzK96/1If6wrIioLdEbrjsa6QOHY//uH6KKwr
JAt0LjZuGI7nrkKMHG6vm6yLdVXIdV/pmQEDcA5VyIIv6y7O6Id1ReSr91Sr
Hb2wrogEmRTtvtXjH+7IvidhtsvSF0/nxDF4q5/vMMtsdXK202UGp+tYdvbG
qdOPsnirrvL8vJPaFwN9FqfrWMnSARdvjWPx1v2iHCatP/p8gyyewek6dlZe
tzGkjsUD/+K/web+5yNDHrI4Xce6Z/vnKe6yeGt/quCx/fBcp4vxqF4xdLtg
9eTZhfi29TpWQ4dei/R+WGE/1RCjO2zJmb3Ij1YtpL9o2DlsSTzqQy3EfDIY
2GcxwtMlsPXs4lHW47B/CfQ5yukWMQbhi6RQtOTtiq6a8aifUjg21a/hYA8W
bz1vqYc312PO2nNwvQ3g4ZdwvVMLmq/yOBaXpt/N+Fccqld5PBy3WZ9XEYfq
lYPVQZv2gz/EoXrlYLZpygdZPsLTFZBnfPnq7UcUZ59bX3VQo/k0P4HBW3mK
YMA+p6asjUnIfyEYJ95abpR/mdme5tBxnv/07KFJqJ8KeNQY8j7pYVzbPCxq
hitJx8Rfr7J+WvevH1D8pV9oZsckBqe5TczMcwqj9185su9XOT13fF7plTjU
/xbo+8zAaUUsy9/az5+QeSBePJDen+bIvs8hcYzhKOvoRFQvh6h+iB1kFRPX
Fs/mkPsrv+tIA1j+1pxXwNY+ycOtvVl+5rnCfuV5lgcSUX845Fb8adXBAXFt
cXcuee+/rDrMg+VvXQf+gFmkd8bwrYlojmLw0/CYGTQ/EeWHS8bWxjR9O4ty
Zcoj9tUfZuo74/6IYZrZTe1T03B/qkEn5cIg10EsP13/14jfx5w4jvqvy1eu
z+5JobZxKFc18IE/9fhkzUSE10JnwZyJfQWJbXP7/+dobhgVyWxQnmv5RH1I
4PIHlrj/tWAWtM9zpiwB9V8Cgs7vHp/6mYDmKyD3N79uGWaJ5ysgmzc8J17b
cD7rIMF1e8j3Lwkon1KQ3T1/cGBuApqvgLQfeBd42/B8hUTvuFNjw3q8P9bD
WknisRMPExDeAO7LBCGW1xLQfIXkwZyQhdbr8XxVSO9+t3pWrMDzbYBXJk2H
EpMTEC6Dxt6Wl7kRCW3nqDzexSsufty1As9XRALmzapeY4zn2wh+frJjzYF4
PZFDdF3UB9fzCWi+InJpym2z4kV4viLyoEJj09S5eL5y2MVfHzLMDfenEMaP
XJmV75CE5q6AbYlnLt9xSEBzbIIN01+U/7HDeDMsTQoK2bOPxVv3uxZ4Ldfc
r7UL63LIz1viMPMtKG+LlOtDVr7qsQ04hxxy3nDjmMMrUf+1uCTedONhyRI8
Fy7x9+3/49x85LOUSzLO9ZppNgfnkEcUh24ucDVg8dbrdx7x6DvkSNRUPBc+
Of/eUGXhBFSvI59k6p/tnDgG1ysg0b6vet4fjusVkLDJHl3Nh+B6BcTKcLXJ
Vx1cr5CovedPutoP1ysk//WY/d5dC9crJPeMd+3064HnpUK2BujmZ3dFdaWr
kHNzVffLOuF6RWSlma2OZXtcr4isFv64mif6h2ez79kYumdNwnrLJAZv9VkM
q9J6jn5olMLg9Dj4ed2bzyqGLN7ahxJY99HYSjGIxelxrWfQ5RGx/Vi8NW/l
UFV8KGOJKAXplkPIUql/Bx6Lt9b1G5wqyZCwz8lI9zeM0HoQefUNi7f2rQpe
5jyOLk9NRvWKIWrM46nz4lm89XhdDbnPvvK5Z5ORn2rI7FfdYasLi/89nyyt
gbVaedZPdycjn7WgfX78Pe6O5Lb1OkogcZ3BYMsl2L8ESjLLh61YiHS1pOD2
yanrHP1k1E8plFfEXbw5Dumm10Pxu8+lz/rjehvAtMHm560+uF4ZFNa8l/ur
4Xpl0FA8roNEFdfbCJxrvK9rG5NQvXIozPHu3qk+CdWrgNjBUXFPyv/hHPa9
BzO07K1gXgqDv/zbh0J41CJyStmeivwXgpluF9seu9jtaQ6r88OH7DRKRf1U
gIuY8/FJKeun9XyyGULfJgQlfmT98P5+/gDDAu3n9ZDK4DS3faf0ODRxSCrK
VTNkvu5+Vfwe9SG9BeL0E069f87yT/zr8yest+keO6o/y09zrq7Z/fm5Drhe
Duns7jV05dOktrrRHOLbVfpFO5vl/++vnwpwdtv9NETI8tP94olcYDhKgvdT
DimMvqfIu4X87+eS0vgjU7ZlsPxBf31WQtIv08U9q1LQHMWw49WcobqFeP/l
Eu0v84tnpSW1rYvwyL1J3SaciWP5W6/LxGCarjh+61MK6k81vFbp5v0sF68n
PLI6U2+lV0xS2zyrKdf5wvOOdqF4vjWw6nK8tfgpy0/303H/CeKC7+B1hk9S
v9bejQxG62EBn0wK1pnQ25flb71OrIU1MYe4+jdTUP8lsNzNUjIlLQXNV0AK
zu9/v90Hz1dA5ux0nbDxbBLyWQcz4PTiCckpKJ9S0E5r+L08Gs9XQLp/2iV/
dAbPV0gExu/ujTvJ8reeb0hhbz+zytAIPN8GOBCxc3RyIJ6vkHw8PePjFWe0
vxMVsvDLoj5njuH5NkDBxUYP4o/nKwPTjWute3ultO3D/5/PjkvroHsUz1dE
xBbZI9YdwvNthFkWXWaWncPzlcOKASYRVqfxfEVkX+C2nA4H8XxFRKv82uKL
e/F85TBjhft9q1O4P4Vwu6+5P98K73cKiPkc8sLTCftpgmtjpp6+7cDidD2Z
3S377ObDKWguzfAlzHTxFVusyyGi16U/n+7H/BziMXGvgljjHHLI4u/9tmft
YfHW469yP10bm2+yG8+FSz5AoMXAndgPl3j+4uS/3o5zyCMfkxNi67ZgHh6Z
Y+o/7NZm7JNP8s3TbuhuTEE54ZOL6wxe8zfgegWkgx8/N8EU8wjI78mBy4LX
4HoFJFiYsslhJa5XSPI/LNjrtAL7FJKrfkYqfktxvUISra0vj12C56VCvnm+
m1NpnIJyokJOi/wTOxpjnyJiKc3bdXQBrldEbBd7tsTN/4cT9r0Zeamfy2dN
SWXw1uNdMbzd022s0CAN4d+h+F4Hg7qxLN46lxJQ95X3u98b46Vg4V7epaQr
i7f2oQxsDu2L3dGSivByCM66/mtUPYu39vkXbNi/+I/bT4z/BvuoGn3fwlRU
VxVo2R3tNfoNxsUg05ghnvwC6WpVQ/rXwLrAu9hPNXDl3B1WN1m89fhbA3vb
TTxjlIZw5TpvZpi27X4i8rlIAtaD95Y9j8T+JXBe5Wj9y7DUtn0rrYPrE/de
/3AR4cp12NLj8VzjC6gux3r4srH2zwgPXG8DDNxWo8Y9g+uVwfP161f5ncD1
ysB8Q1riTSdcbyNsM3A8XHUE1yuH02EH9q61w/Uq4MMevy0a9L1Mjux7M3qp
7/+1UT2NwVvzWQhr7md0rhiYjvwXwrdeSYJhpuz2NIeF4bq+xbx01E8F6LQ0
HMyyYv20Xu80wZzonRUVu1k/rfvRd3i5S3u4uJnlp7kNXLLqUvn3tLY8yvXz
qD1n9iML3P8WqMrUd1m/neVv3a9LYfZucjO0kOWnOR8Z4sfp9TQN1cshh3TD
g7ZtRf1055BBkU+WrzJj+VuPRxVwSTP62tLHLD/dLwZs+5g3MyMN9YdDDmjZ
xZ3aiOZuyiVv43ea56xl+VvPJyshOf+saWFqGpqjGE5cURi5XcL7NZe8PKq9
vK8pyq0uj0xboTc8aiXL35ofMUScHTzLLhT3pxoWSYtTl3ji9YRHplwsv621
AuWwlkc6m4q6FS3B/a+GBLXu+U7n0pBuLewJm23YzzkN5ZlPhoWeK7MyQfPN
5pOp3YcMsV6UinJbC4Vm3wtPOuH+S8A+6+U6v0N4vgLyuZtoaZ+FeL4CwrvE
zTExYvlbjyN1YDZHd/OIgzifUigz1rt7YBeer4DACf9bXebh+QqJImewjfXs
VNRnKej33cgZY4Hn2wD+ZffH2G/G8xWSTavP8o1mof1LV4UMXZUc+4bg+TZA
+JVFlaZmeL7K6z7f33Eua/D+pUK0VoZ9yQI8XxWy8lKfkD0z8HxlEDaoN9iv
xvOVwxiPqbf/W4LnKyI/dhg82T4dz1dEplQ+nDdtKp6vHIxzfDbZmeD+FILL
22szbg1NR3NXwMTvn0LazU9Dc2yCnmGaw0YZsTjz/odmboLxTBZvXZeawXP4
I6cThliXQ9IVe810pqN+anHInobjJjun4RxyyPHbZg77JyHdUiXPnC4JORPx
XLhExaLMeuJY1M90LhEu4xr5jcE5VJ533YTctSOQT0ceuWpwSPxYD8+FT6wK
mis+DElrO8dFfKKpVjNqyRBcr4C8mvU4IHogrldA+ggFTboDcb0CkrnnYlmW
Nq5XQOaSoadma+N6hWTK8jmlXfvgepX6LtbyS73xvFSIQ4W5c7gmmq+jCum3
x2rzFE1cr4jYf0nftbM7rldETnmtshNSPJt9z8+Nmq3tX75l8dbvK4og8lXz
qMUv0hmcHge7DFW3dLzF4q3HhRK4ra/e1ymBxelxLXzGmuWeoSw+6S9PGdiZ
Pt683ZPF6XFqwuGofcEuLN76PcAvCLheURx6mMXpcWf+RFmZvRWLt17X/4GA
2k+79Xeko3rFAHdlmeabWLz1+x8xBPZf/OjwKuynGnafP/M81QTV61gDy+KN
MkvmsThd55dL9E/XGbJ46/czEviRE6ipMQ37l8CK8xsd8ycinvQ6uKr6JzRz
NO6nFHYH80s667F463zrwbMy47rvYFxvA/AOntuySwfX2wAnh6tNt++D65XB
bJfzDrc0cb2NMGCcj5mRBq5XDk2XglS/d8H1KsA5JOPCOzXspxCscrdJ1Itx
HxTQLsN09J12LP73fCC9CUZMKP7RQYXF6Tp2/MMP3al83IcW0NN1uPuuBeec
Q94P7qRFmtLa+t+vPP8Zum+ATmMa8sMh+454rMuuZ/HW7wG4xDnw+6uvkjTU
Ny7p28J5m1CDeNR4pD2n8QdXnIbmyCNzI4/byyrT2vatgEc0TIctdfiFfCrX
sT2pJp2CytPa9iGaT7oHdrpo/BPXKyBrdHuFnynB9QqIrN+6E1u/43oFROey
w6nsIlyv8vgwr7r25jdcr5AkrZzYfsLXtLb9V1MhrskzE5Z8Rj6V69jcb6aL
Cj/ielXIq5Qbk3oV4HpF5G5K0+Ds97heEZEKTt3XyE9j3svTWm8JZM6/e219
2BWgOaM4//mo4nF3Mpn3X7TiFWCskXPorVca2r4CenTd9pybnInwKrhqb9Gv
KZziRQye+XigySfbq2j7GugQ9MnJ2R/xOEpgs1xWXeGZyTz/Sbd3s2ucEmqb
jnjqQX340M8ZZzCPDIw7SC3tXDKZ5/0o//Gxi1K2L7yGeBQQIbuwuOdxzKM8
HxikPtjIPpN5/oHqlp3ecj59RQbankM+Wy38zjuSydzXTv3kpekOru+F+LO5
JOltfqy2Le6nMs9H6wt9DiJceX7ku73IfOn+TOb+P+pf9Y/ku6kemq/y+LZs
La/HfCusq0JWnNS6cmhvJnOfTet/L4E7r8z9+salMvfl0D70zHFLfjcrDW1f
AU5j1VePvJKK8CqwfzOvYNht+v7qIqY/Kien2cQ2U5+lDM+DnTFhy1/HIZ4a
2Lr7lv7sh4hfOcfZ62YOkD2l7xctZvq59My5I897pSOeeuDYuLyLeol5ZCD6
0zzX700q0N8haP+fXHrw4t7Lq8xzxdRP+It8xcL9lxG/AiTtl6iV5mP+ZrjU
3zX4UQHFi5k5huZfiaz9g3wq+7N7cu8w+JwK9DqczvHz0+f2K0Ovtd1eWe/6
HcMqLb+mMs/b0HpXBgfpPKtNQD755NLIwzHrCpFPpZ/mquR49WLahyImJzkN
byM072Ygn0LywalGLfg74lFu/6iJf6v5Rypzvyntz9qzV3fM3JLE3KdF81Y6
s/9982mxzHu+KN78+NCb2Usj0fYVkBdn4BFzMBbhVeB+W2Yy9lLsv779YPr5
fEqCPPEhfa97OcPjYFuba3AjDPHUQI8zmu0S7yN+Zd6cKvt67vlG8Z+M7vBp
b9dHFUUhnnp4/qxg9lgp5pFBd9/zuy3axQH9/YnOZXnXH11+n09hnkunfpZy
3q/oOTkc8Svg0dG19zy06P/f0E/G51UL2/D8GTFItxlMvz1uChwSh3AOWbL5
wJvU8XFAv3+h85WMy99pr7wua7O9Mm8ngv/IzQzimOe1aL1/3vb3OHg2Avnk
E+c3Fb+fzYtjnoehfZj/LK3GwAH1R5lDUVpkp7FLsE8h0RF1PnVzNcKVeTOY
G2PutDGOuV+Z9mfA/CORps8jmfv8aK72zjPS6xtBn8P6xeAz7xrf9pp0kblf
kPbt3NEJqwz7XkI8FbDwT45hjGEowqvAYt/ZUTsyKf6T6fOBaza1tk1RzHud
KE/NZ62rA055IZ4aCFZE9ljcIawtrpyvw5Z3o2ePpXgFo7vtdbHk/ZhAoL+v
03n1a5hmN8o4HPHXwxiNP2n7lmB+GXx2rc96YhEG9PdLOseLJgYTzg6OYd6D
QH3OE/98+WjeBcSvgJfWQxb/cQxjnhun/sv2fEk+mBKMdJthlpnbJ30f6qeM
ycPRlHP1JQci0PYcQmau6vYqMgzo93pMbvsn2G+aF9t2e2UfJl64YemQHsY8
N0j7kPZ+Gz8z0Q/555Pz+4Y/s8pG/VH60bS6uKXpWRjQ6zSawzWLVC8/8UV5
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw1nAf81uP3xj/PZz9WUwmhtFQkI6SshoqSjJRKtIgke+9VZkpLoUhmQijZ
kZWMbCUys8peyf96/677/3p1d53n/px7r3POfe5vo+NG9zk5jqLolSyKEuFf
RRRdr4iaZRTtKfr5ShT1FJ6ljw/p++nCrvp2tvBd4bnCZxV/jrCd+O4W/87C
U/X7A8WfITxAfC+LHphH0Wn6PU/0KcKTFd4XPUbYUWnuU9pdhQPEdz7flO4i
4eviuTiU+5roY3KnfUr0KOHmSnOi0v6l+DaiZ4tuHfJ5RDyHCHfR72cU313Y
TflcQv2ErfT7ScV3KdyWj8R/QeJ6vhra26V0O94RPqq46Qq3KPRSvvOFvYUH
6PttovcXrqZ+yvMf4b7K90XRhwr3yP39ReVzr3jvUxiv0Flxtws7CQ8Sz6GU
LZ4jhfco/ghhJ8VPEt1GuHvu+C65+/YkfX9LeGPkfMlzb32bIGwl7Kbvs0Qf
KOyg312ES0rz3K/4boH3AYWJCvvm5n1JPPuJnqu4HrnTPiG6T27euYG/h3jv
EHYX7pm7XV1zt4W50Vd4YmL+44W/6vdA9cm3tEVlXKD4+qIb6NtForcU1lU4
VXQd4R7i2Uq4SJipH4cp7S/ir6e4YeIpRP+rcJzi14V8iK8X8rmW/IVbKFwX
Oa+GCsNDWcz5MzTnfxderrjLFGYo1NK3IcLNhLup7BrCBcLthGcoflvaq9/b
CJ8sTV+s+AZhjBiPFsIm+n686MaJ21tbuFDYUaGv6BeElyWeS8zzffX7RdH9
lfZwhWGKe0Nxa0WfrjYmquc1jLl4jhL+oPj+iv9a+LvCWaIL8byt798pfK9w
dOK5QXn7KK+BwqXC/on5+H1M4rEbILxSYaXosYnTvhDimf+PhTXwlcrqq7I+
F45IPCeGJq7zO6KHCTdVPY4Xzx+MT+L5cyx9z/4h+gTh/qXxzdJtH8yaF65R
mjFK+1/I/6Uwf/opPM48FVYUzhEdC6dGXu/TFO5XmvZK+7LweYVOot8WttK3
1gq1FR7SmDcSzhPuxlxQ2FXhZuX1StivtovMU7C2tEeqWtHdwgcUGot+NnM8
PM8In1Je+4t+Wvi9fh8g+tPM+ZJ/A+aEMukkXK349zPXif33CZW3n+r5hnCB
QjPRD7GGYufznPDtzHnfrjye1bcdxPOosJ2+785ep/CGeHYRviWcp7Axe41w
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
7YM80ef+KV3ul6wL9A+l/y3sUfg/TIl87zA45EneL7AnVGynehF9PvT5Ocij
ok/GBpJ6TaBbYdOgbujpe6fWq1gXzyqsq3gskT2o7wuFdbprK7Y5oOtdI3pL
7gaR/0SfWLie7+v7XmrXQan9wXqEvl0m+j3qhV6EPCqeIZnvj4dyT6v4n8Pe
i75/veiG6DXMS9EvhXqyttHB0FvHVqx3d0nti4XOzJoaoPyOqTrP1xhP0cMU
t0coizovQX8N8dxdD88sJ2APHZd7jfdW3ICq9SDW0eCwFveL7X+wSHm8pPgn
aJfmX92w3/QLPPsis5e2gWOzhWbf+q70+c46uo25VHjODlRZ65TXWsU/LXyo
4rn3sMIPSZBLEtOMNfbJR8S3GJ7Uey/rdEbuelAfZBL6njX+qMI3ie3n2D+p
MzZ8ztfltKNife+FxDIJMtW7iW3j7K2Pq4xVil+Q2tb3c1jjB6ru26itnblP
Kv1956r3D/ptQcW2qRsqtv8ckHledRH2QHZnHgoPL22T556CcutXfG5dg4yI
vomtqLT/BfI287Qa+4w8vfQ6bqty7xC+Q/+kzpNz7MfS5wt7xS2hznuie2eW
CX+LLI8epHzvVbpWyuc6dHB97yd6UmK/O+zP0J9Htk1PT+zjxF1Fj8yyd0/h
/Ir7nT7vozxfFw5gnAuP1U7K8zDRHyt+GPMdG5rSPlRYB1yq+P6F7fa1wh7L
nUJR8X3Eg8x10XOFp+W2xX5Seg9sw7zLLLvmFcvb1IE67VOYf2lkX2XqME95
7Fj1/QX8U3O3fUf0FH3/LPFeh9wJjVyNjL4isb0KefUB9g7R9wv7lpaxscND
I4f+XHqsmdPthY1Uv82V/3aZ+5w1flxhGbsIdcC+wT52ZOF1sDSshcOUplHs
9TkrsZzOnUWvwuW3VlvOU/o3ItvPDxHfduI/WNgrs98R/QMPdyCfIjOk9k3F
Lrk+sR8UdzPsn2+zb1atMx4YbBH4bN8lnh2FE/R9iuibhC8I7614TZ5aevzR
9/EhxEcR38XFgeeein0Uqds9wjHin6g8mlZ9//Jb2Is4o+iHByu2w6NznZTb
n5yzpptwfNgvqMNOrBNhk6rX9TthbTNf5lQ8Tuh33OFiX2qusDN3hsIrVIcd
hIdU7c+G/v2DcInSPMD4gsq/reL6VL3/Ec93/LFvjuxvgP3nSGwGwW7TT/Rf
mW1T+JXhb7ZrZvlnt8x1om70KfYT/O7wOWymsE/sOnVWuXP1fQ/hM2rfu6Lv
5FzQ7xmimxe2dx2G3i2co29PkWfqOrMn42NJPtT78JDfy6Fv8fNn/Hoj7ylM
E91UOFXpbxE9BTkK2wT7O3KIvnWgnVXvUftj4xE9VvSeog8X3V7YSfwdM9M7
iN6Ls0hhy9D2a0ufTQuxDylsi12r8H0Z7xROEHYVX+uwZ8LPXntU1feVn0a+
j+ukuIahbvAjG3QP/dxA9M7Cq5V2d/pIaXfJ7HfKb+q8m+jHC7dra+yBhe+S
8NG+KHefTFIfNOP+RWkaY1/IPG9Zl9isWJdlbL9b7H6dI/sS44+Bf3uT3POt
nr43zrxGpinP5lW/6WBNtEXf0rem2Joyv91g7h5c+E5qbZDljtS3juJpkvks
WBvOA2Tpf/ideu70je1TOzn1Hsg4cneGjzd+4JeXrksv7Lrh3ETXvS312XW7
cIbC4+xpws1S32dxn4JP7wHK+1lkvMx9OCjz/Qh6Mz7eF6WenxcLRyv+VtEt
xH+y6EsUt13V9zv4beKf11fhdtGzhOPF1wTbjnAHhbGKa1x1WfjWDc6cP/dJ
5wtPUZ7XIy9zfqW+e7o29Z0I+jZ+oVemXrPkxRuTO0S3FF6Y+p0LdaqbWmdH
J9oytS0cvRI5k/v2f5Xf/NxnNLrhW6n3Z+TVpan1aGTcd1KfcctZiwo/ii4z
p8Um8VfpPsf3FfvINanXJHXGpoc/4WeFdX/8z7kfRXfGZx4d+LLUdwT/37eX
CxtV3cYJir9CODCz/yHj0rXwftCyalmUtbygsN2AOxj829lPpounRdXls34H
xN5r0evZU85Kfd90emr/ojsj+/6dlnrfIP7U1G+Ozkjto4VPFP5LF6Te/3lP
dJLKPZs2Ve1jdlVkf9oTS6drWHV5lMs44RuGPbId4yietqrXfOWzE3ul6B0z
v+thn96t8By+NcxbymIfa1Z4nrDncXfAeYEPzPaF/ZdmKv/2wlbKq344F85N
fU93jvDk1Hevo1L7vM2J7AN5EGdcOGdPKH0mNgmyDTLR0VXHn8ScqjpP+oH+
GBD6mbXEfRx3iNzJYcfuGeyN7I3Ia/2r7mfuC09J3Q+tOavoQ85RxW1d9Xuf
myL78hHP+cL7rxNT30Ph83O80p4gbCD+4anfZ50Q9o2OYe94M7GNCnvFo+GM
ny88W3n9jjyrtDszjpF9BS9N3f/Mvbqx96K/FS7FhoW8I/7Zqe8bOb/YB24S
vW1Y49wjNyrs84+4dYfwKvHdVvEdGfaoX5mDwj9S21j+ZK2nvjuYFOipFcsT
t2f2W8XfC/vzicqzmjse36WZIX/u2Fg/rJH3RB8rjGOfBYnCdP3eKpwL+L9d
GPltFHconGV3COsrr5ax2zk9pB8r7FRafsYPpHPptwb4/JN3w5A/vkPI1fiN
zCh8Vs4tfNfDm6baud8g1BP9qPBH5P5gM4e/HjJN1X6AZwb+G9SeSRXvidxb
9Q9yCO9Haop+MDMP92jITFvpd23lt2Xmtxs59w5CBmJUZN/3q0qfpYciM4v+
Ven25y618Bixt0Nzbuyg+Jmp9Sr2c2x6P7E/CH9JrTv/jHyhML3isxD5du9w
tiKPNQ37/0WFbRSjC9dhl2A74h5qZBjTzWLbCpgfnO/NY8tqLTPro+wPlMU9
FHscdz1jwl3AJWX0v4cr3IVhB2AOoIe2UZotYq+xv1LbE5hv8P/NXly17XQT
8Uwo/HaGdzX3C/+NfbfC+5MaoW7UkfXCe4KHS8tp71dsM2FNYfc4qXDf/lvx
nd3Gse0D9N17hfsH+xtvnXgvdI/wz9h+s7xtQRf4ULxDhPelfl+JXveTwvrQ
56cVlhH2UwajSvc/MuSswvrs3WHe8h70bcZBZWyPvpn5HeIilXWYcFpmf+yp
QS9pHGSgiZl95vGT5i3bgshv4ojHlxsfa3yhedPAvQxvIZ+M/Faxa+J9mPeQ
vEejLN7a7Vf6Hdsy4ZDEbyR5k8abCPyieafAW84FwbZ5Q+H2XlL4fQHvj/D1
500o9k/edcKDLnZrkD3RR/LY+wpyI3OC94CLI99lY9dlPsxkb8/sw4/vNT7z
+HPiszpJ32oqrnvVd6+cI7cVjuecuk84KLGfEm/ursjs14o/P2+ROE95z1Mn
83ypjc6lsi+J/IYRGh/qxejHYZ7DQ33w9+aNR7vEtjL8lWtknp/Ikx0S22zx
f+b9LP75R+aWSaknc+5/70pi+5nzBvDJMNbMPd6pDK163PHbxz91ZGJfKd78
npPZz513ELw7Y3+7q/DbCu7yeBNyZ2F5Hv2atzl1lPaRzOO7JLIfVxZ7PBiL
yxS/DXJM1Wm3pp+qnqvwXVd4X+W98vLSbzSwC3Jv2C7s1ezZoxO/jeJdLm+N
n2dOsl8m9t3irfR5id+U8Y76qsTvKrnDuDSxT+AVIR79Gv8xZHXW5ybCUZnv
W7HTIrsS1w2fkNLvuXhvy3ysF/r5xsTtxR8UGl1mfKgDNgreWt+VWAfB35L3
Atxj8k7josw+zhcH/WbLMFc3z7zX1M1cLm+m3yv9FgY5g/d3vI1iz+QOd5Ow
t9CGQanlLHyudhX/eZF96f9LbaPegG6h8HXFex93TH+IPk94ucK3FduxoXmk
16XqN8KcUzVzp8XfYH3qPDn34GuY2d7CGC8rbI88TmmXFJbxB1ddH3ztH8Om
mPhOH396/O1PiexnX8n8zjHOnHb32DrditT1xK5eZNbPkMOPznyO9M+sazcJ
+hRnIPcItWL7HiAzrAzzEJkG/wruKT5FjgpnE23qrHo2yGyv4wzdOXEf8lYB
GvsA7yWw13HfMbJw2/HZYE7/ltpPA7mKunG3jj3339SyBP1/rdLkjK3KaplY
xuMNA/E/VHxfQz5fVHw2jyutfx9RNd0yyBVpYl99/PZHZPYl4N0a76k5EzfL
bW+kbwZV/a4N+faJwvc4K5X/cNGvpLZhYlM+t/Tc4Ix+M/U5jO7DvTz2+i8K
37OsqNhW/m5q2yA2pn6kqfjOBR2K8wv7NfcFH4WzDB0Uuyp6Kf4k2HUHsreX
bi/nZr/Ad4DwaIXHOMOr5uEeY7eq47lnGcG+VPq+qEPV9cdOv6foF1Kft9je
seti4+FvBTA/sZ1ir6gX9hbeRCxMPR+wh7cr7ReEz0zfzG/njsp8T/R+kC3H
ZNbLeUNXM/F7C97UYyNdEfr22My+JdwZYCfHTvVI4XeyyDNPcXaFOtQLNmr+
pgFtxja+Msjq/TLrStSBuvHm/onSaYdGfvdOP6wKfbJPZn8SbDr4upwS5kPt
cB5xFzwytb0KPWi/xHrZvuHMahH2H+6X2YsmB9mY+2jk1NGpfVPRhfCvYL1N
K6wLja/YHxJfVvQC/BXxRx0fdISRpfWerar2o5sQ9AXikfmxWX2Wei5x18X7
mpPZH4JeiR2eu5W9M+8P2LC+im2vwwdoRGmZGX3wysJ7Sdeq7SRtQv+fmdpW
c07Qobgb4j7ovNR+m+i0yFTYJLZV2iTzOZVmtjOMD3of/mPYBvFbQl/m3gf9
rVHis56/S4AfC/XH1wU7M2sBuzcyC7oV+9G2me3n2JOpM/etYwr7g6F7XVhY
/2I/wx9gSGrfS/xu6Qf0Gmx236Tm5x62XWZ9FHsd/cnezp3uQ6n/9gh2c/Yf
9D7ecdUKeyb7bO0gk9zPWZ34HRV/k+HT2PbJVaGfeYNSv2pZdHXYD/Ex5m6L
e8Ms8x00/UafjIj8Nx1+SG3b5d4Xmn2P+w58eEaFscbW1yLUYePM9yTIruSJ
TMEeiuyEbwOyGvov93q8U/o/lEedVg==
          "]], Polygon3DBox[CompressedData["
1:eJwtnAn8FtMXxmfembkzLxUhW5QlIkTKUllKCaVFkX0phWzt9kpE2ZfIvkay
y75vEcq+U0JSsiThb43/8/Xcz6fTe87cmTszd+5yznOe+9tw4NC+J9aSJPk1
TxL9S5rov13TJNlFsob0S8skWVkn/CR7tPR3Q5J0ld5K8qL0mTrWReWHSmZL
XyA5XPruktelj5H8rnNXkz1JeqMiSRrUXGdD6Wfr2AqVryX7culb6dim0jeR
tJK+gaSJ9DUkzaXP0j130PmVnm1FlSR1/TaTvX48dovqWFvnbq1z96knyUmy
l6e+56nSL5aU0kuV76Hyq2U3lv2bzjlLeqXjS6X/kPqcNSSrqLyRZHXqlGwt
vbWkl/R1C78bdawj/V893whde4BkifQLVGeuslRlu+t+p8n+NXWdZ0rfV8c3
kr6hpJ/0mbqmncprepe/9H5XlL73Lzp2hvR3JL1lD9C5R6i+R3T+ZirbTfK8
9L8kQ6XvJ1kgfRfVM1H6JMmu0lvoup11/S6STaXPV32HSN9N8rL0YTo2XPoI
yXDpn+rYgdJ3lTwb2y9I30Byh/TnJJ2kHyR5UfpESSJ9Xck10q8r/e3+1P3P
l76S6txYdgv6QOH2yaSvL7lZ+pF65vdUxWGZ+o/e/yvZ/XXtMMkiynTNDiq/
k/pV/oB+O8juKJkh/cPC9v3Sr1P5G/QF2a0lr0tfrPI9o36byt8sXP6m7Nvj
+ZTvFY/9JTlH+rmSv6U/pfObSb9b+rU6/1vZPWS/K3ua7C9k7yb7ed5H9nv6
3VZ2m3jOqnqHUdKXSr9f5XfV/D47xjqf0/Ubxne5XuX/yD5U9h+yZ8heQzKZ
viypSf+ffk9S+cnxnKbBz/u79AdU/mPN9xstWSZ9jurbUvqr0qeqfCWdf3x8
t4dk19TuR8g+XJJK/5T+Iv0Rld+g8kdrtneRPCb9M5V3kv6U9JtU/qLsFrHs
RtlP11zeWfKM9Bdqbp8ukhejvbn0zWKbvcLcIb1bfMYl9EPpIyTfMg5U/37S
F0q/h+eXnMO9eXfpDSSTpN/KmJL+q87vr/MXyb5X9jLZfWXPl32X7CA5i7aW
NKG/6fdElQ+N9+ig9rlV+iTJxtJ/0vX9pH+hsrt1/mY6dqnsTdVWz8T2O1X2
aZJCei24PdEfqTx+e+naYyRfSf9Ivz1V3kvysfS/Vf/B8VtN1/nT9Lue7KaS
56Q3C36WXPU9XLm9+J5bSGbRfoXbk7a9hfcp3J6U3Sp7he55mvQrmANl/67y
A2Lb3ic7k4xjbElWkf6JfvuovLfkZ+rU+cP0O5T+LX0tnTNF+hmSuvTP9Htc
4j5FG/9Q+PpPpd+p8tMKrxXMOadKX67fY1U+RLJJ5v5Mfz+ENUl6e73vzdK7
qmyWrj9X1xyp4wMZl9Ib6dhF0kdKftW77azzrtP519NHpe8quVH6DZIDpbdV
fdcw3qS/qGs/Zg7mm0t+Kv29b6H/qfwVlZ+p3zeYCyRnZx7PjPe9Je/TNjr/
4Vj2ic7vot8nZD8Zn3n74Pt3kv6yyk+QPU/2WbI/lr277Dtl95f9Ev2j8HxB
3XfIPoTjsl9mTEo/QPI440tygfRuuv7uWPaGzt9Z9lTZ3WW/KntA5vn0fclA
6e0lZ0ofF9tgP9pB+sz4DL0lzzEWJX3i+bTXtZIO0vsHl/eS/prqPyD4+n1l
z5G9l36fZqzHZ+is8mmxrtkq30i/43l/SYvM7Uv7PcQzMfcEtzf6R/H77Ke2
OEHtMkjr3am0M/2JMSb9RB3fSeUd4zmjuI/K5jAnSu+p+mZE/QPV1zf429AW
b8n+unRf2lPyvvRjg+s/SeXvq7ytfsfIPkOybeb6qe8ByUj6iK7ppmuPkLwr
/Q1JD+mDJfOkjyq8NrKGjpR+Tubv/5nkXOlH6X4fSj9W+tu63we6Zh/GkORb
6X9KTpZ+mSShr2fuC/SJC6UP0/Xzo/6pyg8KLr9Y9tx4PuWfx2PHSO6Tfq/k
aOmTaAfpb0vOj+WvMPdKjuP7FH43fLpx0hurzktZc5ir9GwnZH7+jyQnMn55
Z5VdLPlDevfg+1HXO7p2/eC1lDG9gfQNJecl7rMtpbfMvJadFOfU9qrjfq39
r0n2KL0eMF/tL/lG+geF107m9I+lH8I30LkfyNfZUf3lPf3Olf2p5G3p9+PP
JZ4jn5S+pPBaf6Tk38LzP+vLvpIF+Ai65gNd+6HkdunnSCZLvxx/Ufruut8z
0qdKtpA+ScfOlX6OZKL0rwuvZawBvxVej5nfD0rsA7D+40+sn9ineUXXfKxr
P5K8JH2p5H3p7+GT5l5PW9I2iddc5td9EvsQ7xf2t//QuQt17k56/+/0+6Xs
LyTfSJ9a/Oee/bem3Fp4fmfuPTbO0cw3zCd3SQ6WPk3n6F/SXHKHlIfwdxOv
OS+wduh+s/k+qrud7ndn8V83TTaij0m/R7Iyc7vkQemPS9ZOPMe9JX1NXX+W
rj9d1zfneQvPrUdJgvrDliq/TeXPSraW3jS3r9tZsq70vXTseenTJNtK35Bv
kjpG2SB3vLC99D6S+azlOnaz9Jskt+T2t9tK70mbS99Gddwh/QXJ9qXH9x5q
l+56rgP1fD1lz1TZnZIdpbdnvVX5ZpLtpU/OPHYYQ5dnjo+6qmwX/BZdf4Lu
eZGuvVByrPRnJT9KX4b/ntsfaKdr20o+ZI0kBlPZJZKTpM8r7HsxBhYV9m8Y
C/hkX/JtdL9xOneozm1at79CX8Ynniu9i8qfiO++uco/Kew70+c/py+pfJbK
7yFeoC8V7qudGG+F13fGGn1uXs3r99nSJ0h+kd5W19xF35XsTDxY2NdjTf8R
XwT/U+dtgR8o/XM9x3yd+5lknvT7crc93/ReAlJ9k8P0s0LnP6iOtYnsi+m/
atunKvvn+Br4HPi8W6h8Mv2TdUzl62Ze61jz1pe+VebyKyStpTcM9vUq6Y/F
9ekY5kbJhtLLzP7WefGc5pl96VHxGTYixpO+Kuuyrm+UeS4ZKGkY/Q/WatZs
fIDVM/uyw+M1PA++4qnxmXPVN0B6Xfqjlf0Z1krWzJ2ktwv2b9BnqnwX2bcn
fobNpe8mmZ64jbYJfl70S5hvpTcJvh/v/nzl+Rb/9TLJZtJbqPzCxGt2a+lV
8Fik7Z7W+asHz8+c+2zl9qH98Jnz6O/clDgGWU/61pIpidfOF2K8RnyzQeIY
jfWV8qsk7eL9L5K+tvQndX6r4GdjTtox2L9grcAn3zOzv8Vawj13y9y/H1ff
eVdyGHhC8LdmDerE2q8+9UrqPv6E9Om55xbm8Dty+z+8O22Kj/MI+EPiGPHV
wu2PL4TP0is4HiLe2ThxjLST7vmg6npd0lt6m+B3w2fYQ3oR3D8a4ydW9r/w
//hm+FBDVP6x9BH4bbE/4XuMidfQf/jWfKM1Mvdvvs9gyTrRP3xH+ruSg6Tv
qfrukX6k9DdVXyc90yN6trck+5f2D/GH8FmJufGvnk/s4+ED7a3r75c+VPq7
0T/pq/c8Wm0xsO71H18Pnw8f5nidP1f6WPwCnf9w7rmAOfOh3PHMdirfXnJH
zfPll9IXMCYZ07p+K9Z61hTpi3TNd9K/B0+RPry0/bX0nXX/saWxBda2XWQf
J/sr2T/L7lz39fSFd+I1R5S2qWtXlY+X/bfsn2R3kr089/UL4jHWl+ek3y19
y7rxsJVqxi72rBsvAk+qJM/kXm95nr945tz1Uf+K+Ex54XfhHbLC6wFrF2vO
iawNqr+ouayb6j9H9r8q+411T/a+pfvvU7LbyD609Lf8THbHuv0FsCswrKnS
X8ztO73KmhbXG3wZfJpluedfsC8wui+k/yNZQnvyzNLPU/21mvWudeM3vH9d
son033M/H07FH7ntRbR1fGbq43ownn+ln1i6nHO71N0evC+YUiF9vdLrI22x
nsqP0e9Vsq+WHCd9VZWPjfq6Kr9RvzfKvgGhjVT+WNQ3i+XYzAk3ST9TMkH6
2ZJx+Cyl1zp8uQ3AA/X7cOoxco30TcGwot5S5XuWni/ulL2F7F1Kn38V59bt
Lz7N95E8F+cXfLmP4zX4i09HX7JVvB/1XxvraKDy06UfLn1NlR+i3ytkXxmP
Dcjta+ITDczdPrTHGMnR0kflros6T87tP+CrsCafJn0N1T8+ljVT/W1Kl+Nb
rF/39ZSfKRkpfavS/RNfZZ26/VOwYDDVV6UfkBtbBGM8P7f/i2+Fj7Uz1+j6
8+Ozrq3rW5V+/sNkN4nvx/ueJjlYekm8I30f6avT33P72vjc+0lfSeWnRn2N
uv05/Jknmc9if2fsMoZfzj3f4/t+GcfM7Zpjvld3/Y45jrmXNV5lFW0k/SbJ
Ynwdyc3MvcH2jdI/r1wOFvBGPDZVskT6t5LbpF+k839jPmReAw/T7x/4JpIX
pE9XeVPGh/SfVX6l7H9V9pnsn2R/qt+1Vb5O6mOfS1qmxni/wDcnZpL+EvfV
+afIXqjrr5b9mexF+q2pPI33uCZzLDw7njMu+P2nSV8AngKmJfsB2V/Lvl+/
K+nalVMfewIfnO9NbMfzye4ueyu1ZaX2/5k1SfZq8ZwbVN5Q+sPSF4GtyV6a
uG2/kn1dcP33yV4o+zzZv6j8Udqd9pW9Kt9T9jeyn8psN07dps9KgvSC+Zn1
OfP9GqWug/elPb6WXIsPFZyr+Eb6L6pvaeZcATmDZdKvDm6vJdJ/5f1yz6dv
Sj6hb5aeH/FNO8R4EiweDP996W/mnuuY096RflDptR99B50/uHT8ybnt666f
uXVJnLP7l56f6attVb53af/3fsYe81/p/ouvsk2MP16UPUN267rXV3xnfOhH
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
          "]], Polygon3DBox[CompressedData["
1:eJwt13ncjlUex/FbeJ67kKWylKWFRLaSFlpoQWjBUKiIbJHleYYUSUOkGlSW
bNFMxYQWGpFq6qVMQoxXlkYjiVFSZiqalJr373WdPz6v+/5+7+/vnHNd17nO
OfdZvYd2GnJCLpfbhdK4tSCXe9fn2JK53ENom8/lruQ9x+tA34AWvKGFudyX
JXK5T0rlcttxP6+j3Gq5q2Va4RK6n9y/5FbILEcX+k7s4C2iX0Brug/+yVtG
L8WNyfuEt5HejFH6mK3NQt5i7S/CuIKs31X67U7fjivlVqu9xIX1dVH98BG9
1mcdudX8N1BX7mq1i3id1HXG5VErV523SGYxavN6yP2d11/mLrTkdeOt5U2k
J6M3/abaWrxl6l5CHbkX9V3H93J+K4sn6GH4ynX8Viq78RPojnif9zpvFYrz
2b3aznuHXosRvC76eUvZEH0Ox7W8ztE3ry3dBlfRd6vdq/ZddW/i93Ln8Z7h
LaAXohV9h+yHaovVDcM1cj/wi4252NiKsIteg+a8QfRgbKd7qt2gdo66uSgu
yMayhtePHhhzQXvVeON4zWP+4EJ6sPr9xrLJOD7EvXL9ebt5e+gv8ADvHX2d
rXaFvl/DubwBcp/J7ZM5gLH57Ho/5x2iD8f9K8ye0Xtqe+jzFlwh9zS/gnaq
aLcq/sAr4h1SW5ouwOMxT9V+pHahumcxOs3nT+V2an8XRqtdzD+ddwJdEm/T
z+DkuA51X0TfcrvV9tDvvdofFfMgn9379fqYKTMLQ+i/oIbab+iD6Ca3hteI
d5Q+gu68P/NOTd6PeJl+HlV42+itMafl3tDvpfrtr88B2EJvQgdeD7o7psm9
kGp/UXccr8d7JddM7k6Z3lhP/xUXptrb8C59P46m+7IDA0NjRLrekdhD/ymN
eb321+HmfDavWsh1lrkZU3nz5MrKLZd5FY/TvbDRvZpHz8cIeg5OlFtKL8HD
Bdm7H9fbRlvXxrOMZ8Srmby2WEkX8MfzptNPYSY9Xf3xXHb/tmMhPQs5fXxO
78VzdAP1z/P6uda+OCPmI/9GXjP6YnxHV8VY5RfHeogG9I8YkHIXoXc+m2ub
5SbJTMD1vIa8GbwmdGM05/XlbUvvVl/8jj6A7tqrqq0q+DjWtDQnY8y70VVt
Zd7o1N4FOJfulN7V1vR1sf7R1VzLY2qv09a1KFGYrTlvpz2gfaw59E8YJNdC
pjn66KO67BRee7odTqRvSXtKrLEdo54+mz9Tro9ML/RTW5P3BK8jfTMq0t1l
16nto65XrGtpLQ5vGv0E+qf3rbzaVTFv8RRdH0/K1afr4TK1f9NmK8/8Qs/7
Aiyjq6RndJpMJTSTey3N8cYyDTCR9zzvDF4L+nIsp09RO0rtcf6xyMt95bd2
vC30ZtTn9ZTdEs/Dde3FPYXZmviQ3Fn6rIlL89m+cDDldmMMb4v2mqT2/oF9
9CY05H1Ib8Bu+iTt3cPbQ3+G73nleMN4/6b342feS/qon9a/yphPl5crljvE
/xol6SX8ur5XlKkQ7wf9eloP4h5cisnGt99nmzSW9ajH+5p3A287vQ3n805N
9yqex/moFescJvFy9G9yZenT0jw9kVcQe4XaY/od5fcHtDsGB+iS/HG8KfQf
MSP65fdL3lT8j97m87K0Jy/F23GvZCf6Psf32ZhFf+rzqnQ+WIWN9GH1A9Ma
MQO/0d9hcKqdi9JqzzLmR9WWNd4yqBjriNxoufGxx+Bbejx+9XyPeLY/YFza
e76J9Z4+iAd56+Xra+899e9jB7031rPkrcV5cpPUlojnqu4YHkpnswMlMu+X
aC/OUTFn0x66PNosne2/+9JYjsb5ih6e5l8Jv58Q854uci170vs2Fe30cRNv
OW80PQa3FWRngY3JG4XWcien+Rf3pTwuSuvQGF45+iQ0TXPjvlhm6V+Nrwnv
J/13S3PyGzTgVZIbwTtT7hycTn8be4Mx13EN56BnPttDq/MK6EK8F/tEnInU
/qCtH9EotTeSd4T+Lxrmsz20stpj2v8Zr6X1tBovF+thnKfoZ1Epzlcyb+HG
fOZVjDMIfRgvxrzAkVy2Nq2OM7TcBt4VcpW0dQpu423mtUzreDXcziuT3ul4
P0rGus37gNdcrqxMOfTgbeVdw6tJ18Id+WxvzPM+ULch1t589p4Xae5Uugou
5r3qGTd07e3incWUdGatHWctuh4eTmMZonYv/3McjTkZ58f0Xo7Fk/nsPg+S
+5S/C9/yS/DH+v6o749gepobw+W+5B/Acf7+OHeld2ZC7MtyXdPeUxR7fuxT
vFfkGsi1lrk+3n/e0rRexdreLPrhreA1ibN+nCGjTV6FtNZV1dYZsS/zXk5r
4pUyrfBYqm3M60R3wZtp/buI15PuhXWF2Xpaj9ecvgKP5rMzUlNe01i7MYm3
zmdd/b4VaxC2xvoRe4jvNXyvifHpP05BnPmNbS1uivec910uOw+tQAfegrTn
7aMP4NZ0fv4s/YdYGXODHonv0/+oDbiLHpTe/fX0OoxUW5c3jzeXnocWdEus
TN4cFMn1Tv/LltAvon3cYyzmFdHDcSZ9bmpvdKwtGKx2SFqbttFbcV+cadKZ
+lX6FXSmd7q2trx6dH3sp7/ALemdqYhN9O3p/DzU9Q/G1do7GH56F2rEOZ0e
j8O57Jy4LM4gct/z+so1lmmEO3m19T2bNzTGG+dY3n/keqexnBfnldgreO1T
bRMcoi9Xu4I3g54e90GuTmovvJloVpj9B1vAm0RPwNB07+fzHow9P84HvBrp
LBX3dAQGpfbm8IrpYbibNz+dlXe6rl3oks7PZXgf0zvinMg7PZ3r4sw6EAPS
e9Qwzb/qeI6em87UG9VtRqfY3/jTeT3UdY05xKvKe4TXPdaqOAfzzuHN4vWP
DPqnfh/ntaFboxR9GV7hTaWnxLWk2pnJmxbPJJ0d3/Hc7jeOB+K/bbovU+Vu
kOmAMoXZWCbzWtEtY99TV4v3JK8z3SnW2cLMizPm2NgrMSRd21O8ifRk1KPL
8ie7LwvdkwV4mv4/2a0fNg==
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0u1K02Ecx+Ff0+VT+ZDPJrNSz8BAQT0EBQPFt74qqKankFA0rdTyWcs5
FaNIREspwlMoUOgYCsroBLr+CPt4fUG33ffczbHs0MNLEZHXfeOx+oojNjjC
zzxVwf7NryxNRdxSWTqil+0c5riydo5bKiS/K43YZD55jr3BG3zD12qz15nh
GlfVaq+whctcUrO9yAU12vNs4Cu+VJ09x1rOckY19gtW8zmfqdKe5pQm9NR5
R9inYbudnSzjH/c9d98znvAL88rZTzjKB7yjDruHbfpbFJFOnsNfPtfvmrKP
OMp1TqrTvsd/3muQt3ViX2fyPzGj4Cz+LLx8bNsesePHZZZo13aleJucmeV6
Z1fwPa/wqj7YlazSnl3Nfdbwmg7sWh6yjvX6aDfwiI1s0rHdzBZ16YdDDvCu
Ohz0Efu5xk/K2d+4xZ/JPZLP1M6w3KW6OaTt1MX37z9slkTn
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1443, 1442, 1465, 2084, 2201, 1491, 1492, 1517, 2217, 1518, 
       1545, 2094, 2224, 1563, 1564, 1590, 2245, 1591, 1617, 2110, 2252, 1635,
        1636, 1663, 2274, 1664, 1689, 2127, 2281, 1707, 1708, 1736, 2139, 
       2303, 1761, 1762, 1787, 2317, 1788, 1816, 2149, 2325, 1834, 1835, 1861,
        2346, 1862, 1889, 2165, 2354, 1908, 1909, 1936, 2376, 1937, 1962, 
       2181, 2383, 1981, 1982, 2010, 2405, 2011, 2036, 2037, 2062}], 
      Line3DBox[{1445, 1444, 1467, 2202, 1470, 1493, 1496, 1520, 2218, 1523, 
       1546, 2227, 1548, 1565, 1568, 1593, 2246, 1596, 1618, 2255, 1620, 1637,
        1640, 1666, 2275, 1669, 1690, 2129, 2283, 1709, 1712, 1738, 2304, 
       1741, 1763, 1766, 1790, 2318, 1793, 1817, 2328, 1819, 1836, 1839, 1864,
        2347, 1867, 1890, 2357, 1892, 1910, 1913, 1939, 2377, 1942, 1963, 
       2386, 1965, 1983, 1986, 2013, 2406, 2016, 2038, 2041, 2064}], 
      Line3DBox[{1446, 1447, 1468, 2085, 2203, 1494, 1499, 1521, 2219, 1526, 
       1547, 2097, 2228, 1566, 1571, 1594, 2247, 1599, 1619, 2113, 2256, 1638,
        1643, 1667, 2123, 2276, 1691, 2130, 2284, 1710, 1715, 1739, 2140, 
       2305, 1764, 1769, 1791, 2319, 1796, 1818, 2152, 2329, 1837, 1842, 1865,
        2348, 1870, 1891, 2168, 2358, 1911, 1916, 1940, 1298, 1964, 2184, 
       2387, 1984, 1989, 2014, 2193, 2407, 2039, 2044, 2065}], 
      Line3DBox[{1448, 1450, 1471, 2204, 1477, 1497, 1503, 1524, 2220, 1531, 
       1549, 2231, 1553, 1569, 1575, 1597, 2248, 1604, 1621, 2116, 2259, 1641,
        1647, 1670, 2277, 1676, 1692, 2132, 2286, 1713, 1720, 1742, 2306, 
       1748, 1767, 1773, 1794, 2320, 1801, 1820, 2332, 1824, 1840, 1846, 1868,
        2349, 1875, 1893, 2361, 1897, 1914, 1920, 1943, 2378, 1949, 1966, 
       2186, 2389, 1987, 1994, 2017, 2408, 2023, 2042, 2048, 2067}], 
      Line3DBox[{1449, 1453, 1472, 2086, 2205, 1498, 1505, 1525, 2221, 1533, 
       1550, 2100, 2232, 1570, 1577, 1598, 2107, 2249, 1622, 2117, 2260, 1642,
        1649, 1671, 2124, 2278, 1693, 2133, 2288, 1714, 1722, 1743, 2141, 
       2307, 1768, 1775, 1795, 2321, 1803, 1821, 2155, 2333, 1841, 1848, 1869,
        2350, 1877, 1894, 2171, 2362, 1915, 1922, 1944, 2178, 2379, 1967, 
       2187, 2391, 1988, 1996, 2018, 2194, 2409, 2043, 2050, 2068}], 
      Line3DBox[{1451, 1456, 1474, 2206, 1484, 1500, 1510, 1528, 2222, 1539, 
       1551, 2102, 2234, 1572, 1582, 1601, 2250, 1611, 1623, 2119, 2262, 1644,
        1655, 1673, 2279, 1683, 1694, 2135, 2290, 1717, 1728, 1745, 2308, 
       1755, 1770, 1780, 1798, 2322, 1809, 1822, 1149, 1843, 1853, 1872, 2351,
        1883, 1895, 2173, 2364, 1917, 1928, 1946, 2380, 1956, 1968, 2189, 
       2393, 1991, 2002, 2020, 2410, 2030, 2045, 2055, 2070}], 
      Line3DBox[{1452, 1458, 1475, 2087, 2207, 1501, 1512, 1529, 2092, 2223, 
       1552, 2103, 2235, 1573, 1584, 1602, 2108, 2251, 1624, 2120, 2264, 1645,
        1657, 1674, 2125, 2280, 1695, 2136, 2292, 1718, 1730, 1746, 2142, 
       2309, 1771, 1782, 1799, 2323, 1811, 1823, 2158, 2336, 1844, 1855, 1873,
        2163, 2352, 1896, 2174, 2366, 1918, 1930, 1947, 2179, 2381, 1969, 
       2190, 2395, 1992, 2004, 2021, 2195, 2411, 2046, 2057, 2071}], 
      Line3DBox[{1454, 1462, 1478, 1490, 2208, 1504, 1516, 1532, 2216, 2093, 
       1554, 1562, 2237, 1576, 1589, 1605, 2244, 2109, 1625, 1634, 2266, 1648,
        1662, 1677, 2273, 2126, 1697, 1706, 2294, 1721, 1735, 1749, 2302, 
       2143, 1774, 1786, 1802, 2324, 2148, 1825, 1833, 2338, 1847, 1860, 1876,
        2353, 2164, 1898, 1907, 2368, 1921, 1935, 1950, 2382, 2180, 1971, 
       1980, 2397, 1995, 2009, 2024, 2412, 2196, 2049, 2061, 2073}], 
      Line3DBox[{1455, 1466, 1479, 2209, 2088, 1506, 1519, 1534, 2225, 2095, 
       1555, 2238, 2105, 1578, 1592, 1606, 2253, 2111, 1626, 2267, 2122, 1650,
        1665, 1678, 2282, 2128, 1698, 2295, 2138, 1723, 1737, 1750, 2310, 
       2144, 1776, 1789, 1804, 2326, 2150, 1826, 2339, 2160, 1849, 1863, 1878,
        2355, 2166, 1899, 2369, 2176, 1923, 1938, 1951, 2384, 2182, 1972, 
       2398, 2192, 1997, 2012, 2025, 2413, 2197, 2051, 2063, 2074}], 
      Line3DBox[{1457, 1469, 1481, 1495, 2210, 1507, 1522, 1536, 2226, 2096, 
       1556, 1567, 2239, 1579, 1595, 1608, 2254, 2112, 1627, 1639, 2268, 1652,
        1668, 1680, 970, 1699, 1711, 2296, 1725, 1740, 1752, 1765, 2311, 1777,
        1792, 1806, 2327, 2151, 1827, 1838, 2340, 1850, 1866, 1880, 2356, 
       2167, 1900, 1912, 2370, 1925, 1941, 1953, 2385, 2183, 1973, 1985, 2399,
        1999, 2015, 2027, 2040, 2414, 2052, 2066, 2076}], 
      Line3DBox[{1459, 1473, 1483, 2211, 2089, 1509, 1527, 1538, 2229, 2098, 
       1557, 2240, 2106, 1581, 1600, 1610, 2257, 2114, 1629, 917, 1654, 1672, 
       1682, 2285, 2131, 1701, 1716, 2297, 1727, 1744, 1754, 2312, 2145, 1779,
        1797, 1808, 2330, 2153, 1828, 2341, 2161, 1852, 1871, 1882, 2359, 
       2169, 1902, 2371, 2177, 1927, 1945, 1955, 2388, 2185, 1975, 1990, 2400,
        2001, 2019, 2029, 2415, 2198, 2054, 2069, 2078}], 
      Line3DBox[{1460, 1476, 1485, 1502, 2212, 1511, 1530, 1540, 2230, 2099, 
       1558, 1574, 2241, 1583, 1603, 1612, 2258, 2115, 1630, 1646, 2269, 1656,
        1675, 1684, 1696, 2287, 1702, 1719, 2298, 1729, 1747, 1756, 1772, 
       2313, 1781, 1800, 1810, 2331, 2154, 1829, 1845, 2342, 1854, 1874, 1884,
        2360, 2170, 1903, 1919, 2372, 1929, 1948, 1957, 1970, 2390, 1976, 
       1993, 2401, 2003, 2022, 2031, 2047, 2416, 2056, 2072, 2079}], 
      Line3DBox[{1461, 1480, 1486, 2213, 2090, 1513, 1535, 1541, 2233, 2101, 
       1559, 821, 1585, 1607, 1613, 2261, 2118, 1631, 1651, 2270, 1658, 1679, 
       1685, 2289, 2134, 1703, 1724, 2299, 1731, 1751, 1757, 2314, 2146, 1783,
        1805, 1812, 2334, 2156, 1830, 2343, 2162, 1856, 1879, 1885, 2363, 
       2172, 1904, 1924, 2373, 1931, 1952, 1958, 2392, 2188, 1977, 1998, 2402,
        2005, 2026, 2032, 2417, 2199, 2058, 2075, 2080}], 
      Line3DBox[{1463, 1482, 1488, 1508, 2214, 1514, 1537, 1543, 790, 1560, 
       1580, 2242, 1587, 1609, 1615, 1628, 2263, 1632, 1653, 2271, 1660, 1681,
        1687, 1700, 2291, 1704, 1726, 2300, 1733, 1753, 1759, 1778, 2315, 
       1784, 1807, 1814, 2335, 2157, 1831, 1851, 2344, 1858, 1881, 1887, 1901,
        2365, 1905, 1926, 2374, 1933, 1954, 1960, 1974, 2394, 1978, 2000, 
       2403, 2007, 2028, 2034, 2053, 2418, 2059, 2077, 2082}], 
      Line3DBox[{1464, 1487, 1489, 2215, 2091, 1515, 1542, 1544, 2236, 2104, 
       1561, 1586, 2243, 1588, 1614, 1616, 2265, 2121, 1633, 1659, 2272, 1661,
        1686, 1688, 2293, 2137, 1705, 1732, 2301, 1734, 1758, 1760, 2316, 
       2147, 1785, 1813, 1815, 2337, 2159, 1832, 1857, 2345, 1859, 1886, 1888,
        2367, 2175, 1906, 1932, 2375, 1934, 1959, 1961, 2396, 2191, 1979, 
       2006, 2404, 2008, 2033, 2035, 2419, 2200, 2060, 2081, 2083}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{677, 1084, 1083, 1082, 2316, 1081, 1080, 1079, 2315, 1078, 
       1077, 1076, 2314, 1075, 1074, 1073, 2313, 1072, 1071, 1070, 2312, 1069,
        1068, 1067, 2311, 1066, 1065, 1064, 2310, 1063, 1062, 1061, 1059, 
       2302, 1058, 1057, 1056, 2309, 1055, 1054, 1053, 2308, 1052, 1051, 1050,
        2307, 1049, 1048, 1047, 2306, 1046, 1045, 1044, 2305, 1043, 1042, 
       1041, 2304, 1040, 1039, 1038, 2303, 1037, 1036, 1035, 1060}], 
      Line3DBox[{703, 678, 679, 680, 2201, 681, 682, 683, 2202, 684, 685, 686,
        2203, 687, 688, 689, 2204, 690, 691, 692, 2205, 693, 694, 695, 2206, 
       696, 697, 698, 2207, 699, 700, 701, 702, 2208, 704, 705, 706, 2209, 
       707, 708, 709, 2210, 710, 711, 712, 2211, 713, 714, 715, 2212, 716, 
       717, 718, 2213, 719, 720, 721, 2214, 722, 723, 724, 2215, 725, 726, 
       727, 728}], 
      Line3DBox[{755, 729, 730, 2217, 731, 732, 733, 734, 2218, 735, 736, 
       2219, 737, 738, 739, 740, 2220, 741, 742, 2221, 743, 744, 745, 746, 
       2222, 747, 748, 749, 2223, 750, 751, 752, 2216, 753, 757, 758, 761, 
       2225, 762, 765, 2226, 766, 769, 770, 773, 2229, 774, 777, 2230, 778, 
       781, 782, 785, 2233, 786, 789, 790, 793, 794, 797, 2236, 798, 801, 802,
        804}], Line3DBox[{805, 754, 756, 759, 2224, 760, 763, 764, 2227, 767, 
       768, 771, 2228, 772, 775, 776, 2231, 779, 780, 783, 2232, 784, 787, 
       788, 791, 2234, 792, 795, 2235, 796, 799, 800, 803, 2237, 806, 807, 
       808, 2238, 809, 810, 811, 2239, 812, 813, 814, 2240, 815, 816, 817, 
       2241, 818, 819, 820, 821, 822, 823, 2242, 824, 825, 826, 827, 2243, 
       828, 829, 830}], 
      Line3DBox[{857, 831, 832, 2245, 833, 834, 835, 836, 2246, 837, 838, 
       2247, 839, 840, 841, 842, 2248, 843, 844, 845, 2249, 846, 847, 848, 
       2250, 849, 850, 851, 2251, 852, 853, 854, 2244, 855, 859, 860, 863, 
       2253, 864, 867, 2254, 868, 871, 872, 875, 2257, 876, 879, 2258, 880, 
       883, 884, 887, 2261, 888, 891, 892, 2263, 895, 896, 899, 2265, 900, 
       903, 904, 906}], 
      Line3DBox[{907, 856, 858, 861, 2252, 862, 865, 866, 2255, 869, 870, 873,
        2256, 874, 877, 878, 881, 2259, 882, 885, 2260, 886, 889, 890, 893, 
       2262, 894, 897, 2264, 898, 901, 902, 905, 2266, 908, 909, 910, 2267, 
       911, 912, 913, 2268, 914, 915, 916, 917, 918, 919, 2269, 920, 921, 922,
        923, 2270, 924, 925, 2271, 926, 927, 928, 929, 2272, 930, 931, 932}], 
      Line3DBox[{959, 933, 934, 2274, 935, 936, 937, 938, 2275, 939, 940, 941,
        2276, 942, 943, 944, 2277, 945, 946, 947, 2278, 948, 949, 950, 2279, 
       951, 952, 953, 2280, 954, 955, 956, 2273, 957, 961, 962, 965, 2282, 
       966, 969, 970, 973, 974, 977, 2285, 978, 981, 982, 2287, 985, 986, 989,
        2289, 990, 993, 994, 2291, 997, 998, 1001, 2293, 1002, 1005, 1006, 
       1008}], Line3DBox[{1009, 958, 960, 963, 2281, 964, 967, 968, 971, 2283,
        972, 975, 2284, 976, 979, 980, 983, 2286, 984, 987, 2288, 988, 991, 
       992, 995, 2290, 996, 999, 2292, 1000, 1003, 1004, 1007, 2294, 1010, 
       1011, 1012, 2295, 1013, 1014, 1015, 2296, 1016, 1017, 1018, 1019, 2297,
        1020, 1021, 2298, 1022, 1023, 1024, 1025, 2299, 1026, 1027, 2300, 
       1028, 1029, 1030, 1031, 2301, 1032, 1033, 1034}], 
      Line3DBox[{1085, 1160, 1159, 1156, 2337, 1155, 1152, 1151, 1148, 2335, 
       1147, 1144, 2334, 1143, 1140, 1139, 1136, 2331, 1135, 1132, 2330, 1131,
        1128, 1127, 1124, 2327, 1123, 1120, 2326, 1119, 1116, 1115, 1110, 
       2324, 1109, 1108, 1107, 1106, 2323, 1105, 1104, 2322, 1103, 1102, 1101,
        1100, 2321, 1099, 1098, 2320, 1097, 1096, 1095, 1094, 2319, 1093, 
       1092, 2318, 1091, 1090, 1089, 1088, 2317, 1087, 1086, 1113}], 
      Line3DBox[{1111, 1186, 1185, 2345, 1184, 1183, 1182, 1181, 2344, 1180, 
       1179, 1178, 2343, 1177, 1176, 1175, 2342, 1174, 1173, 1172, 2341, 1171,
        1170, 1169, 2340, 1168, 1167, 1166, 2339, 1165, 1164, 1163, 2338, 
       1161, 1158, 1157, 1154, 2336, 1153, 1150, 1149, 1146, 1145, 1142, 2333,
        1141, 1138, 1137, 2332, 1134, 1133, 1130, 2329, 1129, 1126, 1125, 
       2328, 1122, 1121, 1118, 2325, 1117, 1114, 1112, 1162}], 
      Line3DBox[{1187, 1262, 1261, 1258, 2367, 1257, 1254, 1253, 2365, 1250, 
       1249, 1246, 2363, 1245, 1242, 1241, 1238, 2360, 1237, 1234, 2359, 1233,
        1230, 1229, 1226, 2356, 1225, 1222, 2355, 1221, 1218, 1217, 1212, 
       2353, 1211, 1210, 1209, 2352, 1208, 1207, 1206, 2351, 1205, 1204, 1203,
        1202, 2350, 1201, 1200, 2349, 1199, 1198, 1197, 1196, 2348, 1195, 
       1194, 2347, 1193, 1192, 1191, 1190, 2346, 1189, 1188, 1215}], 
      Line3DBox[{1213, 1288, 1287, 2375, 1286, 1285, 1284, 1283, 2374, 1282, 
       1281, 2373, 1280, 1279, 1278, 1277, 2372, 1276, 1275, 1274, 2371, 1273,
        1272, 1271, 2370, 1270, 1269, 1268, 2369, 1267, 1266, 1265, 2368, 
       1263, 1260, 1259, 1256, 2366, 1255, 1252, 2364, 1251, 1248, 1247, 1244,
        2362, 1243, 1240, 1239, 2361, 1236, 1235, 1232, 2358, 1231, 1228, 
       1227, 2357, 1224, 1223, 1220, 2354, 1219, 1216, 1214, 1264}], 
      Line3DBox[{1289, 1364, 1363, 1360, 2396, 1359, 1356, 1355, 2394, 1352, 
       1351, 1348, 2392, 1347, 1344, 1343, 2390, 1340, 1339, 1336, 2388, 1335,
        1332, 1331, 1328, 2385, 1327, 1324, 2384, 1323, 1320, 1319, 1314, 
       2382, 1313, 1312, 1311, 2381, 1310, 1309, 1308, 2380, 1307, 1306, 1305,
        2379, 1304, 1303, 1302, 2378, 1301, 1300, 1299, 1298, 1297, 1296, 
       2377, 1295, 1294, 1293, 1292, 2376, 1291, 1290, 1317}], 
      Line3DBox[{1315, 1390, 1389, 2404, 1388, 1387, 1386, 1385, 2403, 1384, 
       1383, 2402, 1382, 1381, 1380, 1379, 2401, 1378, 1377, 2400, 1376, 1375,
        1374, 1373, 2399, 1372, 1371, 1370, 2398, 1369, 1368, 1367, 2397, 
       1365, 1362, 1361, 1358, 2395, 1357, 1354, 2393, 1353, 1350, 1349, 1346,
        2391, 1345, 1342, 2389, 1341, 1338, 1337, 1334, 2387, 1333, 1330, 
       1329, 2386, 1326, 1325, 1322, 2383, 1321, 1318, 1316, 1366}], 
      Line3DBox[{1391, 1441, 1440, 1439, 2419, 1438, 1437, 1436, 2418, 1435, 
       1434, 1433, 2417, 1432, 1431, 1430, 2416, 1429, 1428, 1427, 2415, 1426,
        1425, 1424, 2414, 1423, 1422, 1421, 2413, 1420, 1419, 1418, 1416, 
       2412, 1415, 1414, 1413, 2411, 1412, 1411, 1410, 2410, 1409, 1408, 1407,
        2409, 1406, 1405, 1404, 2408, 1403, 1402, 1401, 2407, 1400, 1399, 
       1398, 2406, 1397, 1396, 1395, 1394, 2405, 1393, 1392, 1417}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
OiH1UcRA/H/Be1/jLipLd8LYnWuxLZv2iOvUjSzeEgL8oyEJvS7VCcIvd9ea
LOyR//zh+TPYL5BlfKQ50wlfF6jCTijZIHsF3ZNp2NmtV8S8BDthXaVxWLvN
GkX6nLibg3369aWNE9ydoJLbnlp1xhKdrqCkXMd+p9xD9DZXJwRdubTXhiyQ
J+cvtI1d8OzjEDnmTliOOZg/nWmG5Le+u2mXEkBz59H+J0ydcEPV4k6QvBka
Z8l/a4BdgnstQ4q2EyYrL5vye5ogn+uv/8fRfcdz9f0BHDe+oaSMFJWISkVJ
Rgtve++9994jOyOpRDL7IHuPSvZoHdlCVJKKqIiUrUGl3zm/f5+P+3h9rnvP
Pfdz+XyOo+nY63xsxNKZ2+Bo0zDjFR49JPogXjAHu1nbsMTI5jYItbxi03VD
B7HJXHMfx96wt2eLBHb28J5fUmo66N24rsEU9li1eZ3dtG2Qtzl/2uiDFvqr
3xfGU0yu60w7w4w6WJ0a2zzS6o8O6DWc1J3C71fLTe7VmLWD+KQMZyOdP/qj
1DablYafB5+fFDfyqgIxljMh18s80edrc3sZF/D7mWSNc9dp2uC47segFnct
xLj27u1B3D+P9vxa+dOKr8vRj9msGuhfIsMjM+xUH7nXbwRWAfPFXVElfO4o
YP1yxJ/5BXC6MPiGU6EaxHqMFQ24XdCBKZnb6nP4efzX78O+uPNbeJiieFcd
rY0t51njjsxyyjbdn62Qlrpp+kOOKjrCu2c2Cbtf1JbsCrVqeOm39OSbhBNi
iFL4ALjjU6kQcnKxGiy0ndh2cjoivd6xKPJ9rgOHw6je/WgFAYZ9m6UUVdEX
YxV7Cu5M2unHHVjG/eFbP+0DlVH1gkhxG3atjza7Ly5Vw7lYnWHTGXtUwv7O
6iXu/DF/50IJqoErglXj13vsUWeMuETuLL5fc3/43rDUCqeWjvS7HlFGJXWx
rV2406JR88FirhXO14Y5KyUqouSP+/2XsKc4/GQR8K+B9NcVU4fa7dCXE1O9
pbgzfokmw+ZbDaTJj/+4XGaLDp6oOZn0ZQFObKmr/PWtFfaMt77TUVNEP9Qi
pb/jToKpZtzyTCs8OBlm9mlcHqlQCfbtKcHP0eIdIYIzNXDvW8aSc60Nsty1
tSkTdyqiD+6V0qmFBlWelPzj1ujw8esDeTN4/H9M6E/FHSkqsbjMAnlEm96v
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
6e6tSvRxm9ymFn4POCVa9F4de90txTnTrErUtuX30WfBbvBLtaGFuLGFV4Jy
diXiehOx766YC+y3dnyggT157uyFuzmVyFs2rT5+1AlMZW08iWvHDfC45FYi
2i1lUjT/OUJT/WsmTbI/OjYylLxKdDAwYseTWXso6TtYQbav0n2oIJhfidSH
Q1Ka7O1Al8eZmWxP+S7ncKygEtmVNT4IuWALbH6xhWT7U2g9pwT7iNOdyqfi
NnD/pdIUcbra9dDowkp0ZwVGn563BpsTDwKI937WMJvG3qrleJSp3RLiK4by
iLeKtiaVFVWi+y72XZkXLCBPu1qU+O+5/WNr2Hv3dvx3v8wMKJUGWsQD7F9c
LCzGx+1nfe3bJFP4T6l1mhwfbdetLz5jb/zMTydKhedt1XO/iNMMCo5eKKlE
jlPNko+ZjSF3QYpC3PnX1cU67P90R1Vt6g3h/RfaPOLLHB++bR0pR50bld9L
G8Pg4MuD9kbfF+BMlU/n3QP3EJ3g6Ssc5uFAfU6RLRO/H9v+ROHhNp9y1E//
MeD37xDQ9OS9X4u3F3c/dOlsaSUKDakPkfhsAEdC/8mRvuiBi6Eu2A+4lqT3
NurDx4fmKsS3fa5OyMCdAep9iht3Q+Dh5cs6dbijGBevo3OhHKWB2ZrY8QBQ
3c98rRn7tBiF8wPu6C31pTjS6sNLet0VMq5aKaq5DGWVyItp57rfui4s8zz/
Tvxf237xx7gzbeln5rbiD+gZZYh0zq7nBmhfLkc/Z1aR3w1fiJXVTH9Avhcv
oqZzHnfE0nhn7cx14f3O+GLS4W90r7uJPZg/Pui3rw5I/xEvIc5Yb/upFHcm
JyZ20tv4woz8hQekI/Fp7kLZ9XJUkVwsbBblBV+N1R8TDxYa5vuJOwZuYT31
09qgNOZqRjqCsq7ebOWVyO/xZl86Tm3QSV02JX6raYZxEXdmmts21571grcp
7r2k45ihk9uaXI5EIg3YZHa6gaR98+x97C3q0n/ccGcUIpdMz2nB+UVZdtIJ
EXu7ORr7hX9eq0m9GrAYvn8HcevUDf4N3NGzWV95MOoK15QKvpKOf1fWsZm0
cqQ9bcvMfs0JONh3ZJHjZivCOTyEO05fhYsZF9XBbIfQS1XcyasK1vuC3UV8
ZsS6VA16GRqeE+c3oXPanV6O7nFnr4qaOoG2gRSFdCoedzRrZJWjv6NfysYK
7WF7V+3OJnLcQsf1RSoq0a6Ht7IFP6nCpc+8N0nHu6d+UB57cFQbh/xDFTjZ
HZNC3D/rfWYQ7ogIdrQcDrMHX3spJtJxu5D2mTOvHN15nthyC2whInshooGs
P7A08ioGd060fqcV3qoCa4d/m5IOtbJ7Rxr270mdbMk0yjDw2c6E+OUPS5+l
cIe2Ii5SgdsWWu0rzpMO1V+JepfCciS8oc9JLW0N3z32fiPj1uzN87Bh3DmC
JCx+2ClBU+nVA6Tz5hu37CfsMrVq/eN+isBgsYWPOONvgflruJO5fLO68YA1
bN+3a4J05lx36uuVlCOV4T8tcjwW8NWBzpFcXx88nslx3a5En5+IjIRPKsBy
ZtKSCpnnL106dhj71n6ZR+1bFMAgVmKR+JEjeTleuMO1tKzQs2QOKkITJqTz
5NhfqpmycsRuaqgbIG0Kr9y3rVRjd0jyWrPAHdmVjLb7MfLg2Tb+hHQG3lGp
O2G33rsp/HarHLzY8aCFuPjNcDrq8nJk9x+LWzyHKRSY802Tjuz+bn2x2+Xo
+1qEaVS3EfBrXLhZhX02LE0nA3c8Nf9EW6jLgez30zdJp6W9LOyRYiUy/HFE
MHtOFrpWPQfLsWc6n8pUw50C6Wn5P8VGcOrjv2ukw3Z36/ocG56fI3yZKNWy
sMh+7cUbcn/hFOr3nMDzkmYJsv8cBlR6pnNaeHvv/QcEFe+WI+/7gS4Pig2g
03pI4x52z6wn+0yxi+++nFNx1QDy3D7IEq98raLJd68c/dr3rj24Rw/cPuXs
qcQeJzIlJ4a97tlI7/57emBzVIaF+Hta988vq8pR4lfb3D2HdUFObezvHexb
9/09OInd2/eb1RSzLlwI3rVKPGr8+phFTTnqE76yRaNJGzTTtFZuk3U89ufm
u2OPPFMo+bhQG75/2zdLvOLuJFdnbTk6aJ66k2ZKE/ayZK9XYFcdOJr2Enti
6nyLW4smsNX8XiK+/d7uTub6cjT+/ljL7nx1UJh1YyX+gc6Riwt71XMLd6dI
dXDQ1t1C/JhsmbZMQzkqDGWQe3xLFd6GeZ4px25B61Gmjt3LuK7HIUwVnKyH
hIkfVguoMW0sR3zsK+NRPcrgqO7qWYb9+s51fgfslcdnc9nuKYOCkJIT8Ynx
KV+rJjzPTC/12x5Sgmihc1Wl2Jv6j3G7YDc0+2gUtk0Jjt+/Uk5cZfXtY51m
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
U27nAjeOrd7cNUfXnBPWmf6QYLuCif3py3zIK7vc0XfFDMcVf3XtVvF3J0LD
79n5F1Af/3HOmqSIbPrYPMlHSLDh5dQ/Op2JHHZr20GfHlA8+MVJnLvbTUU7
5ZFSCCaJHS723NeR5ujfR19/43XHn0vKQ+zFQNXncaV9ry46t1g3mYL9oUrk
7nrOhWigexpIr/xLCS1NGp8n6orXzYyKmRuXAOPLV+azkZqITUgp2u8XCaLj
G82jdUvheY8z3QFZDUT2RfBD/BKOAzlKuCQVX8Jyv0TAgeMyiO6q0/X+XhKA
wPa2/KVwlGTv3P4qVhyKKrrj/xD7IWK2CWmfS0GBdyFx3k0dPUqQ6j2A9eRl
6UUcepAFDAlePDHLyihWYEBpH34vRkOvD/kqZeD4NrTp4iUVtPs67UThT+xv
k9L05QVlYN1/N6vVQwHticjRUsdcNpet5Y1KI/jNeW5zb4kjm6KoF+btJOBT
rY7Yt1EGFvKf7Nt1ZZGAoZE9cd+3hfuPsx/1NKFk19bH7VezolPH8p/8w/11
22t9zOJ4OTDqqYnWN0mhjbElyxckEpz8qs0o5VkEnrc1vx3JUENuc83mF3A7
Jz31av8I5XDjV//3xggJVPjLPMMby6/ayGwrm9SCHHljuoMpoIHhc2Kd70kQ
46X5kud6OYxJZGktV4uhjxW8v8Ww/HLKwX33b5cDpU9hp6WoKGpSrPy2D3Oh
zuCXe16HgXnf3JuoZQmURBN9lBzbuXfP76vMx4oRN1WuH6hagzWD5WgC7t8D
vmvPLXeWo0XK0L4pERfoXJxPmsN69k7RTak8jUWCTvdZLrpzoeW2cF9yYt+m
+sUOjbp8tH3KNPGXpSmQ01fIOmI/5M1jVor9moNkhy/VhiXrAcvZc+xEfkTy
qpZz360UeB+RXXbTRBy5mdoeSt4kQesnyd2fXlag46PyhQ/BGUQp/qjAAgm6
HzrctknNQm2JdQ/8wjRhPf6SwcY6CSQiiqPPfchAxbdj2wr2KMGLuBG2HX9J
8LHLtMbkYiFa4rAkW9UzA47OPcvXVkiQGboeK9Tih+goDlIWX+dFHlfZ2Cpw
O8hY9/b5F6WjuKWLb6d5pcCVQ7I5j7h3r5I1P809DRXZflJUZD4C3red+4n7
yw5ta/iqsuZAKnOmS85fQOGcwpTU2J4EUdXUnsYyJFGRGV3y1hyoWpbvC2M/
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
Hcdq2Gh0RmlHjioNxO1mHcStUPj/3J30d3N3z/ZcCkxSYKEqxzwyZSAAxg0b
G0l986eOvxSa2DjL9ITivGvbYWrtnBriSvQsiRjK0GQhhSJuzAn2gegNl7eR
/oMwxXNqYWOAojR77StLeDirsY7s77XFXsmlr2ehvJSN/aClB0RIiHTJPNLA
2xr9/jY2qt+9/+pdgjlM8lNeEn8hue/14FtTFgpnLw/tcHGF4ya8ITIv9Cqv
h/ZezMbUHde+Ho01hZUt5fNIv1hlBXeTHQvfvffb1n3YGS7OPFdE5ojMDVrk
I1+wUV9+q3pUlTFIcS7SiWtw2LCwkO3KwuMNJecljziAyprb8eT33KnyZiLb
h4W0PovfF8jTwVqywJ/4ApEDl1iee1nYte4m/6ruDohaNOxLXIDsNI4ShLPw
7fEq+/mvqHBelB71Lf9fNu+dTfR0f/PKVhddS4hOls0luf2l4FBWEseafv5/
XsIVT/9v1G15SvLtzfL/PpWawEKjGyfEjG4TyNU5vJzULyy1WdKfyEI9y0HF
eENjMNBvjic5+c//Y96pUtZU7/SnX9GvkHsnZts+iDnhmk7266QuvkzUUGai
Pe+pe7lOAMh/OJZNcuC7hnv3L9Nh4ntt2lLtx97Q8kfbTlJPK+nNUt/MxLD7
5h7t1rvhyS3H0+RzPKU0ZFSsmFiHah+WJzJghpptKslpP9t936LTgYlLtlff
zWhygryfFiWT3PX8YcaaZncmMkaE829224MjQ+E02d9T9hMZh/gzcX3GqSaW
kh0ovlvMJdevuMmq+c0+Jt7Vi+inmdmA9eZDt0k++fqG7pUxkUx8oLt23ic1
KjQtxY8kV/zLte6C7bFMPPfb1ifJBy1A5/qgEakfZEWmxhxl4kHT9eO0rWYw
sWuUReZqJkzLKpceZ+KOGpknWk4m8DVqcoLkdf/a7Uh3SGaiUV2rUUwgQH21
wj5S/x/0kmRb
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0.5, 3.}, {0.5, 3.}, {0., 0.09700062650956612}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6872016940162373`*^9, 3.687201713658778*^9}, 
   3.687201802658058*^9, 3.687201974896365*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
IQXkU4g8Nv5e5n45BcyXgw0OzB3Gq4oH8+Xib7btQ40/x4M+C9HEiLNV8u4p
YL6d6HnWt3jDMylgvlx8zX77kDvvaP7+z694+PZWf12HR/Ggz53ol6L50f9O
pgDdLvQQ72HM2Z4ykOf/fxdsotRzdmE8mC8PKz7peD4pNx7Mtwvt1vwky9wC
59uDdp569rp3CZyvBB684uH9DxnxYL4SWOfr0tX6sXC+PSj0IMumQQv2pxzZ
OC7UW3Mb7nciNOOlXOj1ySlgjn/Qz0lD1hVOoHFyPImU+1G+bhiN9x+XepFq
fb3iqSFQl4HDZKuZOZ3JA/spz8Dbc9cc47cnAz8MvMn00dSKn8kDdWsYePIG
e6sF5YBHvP8mz4vTfvkqeWA/c5j44I8TOgtfJIMcsnABI/jt0RvJA306sLCU
vdqJhuuAR7x/5eYFj8iNTx44R102vjlqMF4bC3j+/5y41ItXV31hvRyc3Tfa
Y403rJeDT89nLp3sAOvl4H1H7if8tIP1cnH2Az11fALWK74esz1/UOoY4BHn
U97Bt7hmV/LA+TrwcGq1He+xIaxXAjvUfHsxXBfWK74eW66kwV77Dy+k1/k5
d+PB52mpaRTe/3lFBaqxPFm0STKTwsl58Ky0oGt3RwaF958XqlFh6B27VT9p
nJzXjrm6Hhj1nsYX/OX5hXq5AZOb79A4OU/h466J5hk03v85wG/0esR2hZlh
NE7OOwLfI6v2edJ4//v6JqRx4eSseqsMUC8fJVRVyt81pfH+z3/4aNk3U5P/
DKGfFqTq8GuIuS6o16EVTa9c8dBGi8bJcT69Xq357Ewa7/98RoBCfwbzpihB
/wLkFz8Px8kAnpx21CVb7tHNhP0Uor2PBvHa29MpvH++HWhDcs346pp0UG8n
sppfmLjlWzqotxMVRN6oKn6ZDurtQpkndV5eL0oH9XYjqxsXlYty0kG9PWjV
tcfag5PTQb0ipL/n6+zAMOinHI08aHbJVCkT9EGE7IbaPtfxobf/ez2Q8wdZ
ze48veYijZPjmFWmhMZma9iHPhTXmjzuzXGoy8AWc6yV5x4E/s8y8OYTVuvG
bk8Hfhi4/vWpuo96NN7/OQATF3VV3Zu8DPaNiUMKxl2bpQl4hrDwpi97uqtm
poM5snCO5XCkORn0rYSF5cNrR+kpwD6z8a93+/m/ZUEfEsTXD96MZzskYb0c
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
L0L/AxhnPmk=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw1nAf81uP3xj/PZz9WUwmhtFQkI6SshoqSjJRKtIgke+9VZkpLoUhmQijZ
kZWMbCUys8peyf96/677/3p1d53n/px7r3POfe5vo+NG9zk5jqLolSyKEuFf
RRRdr4iaZRTtKfr5ShT1FJ6ljw/p++nCrvp2tvBd4bnCZxV/jrCd+O4W/87C
U/X7A8WfITxAfC+LHphH0Wn6PU/0KcKTFd4XPUbYUWnuU9pdhQPEdz7flO4i
4eviuTiU+5roY3KnfUr0KOHmSnOi0v6l+DaiZ4tuHfJ5RDyHCHfR72cU313Y
TflcQv2ErfT7ScV3KdyWj8R/QeJ6vhra26V0O94RPqq46Qq3KPRSvvOFvYUH
6PttovcXrqZ+yvMf4b7K90XRhwr3yP39ReVzr3jvUxiv0Flxtws7CQ8Sz6GU
LZ4jhfco/ghhJ8VPEt1GuHvu+C65+/YkfX9LeGPkfMlzb32bIGwl7Kbvs0Qf
KOyg312ES0rz3K/4boH3AYWJCvvm5n1JPPuJnqu4HrnTPiG6T27euYG/h3jv
EHYX7pm7XV1zt4W50Vd4YmL+44W/6vdA9cm3tEVlXKD4+qIb6NtForcU1lU4
VXQd4R7i2Uq4SJipH4cp7S/ir6e4YeIpRP+rcJzi14V8iK8X8rmW/IVbKFwX
Oa+GCsNDWcz5MzTnfxderrjLFGYo1NK3IcLNhLup7BrCBcLthGcoflvaq9/b
CJ8sTV+s+AZhjBiPFsIm+n686MaJ21tbuFDYUaGv6BeElyWeS8zzffX7RdH9
lfZwhWGKe0Nxa0WfrjYmquc1jLl4jhL+oPj+iv9a+LvCWaIL8byt798pfK9w
dOK5QXn7KK+BwqXC/on5+H1M4rEbILxSYaXosYnTvhDimf+PhTXwlcrqq7I+
F45IPCeGJq7zO6KHCTdVPY4Xzx+MT+L5cyx9z/4h+gTh/qXxzdJtH8yaF65R
mjFK+1/I/6Uwf/opPM48FVYUzhEdC6dGXu/TFO5XmvZK+7LweYVOot8WttK3
1gq1FR7SmDcSzhPuxlxQ2FXhZuX1StivtovMU7C2tEeqWtHdwgcUGot+NnM8
PM8In1Je+4t+Wvi9fh8g+tPM+ZJ/A+aEMukkXK349zPXif33CZW3n+r5hnCB
QjPRD7GGYufznPDtzHnfrjye1bcdxPOosJ2+785ep/CGeHYRviWcp7Axe41w
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
7YM80ef+KV3ul6wL9A+l/y3sUfg/TIl87zA45EneL7AnVGynehF9PvT5Ocij
ok/GBpJ6TaBbYdOgbujpe6fWq1gXzyqsq3gskT2o7wuFdbprK7Y5oOtdI3pL
7gaR/0SfWLie7+v7XmrXQan9wXqEvl0m+j3qhV6EPCqeIZnvj4dyT6v4n8Pe
i75/veiG6DXMS9EvhXqyttHB0FvHVqx3d0nti4XOzJoaoPyOqTrP1xhP0cMU
t0coizovQX8N8dxdD88sJ2APHZd7jfdW3ICq9SDW0eCwFveL7X+wSHm8pPgn
aJfmX92w3/QLPPsis5e2gWOzhWbf+q70+c46uo25VHjODlRZ65TXWsU/LXyo
4rn3sMIPSZBLEtOMNfbJR8S3GJ7Uey/rdEbuelAfZBL6njX+qMI3ie3n2D+p
MzZ8ztfltKNife+FxDIJMtW7iW3j7K2Pq4xVil+Q2tb3c1jjB6ru26itnblP
Kv1956r3D/ptQcW2qRsqtv8ckHledRH2QHZnHgoPL22T556CcutXfG5dg4yI
vomtqLT/BfI287Qa+4w8vfQ6bqty7xC+Q/+kzpNz7MfS5wt7xS2hznuie2eW
CX+LLI8epHzvVbpWyuc6dHB97yd6UmK/O+zP0J9Htk1PT+zjxF1Fj8yyd0/h
/Ir7nT7vozxfFw5gnAuP1U7K8zDRHyt+GPMdG5rSPlRYB1yq+P6F7fa1wh7L
nUJR8X3Eg8x10XOFp+W2xX5Seg9sw7zLLLvmFcvb1IE67VOYf2lkX2XqME95
7Fj1/QX8U3O3fUf0FH3/LPFeh9wJjVyNjL4isb0KefUB9g7R9wv7lpaxscND
I4f+XHqsmdPthY1Uv82V/3aZ+5w1flxhGbsIdcC+wT52ZOF1sDSshcOUplHs
9TkrsZzOnUWvwuW3VlvOU/o3ItvPDxHfduI/WNgrs98R/QMPdyCfIjOk9k3F
Lrk+sR8UdzPsn2+zb1atMx4YbBH4bN8lnh2FE/R9iuibhC8I7614TZ5aevzR
9/EhxEcR38XFgeeein0Uqds9wjHin6g8mlZ9//Jb2Is4o+iHByu2w6NznZTb
n5yzpptwfNgvqMNOrBNhk6rX9TthbTNf5lQ8Tuh33OFiX2qusDN3hsIrVIcd
hIdU7c+G/v2DcInSPMD4gsq/reL6VL3/Ec93/LFvjuxvgP3nSGwGwW7TT/Rf
mW1T+JXhb7ZrZvlnt8x1om70KfYT/O7wOWymsE/sOnVWuXP1fQ/hM2rfu6Lv
5FzQ7xmimxe2dx2G3i2co29PkWfqOrMn42NJPtT78JDfy6Fv8fNn/Hoj7ylM
E91UOFXpbxE9BTkK2wT7O3KIvnWgnVXvUftj4xE9VvSeog8X3V7YSfwdM9M7
iN6Ls0hhy9D2a0ufTQuxDylsi12r8H0Z7xROEHYVX+uwZ8LPXntU1feVn0a+
j+ukuIahbvAjG3QP/dxA9M7Cq5V2d/pIaXfJ7HfKb+q8m+jHC7dra+yBhe+S
8NG+KHefTFIfNOP+RWkaY1/IPG9Zl9isWJdlbL9b7H6dI/sS44+Bf3uT3POt
nr43zrxGpinP5lW/6WBNtEXf0rem2Joyv91g7h5c+E5qbZDljtS3juJpkvks
WBvOA2Tpf/ideu70je1TOzn1Hsg4cneGjzd+4JeXrksv7Lrh3ETXvS312XW7
cIbC4+xpws1S32dxn4JP7wHK+1lkvMx9OCjz/Qh6Mz7eF6WenxcLRyv+VtEt
xH+y6EsUt13V9zv4beKf11fhdtGzhOPF1wTbjnAHhbGKa1x1WfjWDc6cP/dJ
5wtPUZ7XIy9zfqW+e7o29Z0I+jZ+oVemXrPkxRuTO0S3FF6Y+p0LdaqbWmdH
J9oytS0cvRI5k/v2f5Xf/NxnNLrhW6n3Z+TVpan1aGTcd1KfcctZiwo/ii4z
p8Um8VfpPsf3FfvINanXJHXGpoc/4WeFdX/8z7kfRXfGZx4d+LLUdwT/37eX
CxtV3cYJir9CODCz/yHj0rXwftCyalmUtbygsN2AOxj829lPpounRdXls34H
xN5r0evZU85Kfd90emr/ojsj+/6dlnrfIP7U1G+Ozkjto4VPFP5LF6Te/3lP
dJLKPZs2Ve1jdlVkf9oTS6drWHV5lMs44RuGPbId4yietqrXfOWzE3ul6B0z
v+thn96t8By+NcxbymIfa1Z4nrDncXfAeYEPzPaF/ZdmKv/2wlbKq344F85N
fU93jvDk1Hevo1L7vM2J7AN5EGdcOGdPKH0mNgmyDTLR0VXHn8ScqjpP+oH+
GBD6mbXEfRx3iNzJYcfuGeyN7I3Ia/2r7mfuC09J3Q+tOavoQ85RxW1d9Xuf
myL78hHP+cL7rxNT30Ph83O80p4gbCD+4anfZ50Q9o2OYe94M7GNCnvFo+GM
ny88W3n9jjyrtDszjpF9BS9N3f/Mvbqx96K/FS7FhoW8I/7Zqe8bOb/YB24S
vW1Y49wjNyrs84+4dYfwKvHdVvEdGfaoX5mDwj9S21j+ZK2nvjuYFOipFcsT
t2f2W8XfC/vzicqzmjse36WZIX/u2Fg/rJH3RB8rjGOfBYnCdP3eKpwL+L9d
GPltFHconGV3COsrr5ax2zk9pB8r7FRafsYPpHPptwb4/JN3w5A/vkPI1fiN
zCh8Vs4tfNfDm6baud8g1BP9qPBH5P5gM4e/HjJN1X6AZwb+G9SeSRXvidxb
9Q9yCO9Haop+MDMP92jITFvpd23lt2Xmtxs59w5CBmJUZN/3q0qfpYciM4v+
Ven25y618Bixt0Nzbuyg+Jmp9Sr2c2x6P7E/CH9JrTv/jHyhML3isxD5du9w
tiKPNQ37/0WFbRSjC9dhl2A74h5qZBjTzWLbCpgfnO/NY8tqLTPro+wPlMU9
FHscdz1jwl3AJWX0v4cr3IVhB2AOoIe2UZotYq+xv1LbE5hv8P/NXly17XQT
8Uwo/HaGdzX3C/+NfbfC+5MaoW7UkfXCe4KHS8tp71dsM2FNYfc4qXDf/lvx
nd3Gse0D9N17hfsH+xtvnXgvdI/wz9h+s7xtQRf4ULxDhPelfl+JXveTwvrQ
56cVlhH2UwajSvc/MuSswvrs3WHe8h70bcZBZWyPvpn5HeIilXWYcFpmf+yp
QS9pHGSgiZl95vGT5i3bgshv4ojHlxsfa3yhedPAvQxvIZ+M/Faxa+J9mPeQ
vEejLN7a7Vf6Hdsy4ZDEbyR5k8abCPyieafAW84FwbZ5Q+H2XlL4fQHvj/D1
500o9k/edcKDLnZrkD3RR/LY+wpyI3OC94CLI99lY9dlPsxkb8/sw4/vNT7z
+HPiszpJ32oqrnvVd6+cI7cVjuecuk84KLGfEm/ursjs14o/P2+ROE95z1Mn
83ypjc6lsi+J/IYRGh/qxejHYZ7DQ33w9+aNR7vEtjL8lWtknp/Ikx0S22zx
f+b9LP75R+aWSaknc+5/70pi+5nzBvDJMNbMPd6pDK163PHbxz91ZGJfKd78
npPZz513ELw7Y3+7q/DbCu7yeBNyZ2F5Hv2atzl1lPaRzOO7JLIfVxZ7PBiL
yxS/DXJM1Wm3pp+qnqvwXVd4X+W98vLSbzSwC3Jv2C7s1ezZoxO/jeJdLm+N
n2dOsl8m9t3irfR5id+U8Y76qsTvKrnDuDSxT+AVIR79Gv8xZHXW5ybCUZnv
W7HTIrsS1w2fkNLvuXhvy3ysF/r5xsTtxR8UGl1mfKgDNgreWt+VWAfB35L3
Atxj8k7josw+zhcH/WbLMFc3z7zX1M1cLm+m3yv9FgY5g/d3vI1iz+QOd5Ow
t9CGQanlLHyudhX/eZF96f9LbaPegG6h8HXFex93TH+IPk94ucK3FduxoXmk
16XqN8KcUzVzp8XfYH3qPDn34GuY2d7CGC8rbI88TmmXFJbxB1ddH3ztH8Om
mPhOH396/O1PiexnX8n8zjHOnHb32DrditT1xK5eZNbPkMOPznyO9M+sazcJ
+hRnIPcItWL7HiAzrAzzEJkG/wruKT5FjgpnE23qrHo2yGyv4wzdOXEf8lYB
GvsA7yWw13HfMbJw2/HZYE7/ltpPA7mKunG3jj3339SyBP1/rdLkjK3KaplY
xuMNA/E/VHxfQz5fVHw2jyutfx9RNd0yyBVpYl99/PZHZPYl4N0a76k5EzfL
bW+kbwZV/a4N+faJwvc4K5X/cNGvpLZhYlM+t/Tc4Ix+M/U5jO7DvTz2+i8K
37OsqNhW/m5q2yA2pn6kqfjOBR2K8wv7NfcFH4WzDB0Uuyp6Kf4k2HUHsreX
bi/nZr/Ad4DwaIXHOMOr5uEeY7eq47lnGcG+VPq+qEPV9cdOv6foF1Kft9je
seti4+FvBTA/sZ1ir6gX9hbeRCxMPR+wh7cr7ReEz0zfzG/njsp8T/R+kC3H
ZNbLeUNXM/F7C97UYyNdEfr22My+JdwZYCfHTvVI4XeyyDNPcXaFOtQLNmr+
pgFtxja+Msjq/TLrStSBuvHm/onSaYdGfvdOP6wKfbJPZn8SbDr4upwS5kPt
cB5xFzwytb0KPWi/xHrZvuHMahH2H+6X2YsmB9mY+2jk1NGpfVPRhfCvYL1N
K6wLja/YHxJfVvQC/BXxRx0fdISRpfWerar2o5sQ9AXikfmxWX2Wei5x18X7
mpPZH4JeiR2eu5W9M+8P2LC+im2vwwdoRGmZGX3wysJ7Sdeq7SRtQv+fmdpW
c07Qobgb4j7ovNR+m+i0yFTYJLZV2iTzOZVmtjOMD3of/mPYBvFbQl/m3gf9
rVHis56/S4AfC/XH1wU7M2sBuzcyC7oV+9G2me3n2JOpM/etYwr7g6F7XVhY
/2I/wx9gSGrfS/xu6Qf0Gmx236Tm5x62XWZ9FHsd/cnezp3uQ6n/9gh2c/Yf
9D7ecdUKeyb7bO0gk9zPWZ34HRV/k+HT2PbJVaGfeYNSv2pZdHXYD/Ex5m6L
e8Ms8x00/UafjIj8Nx1+SG3b5d4Xmn2P+w58eEaFscbW1yLUYePM9yTIruSJ
TMEeiuyEbwOyGvov93q8U/o/lEedVg==
          "]], Polygon3DBox[CompressedData["
1:eJwtnAn8FtMXxmfembkzLxUhW5QlIkTKUllKCaVFkX0phWzt9kpE2ZfIvkay
y75vEcq+U0JSsiThb43/8/Xcz6fTe87cmTszd+5yznOe+9tw4NC+J9aSJPk1
TxL9S5rov13TJNlFsob0S8skWVkn/CR7tPR3Q5J0ld5K8qL0mTrWReWHSmZL
XyA5XPruktelj5H8rnNXkz1JeqMiSRrUXGdD6Wfr2AqVryX7culb6dim0jeR
tJK+gaSJ9DUkzaXP0j130PmVnm1FlSR1/TaTvX48dovqWFvnbq1z96knyUmy
l6e+56nSL5aU0kuV76Hyq2U3lv2bzjlLeqXjS6X/kPqcNSSrqLyRZHXqlGwt
vbWkl/R1C78bdawj/V893whde4BkifQLVGeuslRlu+t+p8n+NXWdZ0rfV8c3
kr6hpJ/0mbqmncprepe/9H5XlL73Lzp2hvR3JL1lD9C5R6i+R3T+ZirbTfK8
9L8kQ6XvJ1kgfRfVM1H6JMmu0lvoup11/S6STaXPV32HSN9N8rL0YTo2XPoI
yXDpn+rYgdJ3lTwb2y9I30Byh/TnJJ2kHyR5UfpESSJ9Xck10q8r/e3+1P3P
l76S6txYdgv6QOH2yaSvL7lZ+pF65vdUxWGZ+o/e/yvZ/XXtMMkiynTNDiq/
k/pV/oB+O8juKJkh/cPC9v3Sr1P5G/QF2a0lr0tfrPI9o36byt8sXP6m7Nvj
+ZTvFY/9JTlH+rmSv6U/pfObSb9b+rU6/1vZPWS/K3ua7C9k7yb7ed5H9nv6
3VZ2m3jOqnqHUdKXSr9f5XfV/D47xjqf0/Ubxne5XuX/yD5U9h+yZ8heQzKZ
viypSf+ffk9S+cnxnKbBz/u79AdU/mPN9xstWSZ9jurbUvqr0qeqfCWdf3x8
t4dk19TuR8g+XJJK/5T+Iv0Rld+g8kdrtneRPCb9M5V3kv6U9JtU/qLsFrHs
RtlP11zeWfKM9Bdqbp8ukhejvbn0zWKbvcLcIb1bfMYl9EPpIyTfMg5U/37S
F0q/h+eXnMO9eXfpDSSTpN/KmJL+q87vr/MXyb5X9jLZfWXPl32X7CA5i7aW
NKG/6fdElQ+N9+ig9rlV+iTJxtJ/0vX9pH+hsrt1/mY6dqnsTdVWz8T2O1X2
aZJCei24PdEfqTx+e+naYyRfSf9Ivz1V3kvysfS/Vf/B8VtN1/nT9Lue7KaS
56Q3C36WXPU9XLm9+J5bSGbRfoXbk7a9hfcp3J6U3Sp7he55mvQrmANl/67y
A2Lb3ic7k4xjbElWkf6JfvuovLfkZ+rU+cP0O5T+LX0tnTNF+hmSuvTP9Htc
4j5FG/9Q+PpPpd+p8tMKrxXMOadKX67fY1U+RLJJ5v5Mfz+ENUl6e73vzdK7
qmyWrj9X1xyp4wMZl9Ib6dhF0kdKftW77azzrtP519NHpe8quVH6DZIDpbdV
fdcw3qS/qGs/Zg7mm0t+Kv29b6H/qfwVlZ+p3zeYCyRnZx7PjPe9Je/TNjr/
4Vj2ic7vot8nZD8Zn3n74Pt3kv6yyk+QPU/2WbI/lr277Dtl95f9Ev2j8HxB
3XfIPoTjsl9mTEo/QPI440tygfRuuv7uWPaGzt9Z9lTZ3WW/KntA5vn0fclA
6e0lZ0ofF9tgP9pB+sz4DL0lzzEWJX3i+bTXtZIO0vsHl/eS/prqPyD4+n1l
z5G9l36fZqzHZ+is8mmxrtkq30i/43l/SYvM7Uv7PcQzMfcEtzf6R/H77Ke2
OEHtMkjr3am0M/2JMSb9RB3fSeUd4zmjuI/K5jAnSu+p+mZE/QPV1zf429AW
b8n+unRf2lPyvvRjg+s/SeXvq7ytfsfIPkOybeb6qe8ByUj6iK7ppmuPkLwr
/Q1JD+mDJfOkjyq8NrKGjpR+Tubv/5nkXOlH6X4fSj9W+tu63we6Zh/GkORb
6X9KTpZ+mSShr2fuC/SJC6UP0/Xzo/6pyg8KLr9Y9tx4PuWfx2PHSO6Tfq/k
aOmTaAfpb0vOj+WvMPdKjuP7FH43fLpx0hurzktZc5ir9GwnZH7+jyQnMn55
Z5VdLPlDevfg+1HXO7p2/eC1lDG9gfQNJecl7rMtpbfMvJadFOfU9qrjfq39
r0n2KL0eMF/tL/lG+geF107m9I+lH8I30LkfyNfZUf3lPf3Olf2p5G3p9+PP
JZ4jn5S+pPBaf6Tk38LzP+vLvpIF+Ai65gNd+6HkdunnSCZLvxx/Ufruut8z
0qdKtpA+ScfOlX6OZKL0rwuvZawBvxVej5nfD0rsA7D+40+sn9ineUXXfKxr
P5K8JH2p5H3p7+GT5l5PW9I2iddc5td9EvsQ7xf2t//QuQt17k56/+/0+6Xs
LyTfSJ9a/Oee/bem3Fp4fmfuPTbO0cw3zCd3SQ6WPk3n6F/SXHKHlIfwdxOv
OS+wduh+s/k+qrud7ndn8V83TTaij0m/R7Iyc7vkQemPS9ZOPMe9JX1NXX+W
rj9d1zfneQvPrUdJgvrDliq/TeXPSraW3jS3r9tZsq70vXTseenTJNtK35Bv
kjpG2SB3vLC99D6S+azlOnaz9Jskt+T2t9tK70mbS99Gddwh/QXJ9qXH9x5q
l+56rgP1fD1lz1TZnZIdpbdnvVX5ZpLtpU/OPHYYQ5dnjo+6qmwX/BZdf4Lu
eZGuvVByrPRnJT9KX4b/ntsfaKdr20o+ZI0kBlPZJZKTpM8r7HsxBhYV9m8Y
C/hkX/JtdL9xOneozm1at79CX8Ynniu9i8qfiO++uco/Kew70+c/py+pfJbK
7yFeoC8V7qudGG+F13fGGn1uXs3r99nSJ0h+kd5W19xF35XsTDxY2NdjTf8R
XwT/U+dtgR8o/XM9x3yd+5lknvT7crc93/ReAlJ9k8P0s0LnP6iOtYnsi+m/
atunKvvn+Br4HPi8W6h8Mv2TdUzl62Ze61jz1pe+VebyKyStpTcM9vUq6Y/F
9ekY5kbJhtLLzP7WefGc5pl96VHxGTYixpO+Kuuyrm+UeS4ZKGkY/Q/WatZs
fIDVM/uyw+M1PA++4qnxmXPVN0B6Xfqjlf0Z1krWzJ2ktwv2b9BnqnwX2bcn
fobNpe8mmZ64jbYJfl70S5hvpTcJvh/v/nzl+Rb/9TLJZtJbqPzCxGt2a+lV
8Fik7Z7W+asHz8+c+2zl9qH98Jnz6O/clDgGWU/61pIpidfOF2K8RnyzQeIY
jfWV8qsk7eL9L5K+tvQndX6r4GdjTtox2L9grcAn3zOzv8Vawj13y9y/H1ff
eVdyGHhC8LdmDerE2q8+9UrqPv6E9Om55xbm8Dty+z+8O22Kj/MI+EPiGPHV
wu2PL4TP0is4HiLe2ThxjLST7vmg6npd0lt6m+B3w2fYQ3oR3D8a4ydW9r/w
//hm+FBDVP6x9BH4bbE/4XuMidfQf/jWfKM1Mvdvvs9gyTrRP3xH+ruSg6Tv
qfrukX6k9DdVXyc90yN6trck+5f2D/GH8FmJufGvnk/s4+ED7a3r75c+VPq7
0T/pq/c8Wm0xsO71H18Pnw8f5nidP1f6WPwCnf9w7rmAOfOh3PHMdirfXnJH
zfPll9IXMCYZ07p+K9Z61hTpi3TNd9K/B0+RPry0/bX0nXX/saWxBda2XWQf
J/sr2T/L7lz39fSFd+I1R5S2qWtXlY+X/bfsn2R3kr089/UL4jHWl+ek3y19
y7rxsJVqxi72rBsvAk+qJM/kXm95nr945tz1Uf+K+Ex54XfhHbLC6wFrF2vO
iawNqr+ouayb6j9H9r8q+411T/a+pfvvU7LbyD609Lf8THbHuv0FsCswrKnS
X8ztO73KmhbXG3wZfJpluedfsC8wui+k/yNZQnvyzNLPU/21mvWudeM3vH9d
son033M/H07FH7ntRbR1fGbq43ownn+ln1i6nHO71N0evC+YUiF9vdLrI22x
nsqP0e9Vsq+WHCd9VZWPjfq6Kr9RvzfKvgGhjVT+WNQ3i+XYzAk3ST9TMkH6
2ZJx+Cyl1zp8uQ3AA/X7cOoxco30TcGwot5S5XuWni/ulL2F7F1Kn38V59bt
Lz7N95E8F+cXfLmP4zX4i09HX7JVvB/1XxvraKDy06UfLn1NlR+i3ytkXxmP
Dcjta+ITDczdPrTHGMnR0kflros6T87tP+CrsCafJn0N1T8+ljVT/W1Kl+Nb
rF/39ZSfKRkpfavS/RNfZZ26/VOwYDDVV6UfkBtbBGM8P7f/i2+Fj7Uz1+j6
8+Ozrq3rW5V+/sNkN4nvx/ueJjlYekm8I30f6avT33P72vjc+0lfSeWnRn2N
uv05/Jknmc9if2fsMoZfzj3f4/t+GcfM7Zpjvld3/Y45jrmXNV5lFW0k/SbJ
Ynwdyc3MvcH2jdI/r1wOFvBGPDZVskT6t5LbpF+k839jPmReAw/T7x/4JpIX
pE9XeVPGh/SfVX6l7H9V9pnsn2R/qt+1Vb5O6mOfS1qmxni/wDcnZpL+EvfV
+afIXqjrr5b9mexF+q2pPI33uCZzLDw7njMu+P2nSV8AngKmJfsB2V/Lvl+/
K+nalVMfewIfnO9NbMfzye4ueyu1ZaX2/5k1SfZq8ZwbVN5Q+sPSF4GtyV6a
uG2/kn1dcP33yV4o+zzZv6j8Udqd9pW9Kt9T9jeyn8psN07dps9KgvSC+Zn1
OfP9GqWug/elPb6WXIsPFZyr+Eb6L6pvaeZcATmDZdKvDm6vJdJ/5f1yz6dv
Sj6hb5aeH/FNO8R4EiweDP996W/mnuuY096RflDptR99B50/uHT8ybnt666f
uXVJnLP7l56f6attVb53af/3fsYe81/p/ouvsk2MP16UPUN267rXV3xnfOhH
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
          "]], Polygon3DBox[CompressedData["
1:eJwt13ncjlUex/FbeJ67kKWylKWFRLaSFlpoQWjBUKiIbJHleYYUSUOkGlSW
bNFMxYQWGpFq6qVMQoxXlkYjiVFSZiqalJr373WdPz6v+/5+7+/vnHNd17nO
OfdZvYd2GnJCLpfbhdK4tSCXe9fn2JK53ENom8/lruQ9x+tA34AWvKGFudyX
JXK5T0rlcttxP6+j3Gq5q2Va4RK6n9y/5FbILEcX+k7s4C2iX0Brug/+yVtG
L8WNyfuEt5HejFH6mK3NQt5i7S/CuIKs31X67U7fjivlVqu9xIX1dVH98BG9
1mcdudX8N1BX7mq1i3id1HXG5VErV523SGYxavN6yP2d11/mLrTkdeOt5U2k
J6M3/abaWrxl6l5CHbkX9V3H93J+K4sn6GH4ynX8Viq78RPojnif9zpvFYrz
2b3aznuHXosRvC76eUvZEH0Ox7W8ztE3ry3dBlfRd6vdq/ZddW/i93Ln8Z7h
LaAXohV9h+yHaovVDcM1cj/wi4252NiKsIteg+a8QfRgbKd7qt2gdo66uSgu
yMayhtePHhhzQXvVeON4zWP+4EJ6sPr9xrLJOD7EvXL9ebt5e+gv8ADvHX2d
rXaFvl/DubwBcp/J7ZM5gLH57Ho/5x2iD8f9K8ye0Xtqe+jzFlwh9zS/gnaq
aLcq/sAr4h1SW5ouwOMxT9V+pHahumcxOs3nT+V2an8XRqtdzD+ddwJdEm/T
z+DkuA51X0TfcrvV9tDvvdofFfMgn9379fqYKTMLQ+i/oIbab+iD6Ca3hteI
d5Q+gu68P/NOTd6PeJl+HlV42+itMafl3tDvpfrtr88B2EJvQgdeD7o7psm9
kGp/UXccr8d7JddM7k6Z3lhP/xUXptrb8C59P46m+7IDA0NjRLrekdhD/ymN
eb321+HmfDavWsh1lrkZU3nz5MrKLZd5FY/TvbDRvZpHz8cIeg5OlFtKL8HD
Bdm7H9fbRlvXxrOMZ8Srmby2WEkX8MfzptNPYSY9Xf3xXHb/tmMhPQs5fXxO
78VzdAP1z/P6uda+OCPmI/9GXjP6YnxHV8VY5RfHeogG9I8YkHIXoXc+m2ub
5SbJTMD1vIa8GbwmdGM05/XlbUvvVl/8jj6A7tqrqq0q+DjWtDQnY8y70VVt
Zd7o1N4FOJfulN7V1vR1sf7R1VzLY2qv09a1KFGYrTlvpz2gfaw59E8YJNdC
pjn66KO67BRee7odTqRvSXtKrLEdo54+mz9Tro9ML/RTW5P3BK8jfTMq0t1l
16nto65XrGtpLQ5vGv0E+qf3rbzaVTFv8RRdH0/K1afr4TK1f9NmK8/8Qs/7
Aiyjq6RndJpMJTSTey3N8cYyDTCR9zzvDF4L+nIsp09RO0rtcf6xyMt95bd2
vC30ZtTn9ZTdEs/Dde3FPYXZmviQ3Fn6rIlL89m+cDDldmMMb4v2mqT2/oF9
9CY05H1Ib8Bu+iTt3cPbQ3+G73nleMN4/6b342feS/qon9a/yphPl5crljvE
/xol6SX8ur5XlKkQ7wf9eloP4h5cisnGt99nmzSW9ajH+5p3A287vQ3n805N
9yqex/moFescJvFy9G9yZenT0jw9kVcQe4XaY/od5fcHtDsGB+iS/HG8KfQf
MSP65fdL3lT8j97m87K0Jy/F23GvZCf6Psf32ZhFf+rzqnQ+WIWN9GH1A9Ma
MQO/0d9hcKqdi9JqzzLmR9WWNd4yqBjriNxoufGxx+Bbejx+9XyPeLY/YFza
e76J9Z4+iAd56+Xra+899e9jB7031rPkrcV5cpPUlojnqu4YHkpnswMlMu+X
aC/OUTFn0x66PNosne2/+9JYjsb5ih6e5l8Jv58Q854uci170vs2Fe30cRNv
OW80PQa3FWRngY3JG4XWcien+Rf3pTwuSuvQGF45+iQ0TXPjvlhm6V+Nrwnv
J/13S3PyGzTgVZIbwTtT7hycTn8be4Mx13EN56BnPttDq/MK6EK8F/tEnInU
/qCtH9EotTeSd4T+Lxrmsz20stpj2v8Zr6X1tBovF+thnKfoZ1Epzlcyb+HG
fOZVjDMIfRgvxrzAkVy2Nq2OM7TcBt4VcpW0dQpu423mtUzreDXcziuT3ul4
P0rGus37gNdcrqxMOfTgbeVdw6tJ18Id+WxvzPM+ULch1t589p4Xae5Uugou
5r3qGTd07e3incWUdGatHWctuh4eTmMZonYv/3McjTkZ58f0Xo7Fk/nsPg+S
+5S/C9/yS/DH+v6o749gepobw+W+5B/Acf7+OHeld2ZC7MtyXdPeUxR7fuxT
vFfkGsi1lrk+3n/e0rRexdreLPrhreA1ibN+nCGjTV6FtNZV1dYZsS/zXk5r
4pUyrfBYqm3M60R3wZtp/buI15PuhXWF2Xpaj9ecvgKP5rMzUlNe01i7MYm3
zmdd/b4VaxC2xvoRe4jvNXyvifHpP05BnPmNbS1uivec910uOw+tQAfegrTn
7aMP4NZ0fv4s/YdYGXODHonv0/+oDbiLHpTe/fX0OoxUW5c3jzeXnocWdEus
TN4cFMn1Tv/LltAvon3cYyzmFdHDcSZ9bmpvdKwtGKx2SFqbttFbcV+cadKZ
+lX6FXSmd7q2trx6dH3sp7/ALemdqYhN9O3p/DzU9Q/G1do7GH56F2rEOZ0e
j8O57Jy4LM4gct/z+so1lmmEO3m19T2bNzTGG+dY3n/keqexnBfnldgreO1T
bRMcoi9Xu4I3g54e90GuTmovvJloVpj9B1vAm0RPwNB07+fzHow9P84HvBrp
LBX3dAQGpfbm8IrpYbibNz+dlXe6rl3oks7PZXgf0zvinMg7PZ3r4sw6EAPS
e9Qwzb/qeI6em87UG9VtRqfY3/jTeT3UdY05xKvKe4TXPdaqOAfzzuHN4vWP
DPqnfh/ntaFboxR9GV7hTaWnxLWk2pnJmxbPJJ0d3/Hc7jeOB+K/bbovU+Vu
kOmAMoXZWCbzWtEtY99TV4v3JK8z3SnW2cLMizPm2NgrMSRd21O8ifRk1KPL
8ie7LwvdkwV4mv4/2a0fNg==
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0u1K02Ecx+Ff0+VT+ZDPJrNSz8BAQT0EBQPFt74qqKankFA0rdTyWcs5
FaNIREspwlMoUOgYCsroBLr+CPt4fUG33ffczbHs0MNLEZHXfeOx+oojNjjC
zzxVwf7NryxNRdxSWTqil+0c5riydo5bKiS/K43YZD55jr3BG3zD12qz15nh
GlfVaq+whctcUrO9yAU12vNs4Cu+VJ09x1rOckY19gtW8zmfqdKe5pQm9NR5
R9inYbudnSzjH/c9d98znvAL88rZTzjKB7yjDruHbfpbFJFOnsNfPtfvmrKP
OMp1TqrTvsd/3muQt3ViX2fyPzGj4Cz+LLx8bNsesePHZZZo13aleJucmeV6
Z1fwPa/wqj7YlazSnl3Nfdbwmg7sWh6yjvX6aDfwiI1s0rHdzBZ16YdDDvCu
Ohz0Efu5xk/K2d+4xZ/JPZLP1M6w3KW6OaTt1MX37z9slkTn
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1443, 1442, 1465, 2084, 2201, 1491, 1492, 1517, 2217, 1518, 
       1545, 2094, 2224, 1563, 1564, 1590, 2245, 1591, 1617, 2110, 2252, 1635,
        1636, 1663, 2274, 1664, 1689, 2127, 2281, 1707, 1708, 1736, 2139, 
       2303, 1761, 1762, 1787, 2317, 1788, 1816, 2149, 2325, 1834, 1835, 1861,
        2346, 1862, 1889, 2165, 2354, 1908, 1909, 1936, 2376, 1937, 1962, 
       2181, 2383, 1981, 1982, 2010, 2405, 2011, 2036, 2037, 2062}], 
      Line3DBox[{1445, 1444, 1467, 2202, 1470, 1493, 1496, 1520, 2218, 1523, 
       1546, 2227, 1548, 1565, 1568, 1593, 2246, 1596, 1618, 2255, 1620, 1637,
        1640, 1666, 2275, 1669, 1690, 2129, 2283, 1709, 1712, 1738, 2304, 
       1741, 1763, 1766, 1790, 2318, 1793, 1817, 2328, 1819, 1836, 1839, 1864,
        2347, 1867, 1890, 2357, 1892, 1910, 1913, 1939, 2377, 1942, 1963, 
       2386, 1965, 1983, 1986, 2013, 2406, 2016, 2038, 2041, 2064}], 
      Line3DBox[{1446, 1447, 1468, 2085, 2203, 1494, 1499, 1521, 2219, 1526, 
       1547, 2097, 2228, 1566, 1571, 1594, 2247, 1599, 1619, 2113, 2256, 1638,
        1643, 1667, 2123, 2276, 1691, 2130, 2284, 1710, 1715, 1739, 2140, 
       2305, 1764, 1769, 1791, 2319, 1796, 1818, 2152, 2329, 1837, 1842, 1865,
        2348, 1870, 1891, 2168, 2358, 1911, 1916, 1940, 1298, 1964, 2184, 
       2387, 1984, 1989, 2014, 2193, 2407, 2039, 2044, 2065}], 
      Line3DBox[{1448, 1450, 1471, 2204, 1477, 1497, 1503, 1524, 2220, 1531, 
       1549, 2231, 1553, 1569, 1575, 1597, 2248, 1604, 1621, 2116, 2259, 1641,
        1647, 1670, 2277, 1676, 1692, 2132, 2286, 1713, 1720, 1742, 2306, 
       1748, 1767, 1773, 1794, 2320, 1801, 1820, 2332, 1824, 1840, 1846, 1868,
        2349, 1875, 1893, 2361, 1897, 1914, 1920, 1943, 2378, 1949, 1966, 
       2186, 2389, 1987, 1994, 2017, 2408, 2023, 2042, 2048, 2067}], 
      Line3DBox[{1449, 1453, 1472, 2086, 2205, 1498, 1505, 1525, 2221, 1533, 
       1550, 2100, 2232, 1570, 1577, 1598, 2107, 2249, 1622, 2117, 2260, 1642,
        1649, 1671, 2124, 2278, 1693, 2133, 2288, 1714, 1722, 1743, 2141, 
       2307, 1768, 1775, 1795, 2321, 1803, 1821, 2155, 2333, 1841, 1848, 1869,
        2350, 1877, 1894, 2171, 2362, 1915, 1922, 1944, 2178, 2379, 1967, 
       2187, 2391, 1988, 1996, 2018, 2194, 2409, 2043, 2050, 2068}], 
      Line3DBox[{1451, 1456, 1474, 2206, 1484, 1500, 1510, 1528, 2222, 1539, 
       1551, 2102, 2234, 1572, 1582, 1601, 2250, 1611, 1623, 2119, 2262, 1644,
        1655, 1673, 2279, 1683, 1694, 2135, 2290, 1717, 1728, 1745, 2308, 
       1755, 1770, 1780, 1798, 2322, 1809, 1822, 1149, 1843, 1853, 1872, 2351,
        1883, 1895, 2173, 2364, 1917, 1928, 1946, 2380, 1956, 1968, 2189, 
       2393, 1991, 2002, 2020, 2410, 2030, 2045, 2055, 2070}], 
      Line3DBox[{1452, 1458, 1475, 2087, 2207, 1501, 1512, 1529, 2092, 2223, 
       1552, 2103, 2235, 1573, 1584, 1602, 2108, 2251, 1624, 2120, 2264, 1645,
        1657, 1674, 2125, 2280, 1695, 2136, 2292, 1718, 1730, 1746, 2142, 
       2309, 1771, 1782, 1799, 2323, 1811, 1823, 2158, 2336, 1844, 1855, 1873,
        2163, 2352, 1896, 2174, 2366, 1918, 1930, 1947, 2179, 2381, 1969, 
       2190, 2395, 1992, 2004, 2021, 2195, 2411, 2046, 2057, 2071}], 
      Line3DBox[{1454, 1462, 1478, 1490, 2208, 1504, 1516, 1532, 2216, 2093, 
       1554, 1562, 2237, 1576, 1589, 1605, 2244, 2109, 1625, 1634, 2266, 1648,
        1662, 1677, 2273, 2126, 1697, 1706, 2294, 1721, 1735, 1749, 2302, 
       2143, 1774, 1786, 1802, 2324, 2148, 1825, 1833, 2338, 1847, 1860, 1876,
        2353, 2164, 1898, 1907, 2368, 1921, 1935, 1950, 2382, 2180, 1971, 
       1980, 2397, 1995, 2009, 2024, 2412, 2196, 2049, 2061, 2073}], 
      Line3DBox[{1455, 1466, 1479, 2209, 2088, 1506, 1519, 1534, 2225, 2095, 
       1555, 2238, 2105, 1578, 1592, 1606, 2253, 2111, 1626, 2267, 2122, 1650,
        1665, 1678, 2282, 2128, 1698, 2295, 2138, 1723, 1737, 1750, 2310, 
       2144, 1776, 1789, 1804, 2326, 2150, 1826, 2339, 2160, 1849, 1863, 1878,
        2355, 2166, 1899, 2369, 2176, 1923, 1938, 1951, 2384, 2182, 1972, 
       2398, 2192, 1997, 2012, 2025, 2413, 2197, 2051, 2063, 2074}], 
      Line3DBox[{1457, 1469, 1481, 1495, 2210, 1507, 1522, 1536, 2226, 2096, 
       1556, 1567, 2239, 1579, 1595, 1608, 2254, 2112, 1627, 1639, 2268, 1652,
        1668, 1680, 970, 1699, 1711, 2296, 1725, 1740, 1752, 1765, 2311, 1777,
        1792, 1806, 2327, 2151, 1827, 1838, 2340, 1850, 1866, 1880, 2356, 
       2167, 1900, 1912, 2370, 1925, 1941, 1953, 2385, 2183, 1973, 1985, 2399,
        1999, 2015, 2027, 2040, 2414, 2052, 2066, 2076}], 
      Line3DBox[{1459, 1473, 1483, 2211, 2089, 1509, 1527, 1538, 2229, 2098, 
       1557, 2240, 2106, 1581, 1600, 1610, 2257, 2114, 1629, 917, 1654, 1672, 
       1682, 2285, 2131, 1701, 1716, 2297, 1727, 1744, 1754, 2312, 2145, 1779,
        1797, 1808, 2330, 2153, 1828, 2341, 2161, 1852, 1871, 1882, 2359, 
       2169, 1902, 2371, 2177, 1927, 1945, 1955, 2388, 2185, 1975, 1990, 2400,
        2001, 2019, 2029, 2415, 2198, 2054, 2069, 2078}], 
      Line3DBox[{1460, 1476, 1485, 1502, 2212, 1511, 1530, 1540, 2230, 2099, 
       1558, 1574, 2241, 1583, 1603, 1612, 2258, 2115, 1630, 1646, 2269, 1656,
        1675, 1684, 1696, 2287, 1702, 1719, 2298, 1729, 1747, 1756, 1772, 
       2313, 1781, 1800, 1810, 2331, 2154, 1829, 1845, 2342, 1854, 1874, 1884,
        2360, 2170, 1903, 1919, 2372, 1929, 1948, 1957, 1970, 2390, 1976, 
       1993, 2401, 2003, 2022, 2031, 2047, 2416, 2056, 2072, 2079}], 
      Line3DBox[{1461, 1480, 1486, 2213, 2090, 1513, 1535, 1541, 2233, 2101, 
       1559, 821, 1585, 1607, 1613, 2261, 2118, 1631, 1651, 2270, 1658, 1679, 
       1685, 2289, 2134, 1703, 1724, 2299, 1731, 1751, 1757, 2314, 2146, 1783,
        1805, 1812, 2334, 2156, 1830, 2343, 2162, 1856, 1879, 1885, 2363, 
       2172, 1904, 1924, 2373, 1931, 1952, 1958, 2392, 2188, 1977, 1998, 2402,
        2005, 2026, 2032, 2417, 2199, 2058, 2075, 2080}], 
      Line3DBox[{1463, 1482, 1488, 1508, 2214, 1514, 1537, 1543, 790, 1560, 
       1580, 2242, 1587, 1609, 1615, 1628, 2263, 1632, 1653, 2271, 1660, 1681,
        1687, 1700, 2291, 1704, 1726, 2300, 1733, 1753, 1759, 1778, 2315, 
       1784, 1807, 1814, 2335, 2157, 1831, 1851, 2344, 1858, 1881, 1887, 1901,
        2365, 1905, 1926, 2374, 1933, 1954, 1960, 1974, 2394, 1978, 2000, 
       2403, 2007, 2028, 2034, 2053, 2418, 2059, 2077, 2082}], 
      Line3DBox[{1464, 1487, 1489, 2215, 2091, 1515, 1542, 1544, 2236, 2104, 
       1561, 1586, 2243, 1588, 1614, 1616, 2265, 2121, 1633, 1659, 2272, 1661,
        1686, 1688, 2293, 2137, 1705, 1732, 2301, 1734, 1758, 1760, 2316, 
       2147, 1785, 1813, 1815, 2337, 2159, 1832, 1857, 2345, 1859, 1886, 1888,
        2367, 2175, 1906, 1932, 2375, 1934, 1959, 1961, 2396, 2191, 1979, 
       2006, 2404, 2008, 2033, 2035, 2419, 2200, 2060, 2081, 2083}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{677, 1084, 1083, 1082, 2316, 1081, 1080, 1079, 2315, 1078, 
       1077, 1076, 2314, 1075, 1074, 1073, 2313, 1072, 1071, 1070, 2312, 1069,
        1068, 1067, 2311, 1066, 1065, 1064, 2310, 1063, 1062, 1061, 1059, 
       2302, 1058, 1057, 1056, 2309, 1055, 1054, 1053, 2308, 1052, 1051, 1050,
        2307, 1049, 1048, 1047, 2306, 1046, 1045, 1044, 2305, 1043, 1042, 
       1041, 2304, 1040, 1039, 1038, 2303, 1037, 1036, 1035, 1060}], 
      Line3DBox[{703, 678, 679, 680, 2201, 681, 682, 683, 2202, 684, 685, 686,
        2203, 687, 688, 689, 2204, 690, 691, 692, 2205, 693, 694, 695, 2206, 
       696, 697, 698, 2207, 699, 700, 701, 702, 2208, 704, 705, 706, 2209, 
       707, 708, 709, 2210, 710, 711, 712, 2211, 713, 714, 715, 2212, 716, 
       717, 718, 2213, 719, 720, 721, 2214, 722, 723, 724, 2215, 725, 726, 
       727, 728}], 
      Line3DBox[{755, 729, 730, 2217, 731, 732, 733, 734, 2218, 735, 736, 
       2219, 737, 738, 739, 740, 2220, 741, 742, 2221, 743, 744, 745, 746, 
       2222, 747, 748, 749, 2223, 750, 751, 752, 2216, 753, 757, 758, 761, 
       2225, 762, 765, 2226, 766, 769, 770, 773, 2229, 774, 777, 2230, 778, 
       781, 782, 785, 2233, 786, 789, 790, 793, 794, 797, 2236, 798, 801, 802,
        804}], Line3DBox[{805, 754, 756, 759, 2224, 760, 763, 764, 2227, 767, 
       768, 771, 2228, 772, 775, 776, 2231, 779, 780, 783, 2232, 784, 787, 
       788, 791, 2234, 792, 795, 2235, 796, 799, 800, 803, 2237, 806, 807, 
       808, 2238, 809, 810, 811, 2239, 812, 813, 814, 2240, 815, 816, 817, 
       2241, 818, 819, 820, 821, 822, 823, 2242, 824, 825, 826, 827, 2243, 
       828, 829, 830}], 
      Line3DBox[{857, 831, 832, 2245, 833, 834, 835, 836, 2246, 837, 838, 
       2247, 839, 840, 841, 842, 2248, 843, 844, 845, 2249, 846, 847, 848, 
       2250, 849, 850, 851, 2251, 852, 853, 854, 2244, 855, 859, 860, 863, 
       2253, 864, 867, 2254, 868, 871, 872, 875, 2257, 876, 879, 2258, 880, 
       883, 884, 887, 2261, 888, 891, 892, 2263, 895, 896, 899, 2265, 900, 
       903, 904, 906}], 
      Line3DBox[{907, 856, 858, 861, 2252, 862, 865, 866, 2255, 869, 870, 873,
        2256, 874, 877, 878, 881, 2259, 882, 885, 2260, 886, 889, 890, 893, 
       2262, 894, 897, 2264, 898, 901, 902, 905, 2266, 908, 909, 910, 2267, 
       911, 912, 913, 2268, 914, 915, 916, 917, 918, 919, 2269, 920, 921, 922,
        923, 2270, 924, 925, 2271, 926, 927, 928, 929, 2272, 930, 931, 932}], 
      Line3DBox[{959, 933, 934, 2274, 935, 936, 937, 938, 2275, 939, 940, 941,
        2276, 942, 943, 944, 2277, 945, 946, 947, 2278, 948, 949, 950, 2279, 
       951, 952, 953, 2280, 954, 955, 956, 2273, 957, 961, 962, 965, 2282, 
       966, 969, 970, 973, 974, 977, 2285, 978, 981, 982, 2287, 985, 986, 989,
        2289, 990, 993, 994, 2291, 997, 998, 1001, 2293, 1002, 1005, 1006, 
       1008}], 
      Line3DBox[{1009, 958, 960, 963, 2281, 964, 967, 968, 971, 2283, 972, 
       975, 2284, 976, 979, 980, 983, 2286, 984, 987, 2288, 988, 991, 992, 
       995, 2290, 996, 999, 2292, 1000, 1003, 1004, 1007, 2294, 1010, 1011, 
       1012, 2295, 1013, 1014, 1015, 2296, 1016, 1017, 1018, 1019, 2297, 1020,
        1021, 2298, 1022, 1023, 1024, 1025, 2299, 1026, 1027, 2300, 1028, 
       1029, 1030, 1031, 2301, 1032, 1033, 1034}], 
      Line3DBox[{1085, 1160, 1159, 1156, 2337, 1155, 1152, 1151, 1148, 2335, 
       1147, 1144, 2334, 1143, 1140, 1139, 1136, 2331, 1135, 1132, 2330, 1131,
        1128, 1127, 1124, 2327, 1123, 1120, 2326, 1119, 1116, 1115, 1110, 
       2324, 1109, 1108, 1107, 1106, 2323, 1105, 1104, 2322, 1103, 1102, 1101,
        1100, 2321, 1099, 1098, 2320, 1097, 1096, 1095, 1094, 2319, 1093, 
       1092, 2318, 1091, 1090, 1089, 1088, 2317, 1087, 1086, 1113}], 
      Line3DBox[{1111, 1186, 1185, 2345, 1184, 1183, 1182, 1181, 2344, 1180, 
       1179, 1178, 2343, 1177, 1176, 1175, 2342, 1174, 1173, 1172, 2341, 1171,
        1170, 1169, 2340, 1168, 1167, 1166, 2339, 1165, 1164, 1163, 2338, 
       1161, 1158, 1157, 1154, 2336, 1153, 1150, 1149, 1146, 1145, 1142, 2333,
        1141, 1138, 1137, 2332, 1134, 1133, 1130, 2329, 1129, 1126, 1125, 
       2328, 1122, 1121, 1118, 2325, 1117, 1114, 1112, 1162}], 
      Line3DBox[{1187, 1262, 1261, 1258, 2367, 1257, 1254, 1253, 2365, 1250, 
       1249, 1246, 2363, 1245, 1242, 1241, 1238, 2360, 1237, 1234, 2359, 1233,
        1230, 1229, 1226, 2356, 1225, 1222, 2355, 1221, 1218, 1217, 1212, 
       2353, 1211, 1210, 1209, 2352, 1208, 1207, 1206, 2351, 1205, 1204, 1203,
        1202, 2350, 1201, 1200, 2349, 1199, 1198, 1197, 1196, 2348, 1195, 
       1194, 2347, 1193, 1192, 1191, 1190, 2346, 1189, 1188, 1215}], 
      Line3DBox[{1213, 1288, 1287, 2375, 1286, 1285, 1284, 1283, 2374, 1282, 
       1281, 2373, 1280, 1279, 1278, 1277, 2372, 1276, 1275, 1274, 2371, 1273,
        1272, 1271, 2370, 1270, 1269, 1268, 2369, 1267, 1266, 1265, 2368, 
       1263, 1260, 1259, 1256, 2366, 1255, 1252, 2364, 1251, 1248, 1247, 1244,
        2362, 1243, 1240, 1239, 2361, 1236, 1235, 1232, 2358, 1231, 1228, 
       1227, 2357, 1224, 1223, 1220, 2354, 1219, 1216, 1214, 1264}], 
      Line3DBox[{1289, 1364, 1363, 1360, 2396, 1359, 1356, 1355, 2394, 1352, 
       1351, 1348, 2392, 1347, 1344, 1343, 2390, 1340, 1339, 1336, 2388, 1335,
        1332, 1331, 1328, 2385, 1327, 1324, 2384, 1323, 1320, 1319, 1314, 
       2382, 1313, 1312, 1311, 2381, 1310, 1309, 1308, 2380, 1307, 1306, 1305,
        2379, 1304, 1303, 1302, 2378, 1301, 1300, 1299, 1298, 1297, 1296, 
       2377, 1295, 1294, 1293, 1292, 2376, 1291, 1290, 1317}], 
      Line3DBox[{1315, 1390, 1389, 2404, 1388, 1387, 1386, 1385, 2403, 1384, 
       1383, 2402, 1382, 1381, 1380, 1379, 2401, 1378, 1377, 2400, 1376, 1375,
        1374, 1373, 2399, 1372, 1371, 1370, 2398, 1369, 1368, 1367, 2397, 
       1365, 1362, 1361, 1358, 2395, 1357, 1354, 2393, 1353, 1350, 1349, 1346,
        2391, 1345, 1342, 2389, 1341, 1338, 1337, 1334, 2387, 1333, 1330, 
       1329, 2386, 1326, 1325, 1322, 2383, 1321, 1318, 1316, 1366}], 
      Line3DBox[{1391, 1441, 1440, 1439, 2419, 1438, 1437, 1436, 2418, 1435, 
       1434, 1433, 2417, 1432, 1431, 1430, 2416, 1429, 1428, 1427, 2415, 1426,
        1425, 1424, 2414, 1423, 1422, 1421, 2413, 1420, 1419, 1418, 1416, 
       2412, 1415, 1414, 1413, 2411, 1412, 1411, 1410, 2410, 1409, 1408, 1407,
        2409, 1406, 1405, 1404, 2408, 1403, 1402, 1401, 2407, 1400, 1399, 
       1398, 2406, 1397, 1396, 1395, 1394, 2405, 1393, 1392, 1417}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
/SFyg/vUdSJnaoDLq8RjEfftofhpFVF7dPzmW69J/PU1YPDU4nszSTyclXrk
SET3RTWsnFXYDd2vnQrcq27r//F15lE9RV3jlwalEEoaKNJASmkm7TQpaZ7n
eZ5oIEqGpIGKSEqjvs2D6tuEslOSzENoRKZCKs0D9Tv3t5613rWetd7338/a
a59999nn3nPuvXtvvOmjspmqlxL9dil6zbE6SKut9JA65o5X9jEedCC89MrV
PxeN6oFDO0HvZZQTcmc3Hxmj1gV7y/CfW7Vwnnvx0uAZb/RZhLdnif2JH008
88j6ujzhnJ263w0fqDdJmBA93sJlWXxQByn82uX+O8jzujTKdI7w21slXedP
1YFdrdXEDWFXPJ35MUObqk/CzdIpP0D8edufvUnMEf0yIiplif0r1l7k4zxX
Bwe28AuqbXbBSe01ZXuJ/CLPdIRdWD0Yn0pg+z5mj98alA0jiJ1y9aJ8f2Lq
YDSR3X7vTme0afLbK0PkqxwyPrB010KzcHbQgYseKDG7/hMXsV82fZV+5oU6
eOoUab5J3wk/3ArSFyPyjNdyBfmS6kBT91wM0z8HnMl++HYT4Sc4gvQzWOth
14Yv4bOGdqjDxvu2hczv01d5y/yS68A2gvshx0l7dH2v/JiLyPtsglVXUoif
2dwazvHaYVLoNwkOwne9EO21c6oF9Y6uH0w7AnH0Q0ir2ZdR+Miw/siwRy3s
VdrfH8Dmj92WvBJahDttSEAm/1rYtt7PRn2LL4bLth9XILz0pXdsYFYNFAZP
rc1I98OsritfzL+NQq7InQ+3g2rBg75Z3N3DGw8NH08QJ/JeC/tM1oXVQt7H
QLmsTk/sDGVy4if8hE7pb66TtZBYeOx+hacHnnZ6NLSa8Lo7p3uen6mF6Ooa
zrW87igpLL6akXAQ2fU742EN9O8Y8GFa740bm0yTqbpSnB+47uw7XwsPdsbH
vxlyxUqtpp4Z4udz0+MFR+JrIX8w8m37Cxe8XrFN4jfhtQZK7h6JtXCrS1R1
5LkzFh1kXvWF8J0Hz/KJJ9fCyaxdOdwDTrjYP+jWTbjqB77qupRa4IxvK37B
7IQarZLyLwmn4x1fnrRaKNrQnHQ+1AGrQ88EtRPeVV952SCjFjbwsxrt+GuH
jtvj1yPhJh+/gl12LVyXCkjBLFtc+9qat57wB+xSSXLra+H30Ak5hiZX3MJi
ayBBriv+rEyOb3gNHGcO2Vp/MwD9vb/vqyB+vhniO+6zqQb0x/x9Oj0D0G7f
rruZ30dhWf0F44dnakD+rFBh6AU/pKnVdWcTeY1H2RfKY2qgvCXrU16pD9ab
hekkE3782taxFUpkfjdNT4ZWOeNGOkfn4y/U/y16J2Lb6OAW0FHHIOSH49o1
V8MHR8FV8HmzXEIN2Fr6rbSe9cKIaGffaKInu99Z1SW5Bn4cWZwO8PdE0UfC
+44Tnv88M81HswZe67K+GD3vg3JZtSGqxM6eyZ3ZKqk1IPuYo/82iwfGrthc
50/k+3mac17eqIHnB/OGXja54fWY4XsuhMdPrjLgsquFjUPb2qSHHFElKCDc
l9ipbfilJO0XHapXV3KfLvTCp8cV7goSO6NMP07z59SA4kdbr5ZkV+TJveBs
RfQ0rdRQnPGugfCggSgOG090KHy7fYDwktp7SlK0Gvj6bfPtU5EuuPxJ6EkD
wqde7DnEWFQDa4896GY664xb9L0FtQif90hacewUWUfXnT7wD9vhuGTA+lVU
PNuumSworYHedYlxited8PifzVIqRH53ZWabE2cNBC4JfxB44o4i3BXZbcQP
qpsf8vPeqgG6C+d7izOO6LThU6kskadP5jGbJtbAtc6ZSu4GN8xxGrlK+Xlv
gFaXQ3UN5Oo2XxIet0dZYc1ECcIt215JRG6qhYwdv+y/2tiiz/pZ9fUkftqF
h4wiasm8+xvOSp2yQ/ELNU+Fify0gGfOkQYyj0L52VVitpgtouIlQPgLo6ix
DXI14N98UE/DyxVVBy2X+xM7dR+nnT9Go8PhxHquWMEArEyyDHlC/NyX4juz
8RAd7BtVjfy/+6MVV7pt3tAovNzwKf9ENx12yhwsOizngrcvrlQ1JvI++hNH
s0voIDblZ2y81g+XnvwRv0e4iHFhqmUlHe78fKBxXdkHH3NpZ1URXnC3oGvI
ogYaqkLND7s7Y3pQbxE3scc9MSmnaK4aasfW5wgU+yLtUp+Q7w/Crx9qrK6l
w3xCLDstwQt3pwQ35BM9/WwSi3V36FC/mdbmxOaJHPcmgtIJ57g6N8R/hA7f
Ox60LXH74KrmsLdUnZ8f6r5JTxfoMBsyL3PEwQkT/zLH/SXjJv/C+z5Ih/QG
f8baInf8vIetPYmqC2Eiad/TSodUsX/jpu5u6LHSPDuacJue67/mwmqA59iv
pjkHR8ympToi8fPlcz3PHmyig8NN2/17yXNWqy+2mofY37JjIoXxER2slOUf
6YErMnipM0cQPeasNtFTT+ggfunt9bJdLsjT/r0niHDeqaLkQHIf6Fvz/VJJ
mj1yx/DdKyJ2xrMUyZS9oMPoEoNigKIzPtwssdOHyPvFhmd6pNcAk8KCTkag
Hf4rzpjzJvZIhj5a3P2GDvt3r0i6aOyEC9g24EzkVZgU1ueq0eH8vxjfLwHu
mPXr86c24p961viuuHd0YEvhM96z4IDfjH/8sybyh3zaSmrJvK+qSCypC7JH
qatMx0wGqTgP74lQrYGzbgU2A99sMObj2VpzYmf4VpPwO310sAFommG2Q48r
Mlp6RF5+4Inr9Y900AypSFSuscG4rSHemoR7RbRzu/dUQ0r9cibjHH+MP9MQ
Tv9B9ZWgmdl9qob9yjuG+8m+aMrghHQh4ZajFzUHv1WDxeFD6xYfe+PvU74p
NwhPmciQfqpcDe8rJOI65H2xy3f34x2/RmGkeFFo469q2Hvpz5yoqBcuNBpc
vkTkg2RPvJocrYbjv+8ftSjyQEZGI6HzhPc8P34+arIa/PjffTqn745HBiNV
IgjX1V8u+3K2GhLyh2JPr3FD6YvGr4MIf/z+ZnnX32pov+USYznighvYyn96
/6DqfI5cK11GB3MvwXrFL87ou8Ts40y4zM6DXFpMdGj+7N3PNeqE/xLP2FoT
rqzWs0mDxJv/6f1ufdO2qDlJj48n/hm5eEeqcgXxfy6P27JV5PwlVVBsTOQP
8lu+Hl5JB9GzJYbCZL/tt3TJ4iDhmV8yW5dW0WGvXb0n/4wdKtwJsdYg/GeE
1tAwJx0UK0KXuVyyRdsdHKUqhL8S7reqWU+HEaM/RxU0bXDnPrNDCoQP8029
gMxqeJH/ycTmoQvqBHvo6P0k96sbtYxyAsQPdtJMw9v88ehJiaN+xM+ZMnWs
nc+qwDdQNFdq1A83Cw0u3zQ8CmJn1l38u6Uaeqafa82K+eKKqC9czkR+2bcu
ITuxaqg4ZBBX4+iNUoP3zSwID/w9FnqysRp2qgQd2dXphPRNyaqMZNwNC7V/
VkRXwTulKtbv5FzfKXtjCYn+CNP3vm47q+HT8qearfc98bPd782HiJ5vlkPb
+GWq4UbfzxDZgx7I9VDmsDrhqnMMqtqjVfB1JHtIVtUb/0W8UHtLOHvqnYPn
5avh39nMktVTbsimYqmhTNUpKrE6UkXiKuRk2dl9ja44oBt5XprwN1rcH5l7
iR/exw88sXLACo7GbY3Eb/65nX25+VVw+B99ceqYJ/JdFnp4gtgp03z7VPq+
alhz3mfuWbYLxg+sURcneqRna2I81lTDKttKxjNK5LkZupYjifBCkTs3DfdX
g9fRGw9WpjkjP1uJnRDht25fz5KMJ/H/63bnuzw79Au5t3icqqvzJGfTM81q
OMHtcfdLkRNadDd92kjkpwUvtk+QuFWUzM27fcYW8+nb3oYSOzcuHby5Saca
gudmlBavOqIe7/E7a4n8uRNVc6vbqmBu2M43954b+odO/VYg9sslCmzar1cN
OkIq3MPz9vgn5uuvlUTe7MVX8SNS1bBV0uIVQ70rtq9WlTtIeO7Wnp0qBtXA
ZXLwryR5To15fvNjIpxF+MLKlsJqYO1w1NRkscHld77ekKfqkBj4X19nXA2L
11hb9Tbboj5jh8Ii4RyOXscemFZDicoWxtj31hgYHX1wlvB1/HuMo75Uwc8n
ltNLYS7YJRirO0n0fw87veuvVxVZdxPb5Mr98Lu+Yf0CsT/W4MOGWfdb8Nol
YPtDIV8Ufr3MOm6MnNcGBhrgehVkrbZk8zF3Ru3zu1UziHwPW8VgakAVPE5Z
zxXZ4IMjzXMSfwj/xzjy5VlwFXyoYr17Y8YLO2QE5AYJ//ve9KoYA4mTOdaZ
jkQn3OAbW15N7DGvaRc5M18GosMJkcZfPXH3j1brt+OjsJI3Uv1WWBWYpCsK
2Tp5otER1rv9RI/x0I2E/SeroPKx6kDviDu25vHe6yTccdfCg8DaKtg9PTx5
VMIRL9W+uWZH+DSLztX4M1UQer8ZlLJJ3G6/p/R0mKorG5OUQtYLw744iyBf
V+ROTOd7QLjn05dsApuroXI0WzWu1x7PFraOHyF2Njnf10lfdgvM0tR3f1R1
x9ys76/GiH8U9/IedYqrggG6FfN1Uxc8d5vm20j0+If9ZJ67WAWTgV8X1hg7
492iYK5awncG+Wove03mxY5t1kHKDvdZh9Gp+0CtxniW7aUqGC9pUXvo5oRw
//XmCsKlks5kn9hTDYMndbas47RFZt/0aRmqztjaU9nJV4j/1w7G/1zviLqm
QWGFRF5leKT1r2YlDH3uOpDM4YrMYje/+YyOwumdGpOZ16ognzb7KPC0PT7s
OCCcS+TfGnTznE2rAuWFgeAnK+3wt0Yvzw3CP0h27WIdqYKihtZy7xvWKHZO
O/QjGdc7Jo+unlEFBweiXl25ZYO+NUuGKUReIUPrw8esKpDmtsxaHWCNWmW0
p0mET66uch0zLIXOQpngS8reuBRsynWIynOZNH2cLFsGB8aCddXOeGK6L2dB
zASZx4zvb9lWlMOPKbZ9J6fdsUPjoO0TEg+pI0WnVj0rh+u+hXIml9ww3+r7
LDfhT1l7d546XwEP+i1fW+q54qfP80Wef0YB3SL09eRuQUvP0aYt21zwkEuv
ezOZr6cH3p3f03ULVng03vPldsaByU87BQnfJOU1UGpN1rXTmN+THfaY/U0/
Q/Q32ac1vlf8p1QJ89l/a9QFnXDlSv/hc8SfMQuqUzz+lTC1wdR/rb8Tcn7+
tIePcO5ri3tVoirB7PmeDSssHFE1lHF0eGQUKmYc/QJJHIbtWP2vMdYGOU7l
274k/vnN8pXJNLUS9jl8ne6g22OzlHZZK5FXvyU2ZlVSCRy1Rculd9thzoU/
rhmET6iWzHg3VkKrXkI87zMb9BdZ+e0o4frLvs5nPKuEMmXpAo0z1lidFb3C
lKpvEy9/fry/EmaZHrj91bfCvektL6UJl35hWDmlUQzdylwbPeMssJhngovq
y2l/0Gfoa9FlEOUVzk26YoYv9B+FPFwchXG1iJFttTpQ6/jxrf42JQxemFRf
ovJhH3TEvfxxFfw1PsaslDJFp22qolRdlxH9PqVtY6nA4DXdYvDbGJc/r7t5
/x+Jw8HBwQLOMmi8wqQxkW6LezNL1lD9qekrx6JDS+Kx5yezX0n0Pji1V43R
gMqf9V6mW9aWDlc6HnKJPTZC+nXGFbuJnvCSZepJ/pngv042oCrKEH1Uwroy
/o5CjapHmrlGDDhutLVyoe/HyJyH7mFUXvCpUPNh9UJyvqlY/lzMAnfNXboW
OzMKz4cvrdn0KxvAf5ffgTx9ZIv6w89E9Gjz6C65bc2F3DXikPRTD2+P0C95
LYzC1z9rZVM9KsDussju8glrvLv69IE4Em9PWNqCA6e8UMLi3ons9u2A+r3K
02TcZz+WzyvJ3oQQt/dpanyG+KC5qfjV/CiUZW17XfUzBYKHRhYP/dTCt9vC
twgSvxnqLq4/sCUPOI2eljw2tMBmrdB6LSJf6OwWfZ+9BK74CD/jYTbHR/d2
TbpMjcLFTqVtE5tooHmZ+4XadXN8yafZXjJH9v9VWV0DYpVgG+OytSXCCrUj
jpsXk/i8Isbh+mxNPhTLq/IFhJlhn2aqMtWHJbFbLevu0RPQduH+8u9b2u9B
ZeKeTmL/D4tYq9eT+fDvrtHeFYGmeE5gv1Ho7ChcsJlmN7mTDZl1vab71+vi
PRGnk5zEb9meku3GzwvgXa0vp9JxE3wikiFN1Z3gzBvkDHYqgxUJW99ELDND
hWTuJQ8y767d3444ZBbCtc0m91uvGmPL+9sL2lQ/tc97Pfkti8BB1Eq0JtAY
OaXsy++S+AzxM9MybE2CDeGXTp9gk8MTKmEljMTO7XdvvPPZmIIGbvIZjfkH
oFJS2U2d+NPjd+m2CDs5iO1XszEzFAPmQ2n9VNxeNkkIMN2fjAwZJzVqmbWh
+1YCVC9S/znXlqntSUJ5Ef0C5sua8CDW5RE7kbdRSwlVl0qDp9LrAxnND+By
lnn9aBKHGjoG8cMyefj3l+iOaCEn2L3uS5Yyma8f031S+drxmKu1/ulm0ADp
r/osVP57cfAOebeb0VgdybzYxKEOb4W6S+IJP6BRlnN1OAo2T9UOKXfO3nNm
XH8/g3Bhhhi9BwfOYORlpryMaTWI6S7lrCVc4y20ClqeQAfHJDf/UYDmvq2u
1HyxxND+BLDngpyK3aOhXweRNW3/lxASt3yv/+KjzGy8xRcLaTetwdeelsZN
5uvb3e8c90yDcFmKmWWFgzIsY83s/kn0LAl8kzaIdUaJxwlrPLR3w3mpq5sW
CP82IFp352kycIlGsNQNS+OCcURYFvFbSvyLSCyQhqry3I7jujIwpL7YS/mZ
P6qXL0EiH7ikWvyaDAxQhTcj7x+Jn8ej3wTi6t3gxLvGa+ccpaH33/E9c0Q+
pvzvYMDodWScO7DzioEZ7PSWiKHqVql9OiEevysYFGJH9mzj3AUBRQGjQ9T1
zqnJaaqfAE++c7v6QzaB/vY1Xyk/eH9dJz/qmw4NbfLeId378eXtsDAtomcq
OOqM2L1TYNlr7leyhRtoxy2Y7hP5qccRq/n5zsL0s8Oq3ry78MqRPqYKwhPX
bRkWy85H0aMxWnf7XSD3nuuNUmL/Hz+m6NZnhZixrX2l9DN3qFFs66P6V34U
aNVdKqHhtg03f8lcdYaySdGXVB8cBTO1nx/a87Cp5eKzB35OcPbsT+4PhPPL
SW5+KXEeWWyO+TW904Sm1sqKc2TclvN89fseF6Pf6iWH8TEPiFfYf5XKE5e1
Y84bHb+Jt/40H4m47wAXpE4mOpJ4O7DKVV5X4iZKci2Vbu21g/0Wff1vCL8l
zny8vDEf9aL5f2xSdwG+ZSv/pBL7C76xcM0E5qJfySpV2y22cKZ65XkVEidR
NJDnxRzU22PxWv2iNSxlfne4QfirHbjR7oAfBmTdMX6loApNzLt0Joida6p6
WssVitC2YlVQkq8rrPK9ef0FWadDxryX2LblYKSRiOUjX0swU3xy6hfRs/gg
fMIrIQ8TFwWXv3niAJFzBgnLiZ13b+bwbvPJxteLBy11HM2hLO8xnzCJT96A
3eXshVno7fua78peMxjTeZFh8peqhxwyYUj3hdLGbTLRultgRRTnImXPCsW4
ZVm/M7FNrOHOYUlTkGK8UxZJ5DmLv15vO1aAb76dkmdJcIKGBqHz1P9Xy5Qv
r+kxzsRMet98k48hrKo9opBH5OGnGd+MZi6+7udabi9oAysK7nCaEftp8sM2
wl0ZeL72qV2YiTos/kiMQqp+VO1d2eX7MvBPYIeYTCDA3CNHuc+E98YKNfa6
3kC34xMLMm4KMBf59/xaEocZJyUfTdBo6OHJJbfZ0Aa8mlW6TKn+RBxDrim9
JVgrXhE26ulNnv+ziRVUnYS8c2+S1Usxc6UhU1qjN/wtusBN5Wkun165WfNs
Ea7assd/06gVdHNdDUkj/n/Evf/t0eQSVBYKPppW5glH098z/qbyvtd/qvUx
KMHvesp1goIeMPT+kx/Vl7xomiku7dtNbN71Wef7DXNw511n4k3mxdosQm/j
vVLcF9LqYnTAC/YxHvj5m9y3Kypi16etLsH57PkrJ+vcYIFPtpDKX3uyjV+0
6XUxurKUntcKdAXZL80rEwhXyWwL5OooQVfT660sZh7g3mjk2kzskRXNeLPw
vQC55O2NBqbMIZ85nuEJWUdbTq89lphejOUPTooza7tAoM/X33eInqENroqR
7sUYclUNAuWdQZdW2kvVJfgndRJ/bslFFB87dyLOCJ4knImintcdNSIXAsJL
UUY/WWuHhDu80Wu/u53KL0628NbVLMaX7A8Pjxrbwd3LOmUMxG9trCs27lEo
weOxpQnaF1whPdhxgeo7r3BQVzWKrxiV6Mo/72y3BiYGUBOm8oa430YJC+dj
Xuwe3uH9BlAwoyTPSObRbId5ZedwER4c6huNfm0JbaUX1Q9QeRMuw6+wIAvp
K7/qcgurA5vY/mlTEidP5BOZD98vwtPOdxoqrloA9N2Up/Jufqk2sQnwlWJ+
2hXJvRku4B3ZGhRJ7DdRernbObEInb1SeI2kzaDw5JNFqt/x4f/UhWj9r7oQ
+t9iDb+JFiH72u1n2cVMYI6jS4TKT5+fUZQ14cjDqu8bogYkD8BO35Z8UzLv
WQYfWxZuFaKQWkHvfm1jcJe6qUb1L754dqvEX9VCNKjJf8531Agqr68yukj4
2+efr7R8K0UWDSWda9t84Pdi3VAHiZNRjcGDYqOlKBontD3MzguWJNUEWgk/
mpU4NTBTihn0XQIxrR7gzzlT0Eh4/Az0fuYtReuM0M4wDi/Ab1MM4VR+sU+F
+JplZcj+qysowsgd5iRzTtYR+WMNqUINK8owPSgi6dWSK+y+9Su7kvD2Vt+E
76vLUKvy+Ov5Zy5Q8Ymdo5RwlicbpMu5y/DOjkd852qdIU/BtCGfcMXrP2k/
dUqxvHpklyaXOxzYyc1tTsZ9UdB0IJyMe7C38p4pkxNsiRJQvE3k74mvDr/6
uhSjQqfeJexxgN6m0uYBwrfsKdQuKyhFZvGWi0ZZdnB9VaEKK9Hj0mexeSyi
FJNV1ovEC9lC/6hCMpVH7zWx/J6zeSkGM/Q3xTeT57JEVgdVv0LUzzX30a5S
ZHR3iE06YQV6C/cEqLzm5Vpvw6fZSzGvt4IhW88S5g+vvJtAOINw6P2fP0pw
qsWTm0fWAnbvrS0tIbx3/t3ekxdKUSNfUeamCnnuBGo82Uy4h4f1Mc3xElzF
tXX5RIs39KxykbxBuPwTJQuhhBI0aX+y1ey6N1TGXZ0dJdzU+V+f+0IJ7t/h
6RXH4AU3lFjfX52k+teoMX9mLMVtn6XZ0wM84B+mvEwkPHJj3OiL4FK8GLn7
Qc4fO1gpc5WJyru/1XJyzRvpEvQ7xTnaRPeENZs40vaR+MyLm6jpJNf1y8sy
gYHBHX50j6yJo+rSHKj4qr2+FPu82Dq0a10hI5olJYrwyrQ9B07eLcHDjhsc
mcn9ZDs77cETqn7Itap/+8l6kfGpoP2KcYGZ204O1HpZqzir1CVUip8MBm5d
CnYGB7XNrlTdEsEHX7tHdUvxOVd7U/W4NbQN5MRQefEJL3cJfbAvQamLEdJH
HrrB8cxz16k6M/2d9vtZxMj1ri3/qx7mBAVenUUhlN9cq3hbB0uwe+tBwb2F
rjAwkOFQRLh33zPfzztLcXB/ZaCUkCO0J05sOUx4vGXfc4/dpWiTmiXdeswe
fm4c66Ty3xNzjoh5c5aip6efmbOLJWR/fjFO+WHvXS0tmmIpSvpNeNeM2EJM
JFu9J+HDdd08HHElmHHc63a9nQvo3XA1n6Xy4rW+l6WrlGIHy2E+/XM2cKbi
YQeVd28rtZzVeF0pOr9X3Ogd6Ax9vyLroyk7lf4dMt5fipo5YTsr5KyB1tPL
6kT4M+t/pzcRfzYWrrc1v2IBK5OPfThD1X/w3ML7XKsU14WWNbb/tYTlnPWH
7ah6AosCcmsPlmJxuuTf8V4LmI3cvNya8FfW6qa3qkuw38zLJtjaCaIKJZCq
C3TWQ4P+d2UJbsp19Vvm5g3GgUNK1HPE5P1e5Xclxbia7rMUv8cbdlitFS4m
HF+0qFw0KUGmrYNPHtY4QIPrikXq+dVwRcS7f30JChz4fZW/2BP418cYUnnE
taZvT20SKEG62IYdjAIe8HfQ6ZYh4YaNhlqs5Dm71P/pub6BPYh7zbfUUnUG
HjR80zEtRrvMgKwAe09wNOHxGKPy0yf8Jt8Ll2CSSLtQHd0NogedDA8SLnIn
JpJbgjxnlfZ4P/JzhdrF2l1UnqndVoaug++LcXYj0z2x5R6Q/NO8KoZwIVxz
cteJEjSy2vbmc7ot8IxGTrIQLjrkqPFRpgSTDwys6tBwgV+rpAypPM2Z1e5z
2krEP8u57vjJOoOKUGE+9Tx6z5DHdXB5KU5vUjV18LUBfrfVBilU3RidkwGh
kcV49P6GgqYTbqDZn7Pq5RTVpynORVe1BD/FHHVp3usED+VDlRQJ5/1f8ug/
vTwk91ejBI8EPEjpL3eA7L3MC7upOkv2NI63OeT5eP+yR/ikFRi/Pu46SMZN
3tddYa1bgiuFQzWS2e0hNjBoQorIh01O9meKl6KQRL76iT+WsHTrqwFVb+H+
03tyQWQfYsu9+5tUrC1wPLrHI0HkG6MNHr0qLEaj/XZV93ldQJtRw62S8FL5
cJqWaQlWd2pLMAjbQLOdm7cY4Qfemq/ttSzBccG/gUpdVjB6xeurMOGn63bb
5T4swTWPo+9IllnAIwHmvY/IuK/LD2sq2ZXgYsBtpZc0S2jQjIgWIvJZy1wc
7Z1KMLblsuS2WAtw8HHS3zRFnddqfTbvKka54ff+tBXekE5Trmcnz82pQ8IT
zYrFaFBZ47vB1BO2WYTvZiE8OW3toXYoRuWpX92lT9zh48ausWVUfRu7yubo
00W4/PS3C8FsnjAtOv/rKpWfa/WsWu9AMSo+27Ey2ssNFLkkfi6QcZu9E3Ms
DIrxidZLmrqoK2j+6to8Q/j6dTA3ZlaMQZcUT5xmcIElz/GEccKnVwxNSdgW
44y5QwvLlBPImzFKjxDe8p987fb/ytc+qlobwORcjHm/aWaflznBq/NbV/6k
6iBNzZxK8ijG/QK3PhSoOkBwRj7nd8LXiPdcbvctxvCcS+lGN+0g5bOZ7mfK
HhGJ8WNqJZgOB/lepVnCeadgRyquAiOCrjQeLsYi3uyFw9tswSH/W8kHKv4t
P7gGhBbj4jyvkdUDa6A3tyn0Un7uOPr1y/FilM74uaARSfaxLlo/3lP52tnJ
tVtJPHtzRWfsMbQErh8m2En4nTN5MzvOFiNjszikK1jAN82S26+ofSB3y66H
M0WorP74q3+7Iwgwsv1TIdcrXfNN8rd9ERbuu7PqYbkXFHGXbKug3nedvHng
FUsRBky9dD173gteJX6QHSNcYP+h36YexG/9GrUuS2SfPDvxl6oXFHQlp3lr
QBEOz1SERJ50hyzxhnU0wvFY490mgWK82+4syxluB8l/vj2j6kwm3XTn7akv
xMikey519R7g1SYUtZPKq6r6sTM4tAg/3K9abSPoBpfCyx2yify5TaGB+hFF
GDx8Pe7mgAskVXkNpBP+z+yM4KNdZNwVJJ7c3cFGrTbxDeGsb49I3iH7/6oq
hS3L7jvD1x2K6deoegvqnmKPY4tw5G0ep0GDE8yaaZ5Npuo1iQgNlqkV4y9x
ObamMmvY/WiSm5nwMCWrAzc+FmK65SdWtx+uoM820cFJ7FS49v3gCbLPlDcy
2rY7yREGKv2zEom8adLV368sijA0d6t5VSfZn7OUx9UT/uzzii0frxThioHu
JL/X9nDG/+OXeMJ5hNRu0oeIP+lxG8L3W4FNOLofJNy82V9p4noR9t9+yPd5
rx303uCyoupFJI70Zd1xLcYrN7x+n9e0BGeBww9/kPk93i299mFmEdKurFnn
1GoDIexe41T9h8l4/TwacxGmfolIkE5zht62gwVThD+V4rhgebOI3K94DZW9
rGF0ZG8NVc/hrBW3kzbx873rPGPHa5yAVWdOIIPK4z5ia1lRUIR89vz9DaJW
cMVFJJ2qzzC8mSNtP3sxftvz5ZkDmwXMME892UXNbw2Mvigh8+I0KTy2YAF4
Ui+Xqrdw3o0rqLGiCCecl87BoDmcM3F/TNVbGP3QvEp9RxEmZRSoeVk4kutc
ubqX8r9dcsDda4WYzRburW/hBTzrvr2h8uYyykc+NmgUYumLcsb10l7Qrhj2
8DSV58ti7PHofSF2dp6lHw60hyZl/iO8hE/HDZYNZRWibK+Oys9yDyhI0FxO
5a/ZrfHbeLagEF2GaZoeMu4wceaP1x7CL212+lGhX4RWmgdPl3HbwXaBZxPN
VL2v5pkNtNkCjM+/0b7FywNG7jY5NBD5no/s0TnlhVhZTn+zpcsVvN/7MigQ
nmN+blqvphC12uen32a5wB2H4KcyhD97H30vcb4Qj47fOi141AamA/S4lhHe
9q7p7cU7xB6ZzkWFs87QbX6xQ5LwyQCvwODmQtw9LJu/+6QT2EyHjG8nPC6b
z4bvMPHbd5q9qrE1GA4c1y0kdobzDJ/u3FyIEe/Ly1LzXEFU625RFpWP/PZW
29+2QpzjnFldKugIGhOdeqKEs7EIdqo8KUTzLJRf520P72Kynmyl8gRn3jL6
ChThUGlD+cVfllD3Z4ifqqPIyGJvIPWyELdMPuiX6LKFrAdMx6h6tjdLxjRL
LhfhW/djPNF/LGAN7QwDtS5KTnXofuosRPdnDlWf3WzgkuOCFvVeKMNdItWK
zGPou5DrwbbOEDr/KiKa8MSOOwUm3YWY2s3KeHG1Nfzy7Vam5jGD5jV0ob8Q
/d/UiJ5+ZQm/M4MNqXpf3dn6ryL3FSG9p+Svwl1zuPkwLPw5GXfuqZrL5YFC
vI9MTL0lFsDkKXJuPZG//DVlt+u3QszwYFVbSjMHDuHcLmpd1+59uvlHVwFu
0pcuESb7+cqnHBPPCI8PGGH9+KkAt6T3tqY6eMCovNiRDsLDYs3Wag0VoHmq
VbjhoBvE/X6yte3/yM81yb7pLDtagI6DJu86kl1BZpns8vtEvnRI/WHVVAGm
6Etee2JP9qst6pxNhJsmSAY8WijA5eayT7m0nOHclqpDtwl/E12mEMNQiCoK
DLvzNZyAFthaVUvlHfPrxB8pLsRDW70iJGatYJhd5g2V5zii/0D+F0shXtmf
cmkd3QESOkc0qqn8+hM9H1ZwFOKPy4upEcvtweNM31wFJX9Ika2LsxAFNbtE
uY7ZQqN5RFcp4RvTLJnTOwpxNvHNcG2OBXxJLnYTIVxi/RVXH+5C9ArqC//E
agMLnoZdRYTzsfY/v8dbiNvYNIyV663go+TN+XzCOzYN5/ZuKsQaexyKirSE
JK5zKnmUP0d+sj/cUoh1Mx+dv9taQNfQ6Rs5hG8e27UjUqQQA34UpLQZmENA
mPZGKp5l75XLdJYW4DIZfmbFkw5QkMLuN0H4Db4NoZ+FC3Dblndzuys8wXlM
7JI+8f/XTy6XzLvycXt7tfBInCfoCpfnnSG8z0xoc55EAboIXf5nsdYDhqck
rHSpfNj6PZXvdxfgYTtPcbFsNxiIsjTUIrxylUxCwFOi39582XsTW+iaSp6g
6kW/Fzx7w+BqPt7SvHd0ywt3eDlxgbOKymtO3F+VqlyAx/3+uKgZusIO1wuH
91PvS/X8G35CAe5erfk6aLMLSBm9bNxHuFNgi1HL33xMGX9oHxPrBlnMD5p8
qDzEk/8+rzlTgDhTGnQDrSH5wIkKKn/Q9thSY5cW4UmKs3FsztClwCa3h8qX
vMAjc0SvANe2V6xPZXeC1Z0zL6k87upHr/O4hgvwh+LEBf9cK3BUfdX/kLqP
reytyarPR+56NnOPTa6QoN/+KZ3IWyZ076syKsAHoj1r9XUdoObRQKosdV1e
7Kc8BQtwaHPwi5PrXCAzsNjUjMofDCx7U2pO9H/hK79MzvvrjvCelqbyRo/I
VkvlFGAws/tmN21LULmQKP2PjHvuluiwrU0B9gd6Wp7daAsVQ4aJVL7zJWYR
r58rC9Eo6PktJhMLOMZtJ1hF5B027XnzwqEA43oDt6rfsoYIgbi7VP7yKd7S
3Vbd+XjuIFvz/a9OkH+oQDSa8FQNP58VrgWoIR4uKOFiBescV7BR+cgf/efW
XVMrwA4luYhVrE6geGPOhaofHrhnoJ/VswDfaBwRvSVpCZ9cOENEqLxOTS65
pHsFGHZrypdBxBy227AyDFHx5v9RuduHzO+5Ut3F1RagXmw3T+X5ii17lh4W
UICz16bPn2I2h4zrKRlUPm/PrVu77s/l482hHyqdXA6w5uiXvkDChTuDXm0+
lo/6ErFhHuScla87k9H6f+R17vmXEnGmOh9fjO7bzq9hB22THH9yCPc2ZpIr
i8xHh6ToU1wP3SFzKIkcukYhpWpKpCo6Hz/aa0r3WrlBmpHWwF3Cn9ZGXOTk
LUCZzoflslM2UGdvMm9DOMvIT1mRERr+6DpwOSnaHe6eu9cgODcKuXgxSfNi
Pjarpl8MWeUKwf+SoYHIK3m87/RPzsfAJMmXdz85Q5V9TlsNpT9s5QvFV/ko
o6Iu8NHTGo7SRvMuEp41Hlkvdz0f+Z+z5cS8cIJx3uPB1Hr5vPyMelFmPi4V
CKZMFjuCQ7qxZgWVnxhyveeIYgFWZjdUjhyygsfDESHas9R5dhdu5czHybmk
Dx/7XMg5xZSLndhZtOFwVdvNfOQxLd6l9tkeWlrVVajvFHtvZh7NLsxHNhGR
RKV9dnA9cq9pEeVn3p8J3KP5uEXisPmyGQuYy04vCSP8SVtJmXRZPm6dM/ri
0GgDvfLVCfmEs62R3MJK4rxDkT/OntkC+nYOq1H1Cg77hqrFVObjSaZs6z+W
ZH/Fsu3bTSrfU9p3/Ip0Ptat2qB2q9QJwp3d+qYJL2rcwJVXk4+LhXa6h9ZY
Qd3VDhtqHjXepu2Ib8jHyEqHp78/WIDeA75hqu79Es3xmTJHAX5pqGh/1mcG
ba/0F9wo+6NuBexvzEcjdpX8NQ/MQTNk7toNKu/1btfCIyR+3j47yHfPDAw6
VtqlES7ilICCr2loXvNapmS1J/xA3XFp6jtpz+q4q7douEGF3mX6xQN4RWxP
HiA8ZoIRw7tpGGl/4k5ThDswpCarShIuc9X5lcknGq5I5NCw4SJxNbKvevsc
VU9jsvWNfz7KB7NvmE6zgY+Pd////EcrnpnZ7VdpyBpdF75vlzsEaX6xsSHy
t+VUDtz9TsNQ/uPbLJ65QLO4ua4o4X+r3E0bh2l4TvSeRyrNGfLY+ZmFCadV
r3OJaaeh6+FLjkLzrtB3KfSHMqXn4USU/TgNg2cLY5auOUGjYPM3Km5vxKWf
Lp+h4do2x8Gz4AgTiZ+/CxDuYH/VfPmFfFQvVmVMn7eE4MWz5xuJneJylr6r
S2no8Pfj1syrLmD9zUme+m5lWlZ1rfgvDf0qmCpen7SHvI1HOPgIz1ed2/W0
n4a/hNYJ8Kc6wwnZxhc7qT4IXcLoypCPoep+PtYfbOFd7i8DHsI7PnnKvWfO
x5BKE60rLjYgUni5motwXmudOR8Sn5Ur2CPL75jDskf2jcVUHmjw85i1K/PR
lz3zeddya7icZSSzjshLRNJvBzfTUFVr50/5ACfgPDl7Xo3wM9cYMtatzscd
62Wvxd6zhJ1Dlk+p79r+Nu5GFcQ/LgZWV+4oOgJXhOYuIcK75U4c+rQ2Hy3U
Kwp2JlvA9Cf9M6sIXx2X7HqKOx8PrX66mzXcHPRq9xhQ6yv7+djC6EayLnY2
W5wPM4NoP5RlI7w8fv2X9E4aLjLp8/7TtIcAi9N6coSn1Ov+2RBFw3mF7yNl
FR6Qtj3mkBv1HVD487hwHQ0fl7+qr4+whXvLtofrED7QxjeuGk/DitR/H3Gb
O1QpBLQ4Ef5vzcGb3y/R8NTHP0sura5w0dPC3p7wCwIp/+oGaThpf+2tyD4b
uHh27oQ44RcfyxwVTqXhI6fxv7lnXSC+/gYvFW9Or78b/c2gYZCHrnuYozPM
G0bPWlDz++y4fOUjGpa6W2ZLNVhBRVzO8n2E777iGBh2k4a+znXP+yycwGy9
2Tz1fWqmX2Aiv5CGr7aytqg+coC2DcN8xoQ/Fne7NzZHQ/uO1OdHiyxBzo+N
YxPh4jcbdp8to6HAroz0jNX28OU+j4MB4RELqQmbq2hYULe8/cRRsu9yamrU
o9ZXnGJ6QA8NE9MtL7PbWMDz1+e/yhCec6jF5mgtDXme7kwxYrCB0zV/9ujO
UX2jyhe82PNxT5OOpPwRc6j9Ij+1llovD+7cuXabhq2hr2VyC63ggs74a23C
Q4Sa4k810XD7B5+gl16W4JP4PVqT8KshW0MU7tPw5b4HH8P3W4DCtxRjdcqf
YQdlI37RkL1s1va4oRl4ZfTxiBGux7yFt/kBDRXOMz2fkjIHwVPCclQc+gXc
ThQg/uyGkbJyaTPYmCQppUr4cK76RdHpeliV3emHeodR49Tm/NneUVDrdlZ4
LtoAq6XTOc0C/fBpVHKJN+HVPClBL8wbQIjhK/t2Vm98K88S2N8zClPDIxga
1QD9Aj/8huU98FL2tnOmhF8y0hwsS62HDSnun4+dckXJriC7TVT+l+WKhWWt
9cC1f67HNNYZpWI/1WX2kf1YwPyhxN/10CVznedNjSOOG16XFyR8ofZg2BGe
BvhV91no0Es7XPnkUE4usaeIdU1Sk2cd4FzzNPcRdxTf7xhI9eneyHBpbHZZ
HZwq9qS5c7mh7XIlWtEAOfd90uFT/VsDHDnl33R+B6CHYttfh6+joPyqe9XT
tFp4O8Lj093pgksllzNaP5P7tsvwgxmxOlg1r9HSu+SMOaNJPfuInp83hiad
RWphIpa+4Lnggymt5z9MfSH37Y2PDqk314KIal7hkxEnVN5cscGO6Kk8el9w
u0EdFFy/b9u1xwnDJuc0O6l+1rUuzSz6tcDzgrswp9kTzZkZBhOJnvix46qL
32ohuyB013iWA95hF0udGqD+23x1PfR3DazkL18tv8MDnV/ObaX6I2uvGRk4
HFwL7Bll68XXu6Mo02j7dqJnaJqXzsdeB9nVy3IvvLHF1d/vjiQRPV0ze0Wv
VteA4udb772jXNC/WUh8+7dR2LU10OjLuxpwTHf7ezbfCWtT+zOeEP3ZhxfM
6q/SodUu+9mVaQ/sF9gpPDs4Csd1Gd0k6ulwZvW6ngeOxM+jPSzUf/6bGsxe
hLjQQX+oP3f9Blf0LuwMCh0i+wqGpkSlmGro5MnZ89vLH2Nfvjp/9Ce5fwYE
3nJeRYel2uCN7wed8coH/Q3U/89xTdGHfKPosOF2rWYtvzMGzEXLihI9sa/T
0aWkGl6UX8s/WuSNITY6z8SIngGl9Rp9knRgfLhn5AyvE4oUpStPD/1PH0/j
//TxFPlPH88b66b+bbCrhpNzZ/bw9Hhi7/fWvg9Ez9/2uGDpp9UwlmYWwnvN
AyPuf2/pIfaYvRrRLteng21Lis5XAXtMGKcrlxD9bZKPaRInq+Hw8Z5Gf253
7AiT8r9K9UO06ez8OFwNT3lwhH+lGzJdG5BOInrqIpyFfvvRwYXlaZRziA2K
i3KNOxA9vdqMLdr61SB8+c/r85nOaMSS8Yf6/zbk9aW7h8Ir4YnR3oJdy7xQ
RJVDnOpDJzy/juEvWxXoZejws/i548XfmT7Pf4+Cvu+ImqB3Fex1cZFq0HTF
0xf1w5cT7rb5049XbytBQLzkhKacM0Y32xYA9d+dbJfVEH8eSOXq8P2NdkGV
c6Jnqf+7BqqEPlhHVkKY7LjwaJgTZs1syZkm8nERR2R71NJAFz369sZY4Dup
IOnT/6jvYs2F8TcKIajwzME1j5wx9EL6dU2yP3/ZYL+4sq0SlPKC/Ngm7XH7
hQFuN6In8diF4O8+uTDAVKybWmmBd15PiagtkPUVk0YzOVMK3szcoye4nfFw
MbeA2CTZr44o6Z9cqoRnOlaRilK2WN/HuOEHuS4eWsfV0uv54JHTJTlYZoE3
TCYv0Mnz+gTNLYZxqAKUXaMb5vyd0OGg6kn2P2S9dASsV5Ougkrdz8z9HVZ4
+GiM2BmiZ/o/fZei/6vv0vzoXfWLN7Pw0K6ctsVgS2CveCdMfR9XFtt8NGPh
Gpanfih/dMEYpte8OzdC/PB7r7li7ZokNLFsZ2dr1IXTYaLCq5fI/cEYn3NE
nEbjzwV796uqg0ECd9Ndwk//pz9L5n/1Z6E5XrihfT4T+7/Y/tSxNQOj+YzT
18i4j1V5NZMrUtFR/aKMhL8ReEMy23MyboSObsdU8WU052xLjQcVqJCuftBO
9HCOBphW/T6P9SI7tfgMGKBrZ9+lCDKujuRkRButBHf1a5/bS/ZRxyPvCX8h
fi7/dUb2QHgpNhwWUWuZ9Ya2sWwTUapO/urpMsbCUlQcKJsRHbYHneWXaSuo
vglz2c6648Wo4XCldKnIGlZ9mH9N9aE4PtC/prS0FAu3aP2QKfIAbb9I7qWJ
Ubj/8cln2lwJJqvbZCsesgHTwz9zM4ie2RMVN07sK0a+nAkI0jMHj49GPqzT
ZD92Uid3qLsUf239quf0xxV8I7gauogepZgcby+ZEgxl4/l37oIFXK178UuD
jMvqffZ5C3cR6nBdv6LHYQL77vnx/CZ6xov9e51ZylCuzCpStcoZ2IbDxelE
j6fJaWkOjWI8Z/9Bzf+uKSRLKGgyUXUjY44k2cmX4jZdyTd66xzBabhgxIvY
+fm4S62yWimKpG4K3NBhC2EtPgHUd0m7LRsrdiuUov/jLT6PFqzA0mNtIlUn
XCgpg/vYjhK8WPmX2WWXM4Todc9R9WA5bsRzVrwoxhsy+p8fbnKCRMc3ttT/
VGs3cUvmvSlChpbLoP/RC37c/OJF1bcU2hjT5xlSjB+nAtY6aTnAhKsEO/Wd
wt7o56zOdDE+9z/SrPLFDsIl/b8EUf+H8Oc+1lsswg2qN+rPVrvDl+CB43LU
950brpYm6cUo/juRO0/BFuQdfx1poupsbzfW7OQvwbzNvxxwJTmH8iz9MCM8
89ThL3OixWi0ZrR7eqMrLF3hUab6R7hUXRvWwmKsYlv60ZJmBTZZnAdziLyz
vPG7lFdFWKyg6Zne5Qzq1p+rqXqhZiYnLq0wKMb4+do+nj9O0Jt+MWOWyDs+
PbbW40sxeu43XFZibQH3jw6di6LqeFs05bPnFuEniwcXZrrsAbLt71HvyecD
T722bCtCcHwoy/3WBg4+oNu5U9cV0pp55VIhdkHCv73JLmDm+0aFqif2L6Ng
3/maQtxloHIo7LgTOGU9f76bcG/u3D0nPApxyrPbznHIAV5oF72m6mHe7uvS
xLgC/Nov3DjUS85lMlfVWMj9ZCGu+MJfnkKM3/pCpZKVrBfdLMsCIn86+5Rq
cGwhmhzUk5uptgX+L45ZVJ3G24pr36fdKkAB80H7DS/d4I2pwI3fhFfOjtWb
KhfiY4v3PsW8NvCtQPJ1IuGxsh1yTJ4FaDabJJLl6AqeakbVW8i4c+9/vM55
U4DJ/nq50cYuwPOdFvGW6gtm3PrhoXUhLh4+GjSQagk64pqlxwhX2h7SszG+
ALdu0a81FXSGu2+emawketqQx1JsugBfv3tTzqjmBH9qxQao95x3zlvfPXq8
EAW0zYw2B5rDDnuX91RdzZyBss/rnAvwTo85RwbNDg6mu0RT721Gm6+sW2mS
j04WkaIv1N2gqPBFPFUf6WrStmSn4Hys0Xj1guutM2yKuV5J1atxLJ6a0b2S
j/Tz36PW5DkC/9NB7VrqfK08J9hkmI9mmR5Km27Zg/sBxlVUfackqbzyR2T/
nPlgsIr7qy1UPn55jJPch4+miwcc3J6PrN9TBx3WWYODvtsV6r/NYF5Tpjkt
Iq/dnH2z2AIu1vX9o+pW7X1i3DjunI983jylR66ZQc9LtQqqDlJe+YeXum/q
4Z2rQHyB+mHsBb5DzmSf2ZxX89uhpx46Nr0eTdAPwAg9S10Dws8HJ3HOf6qH
e3GjnCcN/fDPWjtTFcLftSspiQ3WQxpHEO4844Mcrw/bSBC+JBm/d2S4HsoW
16kxf/BC5ig05Se8zUCi3H68HnJc6UVxTp5YZ8YiyEH4TzvWitCZenjD2O6w
wOiBcpfF2v6R/e2BPEF37b/1IHNZ+VVDmxsqDPMIjBHOd3vZo2fLGqCop9Fz
KccVXYQXpL8QXjBy32QjcwPM8n75euaqCz5o3PH5HeGjUbFKYmxEPlKw/kiG
My6e/yn9hPAX2bP7l61qALXT+1qS651wnfHN1c2E26rlYhFnA5x/t3wfS7sj
OtU6BtQS/n3/hftCXA0g7eQRdnefA7Y8lzIpJfzvf/bnw/+1P/eK6z4wZ1cH
C9f4k/UU3FA8oedEEdn38n7un2dUqIO00lXN1XmBGK6yZysH2ZdmSsvU31ep
AxPD9x9Whfuj75ZyzwUiz16kwsCmUQd72SMrZuJ9MV5ZIuMX4awz3Fu/69RB
Ekdh/JUOb2S6jZV9hDMZLFR5kv32aPduZX0ZL+T4GRj3nHDTdnGjBNM6yNqp
UsiAHni9OEj6PuGFV6L/eFvVgcuZbEMlX3fMKo0OryE8psKu4F9LDQQ8uRIl
8jQAp2oMFyfJfvjspYNpB53rQNJqR5QArysGaHexZxJ5gW0jhfbuZNzXfSOb
uVzQp+2ZTDLhgiY6Lzw6auAm13EW+2o/TDNgU/tO9Hyzrcyyf0HOI8eKlg2+
8EEah555F+GfP+snK3vXkfU65/FoqzNWaHf3x3yivqPdd/riVwc/zvjPzGs4
4RqTIKZIwnOi2linOmugkVn42gyvN57aPyBI7dszGvjLd/bUwOOtUh8CEzzx
wTRb6T3CFz+6ZNoeroPbifZjP8mtvka8oSCE6Om51zSy4WMNvCxcZa+3zQOP
b0t9VU3kC6ykHKq/1EDgYZ8JzR43PHrGKruQcKuPl5WeH62DG4vM92fZ7PDR
9AYxV6InMr2sk32oBuKDzTbvKHdF8cEDsxlEfs86TibR4RrAKd0Tj1JdULFt
vjeZyq+3/HOEZawGMu4L8N5Lc8b9eydV4whPsLJIpE/UwN/RvDflFU54oY6L
+zThQpcr0iVnaiD3sKanbJkjitzqdjxGuAy3+JmcfzWwaZL5F0+BHR6ZFRX0
JHzvN5bI7GW1EFl7jFHzkC32Xd0e40i4s9ynayopdHhbFchTucMVK7or7efI
ueCiwPa82SN0ePm2fvz7oj9WGr/TO0D256Gn3e5zhtHhXdFk+8UJXzz1MlN3
D+Hntcfj75+kw/TT1Z6bN/ngjtsXxiUJX33hTP9qcn5x7vHmPhvshbDeTX8r
4f3itM3ssXRYCJn0TRrzQPefxso8hLtz1GnWXKQD+xdj5pTL7mglsK+Vg3CP
2XZmvst0aJEW4GkwdMOQdKnnywn/kyJ+8RNUw+ip9wWpe/1xLEqLn5+cF3ru
Hj69LY0OURtH66MFXHAkme46Rq5r7alHoe8y6GBzRZBnYpszWq7wfj9I5Qsb
8O2s1qqG14pWKsv3+WJwAUPiGqIn7kbbtY161XCO/yh7QrA3shtIFlHnEUtz
I02zHDqsonWPGag54aHW6w0fiZ7i/+Wcla5f6LXDqBoqnpw3Wt7piVVPVurM
k/PRft3mq9/MqsHwFD9rg60H1s7IhY8R/pRb5urjAjqMh/w8etbUHpcNBV59
SfQ4t3uIWFtXg1vPC09VZndUe1clPkj1f4+LLesopgPtxsdg5SFbFLf2j+og
8sNcW1Rj7atBzSJ+56snrrhjfsqIOt/9fv+L92YZHYxsdsr3pNrgZ9EV7S1U
fvfQ7sdhztXQM1k5pF7hgneV3/x8S+Sv7fmXutud+GGtwqbXBc7ItK715zPC
s4Mq82q9qqF3zmzPQK0Tmtqxmz4kvPbl867dgdWgLL582G2dA5YyLJdsoPJh
XReSZIOq4UQQP5dkih3uHuS4SvVhbwtRLeYIrQbM/yh6Q9YWz4lq65USvqd8
W2nrsWoY3kz7kvTLGkU9XA7kE64gtN+6bnkVqK++JssX4Ywhqvqmn8j5hV5s
nrj1yy1QMgxQ87f2Rc7rHGKrxkYB6k7wP5OohH0VLCb7znqjL/PepLTRUTDh
42WI0q+EvVZuAg9feuLd3zsMLQifuR3geT6iEnb0jmkXGXqg1TbmHurcFzqU
os6ZWwl3by70W4+4YXtH/rIywqNG1FZmt1bCbYE1cvlkvQdE74ymznfaftFt
W39WQlf1uzH9eBcc3hE2uZ7qS+71jufWnytwun1tNa+XBcqcXaFymJxTtmh2
ld0VqgLLzndNWfNOGJSFHlTfbWVNEw8L7lRIuWRuQOsxw7Vydm4/yHlHvrUy
c3xVOngrvnv2PMYUr3qpX7Ik/Mdd+ab9clWwNT383+okB/Te16R1jOj5K7Si
p74jA3aF7D/2QMMEA7/v6LhP5WcJrJgMVqmCa6Nnt9gz2OORxvYJd6rP7/tv
XSfcs6F675HoYzuN8VNhxsA2Iu+meVPjtFYVGJ65xBCRbItfJRnqTIi8jHb3
LM/3HIhlVRjoFTLCpcxOt1hyni3pC0tbY1AF7oLc647ts8FvASeC1Yh8c+6K
odhVN6H4os7xT4EGOKaUyjlIzt2r3LsdhMyrQHpWt/n6Mms8aWvjIEPkFb9K
sFlz50GstdqPW35GuNsvpFF//n/6BV/8r3Pr56sJnMd+0MDdcd3dnbstkOPT
GC/1Pra0cdL53JN8mOjiebuH1RxP3sgzuUz2Ra9+h2YzFxdAwNZjClvmTfGO
dVzEDNkHitkZJSiFFMI14Yqp9AUT9OdqWU/Vb48+9VwoRKUINHe/j+ZZb4Kb
/l9fZx5OZdrHcUWpLFnSijRjiOwhSX5FhUFJx7EfHMuxE0OiQiVlK73IUjKm
sxvUhGnRT1RiQmg3MdSgk7K0EKX3ud/r/WOu/ph/P9fzx3Puc57zXPd9fX/f
T2z4YzJnsV6YYIkiHjxbwfLJbNuNFp3053Ykl/7/fe7xb/a5Rh8iDMokynDB
qgYzk0XuEHJoYmaaWrfJ24++V2k6h0X5mdZcDVcQXcx/m06t/9Ccc/4OqSU4
733ZtrDfXYD2qPrgQup7H2GFMvXiipDfzvUId6DBoclkw3gy3zegofjq+Bm0
mJJvzJLYAz/eCCx7QPHQ/PYl5r/mI2+setx4fDesutTcsZa6n5wbS+ZJSeah
07qnL3panOBJj0djBMUDy6u9rG6fwumlpvF/T9uBTqGKwiDFPXvHja5+zcYr
OW3JXU228Ho/j6VK7a+bXwVZqa7NxPplNRcVGDZQxLRYakNx8wMTP4tZH8fO
qyNmuZnb4Pyya+HhFPecOO74XvkYyjeGut7INoV25vT5NIpPPph/8BMcRaWq
S6bdIUYwVhIeVERxgWe5XyXjMI6axcxunLlrqVn6a7mQ4leEuybsRQJM/W62
QfKnENjSZadeTvLSduXLe7kC1G03uMepY0FeXdTaHoqnpBvovAsS4KZ1a8Iv
awVBcbq1tgLxE6UILonpCvCYluXCDQ0BsNFK6S7xgPRmVg0OvuOjSX6obUmC
Pxi3yKwl+82SQmsZUQMfVf9glF7YyYTgBcbLzv6LF/JMfkWWezQf79XHC9z3
eYHwzNxqksdTnj/zqMRRiNVqE5e7BkNgeDQt3ZHkcktoWRI7+Ngk96bwY6I7
jO7pHyQ5xgFQyg1ezscfJz5PjKq5gY707pU/UNwkUX5PF12IFi2JybTvgwGj
jywgPkSpykEnlo8QxXw4sRI5QVAX2PZ4C8mrLwoP0HjDQzf7zuL+53SY+zBF
n8xH9BaItWte5WH3kaGHy/fRQHTt6XriAaGrpX6KZglRECB701E1ENqNo0aJ
Z+3z9ndH3kcKsUpCUUui0x+s+vycTSguVuFVHETnoYSXV/v2bGdIUn4ie53k
M5NWB/YNcHHvcdvWHfzdoGZ4kUZyMskdfhn8A0KMUypasDnLDy4n+vcSn13s
qR1MWgIXG2J0qtS7neDwLWVv4kew0Sgu8IkRYm2ATGyGvS+8+m2nL8m3n5/M
7roVIsTxziOazFYGdGdFmhBPXOhKyzG2uxCVt+41tNX0hvfmssHEIzmc9jHW
YqcQM7RG1hmWe0KY5WwKjeIf3slu224txAJbHEne5AGFcYlaDOJH09dnnTMR
Yn3+08ULx9ygQixxcSjFFaPkJUb0hOihuLu/5Kortb8q+0zmBeK3lhpMqglx
l328ZM05OhjIZkkTr5kwOqehuZ+P5deTRjY5h4CyaU3DAer3cEPBd0+RiI99
/P4jLwtZsNV4coScL6Xniby6Jvi4Lo95Mlk6CBhpE557Ka6ZeDYveZqPRaYb
TRPYATBH3HRx+L/4uZoTvpsXt0CAWjbDTN0NTJjFel0yx9pxTq2uW1aA/Owr
tsWafiCtLPUf4sm6o3LPtmOJANV0/V8dNvCFsGNnjIin1Yn7eqPlaR6Oa9NC
WpqCIetZ0/xjJCc5LJ6UsFKAj1YMK00VMmD1kuviJAduNqYb2rlagAoOrcWs
SS8wlImcv5viggNxny4V8zCL8aVmSpEFCabVd8m5R5DVwJecch6GnIZ5d04F
gtIh55Ykimuub7DvVxfgvCiTy95xnvDCZ3gD8TEdD2n5pVpLgGcPpz3tkPOA
Xpvnp//pS/o2fzveJ3uys5qHHy4uFOdPMCFHxnBvDMXPRH20stQT4Bh74C/9
ZjeYmX28gpxfqemVVzrU8XB71A3P6/f94H5VqRLxCh3o/pBdYCRA9a4q54N5
rlC+0f0W+d9oaDIP96/n4X66uGxssy+wXK1HyTzR5xVXmmtMBehw6ss2TgId
TkzqFwB1fYwUh6HWxEPHolk9J6EP/DBn1SdyzlMd0lCbdZeHpnZ663a+8Yac
ZckGxKczIPLrErTxMELm1KSmixeovdyUz6C49iN/2fQuHtZfmFxs0OMBy/pf
qhHfjdB45RvVxzy86cbVlEt2B2HZhUfEU5Ounhac3MPDu/u1FddYuEFNM72S
eFtOtNYUs/t4+MLm4v1f5VxB1cpPSDwynz50iYpf8PDV0HkjnHYB3f4jzTsp
XpZ26li0Jxfb3rYafjUPhpmXxTHEz5LbdNQ53Z+Ln3S+us3mBYHbvkP1xPOS
f7hTfk0MF4fXzW3Z3OgPH1dLivwmSV/Wk2aknvdd8Hu7dgYTom/atxBfSWvi
yb6JQ1zkKm8JfRjpB5bxt58R/4hoMkT6j6NcHJRbLq8a5gtdZyWXE8/Igtoc
G/sMLgbaHftr1RcG6PZmpRI/SKaWmV+aOQflJE/GeP7OgsiKyG6Sg4oZCpU9
eJKLPqXD78ZtveEzTbCEeDfSkkJbWHlc9BU2Vmlf8YS3lfy2f3oxMr/J3RU0
yF05ZsfBuDV7RqR5AXC8wCPVhOKbrUvHpYu4+MO0G/29jQdMiatU2pL70SiY
cnTiYMTWRXZRrv6w3iSliPgjppYNSCec46J/ymupxgk3kBRqVhFPRFrx5sAL
dA5KGVyL2KnBhPweZh/JL80GZgxxfuaiV0lM0q46V+j1b+8mfoeSq186C704
aLa4Gdrk/OCKzMGdJL+0+qOD8Bc2F98aVzImc+mQWCy5lPgahr6K7IyZHKy1
XFCYp+ALOlOVfxPfQQXLQS+Sz0VGBE1B97AL3Ou5HE/8CD42FVKJLA56VJxm
29AZYPHAjk18KwF8qZ8Twjn4ptBtd6+Aet+N7EsneSSH7KATOnupz3tdbkZH
nVrPvtGTKhQveTxswo7joGHc955rr7qDe+ZwLen/X99+QK5vPwdtWs461Ya7
gXbH1FcyN7om4vWDlwc5uOuhmE7uBldYm+ccSPr5a/tdLetSOfh8uKo0dzkd
DjnlD5Hc2p8B1ZkeaRycTh5QTZF1gX690qNy/8g7bf8m75RbYS8KNmVjjsYb
6GIHwtzs/rmkl17f/aOh92Y2tqmF9XuZB8DZP784k575J823uT3WbPTaUPde
ZZwJ+96e+4P0w8980VB5Z8fGxTtCI7Xu+MEJ5aQQ0vdeqpwhFOxi4+xSmkV0
rS/kKIrpDvzvfC+qVMqF4nKL51km+cCLBAkl0tMeHiFtrurBxpbLP5Wn1nhD
ll+dKulX/0nib/VBBhtvbly9pEzRCx7IB9qTXvSwZ7cxwp+N18b7toTneUBG
Z08+6TmXlF0ZV8Nio3tMKi3JyB1oD83ESJ92qHxb2p0wNuren23Jf+0KL25h
GukbHxtMtCuPotZH3/GVeD0dOixEGiRXM+dx40vHWDZmycrwJ35xAbRO7id9
4DbBHopt8Wx06F00x+o8DQoUWn8j/d7/BTd1i4w=
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0.5, 3.}, {0.5, 3.}, {0., 0.09705472993467298}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6872016940162373`*^9, 3.687201713658778*^9}, 
   3.687201802658058*^9, 3.687201975174842*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
GP8A++GQH9bGo89EI7wrlxhNcX/TLwbPi0tU8taLd8YiPIdLTEv2febG4Xzy
yG61o0uN4xEewiO9J2buqYzH8+KT0/zV2toJCD/MJ9lK+1wyE3C9AqI8O+LB
wERcr4D02CtafD8R1ysgJk4DX7Q+xvUKSfAeXoBLEq5XSESSKUe/JeN6hcRq
81jXAyl4Xgpk5le7l3GpCA9RIOF960YtfoLrVSRSZadk5zRcryIZnPdu84in
uF759ev4Jxt3PqN4w1/dIjAq2xLm5uLL4PT4GCV636+/K4t31FUKc0JeLQ92
Y3F6vDtYN7znmGssnvmnbxWw/lHEzAfXMU8lDD2zctFUdxbvOB+ohlfxzjuT
PFicHo9cbEvSwZPFO/pQC74eJXnPb7B4x2cd+JiC60IvvL4eVpZ3Dc7wxn7q
wbP5+R1DH+y/AcwkZkmZvpinEbyHvR641M8X9VME37oPm5Tlj/2LoG+gU4lR
APYphu7OTty3gbifYlDdZtjdMAj7bIbrmh+mpd/EPBIwfTTGd0Ew9ikFMqjL
p9RbmEcKPw6Bu24IrrcFhk/QL4wLxTyt8K2XX/vkMFyvDGSKjua3w//i1vS5
1AJY9ubQLTUXb+SzAPYWf14jdGbX07xB5vKWDFdv1DcZdJPNyx11G+ekHb6u
/LDa+w7L07G+GIov9H2l4ebN4Mz5WE5pfs41b+S/Hbp5jv6n313cn9+wrpj7
5nIEy9/x7+WQeLd43Kzr3qjeSsiOVVMqdcf1cojzuQlCYSTml+9Zs8RPLO+x
/B19lp+nOG3IXuDhjeqqhq1Pjhyv8cT94ZCNDyaur7uH58Il3e6f0914n+Xv
wGvg5gdJstENb1RXHdR9Wzat0csb+eSS+UGSGTn3Wf6OefFI6tNdCxZEo/4b
1sGwUFWZiTfuTz34O3VbKPZh+el+vvm4UUhKNJ4vn/zsvDVvXCzyX1YPhrWD
r67y9UZ9awTfRc33xH4sPz0u+E8qCboZi7dHPqmwGtylWzzL/0fXuhEWHTc4
tsof918E984bHhUF4PkKiG/S5qkX4vF8BWTWkGnvqh+i7WJAE5wY/i3FJBDn
Uwxdamb71wbh+QpI96k7Nm9NwPMVktFEb+rrR2g7ihaDWp/2PUY38XwlsDTg
l2ZFMJ6vkExsOKcxJxFv7wpE89Lrmbce4/lKYH7hJ+sFt/B8paC8+MjEvBC8
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
2SRt+oTXc8hnkQ9n1i53oPct0fmumlGgmO6A5iWv16/XD/OJeymPjKmX8+W7
8hp37JNPKlfcedj/ANKV+xlePXpOu8XfPli3MPmxX+LYPxLnRO7n86Vlk/KO
IB75+vvGr0c/PObOPIdMc7VCPyjptDJ97r6NwYMzV51pt72G1svPw+ftP3mr
13WE10Kyionpiz7XgT6XSPvGrbp6qaSe1tvO8Kxa9jopuM0N8TTA9oT42oL+
iF+eq7CLLcObVK8z74mmumekOdIvD7DPZviqvaOINwTzSOGbhtHDzsOuA71f
n/Y/tGX9xEtD3Jn3sVI/I8fYPj4wHvPLoHTMjV9dRl5n3pNIfW6a2eblWYDW
y/OWe+vGJcUx2A+H/PPO/rZs3HWg96vROXob7DrRZwmalzxXdmtPjq+eSHna
mHqjmudOG7YW++STh2lZoZ8mXWfeH0T70LT+sZR0R37+dx9fse2ahMnYp5C0
9jh62GMawuW5cjhp63Vg+nXmvR60PyO916c+trvGPJdOc8WNu3m4+r3b3779
ZvdvDjIjdQM35nl42rfQwfEZk367IZ4qmN3r7aRenzFeC/oP9vT+J4fibUyf
K6IP/IQY2p/fDM+OCwZ3jqW5Ip4GsEi7GGXwHfHL56vi4Vi3Lt+Nef841R35
oToo7agb0OfH6Lxy4ix8QibgPjSDSdec5B1FmF8KKz9uCNtX6gb0ORA6x5O7
fObeLbzGvM+X+ly55IRDlzrsXwZNBVbivRVuzHs5qf8zySHjDYOxbju86P/j
zvaftK42Jg+l5sllQlPkX97PsBGGNWt/uQG9P5LmJIJzdxlP+fp/18v7UD15
scvCejfm/Xe0D2tK/JvtBuM58okF1+b/6rryeKq29304ztF0S4M0upFUKopK
itZOShGVJpLqNijylRLKPGceQpzkUqFCCpkaTBGV6l7KUFczcsThUOfKid/2
sdfe396+v798Pk9vz3rW8y7H2Wuv9b5L1Xqj6DpW2J97VF2In+JJnXNWVIwb
L4pC+JwTXp/NbrKLN5+F+jlE94+/TDv6AM/QPhVRmvVATN2zZuF7vs0ok5AO
6Y09B3A+Kq6YbDglHuICJD4j1Fj25znKfybeNDp6w/uASBAvRGEL9V4bXgI8
ZL7M5QPm70mG/CJUulpplOVVGN+Hbg3kjrROO8fUZab4gw9onVqdB8cVo0Dh
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
CZMXKaW6RW+9XEE8izC+XrZ1U5szwvUFcL7Q63y7fWoeP8eT82rb9FY/pxf6
ySYe7Bz9RpIF5ju0HqQudq8a7YLwvd9hHi5hN+npacEi4DM57sjNpdv2TQY8
ZLy0Wev5Ywou1L0YfB+N/LtWXKipxMf3BzEuQBNcJLxtJPF9YeY+ZsOHFRLX
puF7u8z9ypr3F9n16vj+HXMfbXt66UDk5UsUTzO9z7d2z80vqXfwPalm+n3Q
iKeBurdqLiEpSh/WX94mtS6T1In7IeFxl0f486U/4vsI+L6PGM03dJ59PT6J
mlcnPd+4V3vTotoS6frvWCev2GPv+u1J1LlKfI+JRTjZao8NzMH3Rzpof64F
JusWjMH3p5h7Kz3yO21+t8H3SvC9LTaxw1R5g8UTfL+jg/bTdg7nB08J87fT
PvTOOt/1xSeJ7mc2zCNC6wRbxurdTaT7NmEfrNf0bz2ujcdtZ3y7laB2Mz6J
rl+P53vhuL3rqz2JVLyA1u9gwbPcGpJI97nEOo0H11iduJ1A91vC47aunlOW
+jGBmpeQ9v/K2cvys3dReAtzbtxUW7lsz9iLdL17rGeb59io2Mf4nLOQ9v+7
SxRP3R+Py5wnX1yZIgjUuYhwnVasf/ck8xO8vosI14XE/rdRfTxxf1wW9e/K
qw5WNmXF03038XyPVK5pSbCh9OQI6byYTzl2xHdeAt3XDeelccmF3R/fxdP9
orA/i24tJHjxlB5PIZ2XVo9+sekuPC/m/PBrq6R5LN94uq85nu+nkqle+3N4
dH9NrPObefk1CXw+0JM5R7ogX8EkSOYCpVNE58XMsshRwx/zMOche7MzvTfo
xtF1/7GelEMFD1/0U7glc76uT2LMilq6nxFzTjJF577gkV0cxS+i8yL7ptNc
RYVH5Zc5R/dW9uPI9a34XB9zfjJuj8d29UTq3KCniPZ/SupKDStTfB6SOS93
MNBjfpIsdY5rKnOucoPiKAPvp9S5uE0i2v9Pzha1kaQPuG8Bnu9tqu/SsA/M
OS7fy6o1TmXUeZgc5lzWVQ2LNwFdMXRfT6yfVyJgecmfp/tLYT3mB1DN/k34
vApzLoVH9WcZ5mfOn/xw7T7RvgrzM+dJNGd+i4qzos7tbGLOgThJVCqoxcZQ
57eZ8x5fDFUv3cT8GoP0uNskc734BtS5DjPmPezUc05zX409R/chwHqIz7yn
48rxe16Ms4iHkpJ3l5+m3r8TzHvY5dXv767Txu/TB2n92c9rco27zyFcB3M4
nk0IArao2aRE0X1GsZ+cpwuj46zwe9tBer7vX5nMcZKn9POYcwJP+ydbBtdE
0f2xsP8a4+P1a89T424apP3ZO27NpUBDSn8J8560yO7FXr8g6n10KvPeU6Ft
w8PQfOo9XQjzvjJGfK3M4xOOZ96XhdhG6RTNwXVHJQnsfytvwouONbgOM8ab
Uaz5byeFNSFUXiRpPU1aotbNK8IQrp+O/ZfI1j+xJj6c7k+P/Q9r/LvNb2Eo
5Zckrb86iTstMDIM4bqf2P/JT+fUH+nF7zfxuL3oL+0Raz/7Ue93lCXp+Vod
npERw8d68Lgi5OobVVbtFkL3A8M+PJgvkzbtbSj1PIX1cImvkldSHdeG030X
8Hx3EFdeJzwLRrj+L9ZfE7/T1mYu9f5ImdnHS3TRcSXyA+g+YXhclwVip8Rx
gXTfHex/8bKaDJlRAdS4zD6VwdXWQW6yH5UXZr+uMmWw5KTUWerzitmv+4A4
QcoH8LjMPtKDb7eeWYj9EK7/i/Vr1qtZ2e45S/dRHo4XIklLzf4d/+J9M2Ze
not31/tsp/blQph9vG/PC0t1bmM9zH7Ucvdlm/dvofZJGhkf8izm6DlnUPtO
9sz+XrL+gr/fjw6g+ssy+0iZCaO/d1zB+zbMPsbSRfcGywnqeS2E2X/419D2
6/Q46rnJntlP2FmlELBW4EX3GcL+V2mVPE/o8KT7MeBxre3eL62p90C4LjD2
7dGZHVMydT0Rrk+Hfdj2qkpWn+eJcD0dPK9xjt5yuQJP+nMc/5QPHKs95eUl
gPPRE/20uvw6iAvQZdeqEdsbIC5Ejt0pPV8aAT70eTUzMtj7NYwXoVGNnYJJ
TTC+D53YES6b/AbGi1F7B2f84ncwfgAlOm5uL3gPcRbx5W1+8uqPACd9e7Li
H7PST5CfTZyaZs1a0wJw0k/3cRty77dCfg6RvzzHRrMN8nOJCur7OfYR67/A
ra6e+yoJ4M3o+lwlw+nPIc5Hs3saNhb+BXEBeq9k37CtBuJCpJ2bNaW9FuCk
//smiOd5vITxIpT9zuvFuHoY34eO9RI+CQ1J9HhYZ9E/Cl1Z5xNB/ACyXNu3
4OZryMMiRnVFGWs0QR4+0qoyTeXzEgEuQMbNqrYzEgA/ma+piRbOt99A/Wxi
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw1nAf81uP3xj/PZz9WUwmhtFQkI6SshoqSjJRKtIgke+9VZkpLoUhmQijZ
kZWMbCUys8peyf96/677/3p1d53n/px7r3POfe5vo+NG9zk5jqLolSyKEuFf
RRRdr4iaZRTtKfr5ShT1FJ6ljw/p++nCrvp2tvBd4bnCZxV/jrCd+O4W/87C
U/X7A8WfITxAfC+LHphH0Wn6PU/0KcKTFd4XPUbYUWnuU9pdhQPEdz7flO4i
4eviuTiU+5roY3KnfUr0KOHmSnOi0v6l+DaiZ4tuHfJ5RDyHCHfR72cU313Y
TflcQv2ErfT7ScV3KdyWj8R/QeJ6vhra26V0O94RPqq46Qq3KPRSvvOFvYUH
6PttovcXrqZ+yvMf4b7K90XRhwr3yP39ReVzr3jvUxiv0Flxtws7CQ8Sz6GU
LZ4jhfco/ghhJ8VPEt1GuHvu+C65+/YkfX9LeGPkfMlzb32bIGwl7Kbvs0Qf
KOyg312ES0rz3K/4boH3AYWJCvvm5n1JPPuJnqu4HrnTPiG6T27euYG/h3jv
EHYX7pm7XV1zt4W50Vd4YmL+44W/6vdA9cm3tEVlXKD4+qIb6NtForcU1lU4
VXQd4R7i2Uq4SJipH4cp7S/ir6e4YeIpRP+rcJzi14V8iK8X8rmW/IVbKFwX
Oa+GCsNDWcz5MzTnfxderrjLFGYo1NK3IcLNhLup7BrCBcLthGcoflvaq9/b
CJ8sTV+s+AZhjBiPFsIm+n686MaJ21tbuFDYUaGv6BeElyWeS8zzffX7RdH9
lfZwhWGKe0Nxa0WfrjYmquc1jLl4jhL+oPj+iv9a+LvCWaIL8byt798pfK9w
dOK5QXn7KK+BwqXC/on5+H1M4rEbILxSYaXosYnTvhDimf+PhTXwlcrqq7I+
F45IPCeGJq7zO6KHCTdVPY4Xzx+MT+L5cyx9z/4h+gTh/qXxzdJtH8yaF65R
mjFK+1/I/6Uwf/opPM48FVYUzhEdC6dGXu/TFO5XmvZK+7LweYVOot8WttK3
1gq1FR7SmDcSzhPuxlxQ2FXhZuX1StivtovMU7C2tEeqWtHdwgcUGot+NnM8
PM8In1Je+4t+Wvi9fh8g+tPM+ZJ/A+aEMukkXK349zPXif33CZW3n+r5hnCB
QjPRD7GGYufznPDtzHnfrjye1bcdxPOosJ2+785ep/CGeHYRviWcp7Axe41w
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
7YM80ef+KV3ul6wL9A+l/y3sUfg/TIl87zA45EneL7AnVGynehF9PvT5Ocij
ok/GBpJ6TaBbYdOgbujpe6fWq1gXzyqsq3gskT2o7wuFdbprK7Y5oOtdI3pL
7gaR/0SfWLie7+v7XmrXQan9wXqEvl0m+j3qhV6EPCqeIZnvj4dyT6v4n8Pe
i75/veiG6DXMS9EvhXqyttHB0FvHVqx3d0nti4XOzJoaoPyOqTrP1xhP0cMU
t0coizovQX8N8dxdD88sJ2APHZd7jfdW3ICq9SDW0eCwFveL7X+wSHm8pPgn
aJfmX92w3/QLPPsis5e2gWOzhWbf+q70+c46uo25VHjODlRZ65TXWsU/LXyo
4rn3sMIPSZBLEtOMNfbJR8S3GJ7Uey/rdEbuelAfZBL6njX+qMI3ie3n2D+p
MzZ8ztfltKNife+FxDIJMtW7iW3j7K2Pq4xVil+Q2tb3c1jjB6ru26itnblP
Kv1956r3D/ptQcW2qRsqtv8ckHledRH2QHZnHgoPL22T556CcutXfG5dg4yI
vomtqLT/BfI287Qa+4w8vfQ6bqty7xC+Q/+kzpNz7MfS5wt7xS2hznuie2eW
CX+LLI8epHzvVbpWyuc6dHB97yd6UmK/O+zP0J9Htk1PT+zjxF1Fj8yyd0/h
/Ir7nT7vozxfFw5gnAuP1U7K8zDRHyt+GPMdG5rSPlRYB1yq+P6F7fa1wh7L
nUJR8X3Eg8x10XOFp+W2xX5Seg9sw7zLLLvmFcvb1IE67VOYf2lkX2XqME95
7Fj1/QX8U3O3fUf0FH3/LPFeh9wJjVyNjL4isb0KefUB9g7R9wv7lpaxscND
I4f+XHqsmdPthY1Uv82V/3aZ+5w1flxhGbsIdcC+wT52ZOF1sDSshcOUplHs
9TkrsZzOnUWvwuW3VlvOU/o3ItvPDxHfduI/WNgrs98R/QMPdyCfIjOk9k3F
Lrk+sR8UdzPsn2+zb1atMx4YbBH4bN8lnh2FE/R9iuibhC8I7614TZ5aevzR
9/EhxEcR38XFgeeein0Uqds9wjHin6g8mlZ9//Jb2Is4o+iHByu2w6NznZTb
n5yzpptwfNgvqMNOrBNhk6rX9TthbTNf5lQ8Tuh33OFiX2qusDN3hsIrVIcd
hIdU7c+G/v2DcInSPMD4gsq/reL6VL3/Ec93/LFvjuxvgP3nSGwGwW7TT/Rf
mW1T+JXhb7ZrZvlnt8x1om70KfYT/O7wOWymsE/sOnVWuXP1fQ/hM2rfu6Lv
5FzQ7xmimxe2dx2G3i2co29PkWfqOrMn42NJPtT78JDfy6Fv8fNn/Hoj7ylM
E91UOFXpbxE9BTkK2wT7O3KIvnWgnVXvUftj4xE9VvSeog8X3V7YSfwdM9M7
iN6Ls0hhy9D2a0ufTQuxDylsi12r8H0Z7xROEHYVX+uwZ8LPXntU1feVn0a+
j+ukuIahbvAjG3QP/dxA9M7Cq5V2d/pIaXfJ7HfKb+q8m+jHC7dra+yBhe+S
8NG+KHefTFIfNOP+RWkaY1/IPG9Zl9isWJdlbL9b7H6dI/sS44+Bf3uT3POt
nr43zrxGpinP5lW/6WBNtEXf0rem2Joyv91g7h5c+E5qbZDljtS3juJpkvks
WBvOA2Tpf/ideu70je1TOzn1Hsg4cneGjzd+4JeXrksv7Lrh3ETXvS312XW7
cIbC4+xpws1S32dxn4JP7wHK+1lkvMx9OCjz/Qh6Mz7eF6WenxcLRyv+VtEt
xH+y6EsUt13V9zv4beKf11fhdtGzhOPF1wTbjnAHhbGKa1x1WfjWDc6cP/dJ
5wtPUZ7XIy9zfqW+e7o29Z0I+jZ+oVemXrPkxRuTO0S3FF6Y+p0LdaqbWmdH
J9oytS0cvRI5k/v2f5Xf/NxnNLrhW6n3Z+TVpan1aGTcd1KfcctZiwo/ii4z
p8Um8VfpPsf3FfvINanXJHXGpoc/4WeFdX/8z7kfRXfGZx4d+LLUdwT/37eX
CxtV3cYJir9CODCz/yHj0rXwftCyalmUtbygsN2AOxj829lPpounRdXls34H
xN5r0evZU85Kfd90emr/ojsj+/6dlnrfIP7U1G+Ozkjto4VPFP5LF6Te/3lP
dJLKPZs2Ve1jdlVkf9oTS6drWHV5lMs44RuGPbId4yietqrXfOWzE3ul6B0z
v+thn96t8By+NcxbymIfa1Z4nrDncXfAeYEPzPaF/ZdmKv/2wlbKq344F85N
fU93jvDk1Hevo1L7vM2J7AN5EGdcOGdPKH0mNgmyDTLR0VXHn8ScqjpP+oH+
GBD6mbXEfRx3iNzJYcfuGeyN7I3Ia/2r7mfuC09J3Q+tOavoQ85RxW1d9Xuf
myL78hHP+cL7rxNT30Ph83O80p4gbCD+4anfZ50Q9o2OYe94M7GNCnvFo+GM
ny88W3n9jjyrtDszjpF9BS9N3f/Mvbqx96K/FS7FhoW8I/7Zqe8bOb/YB24S
vW1Y49wjNyrs84+4dYfwKvHdVvEdGfaoX5mDwj9S21j+ZK2nvjuYFOipFcsT
t2f2W8XfC/vzicqzmjse36WZIX/u2Fg/rJH3RB8rjGOfBYnCdP3eKpwL+L9d
GPltFHconGV3COsrr5ax2zk9pB8r7FRafsYPpHPptwb4/JN3w5A/vkPI1fiN
zCh8Vs4tfNfDm6baud8g1BP9qPBH5P5gM4e/HjJN1X6AZwb+G9SeSRXvidxb
9Q9yCO9Haop+MDMP92jITFvpd23lt2Xmtxs59w5CBmJUZN/3q0qfpYciM4v+
Ven25y618Bixt0Nzbuyg+Jmp9Sr2c2x6P7E/CH9JrTv/jHyhML3isxD5du9w
tiKPNQ37/0WFbRSjC9dhl2A74h5qZBjTzWLbCpgfnO/NY8tqLTPro+wPlMU9
FHscdz1jwl3AJWX0v4cr3IVhB2AOoIe2UZotYq+xv1LbE5hv8P/NXly17XQT
8Uwo/HaGdzX3C/+NfbfC+5MaoW7UkfXCe4KHS8tp71dsM2FNYfc4qXDf/lvx
nd3Gse0D9N17hfsH+xtvnXgvdI/wz9h+s7xtQRf4ULxDhPelfl+JXveTwvrQ
56cVlhH2UwajSvc/MuSswvrs3WHe8h70bcZBZWyPvpn5HeIilXWYcFpmf+yp
QS9pHGSgiZl95vGT5i3bgshv4ojHlxsfa3yhedPAvQxvIZ+M/Faxa+J9mPeQ
vEejLN7a7Vf6Hdsy4ZDEbyR5k8abCPyieafAW84FwbZ5Q+H2XlL4fQHvj/D1
500o9k/edcKDLnZrkD3RR/LY+wpyI3OC94CLI99lY9dlPsxkb8/sw4/vNT7z
+HPiszpJ32oqrnvVd6+cI7cVjuecuk84KLGfEm/ursjs14o/P2+ROE95z1Mn
83ypjc6lsi+J/IYRGh/qxejHYZ7DQ33w9+aNR7vEtjL8lWtknp/Ikx0S22zx
f+b9LP75R+aWSaknc+5/70pi+5nzBvDJMNbMPd6pDK163PHbxz91ZGJfKd78
npPZz513ELw7Y3+7q/DbCu7yeBNyZ2F5Hv2atzl1lPaRzOO7JLIfVxZ7PBiL
yxS/DXJM1Wm3pp+qnqvwXVd4X+W98vLSbzSwC3Jv2C7s1ezZoxO/jeJdLm+N
n2dOsl8m9t3irfR5id+U8Y76qsTvKrnDuDSxT+AVIR79Gv8xZHXW5ybCUZnv
W7HTIrsS1w2fkNLvuXhvy3ysF/r5xsTtxR8UGl1mfKgDNgreWt+VWAfB35L3
Atxj8k7josw+zhcH/WbLMFc3z7zX1M1cLm+m3yv9FgY5g/d3vI1iz+QOd5Ow
t9CGQanlLHyudhX/eZF96f9LbaPegG6h8HXFex93TH+IPk94ucK3FduxoXmk
16XqN8KcUzVzp8XfYH3qPDn34GuY2d7CGC8rbI88TmmXFJbxB1ddH3ztH8Om
mPhOH396/O1PiexnX8n8zjHOnHb32DrditT1xK5eZNbPkMOPznyO9M+sazcJ
+hRnIPcItWL7HiAzrAzzEJkG/wruKT5FjgpnE23qrHo2yGyv4wzdOXEf8lYB
GvsA7yWw13HfMbJw2/HZYE7/ltpPA7mKunG3jj3339SyBP1/rdLkjK3KaplY
xuMNA/E/VHxfQz5fVHw2jyutfx9RNd0yyBVpYl99/PZHZPYl4N0a76k5EzfL
bW+kbwZV/a4N+faJwvc4K5X/cNGvpLZhYlM+t/Tc4Ix+M/U5jO7DvTz2+i8K
37OsqNhW/m5q2yA2pn6kqfjOBR2K8wv7NfcFH4WzDB0Uuyp6Kf4k2HUHsreX
bi/nZr/Ad4DwaIXHOMOr5uEeY7eq47lnGcG+VPq+qEPV9cdOv6foF1Kft9je
seti4+FvBTA/sZ1ir6gX9hbeRCxMPR+wh7cr7ReEz0zfzG/njsp8T/R+kC3H
ZNbLeUNXM/F7C97UYyNdEfr22My+JdwZYCfHTvVI4XeyyDNPcXaFOtQLNmr+
pgFtxja+Msjq/TLrStSBuvHm/onSaYdGfvdOP6wKfbJPZn8SbDr4upwS5kPt
cB5xFzwytb0KPWi/xHrZvuHMahH2H+6X2YsmB9mY+2jk1NGpfVPRhfCvYL1N
K6wLja/YHxJfVvQC/BXxRx0fdISRpfWerar2o5sQ9AXikfmxWX2Wei5x18X7
mpPZH4JeiR2eu5W9M+8P2LC+im2vwwdoRGmZGX3wysJ7Sdeq7SRtQv+fmdpW
c07Qobgb4j7ovNR+m+i0yFTYJLZV2iTzOZVmtjOMD3of/mPYBvFbQl/m3gf9
rVHis56/S4AfC/XH1wU7M2sBuzcyC7oV+9G2me3n2JOpM/etYwr7g6F7XVhY
/2I/wx9gSGrfS/xu6Qf0Gmx236Tm5x62XWZ9FHsd/cnezp3uQ6n/9gh2c/Yf
9D7ecdUKeyb7bO0gk9zPWZ34HRV/k+HT2PbJVaGfeYNSv2pZdHXYD/Ex5m6L
e8Ms8x00/UafjIj8Nx1+SG3b5d4Xmn2P+w58eEaFscbW1yLUYePM9yTIruSJ
TMEeiuyEbwOyGvov93q8U/o/lEedVg==
          "]], Polygon3DBox[CompressedData["
1:eJwtnAn8FtMXxmfembkzLxUhW5QlIkTKUllKCaVFkX0phWzt9kpE2ZfIvkay
y75vEcq+U0JSsiThb43/8/Xcz6fTe87cmTszd+5yznOe+9tw4NC+J9aSJPk1
TxL9S5rov13TJNlFsob0S8skWVkn/CR7tPR3Q5J0ld5K8qL0mTrWReWHSmZL
XyA5XPruktelj5H8rnNXkz1JeqMiSRrUXGdD6Wfr2AqVryX7culb6dim0jeR
tJK+gaSJ9DUkzaXP0j130PmVnm1FlSR1/TaTvX48dovqWFvnbq1z96knyUmy
l6e+56nSL5aU0kuV76Hyq2U3lv2bzjlLeqXjS6X/kPqcNSSrqLyRZHXqlGwt
vbWkl/R1C78bdawj/V893whde4BkifQLVGeuslRlu+t+p8n+NXWdZ0rfV8c3
kr6hpJ/0mbqmncprepe/9H5XlL73Lzp2hvR3JL1lD9C5R6i+R3T+ZirbTfK8
9L8kQ6XvJ1kgfRfVM1H6JMmu0lvoup11/S6STaXPV32HSN9N8rL0YTo2XPoI
yXDpn+rYgdJ3lTwb2y9I30Byh/TnJJ2kHyR5UfpESSJ9Xck10q8r/e3+1P3P
l76S6txYdgv6QOH2yaSvL7lZ+pF65vdUxWGZ+o/e/yvZ/XXtMMkiynTNDiq/
k/pV/oB+O8juKJkh/cPC9v3Sr1P5G/QF2a0lr0tfrPI9o36byt8sXP6m7Nvj
+ZTvFY/9JTlH+rmSv6U/pfObSb9b+rU6/1vZPWS/K3ua7C9k7yb7ed5H9nv6
3VZ2m3jOqnqHUdKXSr9f5XfV/D47xjqf0/Ubxne5XuX/yD5U9h+yZ8heQzKZ
viypSf+ffk9S+cnxnKbBz/u79AdU/mPN9xstWSZ9jurbUvqr0qeqfCWdf3x8
t4dk19TuR8g+XJJK/5T+Iv0Rld+g8kdrtneRPCb9M5V3kv6U9JtU/qLsFrHs
RtlP11zeWfKM9Bdqbp8ukhejvbn0zWKbvcLcIb1bfMYl9EPpIyTfMg5U/37S
F0q/h+eXnMO9eXfpDSSTpN/KmJL+q87vr/MXyb5X9jLZfWXPl32X7CA5i7aW
NKG/6fdElQ+N9+ig9rlV+iTJxtJ/0vX9pH+hsrt1/mY6dqnsTdVWz8T2O1X2
aZJCei24PdEfqTx+e+naYyRfSf9Ivz1V3kvysfS/Vf/B8VtN1/nT9Lue7KaS
56Q3C36WXPU9XLm9+J5bSGbRfoXbk7a9hfcp3J6U3Sp7he55mvQrmANl/67y
A2Lb3ic7k4xjbElWkf6JfvuovLfkZ+rU+cP0O5T+LX0tnTNF+hmSuvTP9Htc
4j5FG/9Q+PpPpd+p8tMKrxXMOadKX67fY1U+RLJJ5v5Mfz+ENUl6e73vzdK7
qmyWrj9X1xyp4wMZl9Ib6dhF0kdKftW77azzrtP519NHpe8quVH6DZIDpbdV
fdcw3qS/qGs/Zg7mm0t+Kv29b6H/qfwVlZ+p3zeYCyRnZx7PjPe9Je/TNjr/
4Vj2ic7vot8nZD8Zn3n74Pt3kv6yyk+QPU/2WbI/lr277Dtl95f9Ev2j8HxB
3XfIPoTjsl9mTEo/QPI440tygfRuuv7uWPaGzt9Z9lTZ3WW/KntA5vn0fclA
6e0lZ0ofF9tgP9pB+sz4DL0lzzEWJX3i+bTXtZIO0vsHl/eS/prqPyD4+n1l
z5G9l36fZqzHZ+is8mmxrtkq30i/43l/SYvM7Uv7PcQzMfcEtzf6R/H77Ke2
OEHtMkjr3am0M/2JMSb9RB3fSeUd4zmjuI/K5jAnSu+p+mZE/QPV1zf429AW
b8n+unRf2lPyvvRjg+s/SeXvq7ytfsfIPkOybeb6qe8ByUj6iK7ppmuPkLwr
/Q1JD+mDJfOkjyq8NrKGjpR+Tubv/5nkXOlH6X4fSj9W+tu63we6Zh/GkORb
6X9KTpZ+mSShr2fuC/SJC6UP0/Xzo/6pyg8KLr9Y9tx4PuWfx2PHSO6Tfq/k
aOmTaAfpb0vOj+WvMPdKjuP7FH43fLpx0hurzktZc5ir9GwnZH7+jyQnMn55
Z5VdLPlDevfg+1HXO7p2/eC1lDG9gfQNJecl7rMtpbfMvJadFOfU9qrjfq39
r0n2KL0eMF/tL/lG+geF107m9I+lH8I30LkfyNfZUf3lPf3Olf2p5G3p9+PP
JZ4jn5S+pPBaf6Tk38LzP+vLvpIF+Ai65gNd+6HkdunnSCZLvxx/Ufruut8z
0qdKtpA+ScfOlX6OZKL0rwuvZawBvxVej5nfD0rsA7D+40+sn9ineUXXfKxr
P5K8JH2p5H3p7+GT5l5PW9I2iddc5td9EvsQ7xf2t//QuQt17k56/+/0+6Xs
LyTfSJ9a/Oee/bem3Fp4fmfuPTbO0cw3zCd3SQ6WPk3n6F/SXHKHlIfwdxOv
OS+wduh+s/k+qrud7ndn8V83TTaij0m/R7Iyc7vkQemPS9ZOPMe9JX1NXX+W
rj9d1zfneQvPrUdJgvrDliq/TeXPSraW3jS3r9tZsq70vXTseenTJNtK35Bv
kjpG2SB3vLC99D6S+azlOnaz9Jskt+T2t9tK70mbS99Gddwh/QXJ9qXH9x5q
l+56rgP1fD1lz1TZnZIdpbdnvVX5ZpLtpU/OPHYYQ5dnjo+6qmwX/BZdf4Lu
eZGuvVByrPRnJT9KX4b/ntsfaKdr20o+ZI0kBlPZJZKTpM8r7HsxBhYV9m8Y
C/hkX/JtdL9xOneozm1at79CX8Ynniu9i8qfiO++uco/Kew70+c/py+pfJbK
7yFeoC8V7qudGG+F13fGGn1uXs3r99nSJ0h+kd5W19xF35XsTDxY2NdjTf8R
XwT/U+dtgR8o/XM9x3yd+5lknvT7crc93/ReAlJ9k8P0s0LnP6iOtYnsi+m/
atunKvvn+Br4HPi8W6h8Mv2TdUzl62Ze61jz1pe+VebyKyStpTcM9vUq6Y/F
9ekY5kbJhtLLzP7WefGc5pl96VHxGTYixpO+Kuuyrm+UeS4ZKGkY/Q/WatZs
fIDVM/uyw+M1PA++4qnxmXPVN0B6Xfqjlf0Z1krWzJ2ktwv2b9BnqnwX2bcn
fobNpe8mmZ64jbYJfl70S5hvpTcJvh/v/nzl+Rb/9TLJZtJbqPzCxGt2a+lV
8Fik7Z7W+asHz8+c+2zl9qH98Jnz6O/clDgGWU/61pIpidfOF2K8RnyzQeIY
jfWV8qsk7eL9L5K+tvQndX6r4GdjTtox2L9grcAn3zOzv8Vawj13y9y/H1ff
eVdyGHhC8LdmDerE2q8+9UrqPv6E9Om55xbm8Dty+z+8O22Kj/MI+EPiGPHV
wu2PL4TP0is4HiLe2ThxjLST7vmg6npd0lt6m+B3w2fYQ3oR3D8a4ydW9r/w
//hm+FBDVP6x9BH4bbE/4XuMidfQf/jWfKM1Mvdvvs9gyTrRP3xH+ruSg6Tv
qfrukX6k9DdVXyc90yN6trck+5f2D/GH8FmJufGvnk/s4+ED7a3r75c+VPq7
0T/pq/c8Wm0xsO71H18Pnw8f5nidP1f6WPwCnf9w7rmAOfOh3PHMdirfXnJH
zfPll9IXMCYZ07p+K9Z61hTpi3TNd9K/B0+RPry0/bX0nXX/saWxBda2XWQf
J/sr2T/L7lz39fSFd+I1R5S2qWtXlY+X/bfsn2R3kr089/UL4jHWl+ek3y19
y7rxsJVqxi72rBsvAk+qJM/kXm95nr945tz1Uf+K+Ex54XfhHbLC6wFrF2vO
iawNqr+ouayb6j9H9r8q+411T/a+pfvvU7LbyD609Lf8THbHuv0FsCswrKnS
X8ztO73KmhbXG3wZfJpluedfsC8wui+k/yNZQnvyzNLPU/21mvWudeM3vH9d
son033M/H07FH7ntRbR1fGbq43ownn+ln1i6nHO71N0evC+YUiF9vdLrI22x
nsqP0e9Vsq+WHCd9VZWPjfq6Kr9RvzfKvgGhjVT+WNQ3i+XYzAk3ST9TMkH6
2ZJx+Cyl1zp8uQ3AA/X7cOoxco30TcGwot5S5XuWni/ulL2F7F1Kn38V59bt
Lz7N95E8F+cXfLmP4zX4i09HX7JVvB/1XxvraKDy06UfLn1NlR+i3ytkXxmP
Dcjta+ITDczdPrTHGMnR0kflros6T87tP+CrsCafJn0N1T8+ljVT/W1Kl+Nb
rF/39ZSfKRkpfavS/RNfZZ26/VOwYDDVV6UfkBtbBGM8P7f/i2+Fj7Uz1+j6
8+Ozrq3rW5V+/sNkN4nvx/ueJjlYekm8I30f6avT33P72vjc+0lfSeWnRn2N
uv05/Jknmc9if2fsMoZfzj3f4/t+GcfM7Zpjvld3/Y45jrmXNV5lFW0k/SbJ
Ynwdyc3MvcH2jdI/r1wOFvBGPDZVskT6t5LbpF+k839jPmReAw/T7x/4JpIX
pE9XeVPGh/SfVX6l7H9V9pnsn2R/qt+1Vb5O6mOfS1qmxni/wDcnZpL+EvfV
+afIXqjrr5b9mexF+q2pPI33uCZzLDw7njMu+P2nSV8AngKmJfsB2V/Lvl+/
K+nalVMfewIfnO9NbMfzye4ueyu1ZaX2/5k1SfZq8ZwbVN5Q+sPSF4GtyV6a
uG2/kn1dcP33yV4o+zzZv6j8Udqd9pW9Kt9T9jeyn8psN07dps9KgvSC+Zn1
OfP9GqWug/elPb6WXIsPFZyr+Eb6L6pvaeZcATmDZdKvDm6vJdJ/5f1yz6dv
Sj6hb5aeH/FNO8R4EiweDP996W/mnuuY096RflDptR99B50/uHT8ybnt666f
uXVJnLP7l56f6attVb53af/3fsYe81/p/ouvsk2MP16UPUN267rXV3xnfOhH
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
          "]], Polygon3DBox[CompressedData["
1:eJwt13ncjlUex/FbeJ67kKWylKWFRLaSFlpoQWjBUKiIbJHleYYUSUOkGlSW
bNFMxYQWGpFq6qVMQoxXlkYjiVFSZiqalJr373WdPz6v+/5+7+/vnHNd17nO
OfdZvYd2GnJCLpfbhdK4tSCXe9fn2JK53ENom8/lruQ9x+tA34AWvKGFudyX
JXK5T0rlcttxP6+j3Gq5q2Va4RK6n9y/5FbILEcX+k7s4C2iX0Brug/+yVtG
L8WNyfuEt5HejFH6mK3NQt5i7S/CuIKs31X67U7fjivlVqu9xIX1dVH98BG9
1mcdudX8N1BX7mq1i3id1HXG5VErV523SGYxavN6yP2d11/mLrTkdeOt5U2k
J6M3/abaWrxl6l5CHbkX9V3H93J+K4sn6GH4ynX8Viq78RPojnif9zpvFYrz
2b3aznuHXosRvC76eUvZEH0Ox7W8ztE3ry3dBlfRd6vdq/ZddW/i93Ln8Z7h
LaAXohV9h+yHaovVDcM1cj/wi4252NiKsIteg+a8QfRgbKd7qt2gdo66uSgu
yMayhtePHhhzQXvVeON4zWP+4EJ6sPr9xrLJOD7EvXL9ebt5e+gv8ADvHX2d
rXaFvl/DubwBcp/J7ZM5gLH57Ho/5x2iD8f9K8ye0Xtqe+jzFlwh9zS/gnaq
aLcq/sAr4h1SW5ouwOMxT9V+pHahumcxOs3nT+V2an8XRqtdzD+ddwJdEm/T
z+DkuA51X0TfcrvV9tDvvdofFfMgn9379fqYKTMLQ+i/oIbab+iD6Ca3hteI
d5Q+gu68P/NOTd6PeJl+HlV42+itMafl3tDvpfrtr88B2EJvQgdeD7o7psm9
kGp/UXccr8d7JddM7k6Z3lhP/xUXptrb8C59P46m+7IDA0NjRLrekdhD/ymN
eb321+HmfDavWsh1lrkZU3nz5MrKLZd5FY/TvbDRvZpHz8cIeg5OlFtKL8HD
Bdm7H9fbRlvXxrOMZ8Srmby2WEkX8MfzptNPYSY9Xf3xXHb/tmMhPQs5fXxO
78VzdAP1z/P6uda+OCPmI/9GXjP6YnxHV8VY5RfHeogG9I8YkHIXoXc+m2ub
5SbJTMD1vIa8GbwmdGM05/XlbUvvVl/8jj6A7tqrqq0q+DjWtDQnY8y70VVt
Zd7o1N4FOJfulN7V1vR1sf7R1VzLY2qv09a1KFGYrTlvpz2gfaw59E8YJNdC
pjn66KO67BRee7odTqRvSXtKrLEdo54+mz9Tro9ML/RTW5P3BK8jfTMq0t1l
16nto65XrGtpLQ5vGv0E+qf3rbzaVTFv8RRdH0/K1afr4TK1f9NmK8/8Qs/7
Aiyjq6RndJpMJTSTey3N8cYyDTCR9zzvDF4L+nIsp09RO0rtcf6xyMt95bd2
vC30ZtTn9ZTdEs/Dde3FPYXZmviQ3Fn6rIlL89m+cDDldmMMb4v2mqT2/oF9
9CY05H1Ib8Bu+iTt3cPbQ3+G73nleMN4/6b342feS/qon9a/yphPl5crljvE
/xol6SX8ur5XlKkQ7wf9eloP4h5cisnGt99nmzSW9ajH+5p3A287vQ3n805N
9yqex/moFescJvFy9G9yZenT0jw9kVcQe4XaY/od5fcHtDsGB+iS/HG8KfQf
MSP65fdL3lT8j97m87K0Jy/F23GvZCf6Psf32ZhFf+rzqnQ+WIWN9GH1A9Ma
MQO/0d9hcKqdi9JqzzLmR9WWNd4yqBjriNxoufGxx+Bbejx+9XyPeLY/YFza
e76J9Z4+iAd56+Xra+899e9jB7031rPkrcV5cpPUlojnqu4YHkpnswMlMu+X
aC/OUTFn0x66PNosne2/+9JYjsb5ih6e5l8Jv58Q854uci170vs2Fe30cRNv
OW80PQa3FWRngY3JG4XWcien+Rf3pTwuSuvQGF45+iQ0TXPjvlhm6V+Nrwnv
J/13S3PyGzTgVZIbwTtT7hycTn8be4Mx13EN56BnPttDq/MK6EK8F/tEnInU
/qCtH9EotTeSd4T+Lxrmsz20stpj2v8Zr6X1tBovF+thnKfoZ1Epzlcyb+HG
fOZVjDMIfRgvxrzAkVy2Nq2OM7TcBt4VcpW0dQpu423mtUzreDXcziuT3ul4
P0rGus37gNdcrqxMOfTgbeVdw6tJ18Id+WxvzPM+ULch1t589p4Xae5Uugou
5r3qGTd07e3incWUdGatHWctuh4eTmMZonYv/3McjTkZ58f0Xo7Fk/nsPg+S
+5S/C9/yS/DH+v6o749gepobw+W+5B/Acf7+OHeld2ZC7MtyXdPeUxR7fuxT
vFfkGsi1lrk+3n/e0rRexdreLPrhreA1ibN+nCGjTV6FtNZV1dYZsS/zXk5r
4pUyrfBYqm3M60R3wZtp/buI15PuhXWF2Xpaj9ecvgKP5rMzUlNe01i7MYm3
zmdd/b4VaxC2xvoRe4jvNXyvifHpP05BnPmNbS1uivec910uOw+tQAfegrTn
7aMP4NZ0fv4s/YdYGXODHonv0/+oDbiLHpTe/fX0OoxUW5c3jzeXnocWdEus
TN4cFMn1Tv/LltAvon3cYyzmFdHDcSZ9bmpvdKwtGKx2SFqbttFbcV+cadKZ
+lX6FXSmd7q2trx6dH3sp7/ALemdqYhN9O3p/DzU9Q/G1do7GH56F2rEOZ0e
j8O57Jy4LM4gct/z+so1lmmEO3m19T2bNzTGG+dY3n/keqexnBfnldgreO1T
bRMcoi9Xu4I3g54e90GuTmovvJloVpj9B1vAm0RPwNB07+fzHow9P84HvBrp
LBX3dAQGpfbm8IrpYbibNz+dlXe6rl3oks7PZXgf0zvinMg7PZ3r4sw6EAPS
e9Qwzb/qeI6em87UG9VtRqfY3/jTeT3UdY05xKvKe4TXPdaqOAfzzuHN4vWP
DPqnfh/ntaFboxR9GV7hTaWnxLWk2pnJmxbPJJ0d3/Hc7jeOB+K/bbovU+Vu
kOmAMoXZWCbzWtEtY99TV4v3JK8z3SnW2cLMizPm2NgrMSRd21O8ifRk1KPL
8ie7LwvdkwV4mv4/2a0fNg==
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0u1K02Ecx+Ff0+VT+ZDPJrNSz8BAQT0EBQPFt74qqKankFA0rdTyWcs5
FaNIREspwlMoUOgYCsroBLr+CPt4fUG33ffczbHs0MNLEZHXfeOx+oojNjjC
zzxVwf7NryxNRdxSWTqil+0c5riydo5bKiS/K43YZD55jr3BG3zD12qz15nh
GlfVaq+whctcUrO9yAU12vNs4Cu+VJ09x1rOckY19gtW8zmfqdKe5pQm9NR5
R9inYbudnSzjH/c9d98znvAL88rZTzjKB7yjDruHbfpbFJFOnsNfPtfvmrKP
OMp1TqrTvsd/3muQt3ViX2fyPzGj4Cz+LLx8bNsesePHZZZo13aleJucmeV6
Z1fwPa/wqj7YlazSnl3Nfdbwmg7sWh6yjvX6aDfwiI1s0rHdzBZ16YdDDvCu
Ohz0Efu5xk/K2d+4xZ/JPZLP1M6w3KW6OaTt1MX37z9slkTn
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1443, 1442, 1465, 2084, 2201, 1491, 1492, 1517, 2217, 1518, 
       1545, 2094, 2224, 1563, 1564, 1590, 2245, 1591, 1617, 2110, 2252, 1635,
        1636, 1663, 2274, 1664, 1689, 2127, 2281, 1707, 1708, 1736, 2139, 
       2303, 1761, 1762, 1787, 2317, 1788, 1816, 2149, 2325, 1834, 1835, 1861,
        2346, 1862, 1889, 2165, 2354, 1908, 1909, 1936, 2376, 1937, 1962, 
       2181, 2383, 1981, 1982, 2010, 2405, 2011, 2036, 2037, 2062}], 
      Line3DBox[{1445, 1444, 1467, 2202, 1470, 1493, 1496, 1520, 2218, 1523, 
       1546, 2227, 1548, 1565, 1568, 1593, 2246, 1596, 1618, 2255, 1620, 1637,
        1640, 1666, 2275, 1669, 1690, 2129, 2283, 1709, 1712, 1738, 2304, 
       1741, 1763, 1766, 1790, 2318, 1793, 1817, 2328, 1819, 1836, 1839, 1864,
        2347, 1867, 1890, 2357, 1892, 1910, 1913, 1939, 2377, 1942, 1963, 
       2386, 1965, 1983, 1986, 2013, 2406, 2016, 2038, 2041, 2064}], 
      Line3DBox[{1446, 1447, 1468, 2085, 2203, 1494, 1499, 1521, 2219, 1526, 
       1547, 2097, 2228, 1566, 1571, 1594, 2247, 1599, 1619, 2113, 2256, 1638,
        1643, 1667, 2123, 2276, 1691, 2130, 2284, 1710, 1715, 1739, 2140, 
       2305, 1764, 1769, 1791, 2319, 1796, 1818, 2152, 2329, 1837, 1842, 1865,
        2348, 1870, 1891, 2168, 2358, 1911, 1916, 1940, 1298, 1964, 2184, 
       2387, 1984, 1989, 2014, 2193, 2407, 2039, 2044, 2065}], 
      Line3DBox[{1448, 1450, 1471, 2204, 1477, 1497, 1503, 1524, 2220, 1531, 
       1549, 2231, 1553, 1569, 1575, 1597, 2248, 1604, 1621, 2116, 2259, 1641,
        1647, 1670, 2277, 1676, 1692, 2132, 2286, 1713, 1720, 1742, 2306, 
       1748, 1767, 1773, 1794, 2320, 1801, 1820, 2332, 1824, 1840, 1846, 1868,
        2349, 1875, 1893, 2361, 1897, 1914, 1920, 1943, 2378, 1949, 1966, 
       2186, 2389, 1987, 1994, 2017, 2408, 2023, 2042, 2048, 2067}], 
      Line3DBox[{1449, 1453, 1472, 2086, 2205, 1498, 1505, 1525, 2221, 1533, 
       1550, 2100, 2232, 1570, 1577, 1598, 2107, 2249, 1622, 2117, 2260, 1642,
        1649, 1671, 2124, 2278, 1693, 2133, 2288, 1714, 1722, 1743, 2141, 
       2307, 1768, 1775, 1795, 2321, 1803, 1821, 2155, 2333, 1841, 1848, 1869,
        2350, 1877, 1894, 2171, 2362, 1915, 1922, 1944, 2178, 2379, 1967, 
       2187, 2391, 1988, 1996, 2018, 2194, 2409, 2043, 2050, 2068}], 
      Line3DBox[{1451, 1456, 1474, 2206, 1484, 1500, 1510, 1528, 2222, 1539, 
       1551, 2102, 2234, 1572, 1582, 1601, 2250, 1611, 1623, 2119, 2262, 1644,
        1655, 1673, 2279, 1683, 1694, 2135, 2290, 1717, 1728, 1745, 2308, 
       1755, 1770, 1780, 1798, 2322, 1809, 1822, 1149, 1843, 1853, 1872, 2351,
        1883, 1895, 2173, 2364, 1917, 1928, 1946, 2380, 1956, 1968, 2189, 
       2393, 1991, 2002, 2020, 2410, 2030, 2045, 2055, 2070}], 
      Line3DBox[{1452, 1458, 1475, 2087, 2207, 1501, 1512, 1529, 2092, 2223, 
       1552, 2103, 2235, 1573, 1584, 1602, 2108, 2251, 1624, 2120, 2264, 1645,
        1657, 1674, 2125, 2280, 1695, 2136, 2292, 1718, 1730, 1746, 2142, 
       2309, 1771, 1782, 1799, 2323, 1811, 1823, 2158, 2336, 1844, 1855, 1873,
        2163, 2352, 1896, 2174, 2366, 1918, 1930, 1947, 2179, 2381, 1969, 
       2190, 2395, 1992, 2004, 2021, 2195, 2411, 2046, 2057, 2071}], 
      Line3DBox[{1454, 1462, 1478, 1490, 2208, 1504, 1516, 1532, 2216, 2093, 
       1554, 1562, 2237, 1576, 1589, 1605, 2244, 2109, 1625, 1634, 2266, 1648,
        1662, 1677, 2273, 2126, 1697, 1706, 2294, 1721, 1735, 1749, 2302, 
       2143, 1774, 1786, 1802, 2324, 2148, 1825, 1833, 2338, 1847, 1860, 1876,
        2353, 2164, 1898, 1907, 2368, 1921, 1935, 1950, 2382, 2180, 1971, 
       1980, 2397, 1995, 2009, 2024, 2412, 2196, 2049, 2061, 2073}], 
      Line3DBox[{1455, 1466, 1479, 2209, 2088, 1506, 1519, 1534, 2225, 2095, 
       1555, 2238, 2105, 1578, 1592, 1606, 2253, 2111, 1626, 2267, 2122, 1650,
        1665, 1678, 2282, 2128, 1698, 2295, 2138, 1723, 1737, 1750, 2310, 
       2144, 1776, 1789, 1804, 2326, 2150, 1826, 2339, 2160, 1849, 1863, 1878,
        2355, 2166, 1899, 2369, 2176, 1923, 1938, 1951, 2384, 2182, 1972, 
       2398, 2192, 1997, 2012, 2025, 2413, 2197, 2051, 2063, 2074}], 
      Line3DBox[{1457, 1469, 1481, 1495, 2210, 1507, 1522, 1536, 2226, 2096, 
       1556, 1567, 2239, 1579, 1595, 1608, 2254, 2112, 1627, 1639, 2268, 1652,
        1668, 1680, 970, 1699, 1711, 2296, 1725, 1740, 1752, 1765, 2311, 1777,
        1792, 1806, 2327, 2151, 1827, 1838, 2340, 1850, 1866, 1880, 2356, 
       2167, 1900, 1912, 2370, 1925, 1941, 1953, 2385, 2183, 1973, 1985, 2399,
        1999, 2015, 2027, 2040, 2414, 2052, 2066, 2076}], 
      Line3DBox[{1459, 1473, 1483, 2211, 2089, 1509, 1527, 1538, 2229, 2098, 
       1557, 2240, 2106, 1581, 1600, 1610, 2257, 2114, 1629, 917, 1654, 1672, 
       1682, 2285, 2131, 1701, 1716, 2297, 1727, 1744, 1754, 2312, 2145, 1779,
        1797, 1808, 2330, 2153, 1828, 2341, 2161, 1852, 1871, 1882, 2359, 
       2169, 1902, 2371, 2177, 1927, 1945, 1955, 2388, 2185, 1975, 1990, 2400,
        2001, 2019, 2029, 2415, 2198, 2054, 2069, 2078}], 
      Line3DBox[{1460, 1476, 1485, 1502, 2212, 1511, 1530, 1540, 2230, 2099, 
       1558, 1574, 2241, 1583, 1603, 1612, 2258, 2115, 1630, 1646, 2269, 1656,
        1675, 1684, 1696, 2287, 1702, 1719, 2298, 1729, 1747, 1756, 1772, 
       2313, 1781, 1800, 1810, 2331, 2154, 1829, 1845, 2342, 1854, 1874, 1884,
        2360, 2170, 1903, 1919, 2372, 1929, 1948, 1957, 1970, 2390, 1976, 
       1993, 2401, 2003, 2022, 2031, 2047, 2416, 2056, 2072, 2079}], 
      Line3DBox[{1461, 1480, 1486, 2213, 2090, 1513, 1535, 1541, 2233, 2101, 
       1559, 821, 1585, 1607, 1613, 2261, 2118, 1631, 1651, 2270, 1658, 1679, 
       1685, 2289, 2134, 1703, 1724, 2299, 1731, 1751, 1757, 2314, 2146, 1783,
        1805, 1812, 2334, 2156, 1830, 2343, 2162, 1856, 1879, 1885, 2363, 
       2172, 1904, 1924, 2373, 1931, 1952, 1958, 2392, 2188, 1977, 1998, 2402,
        2005, 2026, 2032, 2417, 2199, 2058, 2075, 2080}], 
      Line3DBox[{1463, 1482, 1488, 1508, 2214, 1514, 1537, 1543, 790, 1560, 
       1580, 2242, 1587, 1609, 1615, 1628, 2263, 1632, 1653, 2271, 1660, 1681,
        1687, 1700, 2291, 1704, 1726, 2300, 1733, 1753, 1759, 1778, 2315, 
       1784, 1807, 1814, 2335, 2157, 1831, 1851, 2344, 1858, 1881, 1887, 1901,
        2365, 1905, 1926, 2374, 1933, 1954, 1960, 1974, 2394, 1978, 2000, 
       2403, 2007, 2028, 2034, 2053, 2418, 2059, 2077, 2082}], 
      Line3DBox[{1464, 1487, 1489, 2215, 2091, 1515, 1542, 1544, 2236, 2104, 
       1561, 1586, 2243, 1588, 1614, 1616, 2265, 2121, 1633, 1659, 2272, 1661,
        1686, 1688, 2293, 2137, 1705, 1732, 2301, 1734, 1758, 1760, 2316, 
       2147, 1785, 1813, 1815, 2337, 2159, 1832, 1857, 2345, 1859, 1886, 1888,
        2367, 2175, 1906, 1932, 2375, 1934, 1959, 1961, 2396, 2191, 1979, 
       2006, 2404, 2008, 2033, 2035, 2419, 2200, 2060, 2081, 2083}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{677, 1084, 1083, 1082, 2316, 1081, 1080, 1079, 2315, 1078, 
       1077, 1076, 2314, 1075, 1074, 1073, 2313, 1072, 1071, 1070, 2312, 1069,
        1068, 1067, 2311, 1066, 1065, 1064, 2310, 1063, 1062, 1061, 1059, 
       2302, 1058, 1057, 1056, 2309, 1055, 1054, 1053, 2308, 1052, 1051, 1050,
        2307, 1049, 1048, 1047, 2306, 1046, 1045, 1044, 2305, 1043, 1042, 
       1041, 2304, 1040, 1039, 1038, 2303, 1037, 1036, 1035, 1060}], 
      Line3DBox[{703, 678, 679, 680, 2201, 681, 682, 683, 2202, 684, 685, 686,
        2203, 687, 688, 689, 2204, 690, 691, 692, 2205, 693, 694, 695, 2206, 
       696, 697, 698, 2207, 699, 700, 701, 702, 2208, 704, 705, 706, 2209, 
       707, 708, 709, 2210, 710, 711, 712, 2211, 713, 714, 715, 2212, 716, 
       717, 718, 2213, 719, 720, 721, 2214, 722, 723, 724, 2215, 725, 726, 
       727, 728}], 
      Line3DBox[{755, 729, 730, 2217, 731, 732, 733, 734, 2218, 735, 736, 
       2219, 737, 738, 739, 740, 2220, 741, 742, 2221, 743, 744, 745, 746, 
       2222, 747, 748, 749, 2223, 750, 751, 752, 2216, 753, 757, 758, 761, 
       2225, 762, 765, 2226, 766, 769, 770, 773, 2229, 774, 777, 2230, 778, 
       781, 782, 785, 2233, 786, 789, 790, 793, 794, 797, 2236, 798, 801, 802,
        804}], Line3DBox[{805, 754, 756, 759, 2224, 760, 763, 764, 2227, 767, 
       768, 771, 2228, 772, 775, 776, 2231, 779, 780, 783, 2232, 784, 787, 
       788, 791, 2234, 792, 795, 2235, 796, 799, 800, 803, 2237, 806, 807, 
       808, 2238, 809, 810, 811, 2239, 812, 813, 814, 2240, 815, 816, 817, 
       2241, 818, 819, 820, 821, 822, 823, 2242, 824, 825, 826, 827, 2243, 
       828, 829, 830}], 
      Line3DBox[{857, 831, 832, 2245, 833, 834, 835, 836, 2246, 837, 838, 
       2247, 839, 840, 841, 842, 2248, 843, 844, 845, 2249, 846, 847, 848, 
       2250, 849, 850, 851, 2251, 852, 853, 854, 2244, 855, 859, 860, 863, 
       2253, 864, 867, 2254, 868, 871, 872, 875, 2257, 876, 879, 2258, 880, 
       883, 884, 887, 2261, 888, 891, 892, 2263, 895, 896, 899, 2265, 900, 
       903, 904, 906}], 
      Line3DBox[{907, 856, 858, 861, 2252, 862, 865, 866, 2255, 869, 870, 873,
        2256, 874, 877, 878, 881, 2259, 882, 885, 2260, 886, 889, 890, 893, 
       2262, 894, 897, 2264, 898, 901, 902, 905, 2266, 908, 909, 910, 2267, 
       911, 912, 913, 2268, 914, 915, 916, 917, 918, 919, 2269, 920, 921, 922,
        923, 2270, 924, 925, 2271, 926, 927, 928, 929, 2272, 930, 931, 932}], 
      Line3DBox[{959, 933, 934, 2274, 935, 936, 937, 938, 2275, 939, 940, 941,
        2276, 942, 943, 944, 2277, 945, 946, 947, 2278, 948, 949, 950, 2279, 
       951, 952, 953, 2280, 954, 955, 956, 2273, 957, 961, 962, 965, 2282, 
       966, 969, 970, 973, 974, 977, 2285, 978, 981, 982, 2287, 985, 986, 989,
        2289, 990, 993, 994, 2291, 997, 998, 1001, 2293, 1002, 1005, 1006, 
       1008}], Line3DBox[{1009, 958, 960, 963, 2281, 964, 967, 968, 971, 2283,
        972, 975, 2284, 976, 979, 980, 983, 2286, 984, 987, 2288, 988, 991, 
       992, 995, 2290, 996, 999, 2292, 1000, 1003, 1004, 1007, 2294, 1010, 
       1011, 1012, 2295, 1013, 1014, 1015, 2296, 1016, 1017, 1018, 1019, 2297,
        1020, 1021, 2298, 1022, 1023, 1024, 1025, 2299, 1026, 1027, 2300, 
       1028, 1029, 1030, 1031, 2301, 1032, 1033, 1034}], 
      Line3DBox[{1085, 1160, 1159, 1156, 2337, 1155, 1152, 1151, 1148, 2335, 
       1147, 1144, 2334, 1143, 1140, 1139, 1136, 2331, 1135, 1132, 2330, 1131,
        1128, 1127, 1124, 2327, 1123, 1120, 2326, 1119, 1116, 1115, 1110, 
       2324, 1109, 1108, 1107, 1106, 2323, 1105, 1104, 2322, 1103, 1102, 1101,
        1100, 2321, 1099, 1098, 2320, 1097, 1096, 1095, 1094, 2319, 1093, 
       1092, 2318, 1091, 1090, 1089, 1088, 2317, 1087, 1086, 1113}], 
      Line3DBox[{1111, 1186, 1185, 2345, 1184, 1183, 1182, 1181, 2344, 1180, 
       1179, 1178, 2343, 1177, 1176, 1175, 2342, 1174, 1173, 1172, 2341, 1171,
        1170, 1169, 2340, 1168, 1167, 1166, 2339, 1165, 1164, 1163, 2338, 
       1161, 1158, 1157, 1154, 2336, 1153, 1150, 1149, 1146, 1145, 1142, 2333,
        1141, 1138, 1137, 2332, 1134, 1133, 1130, 2329, 1129, 1126, 1125, 
       2328, 1122, 1121, 1118, 2325, 1117, 1114, 1112, 1162}], 
      Line3DBox[{1187, 1262, 1261, 1258, 2367, 1257, 1254, 1253, 2365, 1250, 
       1249, 1246, 2363, 1245, 1242, 1241, 1238, 2360, 1237, 1234, 2359, 1233,
        1230, 1229, 1226, 2356, 1225, 1222, 2355, 1221, 1218, 1217, 1212, 
       2353, 1211, 1210, 1209, 2352, 1208, 1207, 1206, 2351, 1205, 1204, 1203,
        1202, 2350, 1201, 1200, 2349, 1199, 1198, 1197, 1196, 2348, 1195, 
       1194, 2347, 1193, 1192, 1191, 1190, 2346, 1189, 1188, 1215}], 
      Line3DBox[{1213, 1288, 1287, 2375, 1286, 1285, 1284, 1283, 2374, 1282, 
       1281, 2373, 1280, 1279, 1278, 1277, 2372, 1276, 1275, 1274, 2371, 1273,
        1272, 1271, 2370, 1270, 1269, 1268, 2369, 1267, 1266, 1265, 2368, 
       1263, 1260, 1259, 1256, 2366, 1255, 1252, 2364, 1251, 1248, 1247, 1244,
        2362, 1243, 1240, 1239, 2361, 1236, 1235, 1232, 2358, 1231, 1228, 
       1227, 2357, 1224, 1223, 1220, 2354, 1219, 1216, 1214, 1264}], 
      Line3DBox[{1289, 1364, 1363, 1360, 2396, 1359, 1356, 1355, 2394, 1352, 
       1351, 1348, 2392, 1347, 1344, 1343, 2390, 1340, 1339, 1336, 2388, 1335,
        1332, 1331, 1328, 2385, 1327, 1324, 2384, 1323, 1320, 1319, 1314, 
       2382, 1313, 1312, 1311, 2381, 1310, 1309, 1308, 2380, 1307, 1306, 1305,
        2379, 1304, 1303, 1302, 2378, 1301, 1300, 1299, 1298, 1297, 1296, 
       2377, 1295, 1294, 1293, 1292, 2376, 1291, 1290, 1317}], 
      Line3DBox[{1315, 1390, 1389, 2404, 1388, 1387, 1386, 1385, 2403, 1384, 
       1383, 2402, 1382, 1381, 1380, 1379, 2401, 1378, 1377, 2400, 1376, 1375,
        1374, 1373, 2399, 1372, 1371, 1370, 2398, 1369, 1368, 1367, 2397, 
       1365, 1362, 1361, 1358, 2395, 1357, 1354, 2393, 1353, 1350, 1349, 1346,
        2391, 1345, 1342, 2389, 1341, 1338, 1337, 1334, 2387, 1333, 1330, 
       1329, 2386, 1326, 1325, 1322, 2383, 1321, 1318, 1316, 1366}], 
      Line3DBox[{1391, 1441, 1440, 1439, 2419, 1438, 1437, 1436, 2418, 1435, 
       1434, 1433, 2417, 1432, 1431, 1430, 2416, 1429, 1428, 1427, 2415, 1426,
        1425, 1424, 2414, 1423, 1422, 1421, 2413, 1420, 1419, 1418, 1416, 
       2412, 1415, 1414, 1413, 2411, 1412, 1411, 1410, 2410, 1409, 1408, 1407,
        2409, 1406, 1405, 1404, 2408, 1403, 1402, 1401, 2407, 1400, 1399, 
       1398, 2406, 1397, 1396, 1395, 1394, 2405, 1393, 1392, 1417}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
43xvkZLIK+yDbJBhLH2BRF+OK9M+yzJEv44H6Fsbrxf6Qr3aEHCf9lO+ErCA
7wfoJRmKWzVcSNQZYE77Gos/+yGVBPrarulli/cSSGZlN+1fbGFfkMOA/pRy
7bn4FfJw1seb9in+b32rr+PNebbALda0//KHeZKpV077/Ero3ERhwEMlBI+c
hvwsXDRM+/ZuOXtwfQ5wdpEoq/MWgS7GSdG+vRLVQcZ1wBX4r6a+CCOQVZgl
7Vc71/i33AhwyV0rJfghP8NHz9E+uVGuz0pEhDiUWV7jy8ptMD8PvaZ9b/9b
n5ug31W7DvpTrjaTP0n6TMRzd4LuT4VsDnCbA58T4NXmKMlERR6LaP/Zq8GH
fgUAv1UTwV08TiKuXknaT/btZcmwDOBl4W13OXUkOmWqRvvDGnyKqqgGrulx
mPfjTRKtjbGmfV3Zj4OfDAE3dxCUzA2EvD15hvZp7XumenApjDOhMePuELxf
j3em076r0+Mzjw8Dn1puYvwT5r2G/Anaz9TSpMM7CrhoaKX3Nci3SWVZ2rdU
WEG36y5waqVf9jPIK+/Ag7TfqGLN84UtwCe1yNU4f5ZvSqL9Q4+J7e78CzzE
8uIaC8gTvwMNtO9nRez7k+Kf2ZTv3EjBcugrHy5eTPt+rhv4WroLuK6V9/f0
tQQ6PGlM/y5x6JXfRC/0vwWz5QV+KkykUqdE+2leW3mtWyiHTQmfEthyQoCJ
xoWNaR/Mb1JvAlWB8989kj/QSSJVk+O0f6UUn+srO+AnDP+RvSUkCrY4T/tU
vu/VfBoJPOlRSK59PIlechXR/pJ8cg72+cDzT7fG7Xcl0fGE9v/pCznDv/HF
X+BFlgdKCqH+bPNVp30e+eYfMtgDfbTa7p7SUGkm2nWxmPZJzFYvDF6ZC31f
/knNxVCXvi32pH0S2dd3/NICfqsjVOc75PPxezm0/2CKxmyvB8SxLH9Xlv4X
nhenjfYx/GdqqXAZ+F+RQbk9DSQ6pD1L+wOu+5hNukKc+PW8f9fj+kGom/YT
zI0t/xUL/NMD0bBuyP/D36Vpf8BRufyNCOLodoz+O5ZNogVZa2kfwKvPZlu6
gSt9ep0oGEwimR4L2qePXZ8XVAhxjA8/5heE92WIOkL79MUmP616D1xmT+2e
G/C+2Ly5TfvfmXcsV9viC+M/oV5TJk+iOyue0D50viqplVOg/zrKysgUJlDu
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
JJLoc7z/D2BZ1Zk=
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0.5, 3.}, {0.5, 3.}, {0.006456520030646816, 
   0.03701929690260516}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6872016940162373`*^9, 3.687201713658778*^9}, 
   3.687201802658058*^9, 3.6872019753248577`*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Value Optimal Onsager Coefficients", "Subsection",
 CellChangeTimes->{{3.687202030791307*^9, 3.687202041681469*^9}, 
   3.687203203477669*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"OptimalCoeffsKn0p1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"onsagercoeff", "[", "ii", "]"}], "\[LeftDoubleBracket]", 
      RowBox[{
       RowBox[{"resultPBCOptKn0p1", "[", "ii", "]"}], "\[LeftDoubleBracket]", 
       "1", "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"OptimalCoeffsKn1p0", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"onsagercoeff", "[", "ii", "]"}], "\[LeftDoubleBracket]", 
      RowBox[{
       RowBox[{"resultPBCOptKn1p0", "[", "ii", "]"}], "\[LeftDoubleBracket]", 
       "1", "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"OptimalCoeffsKn10p0", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"onsagercoeff", "[", "ii", "]"}], "\[LeftDoubleBracket]", 
      RowBox[{
       RowBox[{"resultPBCOptKn10p0", "[", "ii", "]"}], "\[LeftDoubleBracket]",
        "1", "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.687202098064289*^9, 3.6872021110802107`*^9}, {
  3.687203205264879*^9, 3.68720328066171*^9}, {3.6872036177124767`*^9, 
  3.6872036355976343`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"OptimalCoeffsKn0p1", ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", "\"\<optimal onsager coefficients\>\"", "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6872036392306633`*^9, 3.687203797979904*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], PointBox[{{0.9, 0.5}, {0.9, 0.5}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], PointBox[{{1., 0.5}, {1., 0.5}}]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 1.7000000000000002`}, {1., 1.7000000000000002`}}]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], PointBox[{{1., 0.5}, {1., 0.5}}]}, 
    {RGBColor[0.528488, 0.470624, 0.701351], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], PointBox[{{1., 1.4}, {1., 1.4}}]}, 
    {RGBColor[0.772079, 0.431554, 0.102387], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], PointBox[{{1., 0.5}, {1., 0.5}}]}, 
    {RGBColor[0.363898, 0.618501, 0.782349], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], PointBox[{{1., 1.}, {1., 1.}}]}, 
    {RGBColor[1, 0.75, 0], PointSize[0.019444444444444445`], 
     AbsoluteThickness[1.6], PointBox[{{1., 0.5}, {1., 0.5}}]}, 
    {RGBColor[0.647624, 0.37816, 0.614037], PointSize[0.019444444444444445`], 
     AbsoluteThickness[1.6], PointBox[{{1., 1.}, {1., 1.}}]}, 
    {RGBColor[0.571589, 0.586483, 0.], PointSize[0.019444444444444445`], 
     AbsoluteThickness[1.6], PointBox[{{1., 0.5}, {1., 0.5}}]}, 
    {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.019444444444444445`], 
     AbsoluteThickness[1.6], PointBox[{{1., 0.9}, {1., 0.9}}]}, 
    {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
     0.019444444444444445`], AbsoluteThickness[1.6], 
     PointBox[{{1., 0.5}, {1., 0.5}}]}, 
    {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
     PointSize[0.019444444444444445`], AbsoluteThickness[1.6], 
     PointBox[{{1., 0.9}, {1., 0.9}}]}, 
    {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
     0.019444444444444445`], AbsoluteThickness[1.6], 
     PointBox[{{1., 0.5}, {1., 0.5}}]}, 
    {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], PointSize[
     0.019444444444444445`], AbsoluteThickness[1.6], 
     PointBox[{{1., 0.8}, {1., 0.8}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.8984375, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {
     FormBox["\"optimal onsager coefficients\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0.9, 1.}, {0, 1.7000000000000002`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6872036421028137`*^9, 3.687203658186387*^9}, {
  3.687203701651511*^9, 3.687203781819455*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"OptimalCoeffsKn1p0", ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", "\"\<optimal onsager coefficients\>\"", "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.68720380171662*^9, 3.68720380267207*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], PointBox[{{1.6, 2.5}, {1.6, 2.5}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     PointBox[{{1.8, 2.8000000000000003`}, {1.8, 2.8000000000000003`}}]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], PointBox[{{1.3, 1.1}, {1.3, 1.1}}]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     PointBox[{{1.7000000000000002`, 2.8000000000000003`}, {
      1.7000000000000002`, 2.8000000000000003`}}]}, 
    {RGBColor[0.528488, 0.470624, 0.701351], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     PointBox[{{1.2000000000000002`, 1.4}, {1.2000000000000002`, 1.4}}]}, 
    {RGBColor[0.772079, 0.431554, 0.102387], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], PointBox[{{1.6, 2.1}, {1.6, 2.1}}]}, 
    {RGBColor[0.363898, 0.618501, 0.782349], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], PointBox[{{1.1, 1.}, {1.1, 1.}}]}, 
    {RGBColor[1, 0.75, 0], PointSize[0.019444444444444445`], 
     AbsoluteThickness[1.6], PointBox[{{1.5, 1.1}, {1.5, 1.1}}]}, 
    {RGBColor[0.647624, 0.37816, 0.614037], PointSize[0.019444444444444445`], 
     AbsoluteThickness[1.6], PointBox[{{1.1, 2.}, {1.1, 2.}}]}, 
    {RGBColor[0.571589, 0.586483, 0.], PointSize[0.019444444444444445`], 
     AbsoluteThickness[1.6], 
     PointBox[{{1.5, 2.4000000000000004`}, {1.5, 2.4000000000000004`}}]}, 
    {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.019444444444444445`], 
     AbsoluteThickness[1.6], PointBox[{{1., 0.7}, {1., 0.7}}]}, 
    {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
     0.019444444444444445`], AbsoluteThickness[1.6], 
     PointBox[{{1.4, 1.}, {1.4, 1.}}]}, 
    {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
     PointSize[0.019444444444444445`], AbsoluteThickness[1.6], 
     PointBox[{{1., 1.1}, {1., 1.1}}]}, 
    {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
     0.019444444444444445`], AbsoluteThickness[1.6], 
     PointBox[{{1.4, 1.7000000000000002`}, {1.4, 1.7000000000000002`}}]}, 
    {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], PointSize[
     0.019444444444444445`], AbsoluteThickness[1.6], 
     PointBox[{{1., 1.5}, {1., 1.5}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.9875, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {
     FormBox["\"optimal onsager coefficients\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{1., 1.8}, {0, 2.8000000000000003`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6872038031825933`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"OptimalCoeffsKn10p0", ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", "\"\<optimal onsager coefficients\>\"", "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{3.6872038180209637`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     PointBox[{{0.5, 1.}, {0.5, 1.1}, {0.5, 1.2000000000000002`}, {0.5, 
      1.3}, {0.5, 1.4}, {0.5, 1.5}, {0.5, 1.6}, {0.5, 1.7000000000000002`}, {
      0.5, 1.8}, {0.5, 1.9000000000000001`}, {0.5, 2.}, {0.5, 2.1}, {0.5, 
      2.2}, {0.5, 2.3}, {0.5, 2.4000000000000004`}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {
     FormBox["\"optimal onsager coefficients\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 1.}, {0, 2.4000000000000004`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.687203818495118*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Write Optimal error and Onsager Coefficients", "Subsection",
 CellChangeTimes->{{3.687233644238244*^9, 3.6872336513342752`*^9}}],

Cell[CellGroupData[{

Cell["Kn = 0.1", "Subsubsection",
 CellChangeTimes->{{3.6872356804939632`*^9, 3.687235681898059*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"WriteError", "[", 
     RowBox[{
      RowBox[{"resultPBCOptKn0p1", "[", "ii", "]"}], ",", 
      "\"\<Kn0p1/OptimalError\>\"", ",", "ii"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6872356848328037`*^9, 3.687235728565331*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Kn = 1.0", "Subsubsection",
 CellChangeTimes->{{3.6872356804939632`*^9, 3.687235681898059*^9}, {
  3.68723578616164*^9, 3.687235786502853*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"WriteError", "[", 
     RowBox[{
      RowBox[{"resultPBCOptKn1p0", "[", "ii", "]"}], ",", 
      "\"\<Kn1p0/OptimalError\>\"", ",", "ii"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6872356848328037`*^9, 3.687235728565331*^9}, {
  3.687235791244443*^9, 3.687235796760685*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Kn = 10.0", "Subsubsection",
 CellChangeTimes->{{3.6872356804939632`*^9, 3.687235681898059*^9}, {
  3.687235801889967*^9, 3.687235802405056*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"WriteError", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"resultPBCOptKn10p0", "[", "ii", "]"}], "[", "x", "]"}], ",", 
      "\"\<Kn10p0/OptimalError\>\"", ",", "ii"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"ii", ",", "min", ",", "max"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6872356848328037`*^9, 3.687235728565331*^9}, {
  3.687235806606484*^9, 3.687235825273821*^9}}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Results Accelerated ", "Section",
 CellChangeTimes->{{3.6926884998174057`*^9, 3.692688505722784*^9}}],

Cell[CellGroupData[{

Cell["Kn = 0.1", "Subsection",
 CellChangeTimes->{{3.692688532114464*^9, 3.6926885338107862`*^9}}],

Cell[CellGroupData[{

Cell["averaged", "Subsubsection",
 CellChangeTimes->{{3.692689160062601*^9, 3.692689162005055*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"AvgKn0p1", " ", "=", " ", 
   RowBox[{"ReturnErrorAvg", "[", 
    RowBox[{"min", ",", "max", ",", "0.1", ",", "HighOrderKn0p1"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.692689164611726*^9, 3.692689221851926*^9}, {
   3.692689455432517*^9, 3.692689456587628*^9}, 3.692689593065605*^9, {
   3.692689710014531*^9, 3.692689710972045*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"Obtained solution\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 1]]], "Print",
 CellChangeTimes->{{3.6926892175170794`*^9, 3.69268922278681*^9}, 
   3.692689289345624*^9, 3.692689356250404*^9, 3.692689421948763*^9, {
   3.692689457546941*^9, 3.692689478765499*^9}, 3.692689594688339*^9}],

Cell[BoxData[
 StyleBox["\<\"Computing error for Kn = 0.1\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{{3.6926892175170794`*^9, 3.69268922278681*^9}, 
   3.692689289345624*^9, 3.692689356250404*^9, 3.692689421948763*^9, {
   3.692689457546941*^9, 3.692689478765499*^9}, 3.6926895946976833`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.006666020226044337`", ",", "0.0044055244116450775`", ",", 
   "0.0035437689644558755`", ",", "0.0034815990865687597`", ",", 
   "0.002811685265820851`", ",", "0.0028490253652078534`", ",", 
   "0.0023994161453870016`", ",", "0.002402704239845608`", ",", 
   "0.0020878972846238002`", ",", "0.0020749084494882898`", ",", 
   "0.001845620026497255`", ",", "0.0018253999800528667`", ",", 
   "0.0016526418323820344`", ",", "0.001629748779372729`", ",", 
   "0.0014958125596332833`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.692689289352137*^9, 3.692689356270422*^9, 3.6926894220158663`*^9, {
   3.692689457681974*^9, 3.692689478816354*^9}, 3.692689594786426*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["accelerated ", "Subsubsection",
 CellChangeTimes->{{3.692689737722876*^9, 3.6926897399828167`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AccKn0p1", " ", "=", "  ", 
  RowBox[{"ReturnErrorAcc", "[", 
   RowBox[{"min", ",", "max", ",", "0.1", ",", "HighOrderKn0p1"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.692689741816469*^9, 3.692689744878067*^9}, {
  3.6926898626591*^9, 3.6926898701463737`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"Obtained solution\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 1]]], "Print",
 CellChangeTimes->{{3.692689867007627*^9, 3.692689871054682*^9}}],

Cell[BoxData[
 StyleBox["\<\"Computing error for Kn = 0.1\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{{3.692689867007627*^9, 3.6926898710736723`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.006666020226044337`", ",", "0.005044332313145201`", ",", 
   "0.0042637694977480855`", ",", "0.0038766984758770444`", ",", 
   "0.0036754378180856567`", ",", "0.003490826174244639`", ",", 
   "0.0033214848811161162`", ",", "0.0031659035210833976`", ",", 
   "0.0030227115293086967`", ",", "0.002890681259036664`", ",", 
   "0.002768713451484102`", ",", "0.0026558251453458357`", ",", 
   "0.0025511389343160235`", ",", "0.002453872679038829`", ",", 
   "0.0023633296162483227`"}], "}"}]], "Output",
 CellChangeTimes->{3.692689871252283*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Kn = 1.0", "Subsection",
 CellChangeTimes->{{3.692688538528432*^9, 3.6926885404387007`*^9}}],

Cell[CellGroupData[{

Cell["averaged ", "Subsubsection",
 CellChangeTimes->{{3.692689907597468*^9, 3.692689909625798*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AvgKn1p0", " ", "=", " ", 
  RowBox[{"ReturnErrorAvg", "[", 
   RowBox[{"min", ",", "max", ",", "1.0", ",", "HighOrderKn1p0"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6926896317842693`*^9, 3.692689639229906*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"Obtained solution\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 1]]], "Print",
 CellChangeTimes->{3.692689640442128*^9}],

Cell[BoxData[
 StyleBox["\<\"Computing error for Kn = 1.0\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{3.692689640449143*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.03896097506959258`", ",", "0.04794515139703259`", ",", 
   "0.040138597796540304`", ",", "0.04236376537544264`", ",", 
   "0.03712292776843723`", ",", "0.038146939110768316`", ",", 
   "0.034248754570547456`", ",", "0.03481953398106853`", ",", 
   "0.03176370520610398`", ",", "0.03211261152797325`", ",", 
   "0.029635578474184222`", ",", "0.029859659414804805`", ",", 
   "0.02780342466283836`", ",", "0.02795084100526014`", ",", 
   "0.026212788770016718`"}], "}"}]], "Output",
 CellChangeTimes->{3.692689640506651*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["accelerated ", "Subsubsection",
 CellChangeTimes->{{3.692689737722876*^9, 3.6926897399828167`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AccKn1p0", " ", "=", "  ", 
  RowBox[{"ReturnErrorAcc", "[", 
   RowBox[{"min", ",", "max", ",", "1.0", ",", "HighOrderKn1p0"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.692689741816469*^9, 3.692689744878067*^9}, {
  3.6926898626591*^9, 3.6926898701463737`*^9}, {3.692689917544096*^9, 
  3.692689930587434*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"Obtained solution\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 1]]], "Print",
 CellChangeTimes->{{3.692689867007627*^9, 3.692689871054682*^9}, 
   3.692689931911026*^9}],

Cell[BoxData[
 StyleBox["\<\"Computing error for Kn = 1.0\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{{3.692689867007627*^9, 3.692689871054682*^9}, 
   3.692689931927813*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.03896097506959258`", ",", "0.0434530632333126`", ",", 
   "0.04374746891504953`", ",", "0.04319699850321924`", ",", 
   "0.042384447294198276`", ",", "0.04148349817898562`", ",", 
   "0.040561882244850966`", ",", "0.03964975301494529`", ",", 
   "0.03876129853358353`", ",", "0.037903126840356995`", ",", 
   "0.03707798407011188`", ",", "0.03628656283201954`", ",", 
   "0.03552844236240534`", ",", "0.034802601647418524`", ",", 
   "0.03410770939849006`"}], "}"}]], "Output",
 CellChangeTimes->{3.692689871252283*^9, 3.6926899321108418`*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Kn = 10.0", "Subsection",
 CellChangeTimes->{{3.6926885455311337`*^9, 3.692688547710534*^9}}],

Cell[CellGroupData[{

Cell["averaged ", "Subsubsection",
 CellChangeTimes->{{3.692689976457451*^9, 3.692689978324665*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AvgKn10p0", " ", "=", " ", 
  RowBox[{"ReturnErrorAvg", "[", 
   RowBox[{"min", ",", "max", ",", "10.0", ",", "HighOrderKn10p0"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.692689696623547*^9, 3.692689700526718*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"Obtained solution\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 1]]], "Print",
 CellChangeTimes->{3.692689701527574*^9}],

Cell[BoxData[
 StyleBox["\<\"Computing error for Kn = 10.0\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{3.692689701530098*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.02106326031328083`", ",", "0.022449896866510718`", ",", 
   "0.020943216978982018`", ",", "0.021255396477991302`", ",", 
   "0.02013730714736601`", ",", "0.02026354990609728`", ",", 
   "0.019354707702972075`", ",", "0.01941341646175414`", ",", 
   "0.01864136473434383`", ",", "0.018668610826174298`", ",", 
   "0.017994877719206968`", ",", "0.018005475196895097`", ",", 
   "0.01740657440536534`", ",", "0.01740767817779003`", ",", 
   "0.01686799152119645`"}], "}"}]], "Output",
 CellChangeTimes->{3.692689701581265*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["accelerated ", "Subsubsection",
 CellChangeTimes->{{3.692689983366148*^9, 3.692689985015585*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AccKn10p0", " ", "=", "  ", 
  RowBox[{"ReturnErrorAcc", "[", 
   RowBox[{"min", ",", "max", ",", "10.0", ",", "HighOrderKn10p0"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.69269000329284*^9, 3.692690007137888*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"Obtained solution\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 1]]], "Print",
 CellChangeTimes->{3.6926900081813707`*^9}],

Cell[BoxData[
 StyleBox["\<\"Computing error for Kn = 10.0\"\>",
  StripOnInput->False,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{3.692690008195711*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.02106326031328083`", ",", "0.02175657858989577`", ",", 
   "0.02172656775632107`", ",", "0.02156224979096879`", ",", 
   "0.021355065169534185`", ",", "0.021132780151827964`", ",", 
   "0.02090647562667105`", ",", "0.02068121593934051`", ",", 
   "0.020459474689816563`", ",", "0.020242478065138562`", ",", 
   "0.020030805312242154`", ",", "0.01982468319905843`", ",", 
   "0.01962414062959163`", ",", "0.01942909412050071`", ",", 
   "0.01923939692819434`"}], "}"}]], "Output",
 CellChangeTimes->{3.692690008374503*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Plots", "Subsection",
 CellChangeTimes->{{3.692690050277939*^9, 3.692690052779195*^9}, {
  3.692697673126169*^9, 3.692697673697321*^9}}],

Cell[CellGroupData[{

Cell["plotting routine", "Subsubsection",
 CellChangeTimes->{{3.691895781556386*^9, 3.691895783735157*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotErrorAcc", "[", 
   RowBox[{"error_", ",", "Kn_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "numvariations", ",", "ptlegends", ",", "TicksXAxis", ",", 
      "legendfont"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "Number", " ", "of", " ", "variations", " ", "which", " ", "we", " ", 
      "allow", " ", "in", " ", "the", " ", "plot"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"numvariations", "=", 
      RowBox[{"Length", "[", "error", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"numvariations", "\[Equal]", "1"}], ",", 
       RowBox[{"Print", "[", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Not Implemeneted\>\"", ",", 
          RowBox[{"FontColor", "\[Rule]", "Red"}]}], "]"}], "]"}]}], "]"}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"legendfont", " ", "=", " ", "16"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ptlegends", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Averaged Solution\>\"", ",", 
          RowBox[{"FontSize", "\[Rule]", "legendfont"}]}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Euler's Transform\>\"", ",", 
          RowBox[{"FontSize", "\[Rule]", "legendfont"}]}], "]"}]}], "}"}]}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"TicksXAxis", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ii", "-", "min", "+", "1"}], ",", "ii"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "min", ",", "max", ",", "1"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"error", ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<error\[Theta]\>\"", ",", 
              RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}], ",", "None"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<m\>\"", ",", 
              RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}], ",", "None"}], 
           "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"TicksXAxis", ",", "None"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "600"}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"PlotMarkers", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Graphics", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Red", ",", "Thick", ",", 
              RowBox[{"Circle", "[", "]"}]}], "}"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "14"}]}], "]"}], ",", 
          RowBox[{"Graphics", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Green", ",", "Thick", ",", 
              RowBox[{"Circle", "[", "]"}]}], "}"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "10"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Graphics", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Blue", ",", "Thick", ",", 
              RowBox[{"Circle", "[", "]"}]}], "}"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "10"}]}], "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Red", ",", "Thick"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Green", ",", "Thick"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Blue", ",", "Thick"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"{", "ptlegends", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.8", ",", "0.9"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"FrameTicksStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{"FontSize", "\[Rule]", "13"}], ",", "Black"}], "]"}], 
            ",", "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{"FontSize", "\[Rule]", "13"}], ",", 
              RowBox[{"{", 
               RowBox[{"Orange", ",", "Black"}], "}"}]}], "]"}], ",", 
            "None"}], "}"}]}], "}"}]}]}], "]"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.691895786448901*^9, 3.691895984818571*^9}, {
   3.691896074069072*^9, 3.691896194732078*^9}, {3.691896228855399*^9, 
   3.691896254037642*^9}, {3.691896293889451*^9, 3.691896341974331*^9}, {
   3.691896387569051*^9, 3.6918964107252817`*^9}, {3.691939327876688*^9, 
   3.691939348832869*^9}, {3.69193949241916*^9, 3.6919396836670094`*^9}, {
   3.6919397781119633`*^9, 3.6919398343796043`*^9}, {3.691939866953602*^9, 
   3.691939914405305*^9}, {3.691940641308735*^9, 3.69194064289293*^9}, 
   3.6919413354934587`*^9, {3.691943001298196*^9, 3.691943016904999*^9}, {
   3.691945391431529*^9, 3.691945419646864*^9}, {3.6926901069319763`*^9, 
   3.692690151074059*^9}, {3.692691000932132*^9, 3.692691004763155*^9}, {
   3.6926962604534616`*^9, 3.692696265514659*^9}, {3.6926963696506166`*^9, 
   3.692696376505989*^9}, {3.692696406758697*^9, 3.6926964379146147`*^9}, 
   3.692696501395396*^9, {3.692697886404314*^9, 3.692697897543469*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Kn = 0.1", "Subsubsection",
 CellChangeTimes->{{3.6926901578961153`*^9, 3.6926901593026876`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"plt", "=", 
  RowBox[{"PlotErrorAcc", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"AvgKn0p1", ",", "AccKn0p1"}], "}"}], ",", "0.1"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"StringJoin", "[", 
    RowBox[{
    "WriteDirectoryResults", ",", "\"\<Accelerated_Convergence/Kn0p1/\>\"", 
     ",", "\"\<error_theta.eps\>\""}], "]"}], ",", "plt"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6926901807212677`*^9, 3.6926902084338818`*^9}, {
   3.69269585060497*^9, 3.692695890573577*^9}, {3.6926962769344597`*^9, 
   3.692696295965914*^9}, {3.692696328030994*^9, 3.692696337256105*^9}, 
   3.6926965086432447`*^9, {3.692697813601722*^9, 3.692697813700411*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{{}, {}, 
       {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], Thickness[Large],
         LineBox[{{1., 0.006666020226044337}, {2., 0.0044055244116450775`}, {
         3., 0.0035437689644558755`}, {4., 0.0034815990865687597`}, {5., 
         0.002811685265820851}, {6., 0.0028490253652078534`}, {7., 
         0.0023994161453870016`}, {8., 0.002402704239845608}, {9., 
         0.0020878972846238002`}, {10., 0.0020749084494882898`}, {11., 
         0.001845620026497255}, {12., 0.0018253999800528667`}, {13., 
         0.0016526418323820344`}, {14., 0.001629748779372729}, {15., 
         0.0014958125596332833`}}]}, 
       {RGBColor[0, 1, 0], PointSize[0.019444444444444445`], Thickness[Large],
         LineBox[{{1., 0.006666020226044337}, {2., 0.005044332313145201}, {3.,
          0.0042637694977480855`}, {4., 0.0038766984758770444`}, {5., 
         0.0036754378180856567`}, {6., 0.003490826174244639}, {7., 
         0.0033214848811161162`}, {8., 0.0031659035210833976`}, {9., 
         0.0030227115293086967`}, {10., 0.002890681259036664}, {11., 
         0.002768713451484102}, {12., 0.0026558251453458357`}, {13., 
         0.0025511389343160235`}, {14., 0.002453872679038829}, {15., 
         0.0023633296162483227`}}]}}, {
       {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], Thickness[Large],
         GeometricTransformationBox[InsetBox[
          GraphicsBox[
           {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], Thickness[
            Large], CircleBox[{0, 0}]},
           ImageSize->14], {0., 0.}], {{{1., 0.006666020226044337}}, {{2., 
         0.0044055244116450775`}}, {{3., 0.0035437689644558755`}}, {{4., 
         0.0034815990865687597`}}, {{5., 0.002811685265820851}}, {{6., 
         0.0028490253652078534`}}, {{7., 0.0023994161453870016`}}, {{8., 
         0.002402704239845608}}, {{9., 0.0020878972846238002`}}, {{10., 
         0.0020749084494882898`}}, {{11., 0.001845620026497255}}, {{12., 
         0.0018253999800528667`}}, {{13., 0.0016526418323820344`}}, {{14., 
         0.001629748779372729}}, {{15., 0.0014958125596332833`}}}]}, 
       {RGBColor[0, 1, 0], PointSize[0.019444444444444445`], Thickness[Large],
         GeometricTransformationBox[InsetBox[
          GraphicsBox[
           {RGBColor[0, 1, 0], PointSize[0.019444444444444445`], Thickness[
            Large], CircleBox[{0, 0}]},
           ImageSize->10], {0., 0.}], {{{1., 0.006666020226044337}}, {{2., 
         0.005044332313145201}}, {{3., 0.0042637694977480855`}}, {{4., 
         0.0038766984758770444`}}, {{5., 0.0036754378180856567`}}, {{6., 
         0.003490826174244639}}, {{7., 0.0033214848811161162`}}, {{8., 
         0.0031659035210833976`}}, {{9., 0.0030227115293086967`}}, {{10., 
         0.002890681259036664}}, {{11., 0.002768713451484102}}, {{12., 
         0.0026558251453458357`}}, {{13., 0.0025511389343160235`}}, {{14., 
         0.002453872679038829}}, {{15., 
         0.0023633296162483227`}}}]}, {}}}, {}}, InsetBox[
     TemplateBox[{
      StyleBox["\"Averaged Solution\"", FontSize -> 16, StripOnInput -> 
        False],StyleBox[
       "\"Euler's Transform\"", FontSize -> 16, StripOnInput -> False]},
      "PointLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    InsetBox[
                    GraphicsBox[{
                    RGBColor[1, 0, 0], 
                    Thickness[Large], 
                    CircleBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, ImageSize -> 14}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    InsetBox[
                    GraphicsBox[{
                    RGBColor[0, 1, 0], 
                    Thickness[Large], 
                    CircleBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, ImageSize -> 10}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    RGBColor[1, 0, 0], 
                    Thickness[Large], 
                    CircleBox[{0, 0}]}, ImageSize -> 14], ",", "Automatic"}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    RGBColor[0, 1, 0], 
                    Thickness[Large], 
                    CircleBox[{0, 0}]}, ImageSize -> 10], ",", "Automatic"}], 
                   "}"}]}], "}"}]}]}], "]"}]& )], Scaled[{0.8, 0.9}], 
     ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox["\"error\[Theta]\"", FontSize -> 16, StripOnInput -> False], 
       TraditionalForm], None}, {
      FormBox[
       StyleBox["\"m\"", FontSize -> 16, StripOnInput -> False], 
       TraditionalForm], None}},
   FrameTicks->{{Automatic, None}, {{{1, 
        FormBox["6", TraditionalForm]}, {2, 
        FormBox["7", TraditionalForm]}, {3, 
        FormBox["8", TraditionalForm]}, {4, 
        FormBox["9", TraditionalForm]}, {5, 
        FormBox["10", TraditionalForm]}, {6, 
        FormBox["11", TraditionalForm]}, {7, 
        FormBox["12", TraditionalForm]}, {8, 
        FormBox["13", TraditionalForm]}, {9, 
        FormBox["14", TraditionalForm]}, {10, 
        FormBox["15", TraditionalForm]}, {11, 
        FormBox["16", TraditionalForm]}, {12, 
        FormBox["17", TraditionalForm]}, {13, 
        FormBox["18", TraditionalForm]}, {14, 
        FormBox["19", TraditionalForm]}, {15, 
        FormBox["20", TraditionalForm]}}, None}},
   FrameTicksStyle->{{
      Directive[FontSize -> 13, 
       GrayLevel[0]], None}, {
      Directive[FontSize -> 13, {
        RGBColor[1, 0.5, 0], 
        GrayLevel[0]}], None}},
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->600,
   Method->{},
   PlotRange->{{0., 15.}, {0, 0.006666020226044337}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[Large]], 
         Line[{{1., 0.006666020226044337}, {2., 0.0044055244116450775`}, {3., 
          0.0035437689644558755`}, {4., 0.0034815990865687597`}, {5., 
          0.002811685265820851}, {6., 0.0028490253652078534`}, {7., 
          0.0023994161453870016`}, {8., 0.002402704239845608}, {9., 
          0.0020878972846238002`}, {10., 0.0020749084494882898`}, {11., 
          0.001845620026497255}, {12., 0.0018253999800528667`}, {13., 
          0.0016526418323820344`}, {14., 0.001629748779372729}, {15., 
          0.0014958125596332833`}}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Thickness[Large]], 
         Line[{{1., 0.006666020226044337}, {2., 0.005044332313145201}, {3., 
          0.0042637694977480855`}, {4., 0.0038766984758770444`}, {5., 
          0.0036754378180856567`}, {6., 0.003490826174244639}, {7., 
          0.0033214848811161162`}, {8., 0.0031659035210833976`}, {9., 
          0.0030227115293086967`}, {10., 0.002890681259036664}, {11., 
          0.002768713451484102}, {12., 0.0026558251453458357`}, {13., 
          0.0025511389343160235`}, {14., 0.002453872679038829}, {15., 
          0.0023633296162483227`}}]}}, {{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[Large]], 
         GeometricTransformation[
          Inset[
           Graphics[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.019444444444444445`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0], 
              Thickness[Large]], 
             RGBColor[1, 0, 0], 
             Thickness[Large], 
             Circle[{0, 0}]}, ImageSize -> 14], {0., 0.}], {{{1., 
          0.006666020226044337}}, {{2., 0.0044055244116450775`}}, {{3., 
          0.0035437689644558755`}}, {{4., 0.0034815990865687597`}}, {{5., 
          0.002811685265820851}}, {{6., 0.0028490253652078534`}}, {{7., 
          0.0023994161453870016`}}, {{8., 0.002402704239845608}}, {{9., 
          0.0020878972846238002`}}, {{10., 0.0020749084494882898`}}, {{11., 
          0.001845620026497255}}, {{12., 0.0018253999800528667`}}, {{13., 
          0.0016526418323820344`}}, {{14., 0.001629748779372729}}, {{15., 
          0.0014958125596332833`}}}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Thickness[Large]], 
         GeometricTransformation[
          Inset[
           Graphics[{
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.019444444444444445`], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 1, 0], 
              Thickness[Large]], 
             RGBColor[0, 1, 0], 
             Thickness[Large], 
             Circle[{0, 0}]}, ImageSize -> 10], {0., 0.}], {{{1., 
          0.006666020226044337}}, {{2., 0.005044332313145201}}, {{3., 
          0.0042637694977480855`}}, {{4., 0.0038766984758770444`}}, {{5., 
          0.0036754378180856567`}}, {{6., 0.003490826174244639}}, {{7., 
          0.0033214848811161162`}}, {{8., 0.0031659035210833976`}}, {{9., 
          0.0030227115293086967`}}, {{10., 0.002890681259036664}}, {{11., 
          0.002768713451484102}}, {{12., 0.0026558251453458357`}}, {{13., 
          0.0025511389343160235`}}, {{14., 0.002453872679038829}}, {{15., 
          0.0023633296162483227`}}}]}, {}}}, {}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
      PlotRange -> {{0., 15.}, {0, 0.006666020226044337}}, DisplayFunction -> 
      Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
      Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
         Style["error\[Theta]", FontSize -> 16], None}, {
         Style["m", FontSize -> 16], None}}, 
      FrameTicks -> {{
        Automatic, None}, {{{1, 6}, {2, 7}, {3, 8}, {4, 9}, {5, 10}, {6, 
         11}, {7, 12}, {8, 13}, {9, 14}, {10, 15}, {11, 16}, {12, 17}, {13, 
         18}, {14, 19}, {15, 20}}, None}}, FrameTicksStyle -> {{
         Directive[FontSize -> 13, 
          GrayLevel[0]], None}, {
         Directive[FontSize -> 13, {
           RGBColor[1, 0.5, 0], 
           GrayLevel[0]}], None}}, GridLines -> {Automatic, Automatic}, 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 600, Method -> {}, 
      PlotRange -> {{0., 15.}, {0, 0.006666020226044337}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      PointLegend[{
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Thickness[Large]], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Thickness[Large]]}, {
        Style["Averaged Solution", FontSize -> 16], 
        Style["Euler's Transform", FontSize -> 16]}, Joined -> {{True, True}},
        LabelStyle -> {}, LegendLayout -> "Column", LegendMarkers -> {{
          Graphics[{
            RGBColor[1, 0, 0], 
            Thickness[Large], 
            Circle[{0, 0}]}, ImageSize -> 14], Automatic}, {
          Graphics[{
            RGBColor[0, 1, 0], 
            Thickness[Large], 
            Circle[{0, 0}]}, ImageSize -> 10], Automatic}}]], {0.8, 0.9}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.6926902091798573`*^9, 3.69269101331117*^9, {3.6926958863839827`*^9, 
   3.6926958910485363`*^9}, {3.692696272432474*^9, 3.6926962967060843`*^9}, 
   3.692696337754175*^9, {3.692696414832651*^9, 3.692696440937895*^9}, 
   3.6926965090563498`*^9, 3.692697682260106*^9, 3.692697763447006*^9, 
   3.6926978145256977`*^9, 3.69269790266681*^9}],

Cell[BoxData["\<\"/Users/neerajsarna/Dropbox/my_papers/Publications/1D_Well_\
Posed_System/Results/Accelerated_Convergence/Kn0p1/error_theta.eps\"\>"], \
"Output",
 CellChangeTimes->{
  3.6926902091798573`*^9, 3.69269101331117*^9, {3.6926958863839827`*^9, 
   3.6926958910485363`*^9}, {3.692696272432474*^9, 3.6926962967060843`*^9}, 
   3.692696337754175*^9, {3.692696414832651*^9, 3.692696440937895*^9}, 
   3.6926965090563498`*^9, 3.692697682260106*^9, 3.692697763447006*^9, 
   3.6926978145256977`*^9, 3.692697903248823*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Kn = 1.0", "Subsubsection",
 CellChangeTimes->{{3.6926901578961153`*^9, 3.6926901593026876`*^9}, {
  3.6926902287270184`*^9, 3.69269022903513*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plt", "=", 
   RowBox[{"PlotErrorAcc", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"AvgKn1p0", ",", "AccKn1p0"}], "}"}], ",", "0.1"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"StringJoin", "[", 
    RowBox[{
    "WriteDirectoryResults", ",", "\"\<Accelerated_Convergence/Kn1p0/\>\"", 
     ",", "\"\<error_theta.eps\>\""}], "]"}], ",", "plt"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6926901807212677`*^9, 3.6926902084338818`*^9}, {
   3.692690239406911*^9, 3.692690243285386*^9}, {3.692695908889001*^9, 
   3.69269591369873*^9}, {3.692696462573258*^9, 3.6926964667751703`*^9}, 
   3.69269651633803*^9, {3.692697821797452*^9, 3.6926978258684*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{{}, {}, 
       {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], Thickness[Large],
         LineBox[{{1., 0.03896097506959258}, {2., 0.04794515139703259}, {3., 
         0.040138597796540304`}, {4., 0.04236376537544264}, {5., 
         0.03712292776843723}, {6., 0.038146939110768316`}, {7., 
         0.034248754570547456`}, {8., 0.03481953398106853}, {9., 
         0.03176370520610398}, {10., 0.03211261152797325}, {11., 
         0.029635578474184222`}, {12., 0.029859659414804805`}, {13., 
         0.02780342466283836}, {14., 0.02795084100526014}, {15., 
         0.026212788770016718`}}]}, 
       {RGBColor[0, 1, 0], PointSize[0.019444444444444445`], Thickness[Large],
         LineBox[{{1., 0.03896097506959258}, {2., 0.0434530632333126}, {3., 
         0.04374746891504953}, {4., 0.04319699850321924}, {5., 
         0.042384447294198276`}, {6., 0.04148349817898562}, {7., 
         0.040561882244850966`}, {8., 0.03964975301494529}, {9., 
         0.03876129853358353}, {10., 0.037903126840356995`}, {11., 
         0.03707798407011188}, {12., 0.03628656283201954}, {13., 
         0.03552844236240534}, {14., 0.034802601647418524`}, {15., 
         0.03410770939849006}}]}}, {
       {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], Thickness[Large],
         GeometricTransformationBox[InsetBox[
          GraphicsBox[
           {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], Thickness[
            Large], CircleBox[{0, 0}]},
           ImageSize->14], {0., 0.}], {{{1., 0.03896097506959258}}, {{2., 
         0.04794515139703259}}, {{3., 0.040138597796540304`}}, {{4., 
         0.04236376537544264}}, {{5., 0.03712292776843723}}, {{6., 
         0.038146939110768316`}}, {{7., 0.034248754570547456`}}, {{8., 
         0.03481953398106853}}, {{9., 0.03176370520610398}}, {{10., 
         0.03211261152797325}}, {{11., 0.029635578474184222`}}, {{12., 
         0.029859659414804805`}}, {{13., 0.02780342466283836}}, {{14., 
         0.02795084100526014}}, {{15., 0.026212788770016718`}}}]}, 
       {RGBColor[0, 1, 0], PointSize[0.019444444444444445`], Thickness[Large],
         GeometricTransformationBox[InsetBox[
          GraphicsBox[
           {RGBColor[0, 1, 0], PointSize[0.019444444444444445`], Thickness[
            Large], CircleBox[{0, 0}]},
           ImageSize->10], {0., 0.}], {{{1., 0.03896097506959258}}, {{2., 
         0.0434530632333126}}, {{3., 0.04374746891504953}}, {{4., 
         0.04319699850321924}}, {{5., 0.042384447294198276`}}, {{6., 
         0.04148349817898562}}, {{7., 0.040561882244850966`}}, {{8., 
         0.03964975301494529}}, {{9., 0.03876129853358353}}, {{10., 
         0.037903126840356995`}}, {{11., 0.03707798407011188}}, {{12., 
         0.03628656283201954}}, {{13., 0.03552844236240534}}, {{14., 
         0.034802601647418524`}}, {{15., 0.03410770939849006}}}]}, {}}}, {}}, 
    InsetBox[
     TemplateBox[{
      StyleBox["\"Averaged Solution\"", FontSize -> 16, StripOnInput -> 
        False],StyleBox[
       "\"Euler's Transform\"", FontSize -> 16, StripOnInput -> False]},
      "PointLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    InsetBox[
                    GraphicsBox[{
                    RGBColor[1, 0, 0], 
                    Thickness[Large], 
                    CircleBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, ImageSize -> 14}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    InsetBox[
                    GraphicsBox[{
                    RGBColor[0, 1, 0], 
                    Thickness[Large], 
                    CircleBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, ImageSize -> 10}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    RGBColor[1, 0, 0], 
                    Thickness[Large], 
                    CircleBox[{0, 0}]}, ImageSize -> 14], ",", "Automatic"}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    RGBColor[0, 1, 0], 
                    Thickness[Large], 
                    CircleBox[{0, 0}]}, ImageSize -> 10], ",", "Automatic"}], 
                   "}"}]}], "}"}]}]}], "]"}]& )], Scaled[{0.8, 0.9}], 
     ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0.025126170638665925`},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox["\"error\[Theta]\"", FontSize -> 16, StripOnInput -> False], 
       TraditionalForm], None}, {
      FormBox[
       StyleBox["\"m\"", FontSize -> 16, StripOnInput -> False], 
       TraditionalForm], None}},
   FrameTicks->{{Automatic, None}, {{{1, 
        FormBox["6", TraditionalForm]}, {2, 
        FormBox["7", TraditionalForm]}, {3, 
        FormBox["8", TraditionalForm]}, {4, 
        FormBox["9", TraditionalForm]}, {5, 
        FormBox["10", TraditionalForm]}, {6, 
        FormBox["11", TraditionalForm]}, {7, 
        FormBox["12", TraditionalForm]}, {8, 
        FormBox["13", TraditionalForm]}, {9, 
        FormBox["14", TraditionalForm]}, {10, 
        FormBox["15", TraditionalForm]}, {11, 
        FormBox["16", TraditionalForm]}, {12, 
        FormBox["17", TraditionalForm]}, {13, 
        FormBox["18", TraditionalForm]}, {14, 
        FormBox["19", TraditionalForm]}, {15, 
        FormBox["20", TraditionalForm]}}, None}},
   FrameTicksStyle->{{
      Directive[FontSize -> 13, 
       GrayLevel[0]], None}, {
      Directive[FontSize -> 13, {
        RGBColor[1, 0.5, 0], 
        GrayLevel[0]}], None}},
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->600,
   Method->{},
   PlotRange->{{0., 15.}, {0.026212788770016718`, 0.04794515139703259}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[Large]], 
         Line[{{1., 0.03896097506959258}, {2., 0.04794515139703259}, {3., 
          0.040138597796540304`}, {4., 0.04236376537544264}, {5., 
          0.03712292776843723}, {6., 0.038146939110768316`}, {7., 
          0.034248754570547456`}, {8., 0.03481953398106853}, {9., 
          0.03176370520610398}, {10., 0.03211261152797325}, {11., 
          0.029635578474184222`}, {12., 0.029859659414804805`}, {13., 
          0.02780342466283836}, {14., 0.02795084100526014}, {15., 
          0.026212788770016718`}}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Thickness[Large]], 
         Line[{{1., 0.03896097506959258}, {2., 0.0434530632333126}, {3., 
          0.04374746891504953}, {4., 0.04319699850321924}, {5., 
          0.042384447294198276`}, {6., 0.04148349817898562}, {7., 
          0.040561882244850966`}, {8., 0.03964975301494529}, {9., 
          0.03876129853358353}, {10., 0.037903126840356995`}, {11., 
          0.03707798407011188}, {12., 0.03628656283201954}, {13., 
          0.03552844236240534}, {14., 0.034802601647418524`}, {15., 
          0.03410770939849006}}]}}, {{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[Large]], 
         GeometricTransformation[
          Inset[
           Graphics[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.019444444444444445`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0], 
              Thickness[Large]], 
             RGBColor[1, 0, 0], 
             Thickness[Large], 
             Circle[{0, 0}]}, ImageSize -> 14], {0., 0.}], {{{1., 
          0.03896097506959258}}, {{2., 0.04794515139703259}}, {{3., 
          0.040138597796540304`}}, {{4., 0.04236376537544264}}, {{5., 
          0.03712292776843723}}, {{6., 0.038146939110768316`}}, {{7., 
          0.034248754570547456`}}, {{8., 0.03481953398106853}}, {{9., 
          0.03176370520610398}}, {{10., 0.03211261152797325}}, {{11., 
          0.029635578474184222`}}, {{12., 0.029859659414804805`}}, {{13., 
          0.02780342466283836}}, {{14., 0.02795084100526014}}, {{15., 
          0.026212788770016718`}}}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Thickness[Large]], 
         GeometricTransformation[
          Inset[
           Graphics[{
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.019444444444444445`], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 1, 0], 
              Thickness[Large]], 
             RGBColor[0, 1, 0], 
             Thickness[Large], 
             Circle[{0, 0}]}, ImageSize -> 10], {0., 0.}], {{{1., 
          0.03896097506959258}}, {{2., 0.0434530632333126}}, {{3., 
          0.04374746891504953}}, {{4., 0.04319699850321924}}, {{5., 
          0.042384447294198276`}}, {{6., 0.04148349817898562}}, {{7., 
          0.040561882244850966`}}, {{8., 0.03964975301494529}}, {{9., 
          0.03876129853358353}}, {{10., 0.037903126840356995`}}, {{11., 
          0.03707798407011188}}, {{12., 0.03628656283201954}}, {{13., 
          0.03552844236240534}}, {{14., 0.034802601647418524`}}, {{15., 
          0.03410770939849006}}}]}, {}}}, {}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, AxesOrigin -> {0, 0.025126170638665925`}, 
      PlotRange -> {{0., 15.}, {0.026212788770016718`, 0.04794515139703259}}, 
      DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 0.025126170638665925`}, DisplayFunction :> Identity, 
      Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
         Style["error\[Theta]", FontSize -> 16], None}, {
         Style["m", FontSize -> 16], None}}, 
      FrameTicks -> {{
        Automatic, None}, {{{1, 6}, {2, 7}, {3, 8}, {4, 9}, {5, 10}, {6, 
         11}, {7, 12}, {8, 13}, {9, 14}, {10, 15}, {11, 16}, {12, 17}, {13, 
         18}, {14, 19}, {15, 20}}, None}}, FrameTicksStyle -> {{
         Directive[FontSize -> 13, 
          GrayLevel[0]], None}, {
         Directive[FontSize -> 13, {
           RGBColor[1, 0.5, 0], 
           GrayLevel[0]}], None}}, GridLines -> {Automatic, Automatic}, 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 600, Method -> {}, 
      PlotRange -> {{0., 15.}, {0.026212788770016718`, 0.04794515139703259}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      PointLegend[{
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Thickness[Large]], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Thickness[Large]]}, {
        Style["Averaged Solution", FontSize -> 16], 
        Style["Euler's Transform", FontSize -> 16]}, Joined -> {{True, True}},
        LabelStyle -> {}, LegendLayout -> "Column", LegendMarkers -> {{
          Graphics[{
            RGBColor[1, 0, 0], 
            Thickness[Large], 
            Circle[{0, 0}]}, ImageSize -> 14], Automatic}, {
          Graphics[{
            RGBColor[0, 1, 0], 
            Thickness[Large], 
            Circle[{0, 0}]}, ImageSize -> 10], Automatic}}]], {0.8, 0.9}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{3.6926902091798573`*^9, 3.69269024376577*^9, 
  3.6926910152573338`*^9, 3.692695915806465*^9, 3.6926964672332287`*^9, 
  3.692696516683012*^9, 3.6926978267701797`*^9, 3.692697904506323*^9}],

Cell[BoxData["\<\"/Users/neerajsarna/Dropbox/my_papers/Publications/1D_Well_\
Posed_System/Results/Accelerated_Convergence/Kn1p0/error_theta.eps\"\>"], \
"Output",
 CellChangeTimes->{3.6926902091798573`*^9, 3.69269024376577*^9, 
  3.6926910152573338`*^9, 3.692695915806465*^9, 3.6926964672332287`*^9, 
  3.692696516683012*^9, 3.6926978267701797`*^9, 3.692697905063774*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Kn = 10.0", "Subsubsection",
 CellChangeTimes->{{3.6926901578961153`*^9, 3.6926901593026876`*^9}, {
  3.6926902322122507`*^9, 3.692690232795127*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"plt", "=", 
  RowBox[{"PlotErrorAcc", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"AvgKn10p0", ",", "AccKn10p0"}], "}"}], ",", "10.0"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"StringJoin", "[", 
    RowBox[{
    "WriteDirectoryResults", ",", "\"\<Accelerated_Convergence/Kn10p0/\>\"", 
     ",", "\"\<error_theta.eps\>\""}], "]"}], ",", "plt"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6926901807212677`*^9, 3.6926902084338818`*^9}, {
   3.692690258433855*^9, 3.692690266589368*^9}, {3.692695921851369*^9, 
   3.692695926064466*^9}, {3.692696478587687*^9, 3.692696481802796*^9}, 
   3.692696524334853*^9, {3.692697835651075*^9, 3.6926978392812767`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{{}, {}, 
       {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], Thickness[Large],
         LineBox[{{1., 0.02106326031328083}, {2., 0.022449896866510718`}, {3.,
          0.020943216978982018`}, {4., 0.021255396477991302`}, {5., 
         0.02013730714736601}, {6., 0.02026354990609728}, {7., 
         0.019354707702972075`}, {8., 0.01941341646175414}, {9., 
         0.01864136473434383}, {10., 0.018668610826174298`}, {11., 
         0.017994877719206968`}, {12., 0.018005475196895097`}, {13., 
         0.01740657440536534}, {14., 0.01740767817779003}, {15., 
         0.01686799152119645}}]}, 
       {RGBColor[0, 1, 0], PointSize[0.019444444444444445`], Thickness[Large],
         LineBox[{{1., 0.02106326031328083}, {2., 0.02175657858989577}, {3., 
         0.02172656775632107}, {4., 0.02156224979096879}, {5., 
         0.021355065169534185`}, {6., 0.021132780151827964`}, {7., 
         0.02090647562667105}, {8., 0.02068121593934051}, {9., 
         0.020459474689816563`}, {10., 0.020242478065138562`}, {11., 
         0.020030805312242154`}, {12., 0.01982468319905843}, {13., 
         0.01962414062959163}, {14., 0.01942909412050071}, {15., 
         0.01923939692819434}}]}}, {
       {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], Thickness[Large],
         GeometricTransformationBox[InsetBox[
          GraphicsBox[
           {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], Thickness[
            Large], CircleBox[{0, 0}]},
           ImageSize->14], {0., 0.}], {{{1., 0.02106326031328083}}, {{2., 
         0.022449896866510718`}}, {{3., 0.020943216978982018`}}, {{4., 
         0.021255396477991302`}}, {{5., 0.02013730714736601}}, {{6., 
         0.02026354990609728}}, {{7., 0.019354707702972075`}}, {{8., 
         0.01941341646175414}}, {{9., 0.01864136473434383}}, {{10., 
         0.018668610826174298`}}, {{11., 0.017994877719206968`}}, {{12., 
         0.018005475196895097`}}, {{13., 0.01740657440536534}}, {{14., 
         0.01740767817779003}}, {{15., 0.01686799152119645}}}]}, 
       {RGBColor[0, 1, 0], PointSize[0.019444444444444445`], Thickness[Large],
         GeometricTransformationBox[InsetBox[
          GraphicsBox[
           {RGBColor[0, 1, 0], PointSize[0.019444444444444445`], Thickness[
            Large], CircleBox[{0, 0}]},
           ImageSize->10], {0., 0.}], {{{1., 0.02106326031328083}}, {{2., 
         0.02175657858989577}}, {{3., 0.02172656775632107}}, {{4., 
         0.02156224979096879}}, {{5., 0.021355065169534185`}}, {{6., 
         0.021132780151827964`}}, {{7., 0.02090647562667105}}, {{8., 
         0.02068121593934051}}, {{9., 0.020459474689816563`}}, {{10., 
         0.020242478065138562`}}, {{11., 0.020030805312242154`}}, {{12., 
         0.01982468319905843}}, {{13., 0.01962414062959163}}, {{14., 
         0.01942909412050071}}, {{15., 0.01923939692819434}}}]}, {}}}, {}}, 
    InsetBox[
     TemplateBox[{
      StyleBox["\"Averaged Solution\"", FontSize -> 16, StripOnInput -> 
        False],StyleBox[
       "\"Euler's Transform\"", FontSize -> 16, StripOnInput -> False]},
      "PointLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    InsetBox[
                    GraphicsBox[{
                    RGBColor[1, 0, 0], 
                    Thickness[Large], 
                    CircleBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, ImageSize -> 14}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    InsetBox[
                    GraphicsBox[{
                    RGBColor[0, 1, 0], 
                    Thickness[Large], 
                    CircleBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, ImageSize -> 10}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    RGBColor[1, 0, 0], 
                    Thickness[Large], 
                    CircleBox[{0, 0}]}, ImageSize -> 14], ",", "Automatic"}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    RGBColor[0, 1, 0], 
                    Thickness[Large], 
                    CircleBox[{0, 0}]}, ImageSize -> 10], ",", "Automatic"}], 
                   "}"}]}], "}"}]}]}], "]"}]& )], Scaled[{0.8, 0.9}], 
     ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0.016588896253930733`},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox["\"error\[Theta]\"", FontSize -> 16, StripOnInput -> False], 
       TraditionalForm], None}, {
      FormBox[
       StyleBox["\"m\"", FontSize -> 16, StripOnInput -> False], 
       TraditionalForm], None}},
   FrameTicks->{{Automatic, None}, {{{1, 
        FormBox["6", TraditionalForm]}, {2, 
        FormBox["7", TraditionalForm]}, {3, 
        FormBox["8", TraditionalForm]}, {4, 
        FormBox["9", TraditionalForm]}, {5, 
        FormBox["10", TraditionalForm]}, {6, 
        FormBox["11", TraditionalForm]}, {7, 
        FormBox["12", TraditionalForm]}, {8, 
        FormBox["13", TraditionalForm]}, {9, 
        FormBox["14", TraditionalForm]}, {10, 
        FormBox["15", TraditionalForm]}, {11, 
        FormBox["16", TraditionalForm]}, {12, 
        FormBox["17", TraditionalForm]}, {13, 
        FormBox["18", TraditionalForm]}, {14, 
        FormBox["19", TraditionalForm]}, {15, 
        FormBox["20", TraditionalForm]}}, None}},
   FrameTicksStyle->{{
      Directive[FontSize -> 13, 
       GrayLevel[0]], None}, {
      Directive[FontSize -> 13, {
        RGBColor[1, 0.5, 0], 
        GrayLevel[0]}], None}},
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->600,
   Method->{},
   PlotRange->{{0., 15.}, {0.01686799152119645, 0.022449896866510718`}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[Large]], 
         Line[{{1., 0.02106326031328083}, {2., 0.022449896866510718`}, {3., 
          0.020943216978982018`}, {4., 0.021255396477991302`}, {5., 
          0.02013730714736601}, {6., 0.02026354990609728}, {7., 
          0.019354707702972075`}, {8., 0.01941341646175414}, {9., 
          0.01864136473434383}, {10., 0.018668610826174298`}, {11., 
          0.017994877719206968`}, {12., 0.018005475196895097`}, {13., 
          0.01740657440536534}, {14., 0.01740767817779003}, {15., 
          0.01686799152119645}}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Thickness[Large]], 
         Line[{{1., 0.02106326031328083}, {2., 0.02175657858989577}, {3., 
          0.02172656775632107}, {4., 0.02156224979096879}, {5., 
          0.021355065169534185`}, {6., 0.021132780151827964`}, {7., 
          0.02090647562667105}, {8., 0.02068121593934051}, {9., 
          0.020459474689816563`}, {10., 0.020242478065138562`}, {11., 
          0.020030805312242154`}, {12., 0.01982468319905843}, {13., 
          0.01962414062959163}, {14., 0.01942909412050071}, {15., 
          0.01923939692819434}}]}}, {{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[Large]], 
         GeometricTransformation[
          Inset[
           Graphics[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.019444444444444445`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0], 
              Thickness[Large]], 
             RGBColor[1, 0, 0], 
             Thickness[Large], 
             Circle[{0, 0}]}, ImageSize -> 14], {0., 0.}], {{{1., 
          0.02106326031328083}}, {{2., 0.022449896866510718`}}, {{3., 
          0.020943216978982018`}}, {{4., 0.021255396477991302`}}, {{5., 
          0.02013730714736601}}, {{6., 0.02026354990609728}}, {{7., 
          0.019354707702972075`}}, {{8., 0.01941341646175414}}, {{9., 
          0.01864136473434383}}, {{10., 0.018668610826174298`}}, {{11., 
          0.017994877719206968`}}, {{12., 0.018005475196895097`}}, {{13., 
          0.01740657440536534}}, {{14., 0.01740767817779003}}, {{15., 
          0.01686799152119645}}}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Thickness[Large]], 
         GeometricTransformation[
          Inset[
           Graphics[{
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.019444444444444445`], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 1, 0], 
              Thickness[Large]], 
             RGBColor[0, 1, 0], 
             Thickness[Large], 
             Circle[{0, 0}]}, ImageSize -> 10], {0., 0.}], {{{1., 
          0.02106326031328083}}, {{2., 0.02175657858989577}}, {{3., 
          0.02172656775632107}}, {{4., 0.02156224979096879}}, {{5., 
          0.021355065169534185`}}, {{6., 0.021132780151827964`}}, {{7., 
          0.02090647562667105}}, {{8., 0.02068121593934051}}, {{9., 
          0.020459474689816563`}}, {{10., 0.020242478065138562`}}, {{11., 
          0.020030805312242154`}}, {{12., 0.01982468319905843}}, {{13., 
          0.01962414062959163}}, {{14., 0.01942909412050071}}, {{15., 
          0.01923939692819434}}}]}, {}}}, {}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, AxesOrigin -> {0, 0.016588896253930733`}, 
      PlotRange -> {{0., 15.}, {0.01686799152119645, 0.022449896866510718`}}, 
      DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 0.016588896253930733`}, DisplayFunction :> Identity, 
      Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
         Style["error\[Theta]", FontSize -> 16], None}, {
         Style["m", FontSize -> 16], None}}, 
      FrameTicks -> {{
        Automatic, None}, {{{1, 6}, {2, 7}, {3, 8}, {4, 9}, {5, 10}, {6, 
         11}, {7, 12}, {8, 13}, {9, 14}, {10, 15}, {11, 16}, {12, 17}, {13, 
         18}, {14, 19}, {15, 20}}, None}}, FrameTicksStyle -> {{
         Directive[FontSize -> 13, 
          GrayLevel[0]], None}, {
         Directive[FontSize -> 13, {
           RGBColor[1, 0.5, 0], 
           GrayLevel[0]}], None}}, GridLines -> {Automatic, Automatic}, 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 600, Method -> {}, 
      PlotRange -> {{0., 15.}, {0.01686799152119645, 0.022449896866510718`}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      PointLegend[{
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Thickness[Large]], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Thickness[Large]]}, {
        Style["Averaged Solution", FontSize -> 16], 
        Style["Euler's Transform", FontSize -> 16]}, Joined -> {{True, True}},
        LabelStyle -> {}, LegendLayout -> "Column", LegendMarkers -> {{
          Graphics[{
            RGBColor[1, 0, 0], 
            Thickness[Large], 
            Circle[{0, 0}]}, ImageSize -> 14], Automatic}, {
          Graphics[{
            RGBColor[0, 1, 0], 
            Thickness[Large], 
            Circle[{0, 0}]}, ImageSize -> 10], Automatic}}]], {0.8, 0.9}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.6926902091798573`*^9, 3.692690267044776*^9, {3.692691009116963*^9, 
   3.692691016967291*^9}, 3.6926959265214453`*^9, 3.6926964823089952`*^9, 
   3.6926965246914053`*^9, 3.692697839746251*^9, 3.6926979068662663`*^9}],

Cell[BoxData["\<\"/Users/neerajsarna/Dropbox/my_papers/Publications/1D_Well_\
Posed_System/Results/Accelerated_Convergence/Kn10p0/error_theta.eps\"\>"], \
"Output",
 CellChangeTimes->{
  3.6926902091798573`*^9, 3.692690267044776*^9, {3.692691009116963*^9, 
   3.692691016967291*^9}, 3.6926959265214453`*^9, 3.6926964823089952`*^9, 
   3.6926965246914053`*^9, 3.692697839746251*^9, 3.692697907409748*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Results for C-code", "Section",
 CellChangeTimes->{{3.697966483648004*^9, 3.697966486222888*^9}, {
  3.6979667294328833`*^9, 3.697966731848134*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Kn", " ", "=", " ", "0.1"}], ";"}]], "Input",
 CellChangeTimes->{{3.69796672702677*^9, 3.697966736361643*^9}}],

Cell[CellGroupData[{

Cell["G20", "Subsection",
 CellChangeTimes->{{3.697966490024413*^9, 3.697966491023003*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "we", " ", "only", " ", "store", " ", "the", " ", "value", " ", "of", " ", 
    "theta"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"nvar20", " ", "=", " ", "6"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "we", " ", "convert", " ", "back", " ", "to", " ", "basis", " ", 
     "coefficients"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol20", " ", "=", 
     RowBox[{"Chop", "[", 
      RowBox[{"Simplify", "[", " ", 
       FractionBox[
        RowBox[{
         RowBox[{"GetSolution", "[", 
          RowBox[{"nvar20", ",", "Kn", ",", "1.0", ",", "1", ",", 
           RowBox[{"bcPBC", "[", "nvar20", "]"}]}], "]"}], 
         "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
        SqrtBox["2"]], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.697966493300652*^9, 3.697966512721676*^9}, {
  3.697966711301291*^9, 3.697966748474394*^9}, {3.697966958700486*^9, 
  3.697966961970953*^9}, {3.697967010516574*^9, 3.697967031476593*^9}, {
  3.697967116090588*^9, 3.6979671161999493`*^9}, {3.6979690602036858`*^9, 
  3.697969100036512*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CForm", "[", "sol20", "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{"Sinh", "\[Rule]", "sinh"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.697969102729788*^9, 3.697969118315914*^9}}],

Cell["\<\
0.9950211932019232*x + 0.009745323921348737*sinh(4.47213595499958*x)\
\>", "Output",
 CellChangeTimes->{{3.697969107355906*^9, 3.6979691189347*^9}, {
  3.69909575153272*^9, 3.6990957603909283`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plot2", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"sol20", 
     SqrtBox["2"]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.697966965500217*^9, 3.6979669786994677`*^9}, {
  3.697967128562915*^9, 3.697967128745175*^9}, {3.697968460165769*^9, 
  3.697968481534432*^9}, {3.698385728064622*^9, 3.698385731122059*^9}, {
  3.698385790349684*^9, 3.698385793644536*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[1, 0, 0], Thickness[Large], Opacity[1.], 
      LineBox[CompressedData["
1:eJwt1P8/0wkcwHFxHq3NmB31ENNQTiWFmij3LqceUbrsoehBzJdLD3TicUWn
SM0jY5WHvhjp241CHbXV9GW8G01chZhhZp8Y26cvHtU5+XKVu3s87ofX4/Uf
PJ3iUrk/mZqYmIT823/3gPlvZmcJbPaIdR47RWLqtEv+9AyBsmVkaZWAxNtS
T9fxCQK/hNwPTcgj0cstJM7wlsCUx7252iMk+ljzNc97CYygnBnqSCZxg/7j
H6V1BG4tVhc0BZHIPfnipncMgW05jga1OYkZHfz9iY06rCvn6WXZRlSpaG8U
sYPIahIw1FEGZD1OtfFx0CIYfWzrQ0fxXvITc6tBDdJ3TUq120eQJ/T80H+8
H6k0ee13vnqcKs7KR+jDI1cpVZfWDqPYUmcnGlKjn1evwHvJEJYHe6Z3C3qQ
ttuJ72n3Co+nxGYuDVJhqYO/7PsAHWaZ1WSkj3Uhs6ClbZ67FmOPdSxWV73E
V93HJIL1GjzfMCoqT+rEgeZPvOzdffiQcLO45dyOGunqpQ471OjC2BAQdvkZ
JpZ862xIVqFkWX7SsL4VLRvYpv6xXUgo77A5nBYU/Xiu2y6uE0fdz3uhrBkj
SemiYfoLtM6u5njMUeBCsSDVgtqG7pz37pXjcsxsvFZuEqLEE4FjnQ8y67Gw
NIrBCFCgbVht0e4FEuTS2cxdJQ9R8klp1bq4BtkrpPYma6RYOTB66jX/MhZT
lmcXJl3HPaEOdwfi+aj50pjFHD+FD6hZPU0HT0BHxmvjrvNCWDM8xzE34gq8
WzlRNmt+A1w+PJr2a6qGtxZfZYXvJBAk7n+xPUICJbNdReOfHsKmEKbZxL16
WJheU+KZqoAzMb3HVtXLYYDy9XYUWwlPt7PoO5gKuGZWJUt0aYMxJ9vsrrJm
ODpIm0wbeQ4Hf1kee2Z+C9y3yjktDO6EXi2Du7e1FaIZF1pl27qAd3i9ce62
ZxC5soDu7aGC5uU+Bc3m7fAmi7k+3E8NrvPkZMWWThDTI4U2rn3AkidvMs9/
CQz7du+LVA2YzJhWpw93QfI6toO3vRYmQxuilUtU4N9+wCCh6WBgdYz9En4P
hOW5p7TavIID4QxrZ60anuMJ2hh7COzOjUR8w+qDdtHceA/WMNRGXr0xntkP
gYUJbgGeegj3z9nS2qCBLzOD/Mo1I3Aner+z3+cB4Oi1k2KfUZii/mD2YOcg
JJxcPW3gGoD7ch2HJdLBAqWy5Va0EajraAr5JR2kbazN4cUbQVGh2Rol1sHZ
06Jcm31GWJV5OPZirQ7Wykje0TQjWC6qF9opdZCRdreIyzdCW4qX3vZPHVhf
oHRQa4ywgbK0yHIbASTzUKl0wghTaVMLa0MJuCKsvHVgxgh1A08rQ8IJ8D19
ycJj1giOdXsfCeMIaKTHS6spJHzeWWGgHiYgpq/6SoU9CfXiRf5zrxNgdeOI
ZfVGEn6mv396/SYBjk5dn5M2k+Ca0cjdfIeAg06jviu2knAueM++PDkBRFnT
VUkYCekfy86adRPQk6BerEgkYVlkkqO4j4Do28XCvBQShp74VgfoCLhWSAsM
TiNhh6ivMfc1AW4x0t9Uv5JAMa0KcnpPgNfvzsFlOSRgcobq8V8ECDgdG3l8
Eg71bI7hzRDwd2C/wFVAwv9+wf9+wT+8q4JZ
       "]]},
     Annotation[#, "Charting`Private`Tag$500669#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{Medium, FontFamily -> "Helvetica"},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->600,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.5, 0.5}, {-0.7673249885060262, 0.7673249885060262}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.697966966939616*^9, 3.697966979309956*^9}, {
   3.6979670142957563`*^9, 3.697967034208249*^9}, {3.697967079292592*^9, 
   3.697967090279093*^9}, 3.697967129506633*^9, {3.69796846073752*^9, 
   3.697968482578183*^9}, 3.698385731856043*^9, 3.698385794429758*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"bcPBC", "[", "6", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.6979667521513844`*^9, 3.697966761423987*^9}, {
  3.6979668049901743`*^9, 3.697966810209031*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"0.6514700158705599`", "\[VeryThinSpace]", "-", 
        RowBox[{"0.9213177319235614`", " ", 
         RowBox[{"\[Alpha]", "[", "2", "]"}]}], "+", 
        RowBox[{"\[Alpha]", "[", "3", "]"}], "-", 
        RowBox[{"0.5319230405352439`", " ", 
         RowBox[{"\[Alpha]", "[", "4", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{"-", "0.2913462481578878`"}], "+", 
        RowBox[{"0.41202581549140227`", " ", 
         RowBox[{"\[Alpha]", "[", "2", "]"}]}], "-", 
        RowBox[{"0.7136496464611086`", " ", 
         RowBox[{"\[Alpha]", "[", "4", "]"}]}], "+", 
        RowBox[{"\[Alpha]", "[", "5", "]"}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.69796676201821*^9, 3.697966771072966*^9}, 
   3.6979668105683203`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6979667751815243`*^9, 3.697966776939032*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["G26", "Subsection",
 CellChangeTimes->{{3.697966490024413*^9, 3.697966491023003*^9}, {
  3.697970542327197*^9, 3.697970542773807*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "we", " ", "only", " ", "store", " ", "the", " ", "value", " ", "of", " ", 
    "theta"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"nvar26", " ", "=", " ", "8"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "we", " ", "convert", " ", "back", " ", "to", " ", "basis", " ", 
     "coefficients"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol26", " ", "=", 
     RowBox[{"Chop", "[", 
      RowBox[{"Simplify", "[", " ", 
       FractionBox[
        RowBox[{
         RowBox[{"GetSolution", "[", 
          RowBox[{"nvar26", ",", "Kn", ",", "1.0", ",", "1", ",", 
           RowBox[{"bcPBC", "[", "nvar26", "]"}]}], "]"}], 
         "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
        SqrtBox["2"]], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.697966493300652*^9, 3.697966512721676*^9}, {
  3.697966711301291*^9, 3.697966748474394*^9}, {3.697966958700486*^9, 
  3.697966961970953*^9}, {3.697967010516574*^9, 3.697967031476593*^9}, {
  3.697967116090588*^9, 3.6979671161999493`*^9}, {3.6979690602036858`*^9, 
  3.697969100036512*^9}, {3.697970551129311*^9, 3.697970567704751*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CForm", "[", "sol26", "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{"Sinh", "\[Rule]", "sinh"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.697969102729788*^9, 3.697969118315914*^9}, {
  3.6979705749535103`*^9, 3.697970575328205*^9}}],

Cell["\<\
0.9918095457622201*x + 0.004077339347408366*sinh(2.517180972479634*x) + 
   0.0031858247584759585*sinh(6.71508535912671*x)\
\>", "Output",
 CellChangeTimes->{{3.697969107355906*^9, 3.6979691189347*^9}, 
   3.697970576198243*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plot2", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"sol20", "+", "2"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.697966965500217*^9, 3.6979669786994677`*^9}, {
  3.697967128562915*^9, 3.697967128745175*^9}, {3.697968460165769*^9, 
  3.697968481534432*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[1, 0, 0], Thickness[Large], Opacity[1.], 
      LineBox[CompressedData["
1:eJwtlHs0lHkch8fMvG8u5XaoRi65JKJObI2W7Xx/25WiMl3YE8bQ0rpEdnNp
dtti2mxJKW1qpTaXSIdGl0mGn3GJNbkVzTDMGxZRHWoIk2Hbc/aPz3n+e57/
PtYhMZzv6TQazefL/uMaWDw6P0/hnMOtR3TKVRAzY5s6o6Zw/qjeA6cKFdx/
4GKvmqQwvctW5lOpAlcHn5ChtxRusjLBGRIVuBkJup/LKNzB32CwtEkFaOBD
07VSCiseZz61VKiAc6a5+Csuhc2rx9NMNCpIaBVEh1cpcaFwd3oemoCODr1R
Ca8Xf7SsmMpsnwCL6hgTN/MeHLzw0DE7v0l4FFlHGPR2Y/U+ZkGGfBKC01zG
u5K7MF/9l0NU6CeYvsRPxSDHNaWfnYQDnyBXX8nK6nuFB8JMPMKipyB7h0vc
y9878fG9YxvDVVOQHMVLdPTqwN1PYjmxMdPAZ9xNiHv/Av8cmH5eMzENvJOt
dq8K27G2lHu5N3YGrlQOZmVHtGGd3TXht0Zm4CnlsPCeTQvWfVk2OR2pBltD
tGlfjhTbm/ETyEE1lK1KjegfaMTitgR8P/wzUPXC5Wz2M2z2zuxc0vBnGHS+
4oof1+LJZB3x5qBZMDpRxF6jJcE3pPpxVcpZcGaPOeerxNilMfId94AGUra8
bytPFOHWqAlNpUwDpvtKLn63pAw7zffmnD0wB2Wf6g0a7e7iNc1b5kqfz0G+
YvD8iCAHV9zRzyv2nodAX/OHilABZiZrK1h181Cuy++sOZYCiSPDB66Y09D6
fi3LU/43obojcm5JAA3ZjlfMuNcUQfi4KPDQVRryyu1q3uVfBpqrv2WLZDS0
1ceYMflIBDZ3jrNUi7XQBa7s5FqRGNJfG0gJjhZq2GWxaI+xBNxPRvDZl7TQ
e2vTEy+u14K8MtZqe4sWOvaTE+/C4mcw1dea4atDR7IeQ05YYyMsrDHu+sOL
joKTvhle4C2Ft1uFvGen6ajWye1sLdECv+xOHt7RQEf2OuI3eZ5t8JB3LqOG
yUAW4sitRGo7hNQmhe39loFoanpRXP8LiF4gCA1LYaAp38qg+hUd0MhqCYiX
MJBiHXfZCkEn7LfWW+ZKMFGsn6GRTc8rUI293uThyUSszH/8mRZyWDckydp5
holKDt66o0rsgnYb1tk9z5nIb+Ovno2V3YBPuPF+WEQgYVC0jfusAlo2TGne
+BBoWnczo3x/L3RZ+1SVZxKI0+7BtshSwrajQpdiGYF0PfQk4htKCLj41kou
J5Akr3tnQK4S8m3DlhPdBFqbmMT7s0QJ6avd/bk9BNK3EqWx6pUQZL46z6SP
QH9HuQ6YflSCYEXNg+RRAiFtx4v63hQ8FQQORWm+9I9Om5X4UuAQ6uiUPUeg
UkVDvo8fBemhK1Ok8wSyLA2rSAuhILZWHrWKTqLZ/XlDukkULI0fXTlCkkiU
a7VxQQEFdY43N0cYkujIorGGgmIKtqeuw9eNSGSfUMXZJqQg0DNpl9SYRJk7
Ag+fFlPwpGBtobMpieI+XL/MeEkB+9p6r3EWiVYdjLDMlX/x37MLtV5Gor66
r4s2KSl400/P4JiTaE+WvOrUCAVNsnsOjyxJpE0v9LIeo8C7OPXSkBWJcGRC
R/UEBbebfzRcak2i+M5t3GA1BeAbf9vLhkT//xcId2Z58m1J9C9ssF68
       "]]},
     Annotation[#, "Charting`Private`Tag$487897#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 1.2326750114939737`},
  BaseStyle->{Medium, FontFamily -> "Helvetica"},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->600,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.5, 0.5}, {1.2326750114939737`, 2.7673249885060263`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.697966966939616*^9, 3.697966979309956*^9}, {
   3.6979670142957563`*^9, 3.697967034208249*^9}, {3.697967079292592*^9, 
   3.697967090279093*^9}, 3.697967129506633*^9, {3.69796846073752*^9, 
   3.697968482578183*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"bcPBC", "[", "6", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.6979667521513844`*^9, 3.697966761423987*^9}, {
  3.6979668049901743`*^9, 3.697966810209031*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"0.6514700158705599`", "\[VeryThinSpace]", "-", 
        RowBox[{"0.9213177319235614`", " ", 
         RowBox[{"\[Alpha]", "[", "2", "]"}]}], "+", 
        RowBox[{"\[Alpha]", "[", "3", "]"}], "-", 
        RowBox[{"0.5319230405352439`", " ", 
         RowBox[{"\[Alpha]", "[", "4", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{"-", "0.2913462481578878`"}], "+", 
        RowBox[{"0.41202581549140227`", " ", 
         RowBox[{"\[Alpha]", "[", "2", "]"}]}], "-", 
        RowBox[{"0.7136496464611086`", " ", 
         RowBox[{"\[Alpha]", "[", "4", "]"}]}], "+", 
        RowBox[{"\[Alpha]", "[", "5", "]"}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.69796676201821*^9, 3.697966771072966*^9}, 
   3.6979668105683203`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6979667751815243`*^9, 3.697966776939032*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["G35", "Subsection",
 CellChangeTimes->{{3.697966490024413*^9, 3.697966491023003*^9}, {
  3.697970542327197*^9, 3.697970542773807*^9}, {3.697971442144676*^9, 
  3.697971442887527*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "we", " ", "only", " ", "store", " ", "the", " ", "value", " ", "of", " ", 
    "theta"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"nvar35", " ", "=", " ", "9"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "we", " ", "convert", " ", "back", " ", "to", " ", "basis", " ", 
     "coefficients"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol35", " ", "=", 
     RowBox[{"Chop", "[", 
      RowBox[{"Simplify", "[", " ", 
       FractionBox[
        RowBox[{
         RowBox[{"GetSolution", "[", 
          RowBox[{"nvar35", ",", "Kn", ",", "1.0", ",", "1", ",", 
           RowBox[{"bcPBC", "[", "nvar35", "]"}]}], "]"}], 
         "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
        SqrtBox["2"]], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.697966493300652*^9, 3.697966512721676*^9}, {
  3.697966711301291*^9, 3.697966748474394*^9}, {3.697966958700486*^9, 
  3.697966961970953*^9}, {3.697967010516574*^9, 3.697967031476593*^9}, {
  3.697967116090588*^9, 3.6979671161999493`*^9}, {3.6979690602036858`*^9, 
  3.697969100036512*^9}, {3.697970551129311*^9, 3.697970567704751*^9}, {
  3.697971453489727*^9, 3.6979714808031893`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CForm", "[", "sol35", "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{"Sinh", "\[Rule]", "sinh"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.697969102729788*^9, 3.697969118315914*^9}, {
  3.6979705749535103`*^9, 3.697970575328205*^9}, {3.697971486482115*^9, 
  3.697971487652417*^9}}],

Cell["\<\
0.9861871317460368*x + 0.0009740846199919195*sinh(2.2483363346888074*x) + 
   0.008298820931674668*sinh(4.010385905150765*x)\
\>", "Output",
 CellChangeTimes->{{3.697969107355906*^9, 3.6979691189347*^9}, 
   3.697970576198243*^9, 3.697971488388215*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"bcPBC", "[", "6", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.6979667521513844`*^9, 3.697966761423987*^9}, {
  3.6979668049901743`*^9, 3.697966810209031*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"0.6514700158705599`", "\[VeryThinSpace]", "-", 
        RowBox[{"0.9213177319235614`", " ", 
         RowBox[{"\[Alpha]", "[", "2", "]"}]}], "+", 
        RowBox[{"\[Alpha]", "[", "3", "]"}], "-", 
        RowBox[{"0.5319230405352439`", " ", 
         RowBox[{"\[Alpha]", "[", "4", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{"-", "0.2913462481578878`"}], "+", 
        RowBox[{"0.41202581549140227`", " ", 
         RowBox[{"\[Alpha]", "[", "2", "]"}]}], "-", 
        RowBox[{"0.7136496464611086`", " ", 
         RowBox[{"\[Alpha]", "[", "4", "]"}]}], "+", 
        RowBox[{"\[Alpha]", "[", "5", "]"}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.69796676201821*^9, 3.697966771072966*^9}, 
   3.6979668105683203`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6979667751815243`*^9, 3.697966776939032*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["G45", "Subsection",
 CellChangeTimes->{{3.697966490024413*^9, 3.697966491023003*^9}, {
  3.697970542327197*^9, 3.697970542773807*^9}, {3.697971442144676*^9, 
  3.697971442887527*^9}, {3.697972694413701*^9, 3.697972694709537*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "we", " ", "only", " ", "store", " ", "the", " ", "value", " ", "of", " ", 
    "theta"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"nvar45", " ", "=", " ", "11"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "we", " ", "convert", " ", "back", " ", "to", " ", "basis", " ", 
     "coefficients"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol45", " ", "=", 
     RowBox[{"Chop", "[", 
      RowBox[{"Simplify", "[", " ", 
       FractionBox[
        RowBox[{
         RowBox[{"GetSolution", "[", 
          RowBox[{"nvar45", ",", "Kn", ",", "1.0", ",", "1", ",", 
           RowBox[{"bcPBC", "[", "nvar45", "]"}]}], "]"}], 
         "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
        SqrtBox["2"]], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.697966493300652*^9, 3.697966512721676*^9}, {
  3.697966711301291*^9, 3.697966748474394*^9}, {3.697966958700486*^9, 
  3.697966961970953*^9}, {3.697967010516574*^9, 3.697967031476593*^9}, {
  3.697967116090588*^9, 3.6979671161999493`*^9}, {3.6979690602036858`*^9, 
  3.697969100036512*^9}, {3.697970551129311*^9, 3.697970567704751*^9}, {
  3.697971453489727*^9, 3.6979714808031893`*^9}, {3.6979727006102057`*^9, 
  3.697972714505136*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CForm", "[", "sol45", "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{"Sinh", "\[Rule]", "sinh"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.697969102729788*^9, 3.697969118315914*^9}, {
  3.6979705749535103`*^9, 3.697970575328205*^9}, {3.697971486482115*^9, 
  3.697971487652417*^9}, {3.697972746721719*^9, 3.697972746889207*^9}}],

Cell["\<\
0.9857643470749898*x + 0.0004959003321893117*sinh(1.9303025585770384*x) + 
   0.002543347245910525*sinh(2.6658847234287704*x) + \
0.005290233872198295*sinh(4.9438923511630914*x)\
\>", "Output",
 CellChangeTimes->{{3.697969107355906*^9, 3.6979691189347*^9}, 
   3.697970576198243*^9, 3.697971488388215*^9, 3.697972747321188*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"bcPBC", "[", "6", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.6979667521513844`*^9, 3.697966761423987*^9}, {
  3.6979668049901743`*^9, 3.697966810209031*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"0.6514700158705599`", "\[VeryThinSpace]", "-", 
        RowBox[{"0.9213177319235614`", " ", 
         RowBox[{"\[Alpha]", "[", "2", "]"}]}], "+", 
        RowBox[{"\[Alpha]", "[", "3", "]"}], "-", 
        RowBox[{"0.5319230405352439`", " ", 
         RowBox[{"\[Alpha]", "[", "4", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{"-", "0.2913462481578878`"}], "+", 
        RowBox[{"0.41202581549140227`", " ", 
         RowBox[{"\[Alpha]", "[", "2", "]"}]}], "-", 
        RowBox[{"0.7136496464611086`", " ", 
         RowBox[{"\[Alpha]", "[", "4", "]"}]}], "+", 
        RowBox[{"\[Alpha]", "[", "5", "]"}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.69796676201821*^9, 3.697966771072966*^9}, 
   3.6979668105683203`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6979667751815243`*^9, 3.697966776939032*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["G56", "Subsection",
 CellChangeTimes->{{3.697966490024413*^9, 3.697966491023003*^9}, {
  3.697970542327197*^9, 3.697970542773807*^9}, {3.697971442144676*^9, 
  3.697971442887527*^9}, {3.697972694413701*^9, 3.697972694709537*^9}, {
  3.699095786220346*^9, 3.699095786356286*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "the", " ", "number", " ", "of", " ", "tensors", " ", "in", " ", "the", 
    " ", "system"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"nvar56", " ", "=", " ", "12"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "we", " ", "convert", " ", "back", " ", "to", " ", "basis", " ", 
     "coefficients"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol56", " ", "=", 
     RowBox[{"Chop", "[", 
      RowBox[{"Simplify", "[", " ", 
       FractionBox[
        RowBox[{
         RowBox[{"GetSolution", "[", 
          RowBox[{"nvar56", ",", "Kn", ",", "1.0", ",", "1", ",", 
           RowBox[{"bcPBC", "[", "nvar56", "]"}]}], "]"}], 
         "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
        SqrtBox["2"]], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.697966493300652*^9, 3.697966512721676*^9}, {
  3.697966711301291*^9, 3.697966748474394*^9}, {3.697966958700486*^9, 
  3.697966961970953*^9}, {3.697967010516574*^9, 3.697967031476593*^9}, {
  3.697967116090588*^9, 3.6979671161999493`*^9}, {3.6979690602036858`*^9, 
  3.697969100036512*^9}, {3.697970551129311*^9, 3.697970567704751*^9}, {
  3.697971453489727*^9, 3.6979714808031893`*^9}, {3.6979727006102057`*^9, 
  3.697972714505136*^9}, {3.699095807329928*^9, 3.699095838048176*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CForm", "[", "sol56", "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{"Sinh", "\[Rule]", "sinh"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.697969102729788*^9, 3.697969118315914*^9}, {
  3.6979705749535103`*^9, 3.697970575328205*^9}, {3.697971486482115*^9, 
  3.697971487652417*^9}, {3.697972746721719*^9, 3.697972746889207*^9}, {
  3.69909584309868*^9, 3.6990958432344923`*^9}}],

Cell["\<\
0.9899466270992661*x + 0.00010116292970230688*sinh(1.8186266940442457*x) + 
   0.0019797047973874405*sinh(2.3891354429537364*x) + \
0.004978603330380985*sinh(3.687003638620778*x) + 
   0.00038639730251888393*sinh(10.604506967165621*x)\
\>", "Output",
 CellChangeTimes->{{3.697969107355906*^9, 3.6979691189347*^9}, 
   3.697970576198243*^9, 3.697971488388215*^9, 3.697972747321188*^9, 
   3.699095843719199*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6979667751815243`*^9, 3.697966776939032*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["N16", "Subsection",
 CellChangeTimes->{{3.697966490024413*^9, 3.697966491023003*^9}, {
  3.697970542327197*^9, 3.697970542773807*^9}, {3.697971442144676*^9, 
  3.697971442887527*^9}, {3.697972694413701*^9, 3.697972694709537*^9}, {
  3.699095786220346*^9, 3.699095786356286*^9}, {3.6996068762135143`*^9, 
  3.699606876807513*^9}, {3.6996069653715887`*^9, 3.6996069657138853`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "the", " ", "number", " ", "of", " ", "tensors", " ", "in", " ", "the", 
    " ", "system"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"nTensors", " ", "=", " ", "16"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "we", " ", "convert", " ", "back", " ", "to", " ", "basis", " ", 
     "coefficients"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol", " ", "=", 
     RowBox[{"Chop", "[", 
      RowBox[{"Simplify", "[", " ", 
       FractionBox[
        RowBox[{
         RowBox[{"GetSolution", "[", 
          RowBox[{"nTensors", ",", "Kn", ",", "1.0", ",", "1", ",", 
           RowBox[{"bcPBC", "[", "nTensors", "]"}]}], "]"}], 
         "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
        SqrtBox["2"]], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.697966493300652*^9, 3.697966512721676*^9}, {
  3.697966711301291*^9, 3.697966748474394*^9}, {3.697966958700486*^9, 
  3.697966961970953*^9}, {3.697967010516574*^9, 3.697967031476593*^9}, {
  3.697967116090588*^9, 3.6979671161999493`*^9}, {3.6979690602036858`*^9, 
  3.697969100036512*^9}, {3.697970551129311*^9, 3.697970567704751*^9}, {
  3.697971453489727*^9, 3.6979714808031893`*^9}, {3.6979727006102057`*^9, 
  3.697972714505136*^9}, {3.699095807329928*^9, 3.699095838048176*^9}, {
  3.699606883017488*^9, 3.699606932307283*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CForm", "[", "sol", "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{"Sinh", "\[Rule]", "sinh"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.697969102729788*^9, 3.697969118315914*^9}, {
  3.6979705749535103`*^9, 3.697970575328205*^9}, {3.697971486482115*^9, 
  3.697971487652417*^9}, {3.697972746721719*^9, 3.697972746889207*^9}, {
  3.69909584309868*^9, 3.6990958432344923`*^9}, {3.6996069170906153`*^9, 
  3.6996069172026167`*^9}}],

Cell["\<\
0.9892927396698521*x + 7.949524702960454e-7*sinh(1.5080981526429016*x) + 
   0.00007599110607032715*sinh(1.8280360908575142*x) + \
0.0010765095377805595*sinh(2.2459528687383394*x) + 
   0.003195836632356749*sinh(2.9712749000654357*x) + \
0.0032524332462132983*sinh(4.745522597484798*x) + 
   0.0000635644033471918*sinh(13.934429182642614*x)\
\>", "Output",
 CellChangeTimes->{{3.697969107355906*^9, 3.6979691189347*^9}, 
   3.697970576198243*^9, 3.697971488388215*^9, 3.697972747321188*^9, 
   3.699095843719199*^9, {3.699606917731735*^9, 3.6996069353646517`*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6979667751815243`*^9, 3.697966776939032*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["N18", "Subsection",
 CellChangeTimes->{{3.697966490024413*^9, 3.697966491023003*^9}, {
  3.697970542327197*^9, 3.697970542773807*^9}, {3.697971442144676*^9, 
  3.697971442887527*^9}, {3.697972694413701*^9, 3.697972694709537*^9}, {
  3.699095786220346*^9, 3.699095786356286*^9}, {3.6996068762135143`*^9, 
  3.699606876807513*^9}, {3.6996069653715887`*^9, 3.699606971586318*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "the", " ", "number", " ", "of", " ", "tensors", " ", "in", " ", "the", 
    " ", "system"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"nTensors", " ", "=", " ", "18"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "we", " ", "convert", " ", "back", " ", "to", " ", "basis", " ", 
     "coefficients"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol", " ", "=", 
     RowBox[{"Chop", "[", 
      RowBox[{"Simplify", "[", " ", 
       FractionBox[
        RowBox[{
         RowBox[{"GetSolution", "[", 
          RowBox[{"nTensors", ",", "Kn", ",", "1.0", ",", "1", ",", 
           RowBox[{"bcPBC", "[", "nTensors", "]"}]}], "]"}], 
         "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
        SqrtBox["2"]], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.697966493300652*^9, 3.697966512721676*^9}, {
  3.697966711301291*^9, 3.697966748474394*^9}, {3.697966958700486*^9, 
  3.697966961970953*^9}, {3.697967010516574*^9, 3.697967031476593*^9}, {
  3.697967116090588*^9, 3.6979671161999493`*^9}, {3.6979690602036858`*^9, 
  3.697969100036512*^9}, {3.697970551129311*^9, 3.697970567704751*^9}, {
  3.697971453489727*^9, 3.6979714808031893`*^9}, {3.6979727006102057`*^9, 
  3.697972714505136*^9}, {3.699095807329928*^9, 3.699095838048176*^9}, {
  3.699606883017488*^9, 3.699606932307283*^9}, {3.6996069759657497`*^9, 
  3.699606976204465*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CForm", "[", "sol", "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{"Sinh", "\[Rule]", "sinh"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.697969102729788*^9, 3.697969118315914*^9}, {
  3.6979705749535103`*^9, 3.697970575328205*^9}, {3.697971486482115*^9, 
  3.697971487652417*^9}, {3.697972746721719*^9, 3.697972746889207*^9}, {
  3.69909584309868*^9, 3.6990958432344923`*^9}, {3.6996069170906153`*^9, 
  3.6996069172026167`*^9}}],

Cell["\<\
0.9891103738688487*x - 3.4684362295131658e-9*sinh(1.4006653082978795*x) + 
   9.938811076145555e-6*sinh(1.664568126811443*x) + \
0.00025689789010162757*sinh(1.9815191312437987*x) + 
   0.001615975388904252*sinh(2.431133592076258*x) + \
0.0032265940137877307*sinh(3.2473676118677286*x) + 
   0.002561075578033159*sinh(5.235889289787754*x) + \
0.000028099072925427022*sinh(15.450468880651211*x)\
\>", "Output",
 CellChangeTimes->{{3.697969107355906*^9, 3.6979691189347*^9}, 
   3.697970576198243*^9, 3.697971488388215*^9, 3.697972747321188*^9, 
   3.699095843719199*^9, {3.699606917731735*^9, 3.6996069353646517`*^9}, 
   3.699606980215664*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6979667751815243`*^9, 3.697966776939032*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["N20", "Subsection",
 CellChangeTimes->{{3.697966490024413*^9, 3.697966491023003*^9}, {
  3.697970542327197*^9, 3.697970542773807*^9}, {3.697971442144676*^9, 
  3.697971442887527*^9}, {3.697972694413701*^9, 3.697972694709537*^9}, {
  3.699095786220346*^9, 3.699095786356286*^9}, {3.6996068762135143`*^9, 
  3.699606876807513*^9}, {3.6996069653715887`*^9, 3.699606971586318*^9}, {
  3.699607002780779*^9, 3.699607003411532*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "the", " ", "number", " ", "of", " ", "tensors", " ", "in", " ", "the", 
    " ", "system"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"nTensors", " ", "=", " ", "20"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "we", " ", "convert", " ", "back", " ", "to", " ", "basis", " ", 
     "coefficients"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol", " ", "=", 
     RowBox[{"Chop", "[", 
      RowBox[{"Simplify", "[", " ", 
       FractionBox[
        RowBox[{
         RowBox[{"GetSolution", "[", 
          RowBox[{"nTensors", ",", "Kn", ",", "1.0", ",", "1", ",", 
           RowBox[{"bcPBC", "[", "nTensors", "]"}]}], "]"}], 
         "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
        SqrtBox["2"]], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.697966493300652*^9, 3.697966512721676*^9}, {
  3.697966711301291*^9, 3.697966748474394*^9}, {3.697966958700486*^9, 
  3.697966961970953*^9}, {3.697967010516574*^9, 3.697967031476593*^9}, {
  3.697967116090588*^9, 3.6979671161999493`*^9}, {3.6979690602036858`*^9, 
  3.697969100036512*^9}, {3.697970551129311*^9, 3.697970567704751*^9}, {
  3.697971453489727*^9, 3.6979714808031893`*^9}, {3.6979727006102057`*^9, 
  3.697972714505136*^9}, {3.699095807329928*^9, 3.699095838048176*^9}, {
  3.699606883017488*^9, 3.699606932307283*^9}, {3.6996069759657497`*^9, 
  3.699606976204465*^9}, {3.699607012557702*^9, 3.699607013334111*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CForm", "[", "sol", "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{"Sinh", "\[Rule]", "sinh"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.697969102729788*^9, 3.697969118315914*^9}, {
  3.6979705749535103`*^9, 3.697970575328205*^9}, {3.697971486482115*^9, 
  3.697971487652417*^9}, {3.697972746721719*^9, 3.697972746889207*^9}, {
  3.69909584309868*^9, 3.6990958432344923`*^9}, {3.6996069170906153`*^9, 
  3.6996069172026167`*^9}}],

Cell["\<\
0.9889757964874321*x + 8.548836749354673e-9*sinh(1.312499845273545*x) + 
   6.425109739508264e-7*sinh(1.5359624765465445*x) + \
0.000046769982279263285*sinh(1.7928504374446674*x) + 
   0.0005340677389950208*sinh(2.1202457820361236*x) + \
0.002012515257218323*sinh(2.6095498761963127*x) + 
   0.003085495180863663*sinh(3.5141607592624338*x) + \
0.0020173922087678656*sinh(5.703742588502402*x) + 
   0.000012998563891241376*sinh(16.88777884716506*x)\
\>", "Output",
 CellChangeTimes->{{3.697969107355906*^9, 3.6979691189347*^9}, 
   3.697970576198243*^9, 3.697971488388215*^9, 3.697972747321188*^9, 
   3.699095843719199*^9, {3.699606917731735*^9, 3.6996069353646517`*^9}, 
   3.699606980215664*^9, 3.699607016526828*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6979667751815243`*^9, 3.697966776939032*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["N22", "Subsection",
 CellChangeTimes->{{3.697966490024413*^9, 3.697966491023003*^9}, {
  3.697970542327197*^9, 3.697970542773807*^9}, {3.697971442144676*^9, 
  3.697971442887527*^9}, {3.697972694413701*^9, 3.697972694709537*^9}, {
  3.699095786220346*^9, 3.699095786356286*^9}, {3.6996068762135143`*^9, 
  3.699606876807513*^9}, {3.6996069653715887`*^9, 3.699606971586318*^9}, {
  3.699607002780779*^9, 3.699607030356134*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "the", " ", "number", " ", "of", " ", "tensors", " ", "in", " ", "the", 
    " ", "system"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"nTensors", " ", "=", " ", "22"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "we", " ", "convert", " ", "back", " ", "to", " ", "basis", " ", 
     "coefficients"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol", " ", "=", 
     RowBox[{"Chop", "[", 
      RowBox[{"Simplify", "[", " ", 
       FractionBox[
        RowBox[{
         RowBox[{"GetSolution", "[", 
          RowBox[{"nTensors", ",", "Kn", ",", "1.0", ",", "1", ",", 
           RowBox[{"bcPBC", "[", "nTensors", "]"}]}], "]"}], 
         "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
        SqrtBox["2"]], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CForm", "[", "sol", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{"Sinh", "\[Rule]", "sinh"}], "}"}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.697966493300652*^9, 3.697966512721676*^9}, {
  3.697966711301291*^9, 3.697966748474394*^9}, {3.697966958700486*^9, 
  3.697966961970953*^9}, {3.697967010516574*^9, 3.697967031476593*^9}, {
  3.697967116090588*^9, 3.6979671161999493`*^9}, {3.6979690602036858`*^9, 
  3.697969100036512*^9}, {3.697970551129311*^9, 3.697970567704751*^9}, {
  3.697971453489727*^9, 3.6979714808031893`*^9}, {3.6979727006102057`*^9, 
  3.697972714505136*^9}, {3.699095807329928*^9, 3.699095838048176*^9}, {
  3.699606883017488*^9, 3.699606932307283*^9}, {3.6996069759657497`*^9, 
  3.699606976204465*^9}, {3.699607012557702*^9, 3.6996070355825033`*^9}, {
  3.69960732037777*^9, 3.699607320785171*^9}}],

Cell["\<\
0.9888725604237197*x - 1.1267507505527853e-9*sinh(1.238538873534564*x) + 
   1.0425594006751506e-7*sinh(1.4314385108767749*x) + \
5.310480436339387e-6*sinh(1.6466429341157962*x) + 
   0.000130574387363048*sinh(1.9067974753769268*x) + \
0.0008484475423778083*sinh(2.2508407141902804*x) + 
   0.002257045383117194*sinh(2.7829365376803588*x) + \
0.0028667510847416398*sinh(3.771937211055834*x) + 
   0.0015959510715178827*sinh(6.151532393786605*x) + \
6.251452487753951e-6*sinh(18.257360408445823*x)\
\>", "Output",
 CellChangeTimes->{3.6996073213601303`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6979667751815243`*^9, 3.697966776939032*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["N24", "Subsection",
 CellChangeTimes->{{3.697966490024413*^9, 3.697966491023003*^9}, {
  3.697970542327197*^9, 3.697970542773807*^9}, {3.697971442144676*^9, 
  3.697971442887527*^9}, {3.697972694413701*^9, 3.697972694709537*^9}, {
  3.699095786220346*^9, 3.699095786356286*^9}, {3.6996068762135143`*^9, 
  3.699606876807513*^9}, {3.6996069653715887`*^9, 3.699606971586318*^9}, {
  3.699607002780779*^9, 3.699607030356134*^9}, {3.6996073396631393`*^9, 
  3.6996073401977158`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "the", " ", "number", " ", "of", " ", "tensors", " ", "in", " ", "the", 
    " ", "system"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"nTensors", " ", "=", " ", "24"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "we", " ", "convert", " ", "back", " ", "to", " ", "basis", " ", 
     "coefficients"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol", " ", "=", 
     RowBox[{"Chop", "[", 
      RowBox[{"Simplify", "[", " ", 
       FractionBox[
        RowBox[{
         RowBox[{"GetSolution", "[", 
          RowBox[{"nTensors", ",", "Kn", ",", "1.0", ",", "1", ",", 
           RowBox[{"bcPBC", "[", "nTensors", "]"}]}], "]"}], 
         "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
        SqrtBox["2"]], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CForm", "[", "sol", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{"Sinh", "\[Rule]", "sinh"}], "}"}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.697966493300652*^9, 3.697966512721676*^9}, {
  3.697966711301291*^9, 3.697966748474394*^9}, {3.697966958700486*^9, 
  3.697966961970953*^9}, {3.697967010516574*^9, 3.697967031476593*^9}, {
  3.697967116090588*^9, 3.6979671161999493`*^9}, {3.6979690602036858`*^9, 
  3.697969100036512*^9}, {3.697970551129311*^9, 3.697970567704751*^9}, {
  3.697971453489727*^9, 3.6979714808031893`*^9}, {3.6979727006102057`*^9, 
  3.697972714505136*^9}, {3.699095807329928*^9, 3.699095838048176*^9}, {
  3.699606883017488*^9, 3.699606932307283*^9}, {3.6996069759657497`*^9, 
  3.699606976204465*^9}, {3.699607012557702*^9, 3.6996070355825033`*^9}, {
  3.69960732037777*^9, 3.699607345127923*^9}}],

Cell["\<\
0.9887909148897903*x + 2.1248298302441273e-10*sinh(1.1753915070425638*x) - 
   4.753332814364334e-9*sinh(1.3444672058183817*x) + \
7.269127503526152e-7*sinh(1.5286628972393546*x) + 
   0.000021091722168993028*sinh(1.7445093738681328*x) + \
0.00026554174814196423*sinh(2.0119506654634387*x) + 
   0.0011453546231374565*sinh(2.376383830762091*x) + \
0.0023788884543610805*sinh(2.951828444318971*x) + 
   0.0026215690952677067*sinh(4.0211509594000825*x) + \
0.0012699863181260631*sinh(6.581408804336385*x) + 
   3.1095921280567805e-6*sinh(19.56789817463244*x)\
\>", "Output",
 CellChangeTimes->{{3.6996073213601303`*^9, 3.6996073461531277`*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["N30", "Subsection",
 CellChangeTimes->{{3.697966490024413*^9, 3.697966491023003*^9}, {
  3.697970542327197*^9, 3.697970542773807*^9}, {3.697971442144676*^9, 
  3.697971442887527*^9}, {3.697972694413701*^9, 3.697972694709537*^9}, {
  3.699095786220346*^9, 3.699095786356286*^9}, {3.6996068762135143`*^9, 
  3.699606876807513*^9}, {3.6996069653715887`*^9, 3.699606971586318*^9}, {
  3.699607002780779*^9, 3.699607030356134*^9}, {3.6996073396631393`*^9, 
  3.6996073401977158`*^9}, {3.700123456037088*^9, 3.7001234561022387`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "the", " ", "number", " ", "of", " ", "tensors", " ", "in", " ", "the", 
    " ", "system"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"nTensors", " ", "=", " ", "30"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "we", " ", "convert", " ", "back", " ", "to", " ", "basis", " ", 
     "coefficients"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol", " ", "=", 
     RowBox[{"Chop", "[", 
      RowBox[{"Simplify", "[", " ", 
       FractionBox[
        RowBox[{
         RowBox[{"GetSolution", "[", 
          RowBox[{"nTensors", ",", "Kn", ",", "1.0", ",", "1", ",", 
           RowBox[{"bcPBC", "[", "nTensors", "]"}]}], "]"}], 
         "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
        SqrtBox["2"]], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CForm", "[", "sol", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{"Sinh", "\[Rule]", "sinh"}], "}"}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.697966493300652*^9, 3.697966512721676*^9}, {
  3.697966711301291*^9, 3.697966748474394*^9}, {3.697966958700486*^9, 
  3.697966961970953*^9}, {3.697967010516574*^9, 3.697967031476593*^9}, {
  3.697967116090588*^9, 3.6979671161999493`*^9}, {3.6979690602036858`*^9, 
  3.697969100036512*^9}, {3.697970551129311*^9, 3.697970567704751*^9}, {
  3.697971453489727*^9, 3.6979714808031893`*^9}, {3.6979727006102057`*^9, 
  3.697972714505136*^9}, {3.699095807329928*^9, 3.699095838048176*^9}, {
  3.699606883017488*^9, 3.699606932307283*^9}, {3.6996069759657497`*^9, 
  3.699606976204465*^9}, {3.699607012557702*^9, 3.6996070355825033`*^9}, {
  3.69960732037777*^9, 3.699607345127923*^9}, {3.700123478921008*^9, 
  3.7001234789534397`*^9}}],

Cell["\<\
0.9886241450400803*x - 1.4284622829507996e-9*sinh(1.2779468215207301*x) + 
   5.266949286451139e-8*sinh(1.4173548123589153*x) + \
1.1902338825856906e-6*sinh(1.5772937256341433*x) + 
   0.00002541376197682671*sinh(1.766211842724685*x) + \
0.00020307410067078814*sinh(1.9973620316950804*x) + 
   0.0008206049409972356*sinh(2.29896310304997*x) + \
0.0017197261477691537*sinh(2.7338379482754673*x) + 
   0.002324240918088127*sinh(3.4334119104667082*x) + \
0.0019292768842024432*sinh(4.722835521599962*x) + 
   0.0006649745620110362*sinh(7.7807719198946925*x) + \
4.5110234469975064e-7*sinh(23.209091470407046*x)\
\>", "Output",
 CellChangeTimes->{{3.6996073213601303`*^9, 3.6996073461531277`*^9}, 
   3.700123480799347*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6979667751815243`*^9, 3.697966776939032*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6979667751815243`*^9, 3.697966776939032*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Estimation of error", "Section",
 CellChangeTimes->{{3.699123841031645*^9, 3.69912384338916*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "we", " ", "substitue", " ", "the", " ", "solution", " ", "from", " ", "a",
     " ", "particular", " ", "system", " ", "into", " ", "the", " ", 
    "equations", " ", "for", " ", "another", " ", "system", " ", "and", " ", 
    "compute", " ", "the", " ", "residual"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ComputeResidual", "[", 
    RowBox[{"nvarHigh_", ",", "solLow_", ",", "Kn_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"P0", ",", "solHigh", ",", "residual"}], "}"}], ",", 
     "\[IndentingNewLine]", " ", 
     RowBox[{
      RowBox[{"P0", "=", 
       RowBox[{"SparseArray", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i_", ",", "i_"}], "}"}], "\[Rule]", 
           RowBox[{"-", "1"}]}], "}"}], ",", "nvarHigh"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"P0", "\[LeftDoubleBracket]", 
        RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "=", "0"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"P0", "\[LeftDoubleBracket]", 
        RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "=", "0"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"P0", "\[LeftDoubleBracket]", 
        RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}], "=", "0"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "we", " ", "extend", " ", "the", " ", "solution", " ", "of", " ", 
        "the", " ", "lower", " ", "order", " ", "moment", " ", "theory", " ", 
        "to", " ", "the", " ", "higher", " ", "order", " ", "moment", " ", 
        "thoery"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"solHigh", " ", "=", 
       RowBox[{"Flatten", "[", " ", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"nvarHigh", ",", "1"}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"solHigh", "\[LeftDoubleBracket]", 
        RowBox[{"1", ";;", 
         RowBox[{"Length", "[", "solLow", "]"}]}], "\[RightDoubleBracket]"}], 
       " ", "=", " ", "solLow"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"residual", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"AA", "[", "nvarHigh", "]"}], ".", 
         RowBox[{"D", "[", 
          RowBox[{"solHigh", ",", "x"}], "]"}]}], "-", 
        FractionBox[
         RowBox[{"P0", ".", "solHigh"}], "Kn"]}]}]}]}], "\[IndentingNewLine]",
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6991238559209213`*^9, 3.699123878285664*^9}, {
  3.699123958639495*^9, 3.699124007140485*^9}, {3.6991240586403008`*^9, 
  3.6991242151467037`*^9}}]
}, Closed]]
},
WindowSize->{968, 651},
WindowMargins->{{Automatic, -105}, {Automatic, 45}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 2667, 63, 243, "Input"],
Cell[3249, 87, 14028, 385, 32, "Output"]
}, Open  ]],
Cell[17292, 475, 709, 16, 75, "Input"],
Cell[18004, 493, 131, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[18160, 499, 240, 3, 64, "Section"],
Cell[18403, 504, 705, 14, 163, "Text"],
Cell[19111, 520, 8725, 198, 999, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[27873, 723, 186, 2, 50, "Section"],
Cell[28062, 727, 3718, 117, 413, "Input"],
Cell[31783, 846, 4382, 126, 260, "Input"],
Cell[CellGroupData[{
Cell[36190, 976, 106, 1, 44, "Subsection"],
Cell[36299, 979, 1910, 46, 264, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[38258, 1031, 425, 10, 55, "Section"],
Cell[CellGroupData[{
Cell[38708, 1045, 2903, 74, 151, "Input"],
Cell[41614, 1121, 1507, 35, 70, "Output"],
Cell[43124, 1158, 6476, 117, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[49649, 1281, 200, 3, 50, "Section"],
Cell[49852, 1286, 131, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[50008, 1292, 95, 1, 44, "Subsection"],
Cell[50106, 1295, 4522, 98, 264, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[54665, 1398, 97, 1, 36, "Subsection"],
Cell[54765, 1401, 6319, 161, 680, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[61121, 1567, 101, 1, 36, "Subsection"],
Cell[61225, 1570, 1194, 32, 159, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[62468, 1608, 109, 1, 50, "Section"],
Cell[CellGroupData[{
Cell[62602, 1613, 154, 2, 44, "Subsection"],
Cell[62759, 1617, 3101, 74, 369, "Input"],
Cell[CellGroupData[{
Cell[65885, 1695, 589, 14, 54, "Input"],
Cell[CellGroupData[{
Cell[66499, 1713, 647, 14, 24, "Print"],
Cell[67149, 1729, 499, 9, 24, "Print"],
Cell[67651, 1740, 489, 9, 24, "Print"],
Cell[68143, 1751, 506, 9, 24, "Print"],
Cell[68652, 1762, 495, 9, 24, "Print"],
Cell[69150, 1773, 647, 14, 24, "Print"],
Cell[69800, 1789, 499, 9, 24, "Print"],
Cell[70302, 1800, 486, 9, 24, "Print"],
Cell[70791, 1811, 504, 9, 22, "Print"],
Cell[71298, 1822, 495, 9, 21, "Print"],
Cell[71796, 1833, 647, 14, 21, "Print"],
Cell[72446, 1849, 499, 9, 22, "Print"],
Cell[72948, 1860, 487, 9, 22, "Print"],
Cell[73438, 1871, 504, 9, 22, "Print"],
Cell[73945, 1882, 495, 9, 21, "Print"],
Cell[74443, 1893, 647, 14, 21, "Print"],
Cell[75093, 1909, 501, 9, 22, "Print"],
Cell[75597, 1920, 487, 9, 22, "Print"],
Cell[76087, 1931, 504, 9, 22, "Print"],
Cell[76594, 1942, 497, 9, 21, "Print"],
Cell[77094, 1953, 645, 14, 21, "Print"],
Cell[77742, 1969, 499, 9, 22, "Print"],
Cell[78244, 1980, 489, 9, 22, "Print"],
Cell[78736, 1991, 504, 9, 22, "Print"],
Cell[79243, 2002, 495, 9, 21, "Print"],
Cell[79741, 2013, 645, 14, 21, "Print"],
Cell[80389, 2029, 501, 9, 22, "Print"],
Cell[80893, 2040, 487, 9, 22, "Print"],
Cell[81383, 2051, 506, 9, 22, "Print"],
Cell[81892, 2062, 495, 9, 21, "Print"],
Cell[82390, 2073, 647, 14, 21, "Print"],
Cell[83040, 2089, 499, 9, 22, "Print"],
Cell[83542, 2100, 487, 9, 22, "Print"],
Cell[84032, 2111, 506, 9, 22, "Print"],
Cell[84541, 2122, 497, 9, 21, "Print"],
Cell[85041, 2133, 647, 14, 21, "Print"],
Cell[85691, 2149, 499, 9, 22, "Print"],
Cell[86193, 2160, 489, 9, 22, "Print"],
Cell[86685, 2171, 504, 9, 22, "Print"],
Cell[87192, 2182, 495, 9, 21, "Print"],
Cell[87690, 2193, 647, 14, 21, "Print"],
Cell[88340, 2209, 499, 9, 22, "Print"],
Cell[88842, 2220, 487, 9, 22, "Print"],
Cell[89332, 2231, 504, 9, 22, "Print"],
Cell[89839, 2242, 495, 9, 21, "Print"],
Cell[90337, 2253, 647, 14, 21, "Print"],
Cell[90987, 2269, 499, 9, 22, "Print"],
Cell[91489, 2280, 487, 9, 22, "Print"],
Cell[91979, 2291, 504, 9, 22, "Print"],
Cell[92486, 2302, 495, 9, 21, "Print"],
Cell[92984, 2313, 647, 14, 21, "Print"],
Cell[93634, 2329, 499, 9, 22, "Print"],
Cell[94136, 2340, 487, 9, 22, "Print"],
Cell[94626, 2351, 504, 9, 22, "Print"],
Cell[95133, 2362, 497, 9, 21, "Print"],
Cell[95633, 2373, 647, 14, 21, "Print"],
Cell[96283, 2389, 499, 9, 22, "Print"],
Cell[96785, 2400, 487, 9, 24, "Print"],
Cell[97275, 2411, 506, 9, 24, "Print"],
Cell[97784, 2422, 495, 9, 24, "Print"],
Cell[98282, 2433, 647, 14, 24, "Print"],
Cell[98932, 2449, 499, 9, 24, "Print"],
Cell[99434, 2460, 489, 9, 24, "Print"],
Cell[99926, 2471, 504, 9, 24, "Print"],
Cell[100433, 2482, 495, 9, 24, "Print"],
Cell[100931, 2493, 649, 14, 24, "Print"],
Cell[101583, 2509, 499, 9, 24, "Print"],
Cell[102085, 2520, 489, 9, 24, "Print"],
Cell[102577, 2531, 504, 9, 24, "Print"],
Cell[103084, 2542, 494, 9, 24, "Print"],
Cell[103581, 2553, 647, 14, 24, "Print"],
Cell[104231, 2569, 499, 9, 24, "Print"],
Cell[104733, 2580, 487, 9, 24, "Print"],
Cell[105223, 2591, 504, 9, 24, "Print"],
Cell[105730, 2602, 497, 9, 24, "Print"],
Cell[106230, 2613, 649, 14, 24, "Print"],
Cell[106882, 2629, 499, 9, 24, "Print"],
Cell[107384, 2640, 487, 9, 24, "Print"],
Cell[107874, 2651, 504, 9, 24, "Print"],
Cell[108381, 2662, 497, 9, 24, "Print"],
Cell[108881, 2673, 647, 14, 24, "Print"],
Cell[109531, 2689, 501, 9, 24, "Print"],
Cell[110035, 2700, 487, 9, 24, "Print"],
Cell[110525, 2711, 504, 9, 24, "Print"],
Cell[111032, 2722, 497, 9, 24, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[111602, 2739, 212, 3, 50, "Section"],
Cell[CellGroupData[{
Cell[111839, 2746, 102, 1, 44, "Subsection"],
Cell[111944, 2749, 4696, 117, 457, "Input"],
Cell[116643, 2868, 674, 18, 54, "Input"],
Cell[CellGroupData[{
Cell[117342, 2890, 154, 3, 32, "Input"],
Cell[117499, 2895, 1072, 29, 109, "Output"]
}, Open  ]],
Cell[118586, 2927, 127, 2, 32, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[118750, 2934, 169, 2, 36, "Subsection"],
Cell[118922, 2938, 6426, 158, 516, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[125385, 3101, 111, 1, 36, "Subsection"],
Cell[125499, 3104, 488, 13, 32, "Input"],
Cell[CellGroupData[{
Cell[126012, 3121, 1147, 32, 54, "Input"],
Cell[CellGroupData[{
Cell[127184, 3157, 313, 6, 24, "Print"],
Cell[127500, 3165, 315, 6, 24, "Print"],
Cell[127818, 3173, 317, 6, 24, "Print"],
Cell[128138, 3181, 317, 6, 24, "Print"],
Cell[128458, 3189, 315, 6, 24, "Print"],
Cell[128776, 3197, 317, 6, 24, "Print"],
Cell[129096, 3205, 315, 6, 24, "Print"],
Cell[129414, 3213, 315, 6, 24, "Print"],
Cell[129732, 3221, 317, 6, 24, "Print"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[130110, 3234, 103, 1, 36, "Subsection"],
Cell[130216, 3237, 458, 9, 54, "Input"],
Cell[130677, 3248, 683, 17, 54, "Input"],
Cell[131363, 3267, 1063, 28, 54, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132463, 3300, 109, 1, 44, "Subsection"],
Cell[132575, 3303, 1926, 50, 196, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[134550, 3359, 244, 3, 50, "Section"],
Cell[CellGroupData[{
Cell[134819, 3366, 107, 1, 44, "Subsection"],
Cell[134929, 3369, 16855, 424, 1304, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[151821, 3798, 173, 2, 36, "Subsection"],
Cell[151997, 3802, 16626, 412, 1339, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168660, 4219, 121, 1, 44, "Subsection"],
Cell[168784, 4222, 16679, 402, 1093, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[185512, 4630, 99, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[185636, 4635, 117, 1, 44, "Subsection"],
Cell[185756, 4638, 3041, 72, 234, "Input"],
Cell[CellGroupData[{
Cell[188822, 4714, 188, 6, 35, "Subsubsection"],
Cell[189013, 4722, 1129, 32, 85, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[190179, 4759, 109, 1, 29, "Subsubsection"],
Cell[190291, 4762, 737, 18, 63, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[191077, 4786, 108, 1, 36, "Subsection"],
Cell[191188, 4789, 1195, 33, 156, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[192432, 4828, 111, 1, 50, "Section"],
Cell[192546, 4831, 608, 19, 35, "Input"],
Cell[CellGroupData[{
Cell[193179, 4854, 96, 1, 44, "Subsection"],
Cell[193278, 4857, 5325, 129, 403, "Input"],
Cell[CellGroupData[{
Cell[198628, 4990, 785, 23, 63, "Input"],
Cell[199416, 5015, 746, 14, 24, "Message"],
Cell[200165, 5031, 3447, 67, 385, "Output"],
Cell[203615, 5100, 744, 14, 24, "Message"],
Cell[204362, 5116, 17848, 303, 424, "Output"]
}, Open  ]],
Cell[222225, 5422, 91, 1, 28, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[222353, 5428, 144, 2, 36, "Subsection"],
Cell[222500, 5432, 5370, 130, 403, "Input"],
Cell[CellGroupData[{
Cell[227895, 5566, 830, 23, 63, "Input"],
Cell[228728, 5591, 728, 14, 24, "Message"],
Cell[229459, 5607, 2894, 58, 388, "Output"],
Cell[232356, 5667, 726, 14, 24, "Message"],
Cell[233085, 5683, 17935, 305, 387, "Output"]
}, Open  ]],
Cell[251035, 5991, 91, 1, 28, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[251163, 5997, 196, 3, 36, "Subsection"],
Cell[251362, 6002, 5447, 130, 444, "Input"],
Cell[CellGroupData[{
Cell[256834, 6136, 883, 24, 63, "Input"],
Cell[257720, 6162, 725, 14, 24, "Message"],
Cell[258448, 6178, 2926, 58, 387, "Output"],
Cell[261377, 6238, 723, 14, 24, "Message"],
Cell[262103, 6254, 18569, 315, 387, "Output"]
}, Open  ]],
Cell[280687, 6572, 91, 1, 28, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[280815, 6578, 219, 3, 36, "Subsection"],
Cell[281037, 6583, 5598, 133, 420, "Input"],
Cell[CellGroupData[{
Cell[286660, 6720, 934, 25, 63, "Input"],
Cell[287597, 6747, 715, 13, 24, "Message"],
Cell[288315, 6762, 2952, 58, 382, "Output"],
Cell[291270, 6822, 713, 13, 24, "Message"],
Cell[291986, 6837, 19420, 328, 385, "Output"]
}, Open  ]],
Cell[311421, 7168, 91, 1, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[311549, 7174, 249, 3, 44, "Subsection"],
Cell[311801, 7179, 5665, 132, 403, "Input"],
Cell[CellGroupData[{
Cell[317491, 7315, 1095, 28, 70, "Input"],
Cell[318589, 7345, 668, 12, 24, "Message"],
Cell[319260, 7359, 9024, 158, 396, "Output"],
Cell[328287, 7519, 2835, 58, 385, "Output"]
}, Open  ]],
Cell[331137, 7580, 91, 1, 62, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[331277, 7587, 164, 2, 50, "Section"],
Cell[331444, 7591, 149, 3, 28, "Input"],
Cell[331596, 7596, 459, 10, 46, "Input"],
Cell[CellGroupData[{
Cell[332080, 7610, 95, 1, 44, "Subsection"],
Cell[332178, 7613, 544, 11, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[332759, 7629, 144, 2, 44, "Subsection"],
Cell[332906, 7633, 590, 12, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[333533, 7650, 145, 2, 44, "Subsection"],
Cell[333681, 7654, 594, 12, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[334312, 7671, 148, 2, 44, "Subsection"],
Cell[334463, 7675, 595, 12, 28, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[335107, 7693, 97, 1, 50, "Section"],
Cell[335207, 7696, 32404, 740, 2385, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[367648, 8441, 145, 2, 50, "Section"],
Cell[CellGroupData[{
Cell[367818, 8447, 103, 1, 44, "Subsection"],
Cell[367924, 8450, 2825, 59, 216, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[370786, 8514, 145, 2, 36, "Subsection"],
Cell[CellGroupData[{
Cell[370956, 8520, 99, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[371080, 8525, 631, 15, 28, "Input"],
Cell[CellGroupData[{
Cell[371736, 8544, 626, 14, 22, "Print"],
Cell[372365, 8560, 644, 14, 22, "Print"],
Cell[373012, 8576, 624, 14, 22, "Print"],
Cell[373639, 8592, 642, 14, 22, "Print"],
Cell[374284, 8608, 623, 14, 22, "Print"],
Cell[374910, 8624, 644, 14, 22, "Print"],
Cell[375557, 8640, 624, 14, 22, "Print"],
Cell[376184, 8656, 642, 14, 22, "Print"],
Cell[376829, 8672, 622, 14, 22, "Print"],
Cell[377454, 8688, 644, 14, 22, "Print"],
Cell[378101, 8704, 624, 14, 22, "Print"],
Cell[378728, 8720, 642, 14, 22, "Print"],
Cell[379373, 8736, 622, 14, 22, "Print"],
Cell[379998, 8752, 642, 14, 22, "Print"],
Cell[380643, 8768, 620, 14, 22, "Print"],
Cell[381266, 8784, 642, 14, 22, "Print"],
Cell[381911, 8800, 620, 14, 22, "Print"],
Cell[382534, 8816, 643, 14, 22, "Print"],
Cell[383180, 8832, 622, 14, 22, "Print"],
Cell[383805, 8848, 646, 14, 22, "Print"],
Cell[384454, 8864, 622, 14, 22, "Print"],
Cell[385079, 8880, 640, 14, 22, "Print"],
Cell[385722, 8896, 618, 14, 22, "Print"],
Cell[386343, 8912, 646, 14, 22, "Print"],
Cell[386992, 8928, 622, 14, 22, "Print"],
Cell[387617, 8944, 646, 14, 22, "Print"],
Cell[388266, 8960, 620, 14, 22, "Print"],
Cell[388889, 8976, 642, 14, 22, "Print"],
Cell[389534, 8992, 616, 14, 22, "Print"],
Cell[390153, 9008, 644, 14, 22, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[390858, 9029, 148, 2, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[391031, 9035, 628, 15, 28, "Input"],
Cell[CellGroupData[{
Cell[391684, 9054, 520, 13, 22, "Print"],
Cell[392207, 9069, 542, 13, 22, "Print"],
Cell[392752, 9084, 522, 13, 22, "Print"],
Cell[393277, 9099, 542, 13, 22, "Print"],
Cell[393822, 9114, 520, 13, 22, "Print"],
Cell[394345, 9129, 538, 13, 22, "Print"],
Cell[394886, 9144, 520, 13, 22, "Print"],
Cell[395409, 9159, 540, 13, 22, "Print"],
Cell[395952, 9174, 520, 13, 22, "Print"],
Cell[396475, 9189, 542, 13, 22, "Print"],
Cell[397020, 9204, 520, 13, 22, "Print"],
Cell[397543, 9219, 542, 13, 22, "Print"],
Cell[398088, 9234, 520, 13, 22, "Print"],
Cell[398611, 9249, 540, 13, 22, "Print"],
Cell[399154, 9264, 524, 13, 22, "Print"],
Cell[399681, 9279, 542, 13, 22, "Print"],
Cell[400226, 9294, 520, 13, 22, "Print"],
Cell[400749, 9309, 542, 13, 22, "Print"],
Cell[401294, 9324, 520, 13, 22, "Print"],
Cell[401817, 9339, 533, 13, 22, "Print"],
Cell[402353, 9354, 522, 13, 22, "Print"],
Cell[402878, 9369, 538, 13, 22, "Print"],
Cell[403419, 9384, 520, 13, 22, "Print"],
Cell[403942, 9399, 538, 13, 22, "Print"],
Cell[404483, 9414, 522, 13, 22, "Print"],
Cell[405008, 9429, 541, 13, 22, "Print"],
Cell[405552, 9444, 520, 13, 22, "Print"],
Cell[406075, 9459, 540, 13, 22, "Print"],
Cell[406618, 9474, 520, 13, 22, "Print"],
Cell[407141, 9489, 542, 13, 22, "Print"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[407744, 9509, 149, 2, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[407918, 9515, 660, 15, 28, "Input"],
Cell[CellGroupData[{
Cell[408603, 9534, 545, 13, 22, "Print"],
Cell[409151, 9549, 565, 13, 22, "Print"],
Cell[409719, 9564, 543, 13, 22, "Print"],
Cell[410265, 9579, 565, 13, 22, "Print"],
Cell[410833, 9594, 543, 13, 22, "Print"],
Cell[411379, 9609, 565, 13, 22, "Print"],
Cell[411947, 9624, 541, 13, 22, "Print"],
Cell[412491, 9639, 563, 13, 22, "Print"],
Cell[413057, 9654, 543, 13, 22, "Print"],
Cell[413603, 9669, 565, 13, 22, "Print"],
Cell[414171, 9684, 543, 13, 22, "Print"],
Cell[414717, 9699, 567, 13, 22, "Print"],
Cell[415287, 9714, 542, 13, 22, "Print"],
Cell[415832, 9729, 565, 13, 22, "Print"],
Cell[416400, 9744, 543, 13, 22, "Print"],
Cell[416946, 9759, 565, 13, 22, "Print"],
Cell[417514, 9774, 545, 13, 22, "Print"],
Cell[418062, 9789, 565, 13, 22, "Print"],
Cell[418630, 9804, 541, 13, 22, "Print"],
Cell[419174, 9819, 565, 13, 22, "Print"],
Cell[419742, 9834, 545, 13, 22, "Print"],
Cell[420290, 9849, 565, 13, 22, "Print"],
Cell[420858, 9864, 541, 13, 22, "Print"],
Cell[421402, 9879, 565, 13, 22, "Print"],
Cell[421970, 9894, 543, 13, 22, "Print"],
Cell[422516, 9909, 563, 13, 22, "Print"],
Cell[423082, 9924, 543, 13, 22, "Print"],
Cell[423628, 9939, 563, 13, 22, "Print"],
Cell[424194, 9954, 541, 13, 22, "Print"],
Cell[424738, 9969, 563, 13, 22, "Print"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[425362, 9989, 175, 2, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[425562, 9995, 711, 16, 86, "Input"],
Cell[CellGroupData[{
Cell[426298, 10015, 596, 14, 22, "Print"],
Cell[426897, 10031, 614, 14, 22, "Print"],
Cell[427514, 10047, 595, 14, 22, "Print"],
Cell[428112, 10063, 614, 14, 22, "Print"],
Cell[428729, 10079, 598, 14, 22, "Print"],
Cell[429330, 10095, 616, 14, 22, "Print"],
Cell[429949, 10111, 594, 14, 22, "Print"],
Cell[430546, 10127, 616, 14, 22, "Print"],
Cell[431165, 10143, 593, 14, 22, "Print"],
Cell[431761, 10159, 616, 14, 22, "Print"],
Cell[432380, 10175, 594, 14, 22, "Print"],
Cell[432977, 10191, 616, 14, 22, "Print"],
Cell[433596, 10207, 594, 14, 22, "Print"],
Cell[434193, 10223, 612, 14, 22, "Print"],
Cell[434808, 10239, 594, 14, 22, "Print"],
Cell[435405, 10255, 616, 14, 22, "Print"],
Cell[436024, 10271, 596, 14, 22, "Print"],
Cell[436623, 10287, 616, 14, 22, "Print"],
Cell[437242, 10303, 594, 14, 22, "Print"],
Cell[437839, 10319, 614, 14, 22, "Print"],
Cell[438456, 10335, 594, 14, 22, "Print"],
Cell[439053, 10351, 616, 14, 22, "Print"],
Cell[439672, 10367, 594, 14, 22, "Print"],
Cell[440269, 10383, 618, 14, 22, "Print"],
Cell[440890, 10399, 592, 14, 22, "Print"],
Cell[441485, 10415, 612, 14, 22, "Print"],
Cell[442100, 10431, 593, 14, 22, "Print"],
Cell[442696, 10447, 614, 14, 22, "Print"],
Cell[443313, 10463, 594, 14, 22, "Print"],
Cell[443910, 10479, 618, 14, 22, "Print"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[444601, 10501, 196, 3, 36, "Subsection"],
Cell[CellGroupData[{
Cell[444822, 10508, 99, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[444946, 10513, 653, 15, 32, "Input"],
Cell[CellGroupData[{
Cell[445624, 10532, 548, 13, 24, "Print"],
Cell[446175, 10547, 568, 13, 24, "Print"],
Cell[446746, 10562, 542, 13, 24, "Print"],
Cell[447291, 10577, 566, 13, 24, "Print"],
Cell[447860, 10592, 544, 13, 24, "Print"],
Cell[448407, 10607, 566, 13, 24, "Print"],
Cell[448976, 10622, 544, 13, 24, "Print"],
Cell[449523, 10637, 566, 13, 24, "Print"],
Cell[450092, 10652, 544, 13, 24, "Print"],
Cell[450639, 10667, 566, 13, 24, "Print"],
Cell[451208, 10682, 546, 13, 24, "Print"],
Cell[451757, 10697, 564, 13, 24, "Print"],
Cell[452324, 10712, 546, 13, 24, "Print"],
Cell[452873, 10727, 564, 13, 24, "Print"],
Cell[453440, 10742, 544, 13, 24, "Print"],
Cell[453987, 10757, 566, 13, 24, "Print"],
Cell[454556, 10772, 544, 13, 24, "Print"],
Cell[455103, 10787, 566, 13, 24, "Print"],
Cell[455672, 10802, 544, 13, 24, "Print"],
Cell[456219, 10817, 566, 13, 24, "Print"],
Cell[456788, 10832, 546, 13, 24, "Print"],
Cell[457337, 10847, 566, 13, 24, "Print"],
Cell[457906, 10862, 542, 13, 24, "Print"],
Cell[458451, 10877, 564, 13, 24, "Print"],
Cell[459018, 10892, 544, 13, 24, "Print"],
Cell[459565, 10907, 568, 13, 24, "Print"],
Cell[460136, 10922, 546, 13, 24, "Print"],
Cell[460685, 10937, 568, 13, 24, "Print"],
Cell[461256, 10952, 546, 13, 24, "Print"],
Cell[461805, 10967, 564, 13, 24, "Print"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[462430, 10987, 148, 2, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[462603, 10993, 679, 16, 28, "Input"],
Cell[CellGroupData[{
Cell[463307, 11013, 550, 13, 22, "Print"],
Cell[463860, 11028, 566, 13, 22, "Print"],
Cell[464429, 11043, 548, 13, 22, "Print"],
Cell[464980, 11058, 568, 13, 22, "Print"],
Cell[465551, 11073, 546, 13, 22, "Print"],
Cell[466100, 11088, 568, 13, 22, "Print"],
Cell[466671, 11103, 548, 13, 22, "Print"],
Cell[467222, 11118, 568, 13, 22, "Print"],
Cell[467793, 11133, 546, 13, 22, "Print"],
Cell[468342, 11148, 566, 13, 22, "Print"],
Cell[468911, 11163, 546, 13, 22, "Print"],
Cell[469460, 11178, 566, 13, 22, "Print"],
Cell[470029, 11193, 544, 13, 22, "Print"],
Cell[470576, 11208, 568, 13, 22, "Print"],
Cell[471147, 11223, 546, 13, 22, "Print"],
Cell[471696, 11238, 566, 13, 22, "Print"],
Cell[472265, 11253, 548, 13, 22, "Print"],
Cell[472816, 11268, 568, 13, 22, "Print"],
Cell[473387, 11283, 544, 13, 22, "Print"],
Cell[473934, 11298, 568, 13, 22, "Print"],
Cell[474505, 11313, 548, 13, 22, "Print"],
Cell[475056, 11328, 570, 13, 22, "Print"],
Cell[475629, 11343, 546, 13, 22, "Print"],
Cell[476178, 11358, 570, 13, 22, "Print"],
Cell[476751, 11373, 546, 13, 22, "Print"],
Cell[477300, 11388, 568, 13, 22, "Print"],
Cell[477871, 11403, 544, 13, 22, "Print"],
Cell[478418, 11418, 568, 13, 22, "Print"],
Cell[478989, 11433, 546, 13, 22, "Print"],
Cell[479538, 11448, 568, 13, 22, "Print"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[480167, 11468, 149, 2, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[480341, 11474, 703, 16, 86, "Input"],
Cell[CellGroupData[{
Cell[481069, 11494, 572, 13, 22, "Print"],
Cell[481644, 11509, 588, 13, 22, "Print"],
Cell[482235, 11524, 568, 13, 22, "Print"],
Cell[482806, 11539, 590, 13, 22, "Print"],
Cell[483399, 11554, 568, 13, 22, "Print"],
Cell[483970, 11569, 590, 13, 22, "Print"],
Cell[484563, 11584, 568, 13, 22, "Print"],
Cell[485134, 11599, 590, 13, 22, "Print"],
Cell[485727, 11614, 568, 13, 22, "Print"],
Cell[486298, 11629, 590, 13, 22, "Print"],
Cell[486891, 11644, 568, 13, 22, "Print"],
Cell[487462, 11659, 592, 13, 22, "Print"],
Cell[488057, 11674, 568, 13, 22, "Print"],
Cell[488628, 11689, 590, 13, 22, "Print"],
Cell[489221, 11704, 568, 13, 22, "Print"],
Cell[489792, 11719, 588, 13, 22, "Print"],
Cell[490383, 11734, 568, 13, 22, "Print"],
Cell[490954, 11749, 588, 13, 22, "Print"],
Cell[491545, 11764, 568, 13, 22, "Print"],
Cell[492116, 11779, 590, 13, 22, "Print"],
Cell[492709, 11794, 566, 13, 22, "Print"],
Cell[493278, 11809, 592, 13, 22, "Print"],
Cell[493873, 11824, 568, 13, 22, "Print"],
Cell[494444, 11839, 590, 13, 22, "Print"],
Cell[495037, 11854, 568, 13, 22, "Print"],
Cell[495608, 11869, 590, 13, 22, "Print"],
Cell[496201, 11884, 568, 13, 22, "Print"],
Cell[496772, 11899, 589, 13, 22, "Print"],
Cell[497364, 11914, 570, 13, 22, "Print"],
Cell[497937, 11929, 588, 13, 22, "Print"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[498586, 11949, 175, 2, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[498786, 11955, 759, 17, 86, "Input"],
Cell[CellGroupData[{
Cell[499570, 11976, 595, 14, 22, "Print"],
Cell[500168, 11992, 615, 14, 22, "Print"],
Cell[500786, 12008, 595, 14, 22, "Print"],
Cell[501384, 12024, 617, 14, 22, "Print"],
Cell[502004, 12040, 591, 14, 22, "Print"],
Cell[502598, 12056, 617, 14, 22, "Print"],
Cell[503218, 12072, 591, 14, 22, "Print"],
Cell[503812, 12088, 613, 14, 22, "Print"],
Cell[504428, 12104, 593, 14, 22, "Print"],
Cell[505024, 12120, 617, 14, 22, "Print"],
Cell[505644, 12136, 591, 14, 22, "Print"],
Cell[506238, 12152, 613, 14, 22, "Print"],
Cell[506854, 12168, 593, 14, 22, "Print"],
Cell[507450, 12184, 611, 14, 22, "Print"],
Cell[508064, 12200, 595, 14, 22, "Print"],
Cell[508662, 12216, 615, 14, 22, "Print"],
Cell[509280, 12232, 595, 14, 22, "Print"],
Cell[509878, 12248, 617, 14, 22, "Print"],
Cell[510498, 12264, 593, 14, 22, "Print"],
Cell[511094, 12280, 613, 14, 22, "Print"],
Cell[511710, 12296, 590, 14, 22, "Print"],
Cell[512303, 12312, 615, 14, 22, "Print"],
Cell[512921, 12328, 593, 14, 22, "Print"],
Cell[513517, 12344, 617, 14, 22, "Print"],
Cell[514137, 12360, 593, 14, 22, "Print"],
Cell[514733, 12376, 612, 14, 22, "Print"],
Cell[515348, 12392, 595, 14, 22, "Print"],
Cell[515946, 12408, 617, 14, 22, "Print"],
Cell[516566, 12424, 595, 14, 22, "Print"],
Cell[517164, 12440, 613, 14, 22, "Print"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[517850, 12462, 202, 3, 44, "Subsection"],
Cell[CellGroupData[{
Cell[518077, 12469, 99, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[518201, 12474, 504, 12, 28, "Input"],
Cell[CellGroupData[{
Cell[518730, 12490, 400, 11, 22, "Print"],
Cell[519133, 12503, 420, 11, 22, "Print"],
Cell[519556, 12516, 404, 11, 22, "Print"],
Cell[519963, 12529, 422, 11, 22, "Print"],
Cell[520388, 12542, 402, 11, 22, "Print"],
Cell[520793, 12555, 422, 11, 22, "Print"],
Cell[521218, 12568, 404, 11, 22, "Print"],
Cell[521625, 12581, 422, 11, 22, "Print"],
Cell[522050, 12594, 402, 11, 22, "Print"],
Cell[522455, 12607, 422, 11, 22, "Print"],
Cell[522880, 12620, 406, 11, 22, "Print"],
Cell[523289, 12633, 422, 11, 22, "Print"],
Cell[523714, 12646, 406, 11, 22, "Print"],
Cell[524123, 12659, 424, 11, 22, "Print"],
Cell[524550, 12672, 402, 11, 22, "Print"],
Cell[524955, 12685, 424, 11, 22, "Print"],
Cell[525382, 12698, 403, 11, 22, "Print"],
Cell[525788, 12711, 422, 11, 22, "Print"],
Cell[526213, 12724, 404, 11, 22, "Print"],
Cell[526620, 12737, 422, 11, 22, "Print"],
Cell[527045, 12750, 403, 11, 22, "Print"],
Cell[527451, 12763, 422, 11, 22, "Print"],
Cell[527876, 12776, 404, 11, 22, "Print"],
Cell[528283, 12789, 424, 11, 22, "Print"],
Cell[528710, 12802, 406, 11, 22, "Print"],
Cell[529119, 12815, 422, 11, 22, "Print"],
Cell[529544, 12828, 404, 11, 22, "Print"],
Cell[529951, 12841, 424, 11, 22, "Print"],
Cell[530378, 12854, 404, 11, 22, "Print"],
Cell[530785, 12867, 422, 11, 22, "Print"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[531268, 12885, 148, 2, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[531441, 12891, 526, 12, 28, "Input"],
Cell[CellGroupData[{
Cell[531992, 12907, 567, 13, 22, "Print"],
Cell[532562, 12922, 586, 13, 22, "Print"],
Cell[533151, 12937, 567, 13, 22, "Print"],
Cell[533721, 12952, 587, 13, 22, "Print"],
Cell[534311, 12967, 567, 13, 22, "Print"],
Cell[534881, 12982, 589, 13, 22, "Print"],
Cell[535473, 12997, 565, 13, 22, "Print"],
Cell[536041, 13012, 589, 13, 22, "Print"],
Cell[536633, 13027, 573, 13, 22, "Print"],
Cell[537209, 13042, 587, 13, 22, "Print"],
Cell[537799, 13057, 568, 13, 22, "Print"],
Cell[538370, 13072, 587, 13, 22, "Print"],
Cell[538960, 13087, 569, 13, 22, "Print"],
Cell[539532, 13102, 589, 13, 22, "Print"],
Cell[540124, 13117, 568, 13, 22, "Print"],
Cell[540695, 13132, 587, 13, 22, "Print"],
Cell[541285, 13147, 567, 13, 22, "Print"],
Cell[541855, 13162, 589, 13, 22, "Print"],
Cell[542447, 13177, 569, 13, 22, "Print"],
Cell[543019, 13192, 587, 13, 22, "Print"],
Cell[543609, 13207, 571, 13, 22, "Print"],
Cell[544183, 13222, 589, 13, 22, "Print"],
Cell[544775, 13237, 571, 13, 22, "Print"],
Cell[545349, 13252, 589, 13, 22, "Print"],
Cell[545941, 13267, 568, 13, 22, "Print"],
Cell[546512, 13282, 587, 13, 22, "Print"],
Cell[547102, 13297, 575, 13, 22, "Print"],
Cell[547680, 13312, 585, 13, 22, "Print"],
Cell[548268, 13327, 565, 13, 22, "Print"],
Cell[548836, 13342, 587, 13, 22, "Print"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[549484, 13362, 149, 2, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[549658, 13368, 565, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[550248, 13385, 450, 12, 22, "Print"],
Cell[550701, 13399, 470, 12, 22, "Print"],
Cell[551174, 13413, 448, 12, 22, "Print"],
Cell[551625, 13427, 468, 12, 22, "Print"],
Cell[552096, 13441, 448, 12, 22, "Print"],
Cell[552547, 13455, 470, 12, 22, "Print"],
Cell[553020, 13469, 448, 12, 22, "Print"],
Cell[553471, 13483, 466, 12, 22, "Print"],
Cell[553940, 13497, 452, 12, 22, "Print"],
Cell[554395, 13511, 468, 12, 22, "Print"],
Cell[554866, 13525, 450, 12, 22, "Print"],
Cell[555319, 13539, 470, 12, 22, "Print"],
Cell[555792, 13553, 450, 12, 22, "Print"],
Cell[556245, 13567, 469, 12, 22, "Print"],
Cell[556717, 13581, 452, 12, 22, "Print"],
Cell[557172, 13595, 468, 12, 22, "Print"]
}, Open  ]],
Cell[557655, 13610, 79, 1, 28, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[557795, 13618, 91, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[557911, 13623, 98, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[558034, 13628, 1292, 32, 80, "Input"],
Cell[559329, 13662, 21755, 448, 372, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[581133, 14116, 149, 2, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[581307, 14122, 1299, 32, 80, "Input"],
Cell[582609, 14156, 24201, 513, 372, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[606859, 14675, 173, 2, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[607057, 14681, 1585, 39, 80, "Input"],
Cell[608645, 14722, 17902, 379, 403, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[626608, 15108, 103, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[626736, 15113, 107, 1, 35, "Subsubsection"],
Cell[626846, 15116, 6140, 146, 414, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[633023, 15267, 103, 1, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[633151, 15272, 613, 17, 54, "Input"],
Cell[633767, 15291, 22133, 476, 397, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[655937, 15772, 407, 9, 54, "Input"],
Cell[656347, 15783, 287, 3, 54, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[656683, 15792, 156, 2, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[656864, 15798, 610, 17, 46, "Input"],
Cell[657477, 15817, 22024, 476, 403, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[679538, 16298, 349, 8, 28, "Input"],
Cell[679890, 16308, 292, 3, 46, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[680231, 16317, 153, 2, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[680409, 16323, 665, 18, 46, "Input"],
Cell[681077, 16343, 22150, 477, 397, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[703264, 16825, 347, 8, 28, "Input"],
Cell[703614, 16835, 290, 3, 46, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[703965, 16845, 128, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[704118, 16850, 103, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[704246, 16855, 2593, 74, 114, "Input"],
Cell[706842, 16931, 630, 12, 24, "Message"],
Cell[707475, 16945, 625, 12, 24, "Message"],
Cell[708103, 16959, 630, 12, 24, "Message"],
Cell[708736, 16973, 584, 11, 24, "Message"],
Cell[CellGroupData[{
Cell[709345, 16988, 454, 12, 22, "Print"],
Cell[709802, 17002, 476, 12, 22, "Print"]
}, Open  ]],
Cell[710293, 17017, 630, 12, 24, "Message"],
Cell[710926, 17031, 622, 12, 24, "Message"],
Cell[711551, 17045, 632, 12, 24, "Message"],
Cell[712186, 17059, 584, 11, 24, "Message"],
Cell[CellGroupData[{
Cell[712795, 17074, 454, 12, 22, "Print"],
Cell[713252, 17088, 474, 12, 22, "Print"]
}, Open  ]],
Cell[713741, 17103, 630, 12, 24, "Message"],
Cell[714374, 17117, 623, 12, 24, "Message"],
Cell[715000, 17131, 630, 12, 24, "Message"],
Cell[715633, 17145, 583, 11, 24, "Message"],
Cell[CellGroupData[{
Cell[716241, 17160, 454, 12, 22, "Print"],
Cell[716698, 17174, 473, 12, 22, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[717220, 17192, 343, 5, 63, "Input"],
Cell[717566, 17199, 151150, 2452, 304, "Output"],
Cell[868719, 19653, 152045, 2467, 304, "Output"],
Cell[1020767, 22122, 143509, 2328, 306, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1164325, 24456, 129, 2, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[1164479, 24462, 2642, 75, 114, "Input"],
Cell[1167124, 24539, 654, 12, 24, "Message"],
Cell[1167781, 24553, 647, 12, 24, "Message"],
Cell[1168431, 24567, 652, 12, 24, "Message"],
Cell[1169086, 24581, 606, 11, 24, "Message"],
Cell[CellGroupData[{
Cell[1169717, 24596, 476, 12, 22, "Print"],
Cell[1170196, 24610, 498, 12, 22, "Print"]
}, Open  ]],
Cell[1170709, 24625, 652, 12, 24, "Message"],
Cell[1171364, 24639, 645, 12, 24, "Message"],
Cell[1172012, 24653, 652, 12, 24, "Message"],
Cell[1172667, 24667, 606, 11, 24, "Message"],
Cell[CellGroupData[{
Cell[1173298, 24682, 480, 12, 22, "Print"],
Cell[1173781, 24696, 498, 12, 22, "Print"]
}, Open  ]],
Cell[1174294, 24711, 652, 12, 24, "Message"],
Cell[1174949, 24725, 645, 12, 24, "Message"],
Cell[1175597, 24739, 652, 12, 24, "Message"],
Cell[1176252, 24753, 606, 11, 24, "Message"],
Cell[CellGroupData[{
Cell[1176883, 24768, 478, 12, 22, "Print"],
Cell[1177364, 24782, 498, 12, 22, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1177911, 24800, 396, 6, 63, "Input"],
Cell[1178310, 24808, 151747, 2462, 304, "Output"],
Cell[1330060, 27272, 152989, 2482, 304, "Output"],
Cell[1483052, 29756, 144292, 2339, 338, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1627393, 32101, 156, 2, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[1627574, 32107, 2642, 75, 114, "Input"],
Cell[1630219, 32184, 654, 12, 24, "Message"],
Cell[1630876, 32198, 647, 12, 24, "Message"],
Cell[1631526, 32212, 654, 12, 24, "Message"],
Cell[1632183, 32226, 608, 11, 24, "Message"],
Cell[CellGroupData[{
Cell[1632816, 32241, 480, 12, 22, "Print"],
Cell[1633299, 32255, 498, 12, 22, "Print"]
}, Open  ]],
Cell[1633812, 32270, 652, 12, 24, "Message"],
Cell[1634467, 32284, 647, 12, 24, "Message"],
Cell[1635117, 32298, 654, 12, 24, "Message"],
Cell[1635774, 32312, 606, 11, 24, "Message"],
Cell[CellGroupData[{
Cell[1636405, 32327, 478, 12, 22, "Print"],
Cell[1636886, 32341, 498, 12, 22, "Print"]
}, Open  ]],
Cell[1637399, 32356, 652, 12, 24, "Message"],
Cell[1638054, 32370, 645, 12, 24, "Message"],
Cell[1638702, 32384, 652, 12, 24, "Message"],
Cell[1639357, 32398, 606, 11, 24, "Message"],
Cell[CellGroupData[{
Cell[1639988, 32413, 482, 12, 22, "Print"],
Cell[1640473, 32427, 496, 12, 22, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1641018, 32445, 394, 6, 63, "Input"],
Cell[1641415, 32453, 151704, 2461, 308, "Output"],
Cell[1793122, 34916, 152492, 2475, 308, "Output"],
Cell[1945617, 37393, 143668, 2330, 340, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[2089346, 39730, 148, 2, 36, "Subsection"],
Cell[2089497, 39734, 1543, 39, 63, "Input"],
Cell[CellGroupData[{
Cell[2091065, 39777, 374, 8, 46, "Input"],
Cell[2091442, 39787, 3163, 59, 261, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2094642, 39851, 370, 8, 46, "Input"],
Cell[2095015, 39861, 3292, 62, 263, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2098344, 39928, 351, 8, 46, "Input"],
Cell[2098698, 39938, 1184, 29, 266, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2099931, 39973, 134, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[2100090, 39978, 101, 1, 35, "Subsubsection"],
Cell[2100194, 39981, 388, 10, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2100619, 39996, 149, 2, 35, "Subsubsection"],
Cell[2100771, 40000, 437, 11, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2101245, 40016, 151, 2, 35, "Subsubsection"],
Cell[2101399, 40020, 472, 12, 28, "Input"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[2101932, 40039, 107, 1, 50, "Section"],
Cell[CellGroupData[{
Cell[2102064, 40044, 98, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[2102187, 40049, 99, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[2102311, 40054, 381, 8, 28, "Input"],
Cell[CellGroupData[{
Cell[2102717, 40066, 327, 6, 21, "Print"],
Cell[2103047, 40074, 340, 6, 22, "Print"]
}, Open  ]],
Cell[2103402, 40083, 707, 13, 46, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2104158, 40102, 105, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[2104288, 40107, 290, 6, 28, "Input"],
Cell[CellGroupData[{
Cell[2104603, 40117, 184, 4, 21, "Print"],
Cell[2104790, 40123, 197, 4, 22, "Print"]
}, Open  ]],
Cell[2105002, 40130, 585, 11, 46, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2105648, 40148, 98, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[2105771, 40153, 100, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[2105896, 40158, 242, 5, 28, "Input"],
Cell[CellGroupData[{
Cell[2106163, 40167, 160, 4, 21, "Print"],
Cell[2106326, 40173, 171, 4, 22, "Print"]
}, Open  ]],
Cell[2106512, 40180, 567, 11, 46, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2107128, 40197, 105, 1, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[2107258, 40202, 339, 7, 28, "Input"],
Cell[CellGroupData[{
Cell[2107622, 40213, 210, 5, 21, "Print"],
Cell[2107835, 40220, 221, 5, 22, "Print"]
}, Open  ]],
Cell[2108071, 40228, 588, 11, 46, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2108720, 40246, 99, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[2108844, 40251, 100, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[2108969, 40256, 243, 5, 28, "Input"],
Cell[CellGroupData[{
Cell[2109237, 40265, 160, 4, 21, "Print"],
Cell[2109400, 40271, 172, 4, 22, "Print"]
}, Open  ]],
Cell[2109587, 40278, 568, 11, 46, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2110204, 40295, 103, 1, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[2110332, 40300, 243, 5, 28, "Input"],
Cell[CellGroupData[{
Cell[2110600, 40309, 162, 4, 21, "Print"],
Cell[2110765, 40315, 172, 4, 22, "Print"]
}, Open  ]],
Cell[2110952, 40322, 566, 11, 46, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[2111579, 40340, 142, 2, 36, "Subsection"],
Cell[CellGroupData[{
Cell[2111746, 40346, 107, 1, 35, "Subsubsection"],
Cell[2111856, 40349, 6062, 142, 495, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2117955, 40496, 103, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[2118083, 40501, 726, 16, 63, "Input"],
Cell[2118812, 40519, 22468, 480, 70, "Output"],
Cell[2141283, 41001, 527, 8, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2141859, 41015, 153, 2, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[2142037, 41021, 760, 17, 80, "Input"],
Cell[2142800, 41040, 22237, 478, 70, "Output"],
Cell[2165040, 41520, 372, 5, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2165461, 41531, 155, 2, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[2165641, 41537, 729, 16, 63, "Input"],
Cell[2166373, 41555, 22289, 479, 70, "Output"],
Cell[2188665, 42036, 403, 6, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2189141, 42050, 154, 2, 50, "Section"],
Cell[2189298, 42054, 145, 3, 32, "Input"],
Cell[CellGroupData[{
Cell[2189468, 42061, 91, 1, 44, "Subsection"],
Cell[2189562, 42064, 1264, 31, 164, "Input"],
Cell[CellGroupData[{
Cell[2190851, 42099, 211, 5, 32, "Input"],
Cell[2191065, 42106, 208, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2191310, 42115, 495, 12, 40, "Input"],
Cell[2191808, 42129, 3520, 72, 385, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2195365, 42206, 210, 4, 32, "Input"],
Cell[2195578, 42212, 1335, 34, 49, "Output"]
}, Open  ]],
Cell[2196928, 42249, 94, 1, 32, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[2197059, 42255, 140, 2, 36, "Subsection"],
Cell[2197202, 42259, 1310, 31, 164, "Input"],
Cell[CellGroupData[{
Cell[2198537, 42294, 262, 6, 32, "Input"],
Cell[2198802, 42302, 238, 5, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2199077, 42312, 390, 10, 32, "Input"],
Cell[2199470, 42324, 3515, 72, 390, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2203022, 42401, 210, 4, 32, "Input"],
Cell[2203235, 42407, 1335, 34, 49, "Output"]
}, Open  ]],
Cell[2204585, 42444, 94, 1, 32, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[2204716, 42450, 189, 3, 36, "Subsection"],
Cell[2204908, 42455, 1361, 32, 164, "Input"],
Cell[CellGroupData[{
Cell[2206294, 42491, 311, 7, 32, "Input"],
Cell[2206608, 42500, 262, 5, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2206907, 42510, 210, 4, 32, "Input"],
Cell[2207120, 42516, 1335, 34, 49, "Output"]
}, Open  ]],
Cell[2208470, 42553, 94, 1, 32, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[2208601, 42559, 235, 3, 36, "Subsection"],
Cell[2208839, 42564, 1413, 33, 164, "Input"],
Cell[CellGroupData[{
Cell[2210277, 42601, 357, 7, 32, "Input"],
Cell[2210637, 42610, 337, 6, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2211011, 42621, 210, 4, 32, "Input"],
Cell[2211224, 42627, 1335, 34, 49, "Output"]
}, Open  ]],
Cell[2212574, 42664, 94, 1, 32, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[2212705, 42670, 284, 4, 36, "Subsection"],
Cell[2212992, 42676, 1462, 33, 164, "Input"],
Cell[CellGroupData[{
Cell[2214479, 42713, 407, 8, 32, "Input"],
Cell[2214889, 42723, 420, 8, 68, "Output"]
}, Open  ]],
Cell[2215324, 42734, 94, 1, 32, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[2215455, 42740, 385, 5, 36, "Subsection"],
Cell[2215843, 42747, 1515, 34, 164, "Input"],
Cell[CellGroupData[{
Cell[2217383, 42785, 458, 9, 32, "Input"],
Cell[2217844, 42796, 574, 10, 86, "Output"]
}, Open  ]],
Cell[2218433, 42809, 94, 1, 32, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[2218564, 42815, 383, 5, 36, "Subsection"],
Cell[2218950, 42822, 1566, 35, 164, "Input"],
Cell[CellGroupData[{
Cell[2220541, 42861, 458, 9, 32, "Input"],
Cell[2221002, 42872, 652, 12, 86, "Output"]
}, Open  ]],
Cell[2221669, 42887, 94, 1, 32, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[2221800, 42893, 432, 6, 36, "Subsection"],
Cell[2222235, 42901, 1612, 35, 164, "Input"],
Cell[CellGroupData[{
Cell[2223872, 42940, 458, 9, 32, "Input"],
Cell[2224333, 42951, 729, 13, 104, "Output"]
}, Open  ]],
Cell[2225077, 42967, 94, 1, 32, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[2225208, 42973, 432, 6, 36, "Subsection"],
Cell[CellGroupData[{
Cell[2225665, 42983, 1841, 41, 206, "Input"],
Cell[2227509, 43026, 566, 11, 104, "Output"]
}, Open  ]],
Cell[2228090, 43040, 94, 1, 32, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[2228221, 43046, 485, 7, 36, "Subsection"],
Cell[CellGroupData[{
Cell[2228731, 43057, 1841, 41, 206, "Input"],
Cell[2230575, 43100, 652, 12, 122, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2231276, 43118, 533, 7, 36, "Subsection"],
Cell[CellGroupData[{
Cell[2231834, 43129, 1892, 42, 206, "Input"],
Cell[2233729, 43173, 729, 14, 122, "Output"]
}, Open  ]],
Cell[2234473, 43190, 94, 1, 32, "Input"],
Cell[2234570, 43193, 94, 1, 32, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2234713, 43200, 103, 1, 64, "Section"],
Cell[2234819, 43203, 2928, 70, 401, "Input"]
}, Closed]]
}
]
*)

